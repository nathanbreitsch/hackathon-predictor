[
    {
        "description": "\nBuilt With\nandroid-studio\n",
        "hackathon_id": "hackmsit",
        "winner": false
    },
    {
        "description": "\nBuilt With\nunityvuforiac#\n",
        "hackathon_id": "hackmsit",
        "winner": false
    },
    {
        "description": "\nBuilt With\nruby-on-rails\n",
        "hackathon_id": "hackmsit",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonhtml5css3javascriptflasksocket.io\n",
        "hackathon_id": "hackmsit",
        "winner": false
    },
    {
        "description": "\nInspiration\nHumans should do only those things which really involves use of brain and must not do mundane ,repetitive tasks , CLASSROOM ATTENDANCE is one of them . A huge time waster for both students and faculty .\nWhat it does\nFaculty just needs to take a snap of students sitting in classroom and it will automatically mark and save attendance of students in cloud .  \nHow I built it\nApp uses MS Project Oxford Face API for identifying students in group image taken by faculty/professor of all students and saves attendance record in cloud .\nChallenges I ran into\nFeeling cold in night ,rest all was manageable .\nAccomplishments that I'm proud of\nPhottendance as an attendance solution has a definitive edge over other attendance trackers . For e.g. , most of hardware attendance trackers either based on RFID cards , Biometric (thumb impression) etc require a hardware purchase , installation and maintenance charges , on the other Phottendance just needs to be downloaded and is ready to use with zero investment or maintenance .\nWhat I learned\nConstraints enforce creativity . I wanted to make a hardware solution for the same but since I'm not that strong with hardware , I focused how the same thing can be achieved by code and cloud . As a result , I developed a totally cloud based solution . I'm sure there are many areas where virtualization can reduce our dependency on hardware.\nWhat's next for Phottendance\nCurrently , it's just a Proof Of Concept app . I plan to expand it to more general use cases including but not limited to classroom attendance .\n",
        "hackathon_id": "hackmsit",
        "winner": false
    },
    {
        "description": "\nBuilt With\napiphprasberry-piruby-on-railssqlite\n",
        "hackathon_id": "hackmsit",
        "winner": false
    },
    {
        "description": "\nInspiration :\ni got inspiration from my pet. \nUnfortunately when i  go outside i have to leave him alone at home  or send him to my neighbour's house. And i can't know if he is fine or not. So with my friend i planned to make something to overcome this problem.\nWhat it does?\nFitbelt's main job is to constantly send essential data( body temperature, pulse reading and sleeping pattern reading) to our website  from where we can analyse the data and check it anytime we want from anywhere in this world. As we  don't always check our pet if he is fine or not so, we have added an alert feature also. Like if pet's body temperature is high, you will instantly receive a message stating that : \n\"Hi! ___(your name), \nThis is to inform you that your pet is suffering from fever (when temperature is above 104 degree celsius) / serious fever (when temperature is above 106 degree celsius) and it can be fatal if do not take your pet to a veterinary doctor immediately!\nRegards \n\"Your ____(your pet's name) Fitbelt\"\nHow we built it?\nWe have two main components in this project:\n1) Our data analysing website which is connected to a web server .\n2) Our IOT enabled device(which is our fitbelt) which contains of various sensors.its main job is to send data ( body temperature, pulse reading and sleeping pattern) reading  to our website.\nChallenges we ran into :\n1) Creating a connection between our device and the dashboard provider's web server!\n2) Creating an suitable algorithms to detect the health of the pet.\nAccomplishments that we are proud of:\nSuccessfully overcoming our challenges .\nWhat we have learned?\n=>Learned to create complex algorithms , and how to overcome our challenges and most important TRY.. TRY.. TRY.. until you succeed!\n=>Failure helps you to become more innovative and productive than before! \nWhat's next for Fitbelt?\nUpgrading our device and  making it open source!.\n",
        "hackathon_id": "hackmsit",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroidandroid-studiojavaxml\n",
        "hackathon_id": "hackmsit",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptcsshtmlpythondjangomysqljquery\n",
        "hackathon_id": "hackmsit",
        "winner": false
    },
    {
        "description": "\nInspiration\nSo i was studying cryptography & stenography as hobby  . I saw that there are not many resources that teaches crypt &  steg from basics to advance level . I know there are CTF's but most of the time CTF's are not for beginners .\nWhat it does\nCryptSteg takes teaches the users about crypt & steg from basics to advance level . An level at which a user can demonstrate his skills for practical use OR just solve CTF's ;)\nHow I built it\nI used HTML5, CSS3 , JS , bootstrap , jquery  , AJAX  , PHP & mysql to built the site . \nall the back-end is done in native PHP ( no framework )  and mysql  . \nThe front-end is built using jquery and bootstrap .\nChallenges I ran into\nThe first and foremost challenge was to build everything from scratch as i had no experience with PHP frameworks  . all code had to be written from scratch while maintaing the security of users and the site  .\nAccomplishments that I'm proud of\nI am happy to help people learn and acquiring new skills . \nWhat I learned\nI learned a lot from this project   : from using bootstrap for UI to making a whole back-end in native PHP5 .  The project taught me how to optimize database  for better response. \nWhat's next for CryptSteg\nAn classroom :  nothing beats an one-to-one interaction between a student and teacher  .  I will implement an classrom ( google classroom) in near future to achieve that  .\n",
        "hackathon_id": "hackmsit",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe belong to Maharaja Agrasen Institute of Technology, We saw that there was no as such interaction between seniors and juniors. There was no mode of guidance on how one should plan his college time and what should one be learning and all.\nWhat it does\nSo we created an intra-college platform so which has development profiles (Mentor) of students and other students could ask them for help by checking as per the skills that a student wants to learn. It boosts the concept of collective working and peer coding which enhances the productivity.\nHow I built it\nWe build it for web and an android mobile app:\nWEB: HTML/CSS/BootStrap/JS for Frontend and PHP for Backend\nAndroid : We built it using android studio.\nChallenges I ran into\nHow to keep UI as basic as possible.\nDynamic notifications (Working Soon)\nAccomplishments that I'm proud of\nFeasibility of idea,\nWorking together as a team for the first time,\nWhat I learned\nWhat's next for Project M\nMap Based Mentor Searching\nWe'll be making it open source\n",
        "hackathon_id": "hackmsit",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonhtml5css\n",
        "hackathon_id": "hackmsit",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhackerrank-apiandroidjava\n",
        "hackathon_id": "hackmsit",
        "winner": false
    },
    {
        "description": "\nSolving travel woes by analysing user reviews. User reviews is one of the most genuine way to know about a place but going through all the reviews takes time.If we read a part of reviews it can give us a wrong message. So to overcome this problem we analysed and presented positive, neutral and negative responses in a simple manner. Addition to it we presented concepts and relevant links according to reviews. \nSafety index for each place by determining data like number of thefts, robberies, rapes etc. Risk analysis for each place and suggest users the best time to visit a place.   \n",
        "hackathon_id": "hackmsit",
        "winner": false
    },
    {
        "description": "\nBuilt With\njava\n",
        "hackathon_id": "hackmsit",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptcsshtmlnode.jsexpress.jsangular.js\n",
        "hackathon_id": "hackmsit",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhardwareandroid-studio\n",
        "hackathon_id": "hackmsit",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonbluemixwhatsapp\n",
        "hackathon_id": "swiss-re-hackathon-2016",
        "winner": true
    },
    {
        "description": "\nInspiration\nSeveral insurance firms have tried to break into the activity-specific insurance plan market with limited success. Here, by the term activity-specific insurance market, we are specifically referring to those short tailed insurance plans that target potentially risky short term activities. Since these plans are short term, the insurance company doesn't have to wait for a long time to know whether or not they have made money or not. Since the entire market seemed like a large beast to tackle head-on, we thought of specifically targeting those travellers who have a higher likelihood of indulging in high risk activities such as adventure sports and high altitude mountaineering.\nNext, we had to make the user realize his/her need for such an insurance. Every time a long weekend is around the corner, several people, especially college going students like ourselves, begin looking for places for a potential outing. Since there are a huge number of websites offering everything from recommendations to reviews to bookings, it becomes a cumbersome (and often tiresome) process to sift through potential locations, trying to see which place fits our expectations of what is ideal. \nTravel Jarvis is a single platform where you can learn more about holiday activities and destinations that are tailor-made for you, and also optionally buy a reasonably priced, customized insurance plan. \nWhat it does\nIn a nutshell, Travel Jarvis is a personality based travel risk assessment and short tailed insurance recommendation system.\nAt a high level, it infers the user\u2019s personality from their Twitter profile and provides a custom list of attractions. Next, the user can view the risk associated with each of these attractions and decide which ones that he would potentially visit. (Some risks that are shown are criminal risk, safety risks and precipitation risks. These risks are calculated from data that is obtained from APIs.) We also use Bluemix's Trade-off Analytics API to maximize the reward to risk ratio. Then, based on the selections, a collection of insurance plans (from the database of the insurance policy aggregator) are suggested to the user. If the user chooses an insurance plan that isn't being offered yet, the insurance aggregator is notified, so that they may take a decision on whether or not to offer that policy in the future or not.  \nHow we built it\nWe started by using the twitter handle of the person to get insights about his personality and then giving a list of a attractions suitable for the person in the desired place. Then we use several API\u2019s for getting data related to precipitation, crime, safety etc in that location. This data was used to create the risk profile of a tourist attraction/ adventure activity for the days he wishes to visit. Then we use IBM Watson\u2019s Trade-Off Analytics API to help the user choose between the various attractions based on the risk and his interest. Then the user can choose several places that he wishes to visit and then he can get recommendations for insurance that he or she can buy or wish to buy. \nChallenges we ran into\nUsing the trade-off analytics API because the sample app uses a static json file from the file system but using a  custom JSON fetched from the back-end took us a lot of time. Apart from this, trying to come up with a user interface that matches the high expectation of the users these days.\nAccomplishments that we're proud of\nWe are proud of the fact that we got a application up and running by the end of the hackathon. \nWe jumped into untested waters and continuously ran into bottlenecks  one after the other. But with a strongly willed team and many experts to guide us, we were eventually able to put our thoughts into a working application.\nWhat we learned\nWe worked on the IBM\u2019s Bluemix Platform and used some very powerful API\u2019s that it provided . We learned that design thinking is really important and makes a huge difference, even for a one day long project. By thinking of the user from the beginning, our entire development perspective took a different turn. \nWe also learned tremendously from both the domain experts from Swiss Re and the technology experts from IBM. Overall, the hackathon was a rewarding experience for all of us.\nWhat's next for Travel Jarvis\nIn future Travel Jarvis would act as a platform where the Insurance Companies come and realize the demand for short tailed insurances as posted by the users. They get an opportunity to get introduced to new products based on demand. It can create  a whole new market of  personalised, activity specific insurances, a market that insurance companies have tried for a long time to break into.\n",
        "hackathon_id": "swiss-re-hackathon-2016",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascriptcsshtmlpythonangular.jsgooglemaps\n",
        "hackathon_id": "swiss-re-hackathon-2016",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascriptnode.jsbluemix\n",
        "hackathon_id": "swiss-re-hackathon-2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\nnode.jsioshtml5css3scssgoibm-watsonbluemix\n",
        "hackathon_id": "swiss-re-hackathon-2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe serial suicides by Farmers across Indian Sub Continent.\nWhat it does\nThe Application takes the responsibility of thinking on behalf of the farmer. It analyses all the data and factors for individual crops and suggests the crop that would most likely yield maximum returns on investment to the farmer.\nIn effect, the accuracy of the decision involved in processing the various factors is enhanced significantly. This would lead to better returns on investment to the farmer. Ensuring the growth of the farmer, the economy & the nation at large.\nHow we built it\nIn a nut shell, I would put it as \u201cSuggesting which crop to harvest considering all the factors that might be affecting the growth\u201d. It sounds very simple, but in reality it is a quite a task. Hence, we decided to create an Application that would do just that. Based on all the analytics & data processing technologies available.\nWhat we learned\nWhen we started to look closely into the situation, we realized that the farmer was just like a typical entrepreneur. Except his new venture would begin every 3 or 6 months. Now we\u2019re all aware of the Startup success rate (Mostly 10%); but then, how is the farmer supposed to make a living when his crops fail? Without any other means for livelihood he\u2019d have no other choice but suicide. \nThis led us to start understanding the dynamics of farming and the reasons it would fail. When started looking at all the variables such as Growth period, Soil type, Water requirement, Ideal temperature, Relative humidity, Rainfall behavior, Incidence of light, Rate of degradation, Resistance to pest & diseases; we could start to understand the difficulty in farming. \nNow, just like most of the population, who blame the farming for his un-wise decision of choosing a crop that would fail; we would respectfully disagree. Making the choice of the Crop to start with is a lot more complicated than what we would perceive it to be. In fact, we couldn\u2019t crack it with our University graduations; expecting a farmer who is most probably illiterate to pick the right crop would most likely be impossible.\nWhat's next for Krishi\nBuilding a Hardware to Monitor the Farm Continuously & consistently to help ensure better safety & security for Insurance Companies.\n",
        "hackathon_id": "swiss-re-hackathon-2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptjadenode.jscsshtml5angular.jsgulp.jssass\n",
        "hackathon_id": "swiss-re-hackathon-2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonjavascriptibm-bluemix-watson\n",
        "hackathon_id": "swiss-re-hackathon-2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\nc#cssjavascriptpowershellhtmlasp.net\n",
        "hackathon_id": "swiss-re-hackathon-2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nWorking in insurance sector, we have learnt that agents are the centre piece and end point through which insurance companies sell and customers buy insurance. An Agent typically interacts with 5-50 potential customers in a business day. Solving agents issues helps not only the customers but also benefits the insurance companies.\nUnderstanding the insurance customer needs helps to determine the risks that the insurance companies have to bear and also gain insight how to spread the risks among the insured and insurance companies.\nWhat it does\nThe Policy Risk Advisor app helps agents to request quotes from different insurance companies that partner with Swiss Re. All the coverage related information along with quotes are sent to trade off analytics to do a risk based assessment and determine the appropriate policy based on desired coverages\nHow we built it\nWe created the app with Trade-off Analytics service using IBM Blue Mix as cloud platform and taking Java, Javascript as our front end. Our backend was cloudant DB.\nChallenges we ran into\nIt was difficult to incorporate/merge multiple data sources and run them through the trade off analytics app. Some of the other Watson API's were also not giving the desired results. For Example: Alchemy Insights New API was not working correctly.\nAccomplishments that we're proud of\nThe desktop app has a simple user friendly UI, to capture the necessary information and increase agent satisfaction. the trade off analytics widget shows the quote data in a visual form which helps the agent make the decision faster.\nWhat we learned\nWe have learned the trade off analytics is a good solution and has many application in health care , P&C insurance, financial etc. \nWhat's next for Policy Risk Advisor - Swiss Re Hackathon\nIn the next 2 months we plan to incorporate advance machine learning algorithms to better match customer profile and give more accurate quotes. We also plan to make the app mobile responsive.\nWe are also planning to re-design the app for customers who want to buy insurance directly.\n",
        "hackathon_id": "swiss-re-hackathon-2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavajavascriptandroid-studiomongodbbluemix\n",
        "hackathon_id": "swiss-re-hackathon-2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavajavascriptandroidpythonmongodbjsonfacebookandroid-studioandroid-wearbluemix\n",
        "hackathon_id": "swiss-re-hackathon-2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaspringpolymerbluemixtradeoff-analyticsspringbootgradle\n",
        "hackathon_id": "swiss-re-hackathon-2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\ni-haven't-got-the-slightest-ideaa.k.a.tbd\n",
        "hackathon_id": "cegeka-asf-spring-2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nEven in a market as big as the productivity and fitness/health industry, in our research, we have found few apps that offer a solution for those who have trouble sticking to their goals and resolutions. In our personal experiences with time management and the chaos of our daily lives, sometimes fitness comes secondary to everything else that is going on. Fitness is evidently a major global issue indicating by the astonishing obesity rates in the country. Incentivising fitness and providing penalties for forgetting daily exercise is a perfect solution for those who are interested in sticking to their goals. \nWhat it does\nWhen a customer signs up for our services, we require that It utilizes Android\u2019s built in GPS services to calculate the distance that you travel. Using Java (Android Studio),  as well as Google play services it charges the user weekly if they didn't run the specified amount. We also used different activities that go on different pages to have the code run easily and be easily navigable.\nHow we built it\nWe programmed an Android application which uses Android Location services to track the distance (in meters) which we then converted to miles. Each page of the application is an activity in android studio. We have activities that record distance, demonstrate the distance traveled out of whole distance goal per week and daily and we have a page for the settings of the app. We also have a payment information page which the user inputs their data for the payment when they are unable to run the distance per week or per day. \nChallenges we ran into\nSome of the challenges we ran into were that the distance wasn't correctly calculating, and because it was a long it would export out values up to ten decimals. Other times, we forgot to include the line which actually receives the location of the user (we sent out a team member to run a mile twice and they had returned without any information actually uploaded). Furthermore, some issues included not importing libraries and having activites run on the same page which would cause things to overlap each other.\nAccomplishments that we're proud of\nOur sleek, user friendly platform and the applicability of this app\nWhat we learned\nWhen we first looked into how we were going to store the data we learned that Parse was shutting down its services [ :( ] so we had to look for other ways to store data and settled on using Android\u2019s built in shared preferences. We also learned how to integrate external APIs like google play and paypal (although we didn\u2019t end up using this).     \nWhat's next for 1HUNDRED%\nMonetary penalties is just one form of incentives we would like to offer our customers in the future. In having daily and weekly penalties, we have attempted to create a system that develops the habit of daily exercise. To further instill this principle, we plan to give our customers the option of locking their phones and other electronic devices (hooked up to a Google Service system) during a particular time in a day (which is decided that the beginning of the week). \nWe plan to offer integration features for customers with Fitbits and other Wearable technology that will allow them to track their heart rate, pulse and speed. We would offer to incentivise these other measurements to our competitive trainees to improve or maintain their game daily. \n",
        "hackathon_id": "hacktrin",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe hate working out and we hate Farmville. Let's find out if two wrongs make a right!\nWhat it does\nFitFarm is a fitness-based farm management simulator where players raise their own farm by earning CardioCoins which are gained through real-world physical exercise. Every time a player checks into the app, FitFarm checks the HealthKit interface on the iPhone to see if new steps have been logged (which are counted via the Apple Watch), and converts them on a 1:1 ratio to CardioCoins which can then be used to feed animals and buy supplies to help their farm grow.\nHow we built it\nWe built FitFarm using HealthKit, Apple's interface for accessing health data on iPhones, the open-source game engine cocos2d-objc and the programming languages Swift and Objective-C. We also used Sketch and Photoshop to create the artwork (except for the animals).\nChallenges we ran into\nHealthKit is really unreliable at querying the Apple Watch every so often in order to log new steps. It can take a very long time for steps to show up in the iPhone.\nAccomplishments that we're proud of\nThe design of the user interface (especially considering we created it in under 8 hours) and finally figuring out how to use HealthKit.\nWhat we learned\nWe figured out how to use HealthKit and why not to ever use HealthKit again. We also became more experienced in the art of Photoshop and Sketch for rapid artwork iteration, and we also learned how to use Git in a collaborative setting.\nWhat's next for FitFarm\nWe're looking to add a feature where you can visit other people's farms and leave notes of encouragement, and then possibly introducing new forms of currency based off of the HealthKit features, such as heart rate or calories burned.\n",
        "hackathon_id": "hacktrin",
        "winner": false
    },
    {
        "description": "\nBuilt With\nc++c#sfml\n",
        "hackathon_id": "hacktrin",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtmlcssjavascriptchrome\n",
        "hackathon_id": "hacktrin",
        "winner": false
    },
    {
        "description": "\nBuilt With\nscratch\n",
        "hackathon_id": "hacktrin",
        "winner": false
    },
    {
        "description": "\nMenuTruth\nAn iOS app which finds your current location, and if you are in a restaurant, shows you the healthiness of each option on the menu.\nIn swift.\nMade at HackTrin by Henry Wildermuth, Bradley May, and Joshua Doolan\nScreenshot:\n\n\nFrameworks\nSeveral frameworks were used\nThese could not be included because of their size.\nIf you try to build this, please include the following:  \n\nGoogleMaps\nCoreGraphics\nSystemConfiguration\nSecurity\nQuartzCore\nOpenGLES\nImageIO\nGLKit\nCoreText\nCoreLocation\nCoreData\nCoreBluetooth\nAVFoundation\nAccelerate\nMapKit\n\n",
        "hackathon_id": "hacktrin",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavahtmlcssjavascript\n",
        "hackathon_id": "hacktrin",
        "winner": false
    },
    {
        "description": "\nBuilt With\nprocessingarduino\n",
        "hackathon_id": "hacktrin",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe inspiration was to create a prototype of a product that diagnosis patients with different heart related illnesses.\nWhat it does\nCardio Kit is a sleeve and pulse sensor that allows users to detect heart rate and muscle activity.  By analyzing the heart beat trends and rates we can determine an accurate diagnosis for the user.\nHow I built it\nThe program runs off of Arduino and detects if a users heart rate is abnormally high for a certain activity.  Through this information we can accurately diagnosis patients with heart related diseases such as V-Tac.  We also created a website to display the product and the development which will eventually be used to sell future products.\nChallenges I ran into\nWe had to correctly wire and program the Arduino board to detect heart pulse and muscle activity and utilize the information to make an accurate diagnosis.\nAccomplishments that I'm proud of\nWe had to use a hot glue gun to construct our own sleeve and hand-sew the sleeve together.  We also soldered all the wires from the Arduino board.  We were also able to analyze two different sets of data to make a diagnosis: Muscle Activity and Pulse.\nWhat I learned\nWe learned how to wire an Arduino board, create a pulse sleeve, and build a website.\nWhat's next for Cardio Kit\nCreating further prototypes and making more accurate sensors.  We would like to expand the number of diseases that Cardio-Kit can detect.\n",
        "hackathon_id": "hacktrin",
        "winner": false
    },
    {
        "description": "\nInspiration\nBecause all three of us (the creators) are varsity athletes, we continually need to maintain our physical ability throughout the year with supplementary workouts. This program allows for users to find easy workouts that are always changing.\nWhat it does\nThe user can choose from four different types of workouts to perform: arms, legs, core, or cardio. Each workout is randomly generated from a library of exercises specific to that workout. Each exercise is set to be performed for a minute forty and then a ten second rest. A countdown timer of ten minutes is shown at the top.\nHow we built it\nWe used html, javascript, and P5.js\nChallenges we ran into\nSince this is only our first year of computer science, we had some trouble getting used to the new language of web-based programming (which we had only started this week).\nWe had some trouble formatting the pages and spent a long time experimenting with the program.\nAccomplishments that we're proud of\nThe random generator was a big accomplishment because it was a very different process then we were used in the language of processing.\nWe are also proud of what we were able to pull off in this amount of time and that we learned so many new skills throughout the day.\nWhat we learned\nWe learned more about web-based programming\nWhat's next for Easy Fit\n",
        "hackathon_id": "hacktrin",
        "winner": false
    },
    {
        "description": "\nInspiration\nA good knowledge of what happens in your kitchen is surprisingly important. Over a third of Americans are overweight, and with that comes a plethora of health problems later in life. We thought that it was a little too hard to eat healthy even in one's home, and we set out to fix that.\nWhat it does\nMan(a)ger keeps tabs on what happens in your kitchen and provides you with analytics regarding how your household is eating. When you buy or consume food, simply wave it past Man(a)ger and it'll add it to its database. Later, head online and find what percentage of your food consumption is sugars, protein, fats, etc. Manager will also automatically reorder food when you run out of it, making restocking your home easier than ever.\nHow we built it\nWe have a hardware box which contains a Raspberry Pi running Linux, a speaker, a webcam, a button, and a powered USB hub to keep it all running inside. We communicate between the Python on the Pi, a DigitalOcean server, and a MySQL database which do all of the external computation and storage and update to the website. The API is publicly available as well, and we're excited to see what other people will do with it!\nChallenges we ran into\nAccurate and continuous bar-code detection is surprisingly difficult to do. We also found that integrating our Python with our PHP was more of a challenge than we had anticipated, and calling speech synth from the Raspberry Pi also turned out to be a headache.\nAccomplishments that we're proud of\nWe're very proud of competing our first project utilizing hardware as well as software! We think that our product is pretty (in its own way), and we're also excited to have built something we feel we would use ourselves.\nWhat we learned\nWe've learned that having a good specification written out beforehand would be an invaluable tool in designing and building these products.\nWhat's next for Man(a)ger\nWe'd like to integrate with more stores for delivery and improve logistics within the code to simplify the adding of additional Man(a)ger bots to the network.\n",
        "hackathon_id": "hacktrin",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptcsshtmlpythonjquerygoogle-app-engine\n",
        "hackathon_id": "hacktrin",
        "winner": false
    },
    {
        "description": "\nInspiration\nI like to know who's calling or who called me, even if it was a wrong number.\n\nWhat it does\nSimple, you enter the offending phone number or name, then it checks your contacts contacts to see if they have the number saved in their contacts. Assuming they also have the app. If they do it shows it to you.\nHow I built it\nUm with Android Studio?    \n\nAccomplishments that I'm proud of\nIt works and I actually finshed it. I'm knackered, sorry.\n\nWhat I learned\nMore ways to android.\n\nFun fact\nYou can test it with a single phone, and this is how the requests would look like.\nphone to server: I need this number/name\nserver to all phone including original: Do you have this number or name in your contacts\nphone(s) to server: yes we do, here it is\nserver to original phone: here you go.  \n",
        "hackathon_id": "purdue-computing-showcase-2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtml5cssjavascriptjava\n",
        "hackathon_id": "purdue-computing-showcase-2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroid-studio\n",
        "hackathon_id": "purdue-computing-showcase-2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nHave you ever been stuck in a conversation with no apparent end? I wanted to make a way to easily and smoothly remove myself from conversations.\nWhat it does\nSends fake phone calls to your phone to allow you to have an excuse to easily remove yourself from a conversation.\nHow I built it\nI used Node on the backend to handle the incoming requests from Yo.  MongoDB is used to store the phone numbers and Twilio makes the call to the users phone.\nChallenges I ran into\nEnsuring that the endpoints are secured so that no unwanted calls could be made via the URL enpoints of the application.\n",
        "hackathon_id": "purdue-computing-showcase-2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nAfter learning about MOSFET in ECE270, I built a circuit that would take in PWM signals from a Raspberry Pi. The inspiration to use it for sound visualization came from seeing music concerts that would play lasers to the beat of the music. I figure that something like this could be used in a smaller party.\nWhat it does\nThe LED strip flashes to the beat of the music that is playing through the Raspberry Pi. It takes in the amplitude of the signal and scales it to the PWM signal output on the GPIO.OUT pins.\nHow we built it\nUsing a Python library, we were able to access the PWM pin outs on the Raspberry Pi. We needed to create a separate circuit to deal with the PWM signals that were being sent to the LED strip.\nChallenges we ran into\nThe sample rate of the program we were using was very high at times. Our big solution to this was to add blending so that the lights wouldn't look like they were strobing.\nAccomplishments that we're proud of\nThat we built it in the short amount of time\nWhat we learned\nPython and ALSA audio\nWhat's next for LED Strip Sound Visualizer\nSet the LED strip on a permanent medium, something a bit nicer than a piece of cardboard\n",
        "hackathon_id": "purdue-computing-showcase-2016",
        "winner": false
    },
    {
        "description": "\nBB8Notifier\nHackathon project\nA native iOS app that wirelessly controls the bb8 using sensors on the watch and iphone device to control the bb8 with \"The Force\". Yes you can now download the force. We use the sphero sdk along with sensor data from the ios and watch OS. \nMe and my roommate were inspired by Star wars of course and we both like mobile app development and wanted to integrate it with hardware.\nCredits to ifunny.co for the background picture on the main view.\n",
        "hackathon_id": "purdue-computing-showcase-2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\narduino\n",
        "hackathon_id": "purdue-computing-showcase-2016",
        "winner": false
    },
    {
        "description": "\nfashionksu\nKSU FashionTech Hacakthon\nOur domain name is stoh.io , which is a play on words because we are all from Stow, Ohio! \nBe able to try on an entire catalog without having to use a dressing room, and have it tailored to your likes! \nWe built a Magic Mirror (google: raspberry pi magic mirror), and hooked it up to a Microsoft Kinect V1. The Kinect provides joint and frame data, on top of which we overlay an article of clothing. The image follows your frame as well as the Kinect will allow. \nThe system allows you to browse a catalog of clothing, with different gestures corresponding to different commands. If you like an article of clothing, a profile is built for you and a recommendation system (using collaborative filtering) suggests other clothing you may be interested in. \n",
        "hackathon_id": "fth2016",
        "winner": true
    },
    {
        "description": "\nBuilt With\narduinoandroidjavascriptjavaputtyintel-edisontiny-circuit\n",
        "hackathon_id": "fth2016",
        "winner": true
    },
    {
        "description": "\nInspiration\nAbigail, a fashion student at Kent State and avid snowboarder was disappointed with the safety of the slopes. So our team came up with an idea that would streamline the process of getting emergency services in the case of an urgent situation.  \nWhat it does\nEncased in a beautifully crafted thermal pullover, SNO uses an accelerometer to track the force of the snowboarder or skier to report and call for help if a crash occurs. A bluetooth sensor will relay to an app on your phone that will send information about your location and current situation to emergency services and the owner of the slope to ensure speedy help in the event of a crisis. SNO will also relay information about weather alerts like upcoming blizzards and avalanches to the user.\nHow we built it\nOne of the first steps was to craft the thermal jacket, which will provide the user with both warmth without weight and the services of SNO. An arduino fitted with an accelerometer was encased in the hooded portion of the pullover.\nChallenges we ran into\nOur team was encompassed of entirely first time hackers, so there was a learning curve in terms of both hardware and software. One team member even spent the first few hours learning Python from square one.\nAccomplishments that we're proud of\nOur team did a really great job of learning from each other and using quick research skills to figure out all of the missing pieces. We also are incredibly happy to present a functional and stylish garment.\nWhat we learned\nAni learned Python in one night! We also learned a bit about arduino, increased our knowledge of html, swift, javascript, the Google Maps API, and Amazon Web Hosting.\nWhat's next for SNO\nWe hope to make an even better user interface to help ski slope operators to make a more enjoyable and safer experience for their customers. We also hope to downsize our accelerometer and arduino into a more wearable micro controller that will fit more ergonomically with the thermal pullover jacket.\n",
        "hackathon_id": "fth2016",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavaphpjavascriptjsouphtmlcss\n",
        "hackathon_id": "fth2016",
        "winner": true
    },
    {
        "description": "\nInspiration\nI recently purchased the Bellabeat Leaf wearable, which tracks activity, breathing and steps, but is unable to track heart rate. After using the Leaf for a month, I've found that the deep breathing exercises are often the most relaxing part of my day. I've even begun the habit of deep breathing whenever I feel anxious, which often mutes any stirring anxiety. \nHowever, sometimes I don't notice I'm beginning a stress episode until it's too late.  Speaking to another KFTH attendee today, I realized that I'm not the only one who this happens to. In this day and age, we're all frequently overwhelmed by the kind of stress that scatters your thoughts, glitches your words and turns simple tasks into complex challenges.\nWhat's bothering anyone at the time of a stressful episode may be readily apparent emotionally, but it can be hard to pinpoint exactly at what point in the day you began going downhill, and what caused it. In addition, we often have biased perspectives of both our own actions and the actions of those around us that prevent us from seeing causation subjectively.\nChopin is smart, subjective solution to living a calmer, slower life. Chopin will be able to track your stress levels and analyze what exactly is bothering you. Chopin will sense when you're beginning to get anxious, and gently remind you to slow down and take a breath. \nYou'll be able to make more informed decisions, and finally be able to breathe again. \nWhat it does\nChopin's \"pin\" is bandaged to the wrist by a strip of chiffon. Alternatively, the pin can be strapped to the Bellabeat Leaf so that the sensor rests against the skin, augmenting the wearable's functionality.\nThe pin tracks your heartbeat, taking note of irregularities (speedups, slowdowns) and sending the data to the cloud to be analyzed. When your pulse quickens, Chopin will gently blink to indicate that you should slow down and do some deep breathing exercises.\nChopin will provide reports on your most relaxed and most stressful moments. You'll be able to notice weekly, monthly and even seasonal patterns.  Integrating with google calendars, Chopin can even figure out what you were doing at the time. \nHow I built it\nChopin's hardware consists of a heartrate moniter and LED attatched to a raspberry pi running Python.\nThe script then regularly transmits data to the AWS cloud via MQTT messaging to be analyzed, and the user can use a web interface to review data.\nChallenges I ran into\nConfiguring Chopin to communicate with my Amazon AWS instance was problematic and I was unable to finish it before the deadline.  In addition, the heartbeat moniter is sometimes overly sensitive and records movements as heartbeats.\nAccomplishments that I'm proud of\nI learned how to use the GPIO components of the Raspberry Pi and also taught myself how to put together basic circuits. Since there was no documentation, I reverse-engineered the pulse sensor (which was made for arduino) and was able to use it on the Pi. I learned how to provision an EC2 instance on Amazon and even began tackling the IoT framework.\nWhat I learned\nI became intimately familiar with the raspberry pi, as well as it's GPIO.\nWhat's next for Chopin\nOnce debugging post-hackathon, I would like to continue prototyping both the wearable and the app.\nFor the wearable, I would like to keep it in a small encasing that easily attatches to fabrics and jewelry. It will use Bluetooth Low Energy to eventually communicate with a phone app to cut out the bulk of the pi. I would also prefer to replace the glowing light stress alarm with a soft vibration.\nIn addition, Chopin's reporting capabilities willl expand beyond google maps. Chopin will one day look at social media posts, pictures, the news, and weather to suggest what may be bothering you and how to solve it. Chopin will also offer meditation and breathing exercises, during which your hearbeat and breathing will be tracked by the wearable to help establish progress and improvement.\nI hope to see Chopin become a commercial product in the near future, so people like me and Dina can have help navigating the chaos of modern day life.\n",
        "hackathon_id": "fth2016",
        "winner": true
    },
    {
        "description": "\nInspiration\nMy hands were cold, and those thin one-size-fits-all gloves that enable screen touches arent warm enough. I needed something warmer will still being able to interact with my phone.\nWhat it does\nThe smart mitten registers gestures and transmits them to your phone.\nHow I built it\nI used an accelerometer and gyroscope to detect gestures and a BLE chip to connect to my phone.\nChallenges I ran into\nCalibrating gestures\nAccomplishments that I'm proud of\nIt works really well. We calibrated the hardware just right so it could register gestures properly so it doesnt accidentally perform a gesture.\nWhat I learned\nHow to use tinyduinos\nWhat's next for TransMitten\nLeft/right swiping\n",
        "hackathon_id": "fth2016",
        "winner": true
    },
    {
        "description": "\nInspiration\nNo one likes standing in lines. While attempting to find an idea for a security-related hack, we realized that already existing RFID tags in retail stores could both send and receive information. This gave us the idea to allow people to interact with them.\nWhat it does\nThis is a mobile application that would allow customers to purchase retail items by scanning an RFID chip with their mobile device. By scanning the chip, they receive information about the item including price, an image, and a product description. Once payment has been confirmed, the RFID's security feature can be disabled by our application so that the user may take the item from the store.\nHow we built it\nBecause we did not have access to RFID tags, we substituted in an electric-imp to simulate a tag. The electric-imp is linked to a URL, which upon visiting turns off the connected LED that symbolizes the activation of an RFID tag's security feature. We integrated this functionality within our app, so that we can remotely \"scan\" the item that the tag is associated with, and upon   We used an electric-imp, an Internet of Things platform. to communicate with our mobile device via wifi, Android Studio to build our mobile application, and Twitter Bootstrap to create our website.\nChallenges we ran into\nIt was an arduous task to find a hardware solution that modeled an RFID tag compatible with our software. The hardware lab ran out of Arduino microcontrollers and bluetooth shields, so we experimented with a tiny-duino, several Intel Edison boards, which all for some reason refused to work with our computers. So after trying out seven different boards, we finally arrived at our savior: the electric-imp. \nWhat we learned\nAll of us came in either rusty or inexperienced with Android. All of our UI skills received tons of practice, so much so that one of our team members initially with zero experience with Android Studio, was successfully helping build non-trivial parts of the application by the end of the project. We also all got some experience using the electric-imp!\n",
        "hackathon_id": "fth2016",
        "winner": true
    },
    {
        "description": "\nInspiration\nSimply adding technology to a wearable item does not make it more impactful and improve on the lives of the users. We feel that it is important to design products that solve problems, utilizing technology in order to assist in this process. By focusing on alleviating the pain and discomfort caused by menstruation, we seek to underscore the hidden challenges of womanhood. Ideally, through clever design, we hope to accomplish this goal without making those challenges any more visible to an outside observer.\nWhat it does\nOur underwear functions as a covert, convenient, and drug-free way to seek relief from menstrual cramps and/or lower back pain. This undergarment can soothe the discomfort of the wearer though its self-contained heating pad from within a removable compression panel. This will ideally allow the wearer to continue with their daily activities that would have previously been disrupted. The heating element is accessible and adjustable through a free, downloadable mobile phone app. This app can also help track the menstrual cycle, giving the user a notification reminder a few days before their cycle is expected to begin.\nHow we built it\nThis project came together in three parts: the garment, the hardware, and the software. Using an existing pair of underwear, we created and customized a pattern to better suit the needs of our product. Fabrics were carefully selected in order to make a comfortable and fashionable pair of underwear, utilizing innovative solutions to add in a smartphone-controlled compression and heating panel. The heating element for this piece came from Prometheus Technologies, who designed the 2Degree Jacket, which \u201cincorporates ultra-thin heating and power technology to allow the wearers to customize the jacket\u2019s temperature using an app installed on their smartphones or smart watch.\u201d Using technology from the hack rack in the fashion lab, we created a sleek device controller by connecting an Arduino Uno to a Low Energy Shield Bluetooth. The Bluetooth connects to a smartphone via an app. This app has a temperature on/off and control switch, sending data to the controller, which acts accordingly.\nChallenges we ran into\nDespite our vision to create a product that would exist inside a pair underwear, no one on our team is fully competent with a sewing machine. This lack of expertise made the task of garment making quite daunting. We wanted to make a functional-yet-fashionable product as well, which involved the use of knit fabrics and lace, adding to the difficulty of our project. Collectively, our team also had no pattern making experience We relied on innovation and some helpful tips from mentors and fashion students to assist us through the pattern-making process. We were further challenged by the limitations of the supplies and tools we brought with us, in addition to the limited technical hardware that was provided by the Hackathon. There were a plethora of issues that came up during the software and hardware programming stages, too as we were working with a generally unfamiliar chip. Lastly, as a small group of diverse individuals, we encountered difficulties with our different styles of communication, working habits, and skill sets. There were more than a few instances where we were not on the same page as a group, and had to stop and catch up.\nAccomplishments that we're proud of\nBefore we started this project, we were all strangers to each other. Our group organically formed, by happenstance, with each of us having a different area of expertise. While the responsibilities for our collaboration were divided according to our individual skill-sets, we all came away from this project with new knowledge. Rachel now almost knows how the technology in our project works. Azim learned how to use the Serger machine and by the end of the project, and easily could have sewed almost the entire project because he\u2019s awesome. \nRachel is especially proud of Azim and Charlie for being open to working on a project that aims to ease the experience of menstruation\nWhat we learned\nAll of us learned how to collaborate and trust the skills of each other, despite being strangers as of Friday. We overcame working outside of our comfort zones.\nAzim learned how to bridge between Objective-C and Swift, connecting Arduino Uno with Bluetooth shield to an iPhone, and how to use Serger machine.\nCharlie learned that there\u2019s almost always an easier solution to the problem at hand and  about how Bluetooth Low Energy works at a lower level.\nRachel learned that incorporating technology into wearable objects is not unattainable, as long as you are able to work with people who know how to do it. (She still barely know how the tech aspects of this project work.) Serger machines are not nearly as terrifying as they used to be, and she understands the basics of working with knit fabrics and creating patterns.\nWhat's next for SmarterWear\nWe would like to continue to develop the app database, allowing for tracking of cycle variations, which can assist healthcare providers in analysis. This current design of undergarments is targeted towards females, but there are many other people who can benefit from this device, such as transgender men and people who have kidney stones or other health issues.\nBuilt With\nCare, Compassion, Patience, Lack of Sleep, Caffeine, and Collaboration\nNon-Computer Tech Skills: pattern-making, Serger and standard sewing machines\n",
        "hackathon_id": "fth2016",
        "winner": true
    },
    {
        "description": "\nInspiration\nWhat it does\nThe outside QR pattern quickly takes those who scan it to the wearer's programmed site, be it Facebook for social media connections or a personal website for those who want business advertisements. On the inside, the second QR code is specifically for the wearer, where personal stylists from Quick Relations handpick outfits from the wearer's closet that compliment the QR garment. This way, the wearer can simply scan the inside code to find style combinations and suggestions professionally picked by a stylist.\nHow we built it\nWe generated two separate QR codes. The outside code was incorporated into a digital pattern using Adobe Photoshop and Illustrator and printed using the digital printer in the TechStyle lab. The inside code would be printed as a tag. We then created a pattern, cut the fabric and sewed the garment.\nWhat we learned\nWe learned how to collaborate with the TechStyle lab in order to print a personalized digital pattern. We also learned to create QR codes.\nWhat's next for Quick Relations\nQuick Relations is an extremely accessible, interactive, wearable technology that customers can order from a website, collaborate with designers throughout the design process and wear with style, knowing it was combined with the best outfit choices possible. Quick Relations is a product that can easily be put on the market in the near future. Our product will start connecting people in both the social and business setting with the simple the scan of a pattern, while the wearer can simultaneously be assured they are taking advantage of the most stylish outfit combinations possible for their new Quick Relations garment. The QR links have endless possibilities in the apparel industry, aside from social media and being a \"wearable business card,\" Quick Relations can be incorporated into the work force. Hospitals can print personalized codes on patient hospital gowns with records and contact information. Possibilities for first response teams, the Armed Forces, etc are also vast. \n",
        "hackathon_id": "fth2016",
        "winner": true
    },
    {
        "description": "\nInspiration\nWhat it does: ordering T-shirt\nHow I built it: html webpage\nChallenges I ran into\nAccomplishments that I'm proud of\nWhat I learned\nWhat's next for HackShirt\nWe changed our project last night.\nOur team only had one Mac.\n",
        "hackathon_id": "fth2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\nobjective-cxcodegoogle-based-apiiphone-sdkphotoshop\n",
        "hackathon_id": "fth2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nGirls don't typically get their fair shot when it comes to computers and technology.\nWhat it does\nThey are easily programmable wearables designed to teach young children how to code in a fun, non intimidating way.\nHow we built it\ntiny circuits, c++, java, android\nChallenges we ran into\ntime, Bluetooth capabilities\nAccomplishments that we're proud of\nthe quality of the wearables and software\nWhat we learned\ndesigning clothing and accessories is extremely frustrating and difficult to do.\nWhat's next for No More Unicorns\nI work on tiny circuits for a living, so I absolutely plan to take these ideas back to the office and make them happen.\n",
        "hackathon_id": "fth2016",
        "winner": false
    },
    {
        "description": "\nLEDress\nInspiration - A combination of classic and modern materials.\nWhat it does - Glows with an subtle accent of orange light. Manually turned on.\nHow I built it - With a lot of patience, many attempts with different LEDs, and some EL wire.\nChallenges I ran into - Trying to work with arduino and the provided LED strips with limited hardware. When we didn't have a part we needed, we had to find a different solution. There were also no 12V power sources so some of the LED strips were unusable.\nAccomplishments that I'm proud of - Made from scratch, the original design, concept, and hardware came together relatively quickly.\nWhat I learned - The possibilities of microcontrollers and that a lot of different hardware component are required to come together perfectly to produce a final product. If even one of those pieces of hardware fails, so does the project.\nWhat's next for LEDress - Wearable technology is becoming very prevalent in the fashion industry and hardware including lighting and small motors can be combined to create subtle accents or bold statements.\n",
        "hackathon_id": "fth2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nIn back to the future, Nike has some self tightening shoes. While we drew inspiration from this idea, our shoe is specifically designed to slip on and be controllable without bending over, to help those with disabilities.\nWhat it does\nIt is a shoe that tightens and loosens in accordance with gesture controls.\nHow we built it\nWe used a shoe as a base and attached an arduino powering a servo motor. When the servo motor rotates, it coils some string that pulls down the tongue of the shoe. The arduino gets signals to tighten or loosen the string from a myo armband, which registers gestures, such as making a fist or having an open palm.\nChallenges we ran into\nScarcity of materials, especially the motor. It would have been nice to use a stepper motor instead, but we lacked the necessary driver IC.\nAccomplishments that we're proud of\nCreating a working proof of concept. Hacking a soda can to make a spring in the tongue of the shoe.\nWhat we learned\nInterfacing with the myo armband is surprisingly easy, especially with all the free to use software on the windows platform.\nWhat's next for Exos\nA second prototype probably with stepper motors and a different spring to loosen the shoe when the user is done using it.\n",
        "hackathon_id": "fth2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nOur feet are the second heart of our body and make a real comfort shoes is one of the main concern these days.\nWhat it does\nHere we created a smart shoe which make it safer and more comfort to use.\nHow we built it\nWe use some sensors such as ultra-sonic, temperature and some other hardware and microcontroller to make shoe smarter. \nChallenges we ran into\nThe shoe can alert all people about some obstacle which we cannot observe (this specially can be used for blind person) and even when the shoe is hot the fan is running and make it cooler.\nAccomplishments that we're proud of\nIntegrating some hardware to make fashion staff safer and more comfort.\nWhat we learned\nWork with many staff and learning about fashion ant its technology more!\nWhat's next for Smart Shoe\nAdd some more parts and clean some minor problem and introduce the project as a proposal to industry.\n",
        "hackathon_id": "fth2016",
        "winner": false
    },
    {
        "description": "\nYou\u2019re walking down the street on a cold day. You hear your phone ding. It is probably your sister. You have been waiting to hear her important news, but your phone is at the bottom of your purse. You stop in the middle of the sidewalk rummaging through your bag. You\u2019re so excited to see what she said that you almost forget your nose so cold it\u2019s about to fall off. You finally found your phone to see that it was just an email forward of the latest cat video. With the Notification Scarf this all could have been avoided.\nThe Notification Scarf is a scarf with LEDs woven in to the structure. The LEDs are controlled through Bluetooth by an app on your phone. The scarf lights up when you receive a phone call for duration of the ringing and both the purple and red indicators are on.  When a text or email is received, the scarf flashes. A text will trigger the purple indictor and an e-mail will trigger the red indicator. The app also has a feature that allows the user to turn the lights on with their phone at their leisure, which could be utilized as a fashion statement or a safety feature when walking or biking in the dark. The scarf has been constructed with silk and cotton yarn and a continuous strand of LED lights woven into the structure.  The warp consists of an organic 2-ply cotton with a decorative stripe running through the length of the scarf and the woven weft is a combination of a finer mercerized cotton and reeled silk yarn to enhance the drape. The target market is women 25 to 45 who are on the go. This product will retail at about $200.\n",
        "hackathon_id": "fth2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\nnode.jsreactamazon-web-servicesbootstrapwebpackgit\n",
        "hackathon_id": "fth2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nWhat it does\nIt uses LEDs to show a pulse image in sync with your heartbeat\nHow we built it\nWe sewed some lillypad LEDs to a shirt  and used arduino yun to control it\nChallenges we ran into\nissues with heart monitor, issues with arduino, learning new things\nAccomplishments that we're proud of\nWhat we learned\nWhat's next for 2daBeat\n",
        "hackathon_id": "fth2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\ncarduino\n",
        "hackathon_id": "fth2016",
        "winner": false
    },
    {
        "description": "\nInspiration: Personal designer clutches.\nWhat it does: This clutch not only lights up but can pick up on sounds and amplifies them into a head set, making sure you don't miss a single detail as one does back up at the ball.\nHow I built it: Utilizing the laser cutter, kits and sauntering iron.\nChallenges I ran into: Understanding how to build a circuit board.\nAccomplishments that I'm proud of: Building things I had known nothing previously about.\nWhat I learned: Many things, such as solving problems that I did not even think would happen. To always keep trying and to not become discouraged.\nWhat's next for Sparkle Spy: A whole line of fashionable spy wear.\n",
        "hackathon_id": "fth2016",
        "winner": false
    },
    {
        "description": "\nInspiration - Cosmic Shades was inspired by rave culture, the costumes of famous electronic band Daft Punk, and aesthetic elements of the movie Tron. These glasses are designed to give a futuristic method of expression or outlet to be utilized at concerts, raves, sporting events, etc.\nWhat it does - Cosmic Shades are a pair of glasses that can project digital images over each eye (while still allowing vision for the user) using OLED screen technology.\nHow I built it - The technology used for building this project include two Tiny Circuits Tiny OLED Screens, and digitally designed laser cut acrylic glasses frames. The glasses were assembled with each Tiny Screen fastened over the acrylic cutout above the eyeholes. The Tiny Screen technology is then hidden by an adhesive pocket that still allows for charging, programming, and operation of each screen. The acrylic frames were fastened together using acrylic glue.\nChallenges I ran into - I really loved the idea of using the Tiny Circuits technology, however I am a designer and not a coder, so I had to explore my resources in order to use this technology the way I wanted to. I ended up coming into contact with a Tiny Circuits intern who taught me a little bit about coding before helping me program each screen.\nAccomplishments that I'm proud of - I am a female team of one with no coding experience.\nWhat I learned - I learned that although working as a team of one was fun and gave me maximum creative leadership, it also allowed for more roadblocks since my knowledge of coding is limited. Having a team with a vast array of skills and strengths would provide a more beneficial learning and creating experience, so that is something I should invest in deeply next time.\n",
        "hackathon_id": "fth2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nThere are 39 million blind people on Earth and many of them suffer limited mobility and require caretakers. Isn't it time to incorporate technology into a stylish solution for them?\nWhat it does\nsenseAbility currently contains an infrared ping sensor with auditory warnings if the wearer comes too close to running into an object, a collar button that allows the wearer to hear current temperature, and a discreet button that allows the wearer to send a lat/long tagged distress signal via SMS if they are lost or in a dangerous situation. \nHow we built it\nOur team comprises two fashion students and three computer science seniors. The fashion students hand-made a stylish jacket with adequate space and wiring area to place our admittedly bulky electronics, and we computer science majors crash-coursed ourselves in hardware and set up two Arduino Unos to do the distress signal/GPS and the temperature/IR sensor. \nChallenges we ran into\nHardware is aptly named because it's hard. We all haven't taken circuits since we were 15 or 16 in physics in high school. We had a lot of difficulty trying to figure out how to build an amplifier until we found an integrated one but we did manage to build a low pass/high pass filter with the help of an EE friend from Texas (that we later scrapped because it reduced volume to a point that you couldn't hear alerts through the fabric). We also attempted to integrate speech into the system but with no text-to-speech shields available we had to use a random person's text-to-speech class they shared on the Arduino forums, but we lacked the time to code the phonetics properly. \nAccomplishments that we're proud of\nA working mobility garment that protects its user from injury and helps keep them in contact with family in case of emergencies! \nWhat we learned\nBring an electrical engineer next time. To be serious, we all learned a lot about circuits and coding for hardware, since none of us have much of a background in EE.\nWhat's next for senseAbility\nRefinement of everything on the tech side. The garment is stylish and attractive and makes it seem like we don't have two arduinos and five breadboards in it, but that doesn't mean we shouldn't refine that going forward. \n",
        "hackathon_id": "fth2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nDistractions are all around us. We all have our spaces to study, to create, to relax, and to experience in. Sometimes those places are inaccessible, but with Virtual Reality, we want to change that.\nBy combining Cognitive Science research on Attention, Memory, and State Dependent Learning, we designed a system that teleports you into an immersive, minimal, and distraction free environment wherever you physically are.  \nIn State Dependent Learning, Encoding Variability of environments is key to being able to perform at an optimal level in any environment. \nWhat it does\nFocusVR puts you in your own customized Virtual Environment. Be it by the Beach, in the Sky, or in Space, you'll feel energized and focused to concentrate on the task at hand. With Leap Tracking Technologies, we bring in an ordinary pencil into VR with you to write with. Choosing to be by the beachside, the sky, or in space \nHow we built it\nHardware:\nOculus DK2,\n2 Leap Motion IR tracker\nSoftware:\nOpen source SDK's from Oculus, Leap Motion, and Leap Motion tools, \nWater asset from Unity Asset Store (https://www.assetstore.unity3d.com/en/#!/content/53519)\n3D Model from Sketchfab (http://bit.ly/1UAgR7c)\nSounds from Youtube (https://www.youtube.com/watch?v=Pa6L0sZA3UU)\nChallenges we ran into\nDue to our revolutionary design, we had to pioneer a way to combine two PC's with two Leap Motion trackers into a single Unity VR Experience.\nErgonomic Designs to the Environmental UI required a lot of tinkering around to get just right. Experimenting with spatial audio cues for prompts is relatively unknown of. \nAccomplishments that we're proud of\nWe nailed the 3D Writing/Drawing tool (something that hasn't been done before)\nCountless hours were spent ensuring on User Experience by having comfortable environment transitions\nWhat we learned\nDesigning 360\u00b0 3D environments requires a different way to thinking about User Interfaces, Interactions, and Input Methods.\nOrganize team tasks in an Agile manner to ensure maximum productivity across the board.\nSleeping is Important\nWhat's next for FocusVR\nLots! We plan to continue this project. \nAdding in additional functions, such as:\n\nDrawing 3D Shapes \nMore environments, more features, more customizability\nIntensify study capabilities\n\n",
        "hackathon_id": "hackucsc16",
        "winner": true
    },
    {
        "description": "\nWho we are : LoopWatch\nWe're getting the GPS coordinates from the loop bus to create a contextual application that tells the user when the nearest bus stop is at lightning fast speeds. Using Ionic, we are able to write our codebase once and deploy it to iOS and Android with nearly native speeds. \nInnovation\nWe know that there is another web service that lets students know when buses are coming, however an easy to use mobile interface that gives contextual information is still lacking. We believe this application fills in those gaps and tells the user when the nearest bus is as soon as they open the application \nProblems\nWe ran into a lot of problems with angularJS and ionic. For one, we needed to all learn how to use the language, and we spent a lot of time debugging our implementation and reading AngularJS and Ionic documentation. Trying to figure out a good algorithm on how close a bus is to the user was also a big challenge. \nWhat we're proud of\nOur team spent from knowing virtually nothing about hybrid application development, to developing rich user interface in css, and a fully functional loop bus implementation. Our main goal was to learn new things, and we are proud of what we came up with by the end of hackUCSC.\nFuture Development\nWe will continue to develop on the application so that UCSC students can use the application any time, any where. We still have some corner cases to fill out, as well as developing more with the google maps sdk. \n",
        "hackathon_id": "hackucsc16",
        "winner": true
    },
    {
        "description": "\nBuilt With\nmeteor.jsjavascriptbootstrap\n",
        "hackathon_id": "hackucsc16",
        "winner": true
    },
    {
        "description": "\nBuilt With\ndjangoangular.js\n",
        "hackathon_id": "hackucsc16",
        "winner": true
    },
    {
        "description": "\nInspiration\nAfter seeing the harsh working conditions of Walmart employees firsthand, we were inspired to build an app that would bring employees together to solve their workplace problems among themselves and with specialized representatives that may be able to assist them in their workplace struggles.\nWhat it does\nIt takes employee conflict and location data to help display other employees who are around you with similar workplace conflicts and provides a chat room with each of these users who are experiencing the similar conflict. \nIt allows employees to communicate with each other about workplace problems that they share, and also allows them to view data about their surrounding workplace communities. \nHow we built it\nThe back-end was built by Nelson using Parse, which utilizes Node.js and a MongoDB database, which are both easily accessed and visualized using their online dashboard. Parse provides easy deployment of mobile and web apps using their Javascript and mobile SDKs which simplify database interactions and utilization of services such as location and login security.\nThe actual app was build by Daniel using apache cordova and Ionic. Cordova is a technology that allows you to build mobile apps using HTML/Javascript. Ionic builds upon cordova by adding in angular.js, a popular web framework that makes organizing large applications much more manageable. These technologies enabled us to build a polished, aesthetically pleasing app in the time allotted by a hackathon.\nWe also took advantage of the google maps API for finding locations, and visualizing the data.\nChallenges we ran into\nIntegrating the backend framework with the front end. \nGetting google maps to work with angular properly took a bit of time.\nAccomplishments that we're proud of\nProviding cool looking data visualization, because it allows people to see the volume and possible impact of conflicts around their communities and beyond.\nWhat we learned\nHow to integrate a cordova app with Parse (which neither of us knew how to do).\nHow to use the advanced features of the google maps API to better visualize data in an awesome way.\nWhat's next for CoPower\nFuture integration of skilled representatives that may be able to provide legal advice to people with conflicts. This would be a possible monetization route, and we could use the money gained to hire specialized staff to assist with conflicts.\nCould potentially provide unions access to the workers who have all these conflicts to gather data about said conflicts or to assist these workers as best they can.\n",
        "hackathon_id": "hackucsc16",
        "winner": true
    },
    {
        "description": "\nBuilt With\nswiftobjective-cxcodeparsejsqmessageviewcontrollerjsqmessagesoundplayermbprogressfacebookuikitmapkit\n",
        "hackathon_id": "hackucsc16",
        "winner": true
    },
    {
        "description": "\nBuilt With\nmeteor.jsjquery\n",
        "hackathon_id": "hackucsc16",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascriptjqueryd3.jschrome\n",
        "hackathon_id": "hackucsc16",
        "winner": true
    },
    {
        "description": "\nBuilt With\njava\n",
        "hackathon_id": "hackucsc16",
        "winner": true
    },
    {
        "description": "\nInspiration\n  The world is a dangerous place, and you don't always have a way to go about your day safely without worry. With OnWatch, we help you do things alone confidently by resting assured that your emergency contacts are just a click away. Pebble's innovative technology allows us to facilitate securely, discreetly, and efficiently.\n\nWhat it does\n  Our application benefits those who find themselves in a dangerous or uncomfortable situation and need a quick discreet way to ask for help.. With this new application, which is free via download and easily accessible, it will give notice to the user's preset emergency contacts informing them of the user's current situation along with his/her location via google maps.  Then, the person has the option to choose four settings: safe, alert, threat, and \"911.\" Safe means that the person is in no danger, and that no one should be worried or alerted. Alert means a possibility that something might go wrong, and two text messages are sent to two different contacts in the user's phone, telling them that they're uncomfortable. Threaten means something bad is happening to the person, and the application sends text messages stating the condition of the person (i.e. threaten) to all of the person's contacts. Last but not least, emergency means dire situation, and a text to 911 will be sent immediately. The first three settings can be accessed by clicking the up or down button. which changes the degree of severity for the person's current state, and then the android app can select yes to send the respective texts. The last setting, on the other hand, can only be accessed by holding down the select button for more than two seconds to avoid any accidental \"butt-dials\". \n\nHow we built it\n  We built our application by using both Android Studios and PebbleCloud. We started with the Android Studios because we wanted to make our project usable on mobile phones. Furthermore, we wanted to transfer the text messages to the specific contacts via phone, and the only way it was possible for us at the time was to have a mobile app that would do this. As an added bonus, the text messages also sent the user's location so that the user can be found if trouble occurs. We then moved on to PebbleCloud, where we used C to code the last bits of the app. At first, we were going to solely use Android Studios to complete the application. However, we figured that pulling out our phones out and then selecting our contacts would be too slow, when we could do the same thing on a watch and just press a few buttons. This efficiency in time could mean the difference between life and death, which would make the application that much more meaningful.\n\nChallenges we ran into\n  There were three challenges that really stumped us, which almost made it not possible for us to finish our mobile application. The first challenge was getting the location of the user. This turned out to be a daunting task because the easiest way was to access one of Google's APIs, but we didn't have access to the required key. We were forced to google other ways to determine how to track a user's location, and a lot of the sites were uninformative and unhelpful. We eventually solved this challenge when we thought of google maps, where we replicated its location functionality search via GPS. The second challenge was syncing PebbleCloud and the Android Studios. Using google, there were no clear instructions on how to make the android app \"talk\" with Pebble and to access its functionalities that we wrote in PebbleCloud. We eventually solved this by combining chunks of multiple tutorials that we deemed helpful and doing anything possible to make it work. A huge factor that we did for example, was making sure that the UUID matched so they could remotely be connected. The last challenge was storing the contacts, which wasn't too challenging, except for the fact that we didn't want any databases to store the contacts and profiles. It was slightly daunting by just remembering the login info when the user first logged onto his/her account, and then immediately pulling up the contacts from the phone list itself. We fixed this by having the user to enter the desired contacts that the user wants to message and save on the phone list, kind of like speed dialing but not limited to only nine dials.   \n\nAccomplishments that we're proud of\n  The first accomplishment that we are proud of is solving the three biggest challenges within the allotted time. This required an incredible amount of brainstorming ideas and implementations so that we can make our ideas come to life. Another accomplishment that we are proud of is working together as a team. Each individual is assigned with a different task, and without the contributions of all the individuals, this project wouldn't have been completed on time. Last but not least, the other accomplishment that we are proud of is learning new things. At a hackathon, we are given a set of strict and obscure challenges that we need to satisfy. For the majority of the time, we have to adapt and try out new things. For example, we had to learn how to use PebbleCloud, which was extremely frustrating because learning a new language itself is always a challenge. But what makes this by far the proudest accomplishment is that we learned it together. If someone doesn't understand a certain functionality or some other aspect of the new language, we would all work together to make sure that everyone was up to pace. This made sure that everyone knew what he/she was doing, making it a lot more efficient in completing the mobile application. \n\nWhat we learned\n  There were many things that we learned during our creation of the mobile application. For starters, some of us were new to gitHub and its repositories/commit functions, and this was an important knowledge that everyone needed to know for their future work and tasks. Next, we learned how to use Android Studios a lot better. Many of us were novices at Android Studio, only knowing the mere basics of how to make a button for an example. After doing this project, we are way more comfortable using Android Studios and more importantly confident in our own abilities.\n\nWhat's next for OnWatch\n  For our next update on the application OnWatch, we will have a special way to access the emergency setting in case there's absolutely no time to hold the button down or someone is physically unable to use the emergency setting the regular way. An idea that is possible to make this happen is to have technology that can scan your unique fingerprint that will automatically reach 911, like a panic button of some sort. Furthermore, better layouts will be implemented, including cool and exciting new features that will make it much more convenient on the user's life, such as the Pebble becoming a strong flashlight. \n\nSponsor Prize/Prizes\n  We are entering the Tech Cares category as well as the pebble development subcategory.\n\n",
        "hackathon_id": "hackucsc16",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascripthtmlcssmeteor.js\n",
        "hackathon_id": "hackucsc16",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascripthtmljquery\n",
        "hackathon_id": "hackucsc16",
        "winner": true
    },
    {
        "description": "\nInspiration\nUsually it's hard for employees to communicate with their companies.\n(Many workers means hard for the company to keep track of the satisfaction of everyone, some people are shy or afraid to give feedback)\nWhat it does\nArGla provides employees with a means to communicate with their company.\nFor example, if the manager of a company wanted to keep track of how the employees were feeling throughout the day, then the manager can share their special code with the workers, and when the employee updates how they\u2019re feeling throughout the day, this data gets sent to the manager. This allows for managers to keep track of the satisfaction of many employees with ease. The data is then translated into a simple to read graph for the manager so that they can get an easy interpretation as to how the employees are feeling, and by having graphs, managers can see trends as to how employees are throughout not only the day, but weeks and months. Using the feedback provided by the employees, the manager can then better the working conditions for the employees.\nHow we built it\nArGla is built using Android Studio and Firebase.\nWhat's next for ArGla\nWhat's amazing about this is that, compared to systems such as Glassdoor or Yelp, where reviews are given at usually the end of a person's experience, ArGla provides meaningful data and feedback to users in real time, allowing for users to have a chance to create change for those around them to help improve their experiences before it's too late.\nAllows users to get real time feedback from people around them as to how they're feeling.\nUsers can share a special code with others that allows them to anonymously share their feelings back to the user using either a happy, neutral, or upset option along with an optional short (less than 15 word) suggestion as to why during different periods of time.\n(quick and easy, one touch of a button/feeling and a short response)\nAlthough ArGla initially was meant for working environments, it can also work for restaurants,\nteaching environments such as professor feedback during lectures, and much more.\nAn important future feature to consider including is going to be a \u201cYik Yak\u201d feed where workers can share/express their concerns in the workplace while being able to get support from others.\nFuture features to be added/considered include:\n\nUsers can send out mass surveys\nCreate groups so that people can respond for how they feel for different groups\n\n",
        "hackathon_id": "hackucsc16",
        "winner": true
    },
    {
        "description": "\nPebbleHealthNet\nHack UCSC 2016\nBest pebble hack!\nWhat it Does\nHealthNet is a health analytics watchapp built using the Pebble Health API.\nHealthNet is a tool for users to monitor their sleep, physical activity, and mood, and see correlations between the three.\nHealthNet prompts users for their daily mood and then displays sleep and physical activity data integrated graphically with data about the user's mood, so that users can quickly see their recent amounts of sleep and activity and make connections with what amount of activity and sleep causes their mood to be highest.\nCan I try it out?\nCurrently, you can't get HealthNet on your pebble. It requires Pebble SDK 3.9-beta7. Once the Pebble Health API is out of beta, we plan to publish HealthNet.\nInspiration\nThe Pebble Health app was released at the end of last year but the API is still in beta. So we decided to get in the hackathon spirit and do some real hacking.\nThe Pebble Health application is great at tracking your steps and sleep, but that\u2019s about all it does at this point. We set out to make a health analytics application that gives users insights on the data Pebble has been gathering for them.\nPlanned Improvements\n1) We plan on adding timeline support. Our eventual goal for HealthNet is for it to offer insights throughout the day. For example, we\u2019d love to correlate activity (step count) and sleep and send timeline notifications to the user when there are relevant insights. We'll develop an algorithm that relates a user's mood to their activity and sleep level, and we'll let the user know what conditions have them feeling best. We'll also recommend getting more sleep and being more active when our algorithm detects that a lack of one might cause them to have a worse mood. \nExamples of timeline notifications:\n\"You sleep 17% better on days when you've been more active than average.\"\n\"You sleep best when you to go to bed before 12am. Why not try it out tonight and see how you feel tomorrow?\"\n2) Expanding the graph and statistics page to display more data. We'll change the statistics page to a menu that a user can scroll through to see additional days as well as 7-, 14-, and 30-day averages with the activity, amount of sleep, and mood of the user. We'll change the graph page so that the user can also load different days and composites of time periods, rather than just the last four days.\nHow we built it\nCurrently, you can only use the Pebble Health API with the beta Pebble SDK. HealthNet is written in C and uses only the Pebble SDK.\nChallenges We ran into\nFor three out of the four on our team, this was our first time using C, so there was that. Two on our team had experience using PebbleJS but PebbleC was a whole new beast before the begining of this 36 hour code binge. Sean and I recieved runner up for best Pebble Hack at HackingEDU 2015. We wrote an arithmetic game called DailEQs with PebbleJS and CloudPebble.\nWe ran into some challenges because we weren\u2019t able to use the beta Pebble SDK with CloudPebble. This meant all of our testing had to be done on an offline emulator that was quite buggy.\nTesting our application on an actual Pebble Smartwatch was another challenge. Pebble releases the beta SDK publicly but does not release the beta firmware. We had to contact Katherine Berry at Pebble in order to get an unsigned firmware update.\nAbout Us\nWe\u2019re three third year transfer students at UCSC and one freshmen at UCSB.\nSean Dougher gets into Dougher mode, where he stays up all night programming; we wouldn\u2019t have an application without him. Brian put the team on his back with his expertise in C and debugging skills. Peter took charge of the tedious task of hacking the UI with Sean and writing the code that generates graphs. Michael brought the Linux so we could use the beta Pebble SDK (he also risked blowing up his Pebble Time by installing a sketchy unsigned firmware update sent via Slack). \n",
        "hackathon_id": "hackucsc16",
        "winner": true
    },
    {
        "description": "\nBuilt With\nunityseebright\n",
        "hackathon_id": "hackucsc16",
        "winner": true
    },
    {
        "description": "\nBuilt With\narduinoraspberry-pihtml5phpjavascriptapachepythoncssc++javaspirf802.11texas-instrumentswifiweb\n",
        "hackathon_id": "hackucsc16",
        "winner": true
    },
    {
        "description": "\nBuilt With\nhtmlcssjavascriptgoogle-maps\n",
        "hackathon_id": "hackucsc16",
        "winner": false
    },
    {
        "description": "\nBuilt With\njqueryexprescsshtmlmysql\n",
        "hackathon_id": "hackucsc16",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptads\n",
        "hackathon_id": "hackucsc16",
        "winner": false
    },
    {
        "description": "\nInspiration\nActivism and social movements have risen to unprecedented levels in the past few decades. With the advent of telecommunications, a multitude of tools have become available for people to communicate to each other and organize, but these tools have failed in some regards. \n-Some of the social networks that people use have become more of a distraction than an actual place of connection or active participation. They have contributed greatly to generating a feeling of conformity and passive activism. \n-They have failed to become relevant in those moments and places where they could be very useful for activists, such as marches, protests, rallies, general assemblies, decision making processes, committees, to mention a few. \n-Propelled by an ever-growing profit-driven industry, these tools are becoming increasingly unsafe, infringing upon the user\u2019s privacy rights and making their information available to questionable entities. Privacy and freedom of information are becoming less of a right, and more of a privilege. \nPeople in the technology world have seen these issues and built a plethora of alternatives, ranging from social networks that protect your data from third party providers, private and anonymous email, chat rooms and forums. However, these tools have yet to be properly designed and launched for the end user. Usually individuals will require a great amount of technical knowledge to use them and/or feel intimidated by the poor user interfaces and technical jargon that these tools feature. \nWe would like to bridge these ideas and to create a platform that is built by activists and not corporations, secure, private, and decentralized, while at the same time being accessible and user friendly. \nWhat it does\nThe app allows the organizer of an event, such as a protest, a rally or a general assembly to create an event \"feed\" or \"page\". Users can input their zipcode and find a list of events near their area. The event feed includes an update section and a map. \nThe map has the following features: \n-Users can drag and drop icons to the map to signal different markers. The markers include shelter, food, water, police presence, assembly, supplies such as gas masks, medical attention and literature. \n-Each marker dragged becomes an update in the feed. \nThe feed has the following features:\n-Users can input any sort of text updates about the event.\nHow I built it\nWe built this web application using the meteor development framework, along with bootstrap, javascript, and other web languages.\nChallenges I ran into\nWriting and debugging lots of code code, interaction between different modules, exhaustion and back pain. \nAccomplishments that I'm proud of\nWe started from scratch, with very little experience, and built something that is slowly getting closer to our vision and our goal of taking the social out of social network and turning it into justice. \nWhat I learned\nAn incredible amount of stuff about web application development, languages that we weren't familiar with and most importantly, the intersectionality between social justice and technology\nWhat's next for RioTor\nRioTor will continue to be an ongoing project. We are excited to see what this platform could become. These are some of the goals for the future:\n-RioTor, as its name suggest will be accessed through the Tor hidden network. Potentially, the user will be able to accomplish this easily. Multiple layers of security and encryption will be added so that not only the user's data is kept private and untraceable, but our servers can defend against any type of attacks or attempts to steal information. \n-More features will be added, such as ways to protect organizers against law enforcement repression, tools for democratic assembly and decision making, ability to receive notifications on your phone,  message other users and invite people in your area to events, among others. \n-Users can upload photos and videos of the event, essentially turning the feed into a live photo-journalistic recollection of the action from multiple perspectives. These photos and videos can also be used to prevent and fight against police brutality and state repression. \nWe're standing on the shoulders of giants. Hacktivism has existed for a long time. In addition, others have already shown interest in joining us. Hopefully RioTor will become a growing community of tech people who care and stand up for others. \n",
        "hackathon_id": "hackucsc16",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavasublime-text\n",
        "hackathon_id": "hackucsc16",
        "winner": false
    },
    {
        "description": "\nBuilt With\nmeteor.js\n",
        "hackathon_id": "hackucsc16",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe only inspiration for this project was to win the Diode challenge for the Hackathon, and to gain experience in Arduino.\nWhat it does\nThe circuit operates on the concept of a physical loop where energy is \"conserved\". The circuit alternates between analog and digital signals through 4 different methods to keep a perpetual signal transferred. Entering the loop either at the photoresistor or at the sound detector, the loop is traversed from sound detector to LED light array, to photoresistor to buzzer and back to the sound detector.\nTL;DR once you start this loop, it cannot be stopped.\nHow I built it\nI fiddled with some wires and things.\nChallenges I ran into\nFiddling with the wrong wires and things. \nThat, and learning Arduino coding.\nAccomplishments that I'm proud of\nI built a really annoying device.\nWhat's next for Analog -> Digital Physical Loop\n-Annoy more people with a more annoying buzzer (not sure if this is possible)\n-Clean up the wiring.\n-Install some dank memes with it.\n",
        "hackathon_id": "pittapps",
        "winner": false
    },
    {
        "description": "\nInspiration\nBurning passion for innovation, increased social awareness in Pittsburgh.\nWhat it does\nPublic art exhibit that you can't see.\nHow I built it\nLove, Squirrel, Java, jquery, HTML, CSS, python\nChallenges I ran into\nA lot of stuff, this took way too long. Squirrel has no morse code library, so we had to implement that by hand (it took a while). We had to interface with a wifi device called the Electric Imp that doesn't like to play well with our school's wifi network.\nAccomplishments that I'm proud of\nTurning a light on, writing morse code through get requests. Tweet to @InstaLightPrime to send us a message in morse code, too!\n",
        "hackathon_id": "pittapps",
        "winner": false
    },
    {
        "description": "\nInspiration\nIt started with the team wanting to take on a challenge to improve health in our society with wearable tech. Some of our members have had family diagnosed with Alzheimer's; so we strove to find a way to make communication easier between patients and their caregivers and to remind patients of certain events, hoping we could find a way to make connections with their long term memories. \nWhat it does\nMemble uses voice data from the pebble smart watch to find patterns in Alzheimer's patients stories and sentences. Using our algorithm we decide on the most frequently talked about ideas, and at a consecutive time each day the patient is informed of the 3 most frequently forgotten things. \nHow we built it\nMemble uses a python-flask web server which is directly connected to a mongo database, separate android and pebble applications interact with the flask server to push/receive data.\nChallenges we ran into\nWe ran into many challenges, the most difficult one being integrating the servers and various apps we built together, and also the time constraint gave us some challenges, we may have bit off more than we could chew because we were focused on making Memble scale able.  \nAccomplishments that we're proud of\nWe're very proud that we take images from online and display them on the pebble via an app on our smartphone. We are also very proud of how we can record data using the pebble and send it to a caregiver so they can get updates on them. \nWhat we learned\nWe learned about working as a team, setting dedlines for each other, and most importantly we learned a bunch of problem solving and CS skills that we will keep with us after the hack.\nWhat's next for Memble\nWe plan on winning the competition...see our pitch\n",
        "hackathon_id": "waterloohacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\nreactjsreact-nativedjango\n",
        "hackathon_id": "waterloohacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nLast weekend, I made a tool that made loyalty program management very easy and allowed connections between the customer and the store owners. I also realized how a similar platform could be applied to doctors and patients.\nWhat it does\nPatients get a patient ID. Then they can pretty much keep all of their medication information on cloud. All doctors will have access to it and furthermore, they will be able to see their progress on their medications and what not. \nHow I built it\nIt's built with Django. \nChallenges I ran into\nSleep.\nAccomplishments that I'm proud of\nThinking critically. \n",
        "hackathon_id": "waterloohacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nOne of the major hurdles to being more zen is the inability to notice when getting caught up in things around us. Whether it's positive or negative, our propensity to get over-excited is hard to manage, since it's often difficult to notice this reaction until after it's already finished.\nThis app was built to fix that problem, to help people become better at both realizing that they're overreacting, and de-stressing when needed.\nWhat it does\nZenotify uses your wearable of choice to gather heart rate data, and signals you when your heart rate reflects higher stress levels than normal. It detects for an increased heart rate pattern, but with minimal accelerometer movement of the wearable or mobile device.\nThe notification also prompts the user to enter the app, and begin playing the de-stressing mini game. It is a very simple game, designed to both distract the user through continued exposure to new brain stimuli, as well as create an uplifting state for the stressed our or panicked user.\nAfter playing the game, users see how the game effected their heart rate, and how much money they earned for taking the opportunity to calm down when needed. This would be a simple monetary incentive for users to step back every time they de-stress, which is beneficial for their insurance providers, whose best interest is in keeping the user alive as long as possible (they would pay out the reward to the user through discounts on premiums for the year or a similar effect).\nFinally, users can track their progress and see how well and often they respond to these pings, so they can see the long-term benefits of their improvements.\nHow we built it\nThis app was built on iOS using core graphics and animations for the game, and other basic frameworks for the rest of the app. It interacts with a server instance on azure which can give it current heart rate information (to spoof a heart rate monitor, which we didn't have access to). \nChallenges we ran into\nUnfortunately we realized early that none of the hardware provided would give us the heart rate data we needed, so we decided to build a model which could effectively re-create a heart beat dataset, which could then be used to test the app. \nAccomplishments that we're proud of\nWe had an idea that had a lot of real world merit, but didn't fit our circumstances (no heart rate monitor). Instead of abandoning it for a second tier idea, we put even more work than we would have, and created an even more compelling prototype. \nWhat we learned\nWe learned about the importance of the visual elements used in an app that helps you de-stress. Colours, sounds, and the overall experience should be finely tuned to match the expected needs of the user, to both encourage repeat usage and maximize results during use.\nWhat's next for Zenotify\nWe're hoping to acquire wearables which can sense this heart rate data, so we can build a fully functional version of the app and launch to the app-store.\n",
        "hackathon_id": "waterloohacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe want to unify different programming languages into one natural speech language. \nWhat it does\nUses the Google Speech API with our custom speech processing algorithms to convert a speech into a useful scripting language\nHow I built it\nAndroid, Android Studio, Google's Voice API, \nChallenges I ran into\nComing up with a User friendly speech language, Running Java equivalent to output print statements.\nAccomplishments that I'm proud of\nUse of unfamiliar API's. Cool Prototype\nWhat I learned\nDifficulties of Natural Language Processing.\nWhat's next for Shakespeare-NLP\nIntegrating more languages\n",
        "hackathon_id": "waterloohacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nBIGpicture was inspired by CrowdHaiku.com, a website where anonymous internet users voted on what word should come next in a haiku. It was fascinating to browse the gallery of all the Haikus that the internet hive-mind had created. Most were nonsensical, some were profane, and some were actually quite beautiful. Lots were funny, sometimes repulsive, and once in a while thought provoking. \nBrowsing that gallery was a fascinating insight into the cumulative mindset of the internet.\nBut why limit yourself to the few words of a haiku when a picture is worth a thousand words?\nWe thought it would be interesting to see what would happen if we asked the internet to contribute to a massive art project, with each user contributing a small fraction to recreate images.\nWhat it does\nBy combining the countless small colored chunks submitted by users, BIGpicture can produce uniquely stylized interpretations of images.\nUpon first logging on, users are presented with a simple task: color in this square.\nThey see a rough outline of what they have to draw, and try their best to color. They doesn't have to be prefect, as long as they match up the lines, and line up the colors, magic will happen. We make each chunk small enough so that anyone of any artistic level can color it, but large enough so that they have features to outline.\nOnce they hit submit, they get to a page where they can view all of the art people before them have made, and are also presented with a list of paintings currently being drawn.\n\nIf they are up for more, they can contribute another square to any of the collages they want.\n-If they are done, they can just browse the completed gallery, or even watch collages being filled in real time!\n\nRegardless of what they chose,  the user has contributed to this massive art-project, and has helped create a unique reinterpretation of an image, an interpretation only possible when countless people come together to make art.\nChallenges we ran into\nGetting the drawing canvases set up and using websockets was relatively painless.\nUI, UX on the other hand, that was a whole new level of frustrating. We got it to a nice state, but we think this GIF explains UI, UX development perfectly: (http://i.imgur.com/Q3cUg29.gif)\nRegardless, we managed to implement roughly 90% of the features we set out to include, with those features implemented seeming to be relatively stable. Success!\nAccomplishments that we're proud of\nWe don't know of any website where people can collaborate on art in the way that they can on BIGpicture, and we think that the paintings that result from mass collaboration are fascinating, both artistically and sociologically. \nWhile we won't know for sure until we start posting BIGpicture around the web, it will undoubtedly be very interesting to see what the internet hive-mind will create. \nWill it be art? Possibly. \nWill it be trash? Maybe. \nWill there be male genitalia in some tiles? Without a doubt.\nBut no matter what, it will be fun to watch what happens.\nWhat we learned\n\nDelegating roles (each of us handled a single aspect of the app)\n\n\nDaniel Prilik - Web Client\nEthan Hardy - iOS Client\nJames Hageman - Node.js Backend\n\nJames learned a ton about backend server design\nEthan and Daniel both learned how to interface with a backend component of an application\nAll of us learned how to effectively use websockets\n\nWhat's next for BIGpicture\nWe want to polish up out code, polish up our UX, add some moderation tools, and publish this app to the world, and see what the internet will create.\n",
        "hackathon_id": "waterloohacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nMy photos make up the majority of the irreplaceable files that I have, and they're the hardest to backup. There's too many to fit in Dropbox, and backing them up online is a slow and tedious thing. To protect them, I have automated backups of my photos and thought that was enough.\nThen, out of the blue, Lightroom just outright refused to work with one of my photos. As I tried more photos, Lightroom just continued giving me errors. Clearly, my hard drive was dying, but I was fine, I had backups.\nExcept some of the restored photos still didn't work. Clearly my backup was backing up bad files, and had been for a while. It was only luck that I had a much older backup that still had uncorrupted files.\nWhat I needed was a tool that would run automatically, and let me know if anything happened to my files before they become irrecoverable.\nWhat it does\nMost files don't change all that often. The plugin takes advantage of that by taking an initial hash of the file, and then periodically rehashing the file, and making sure it still matches.\nHow I built it\nAs it was going to be part of Lightroom, I had to use the Lightroom API. I started with a general idea of what I wanted the plugin to look like, and iterated on it as I hit certain milestones. \nIt was a lot of trial and error - for example, I first had to test the hashing function, to make sure the output matched a reference tool. Next was using the API to associate the hash with the file in a permanent manner. Then being able to batch retrieve that value for multiple images. There was always a next step to do, so I never ran out of things to add - only time to do it in.\nChallenges I ran into\nThe primary problem was that the tools just aren't present. Lightroom uses a customized version of Lua with fun things like seemingly non-deterministic sorts.\nAdditionally, some things I wanted to do with Lightroom just weren't documented - like the actual hashing algorithm. I ended up using an API method that had been around for the last 3 versions of Lightroom, but undocumented\nAccomplishments that I'm proud of\nThis is one of the few plugins that I know about that can run tasks automatically whenever Lightroom starts up. That alone is pretty significant in my book.\nI also got to learn for more about how to do actions in Lua - things like iterating over lists of files.\nFinally, I ran the plugin against all my images, and I can now sleep somewhat better knowing I have a way to protect them.\nWhat I learned\nA whole bunch about Lua, Lightroom, and the fact that even if the official API doesn't allow you to do certain tasks, chances are you can work around it in a manner that ends up being somewhat more elegant.\nWhat's next for Lightroom Verifier\nReleasing it to the world after writing some documentation.\n",
        "hackathon_id": "waterloohacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nMicrosoft sam's angelic voice.\nWhat it does\nCreates robot-covers of songs.\nHow I built it\nmeSpeak for text-to-speech library, node.JS/socket.IO for client/server, jQuery and CSS/HTML for front end\nChallenges I ran into\nAudio analysis is a bit more time consuming to implement than we thought\nAccomplishments that I'm proud of\nEntertaining, hilarious (but kind of useless) and beautiful UI\nWhat I learned\nGet the core of the product ready first and move fast\nWhat's next for Lil Robo\nImplementing the audio analysis algorithm to generate robot-covered versions of any song\n",
        "hackathon_id": "waterloohacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtmlcssjavascriptapacheconf\n",
        "hackathon_id": "waterloohacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroidparse\n",
        "hackathon_id": "waterloohacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptchrome\n",
        "hackathon_id": "waterloohacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nNobody likes wasted food!\n\nThat's why we decided to make a mobile app to keep track of your perishables.\n\nWe leveraged API's to help address these challenges :\n\nInputting food is tedious - Our app can label your food from a simple snap of the camera!\nExtra incentives for tracking your food - Healthy recipe suggestions are given based on the perishing food item!\nSocial Interaction - View your friend's perishing food, and collaborate together!\n\nWhat it does\n\nKeeps track of your perishable food items and lets you know when they are about to expire.\nDiscover healthy recipes for food in your inventory.\nSee your friend's published food items, and collaborate with them on recipes.\nInput food items quickly by taking a picture and having the app label the food.\nKeeps you healthy by alerting you when your fridge becomes unhealthy.\n\nHow we built it\n\nAndroid Studio.\nFirebase for the backend to store data and provide real-time syncing of food items with friends.\nClarifai API to leverage deep-learning networks to label a food item from your camera.\nEdamam API to generate healthy recipes based on your perishing items.\n\nChallenges we ran into\n\nCoding for a real-time database requires some sacrifice when designing the schema.\nGetting Android UI to work nicely with us.\n\nAccomplishments that we're proud of\n\nA working application with real-time data syncing between friends.\nImage recognition on a mobile phone.\nGenerating food recipes based on healthy tags.\n\nWhat we learned\n\nFirebase is easy to learn but hard to master. But the real-time data integration on Android took a lot work off our plates.\nMachine learning for food identification is viable, but in the end it often requires human validation.\n\nWhat's next for FoodBox\n\nWith some minor changes to the UI, some small tweaks to the database and contacts listings, we would be ready to launch into an app store.\n\n",
        "hackathon_id": "waterloohacks",
        "winner": false
    },
    {
        "description": "\nGOOGLE PONG\nWhat it does\nGoogle Pong is a beer-pong game designed for the Google Tabletop Prototype. This game introduces an entire new genre of apps to follow and shows the potential of the Google Tabletop\nHow we built it\nThe game itself is built with HTML5 and JS. We also used the Tabletop API to add voice commands to our app, and we used fancy physics to calculate bounce arcs for increased user feedback.\nChallenges we ran into\nThis was our third idea. We first tried two web-apps, but they kind of fizzled out. We played with the Google Tabletop a bit and as soon as we realised the untapped potential, we dived right into product design.\nAccomplishments that we're proud of\nThis is a type of game that no one has ever made before. There are \"virtual\" beer pong games, but you just flick a virtual ball. With this game, the power is in your hands.\nWe see a bright future for this genre of apps. There are plenty of other games that can utilize this bounce-infrared mechanic of the Tabletop. There are also utilities and educational apps that can benefit from this. \nWhat we learned\nWe learned that sometimes, its less about the code you write and more about what it stands for. The code isn't impressive, most people could come up with it in a short amount of time. Instead, its the infinite possibilities it's opened up that matter most.\nWhat's next for Google Pong\nUnfortunately, I don't own a Google Tabletop yet, they aren't for sale. This makes it hard to continue to develop apps that exploit Tabletops features. I hope some day soon I'll be reunited with a Tabletop and I can work with it again!\n",
        "hackathon_id": "waterloohacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtml5css3javascriptjquerypythonbootstrap3\n",
        "hackathon_id": "waterloohacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\nobjective-cswift\n",
        "hackathon_id": "waterloohacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavajsonnode.jsxmlswiftjavascriptangular.jsexpress.jsrxwebsocketsmyoandroid-studioxcode\n",
        "hackathon_id": "waterloohacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascript\n",
        "hackathon_id": "waterloohacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe thought about problems that we had in school, and one of them was the fact that we constantly study by ourselves, and that we can't find people to study with. We wanted to solve this problem, and StudySqr was born.\nWhat it does\nStudySqr is a mobile app that allows you to see what subjects people are studying and where they are studying them, and it allows you to have group study sessions on the fly. Let's say I want to study for a certain course, in this example, MATH239. Using StudySqr, I can search for all study sessions taking place for MATH239, and when I find one I like, I can check-in to it. If I want to create my own study session, I can do so, and people looking to study MATH239 can check-in to my session.\nHow we built it\nWe used a variety of technologies. To build the app itself, we created a native Android application using Android Studio. We stored the \"events\" (study sessions) in a Mongo database in the cloud. We created an API using Node.js in order to allow the Android application to access the events and to create new entries in the database. We created a website as well, using HTML and CSS. We used Github for version control.\nChallenges we ran into\nA challenge we ran into involved connecting the Android application to the backend. None of us have worked with HTTP requests in Android before, and our lack of knowledge on the topic slowed down our progress. We eventually learned that requests have to be sent in a separate thread than the main application thread, and after this realization, we fixed our code and the requests started to work. We were able to connect the app to the backend :)\nAccomplishments that we're proud of\nWe are proud of the fact that we were able to create a full working version of the Android app, a fully implemented backend, and even a website for our application! This was our first time working together, so we are also proud that we were able to get along and perform well in a group. Lastly, though we faced challenges along the way, we didn't back down and we overcame them!\nWhat we learned\nThrough the creation of StudySqr, we were all able to learn more about the technologies that we used. We learned what each of our strengths are, and this will be useful when we work together on future projects. We also learned how long each of us could stay awake for :P\nWhat's next for StudySqr\nWe want to create an iOS app! Additionally, our application is easily extendable, and we want to immediately extend it to campuses aside from the University of Waterloo. We feel that StudySqr is the best way to find people to study with on the go, and so we want everyone to be able to use it.\n",
        "hackathon_id": "waterloohacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroidnode.jsibeaconweb\n",
        "hackathon_id": "waterloohacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe decided to create Acre to help students who are leaving university or college and looking for a career. There are a lack of resources for accurately being able to get a list of possible new homes. Vaughan, being a graduate this upcoming year, and Scott graduating in a years time, this applies to us directly. Furthermore, coming into this hackathon we both had an interest in working with large sets of open data. \nWhat it does\nAcre utilizes large sets of open data to provide the user with an idea of where they can start, or continue, their career. Our queries integrate factors such as: job title, job demand, lifestyle choices and the user's native language to generate a list of cities that are actually suited for that person. For example, the 'Job Title' option uses your occupation to check against current salaries in that field to give you an average of what the income will be like in that area. \nHow I built it\nWe built it using a classic JavaScript stack: React.js, with material design, on the frontend and MongoDB on the backend. We picked React.js for the ease-of-use in handling JavaScript state mutation. Implementing the flux software architecture, React promotes modularized, unidirectional data flow to more easily manage the state of the application.\nThe back end is written with MongoDB as discussed before, with a Node.js backend to drive the REST API. There's some significant math going on behind the scenes -- including some multiple criteria decision making which is subjective in nature. We used open data for the criteria -- things ranging from job data, such as salaries and demands, populatioin densities, and all the other factors people might care about and then we create the \"Acre\" score. \nChallenges I ran into\nThe frontend challenges were mainly UX oriented. We had  to figure out a way of presenting a lot of search options in a digestible way to not overwhelm the user, while being powerful enough to express a good enough interface to gain the fine grain of control we needed.\nThe backend was another story -- having so many decision criteria with uneven weightings and for different people made things a real hassle. It was a significant challenge getting all the data together into a final result that made sense, for a wide variety of users.\nAccomplishments that I'm proud of\nWe are both happy to have achieved a simple, yet sophisticated app that can provide the user with real-time, real information results, based on THEIR career and lifestyle. \nWhat I learned\nWe gathered a few more skills on the front end side of things with React.js. But the biggest thing we learned was how to work with, acquire and empower an application with open data. \nWhat's next for Acre\nWe are looking to explore the expansion of search criteria and improving algorithm efficiency and accuracy upon query.\n",
        "hackathon_id": "waterloohacks",
        "winner": false
    },
    {
        "description": "\nPitch\nSo, it's January 1st, the start of a new year, a new you. You say this year I'm going to eat healthy. So you start replacing subs with salads, cokes with juices. This goes on for about a week, before things start going downhill. So what happened? Well, goals aren't habits. Where is the challenge, or rather, who is the challenge? Just because you track something, doesn't mean you are going to change. \nHabit is a social app geared towards achieving goals by build great habits with your friends. There are lots and lots of apps that focus on helping you \u200btrack\u200b everything but there are hardly any that help you do something about it -- especially with your friends.\nBy taking advantage of \"challenge\" feature built in to the app, friends face off against one another for having the ultimate bragging rights. There are points and streaks and you can even see what the trending goals around the world. And if someone is falling behind then maybe you can taunt them!\nHabit helps you build habits incrementally so you have the highest chance of success. After all, our goal is to help users attain long term healthier life styles. \n",
        "hackathon_id": "waterloohacks",
        "winner": false
    },
    {
        "description": "\nHack Attack\nIn the beginning, we were fascinated with the concepts of the Google Table Top. We wanted to create a dank, mind-challenging game that starts and ends quickly. We took into consideration each player's ability to hold a mobile device while interacting with the table. In the end, we came up with a short game for users to play by changing their control between a phone and the Table.\nOur hack is a two player game that involves the players cracking a 2x2 mobile unlock screen set by their opponent. The Table contains a 4x4 grid of locks initially of neutral colour. Players select a lock on the Table, and then switch to their mobile device to attempt hacks. A successful hack allows a player to claim a lock with their colour, and set a new password for the lock. The objective is to claim a line before the opponent.\nThis project was written in JavaScript and compiled to a native android application with Ionic. Communication between the devices is facilitated with Firebase. All technologies used in this project were learned by the hackers from scratch.\n",
        "hackathon_id": "waterloohacks",
        "winner": false
    },
    {
        "description": "\nAbstract\nThe current state of brick-and-mortar retail advertising has not changed in any significant way since its inception. We have developed a solution that allows vendors to push real-time targeted offers to their consumers based on their in-store location. A mechanism such as this will help vendors deal with a surplus of products in a more cost-effective manner, incentivise consumers to visit in-store locations for exclusive offers, and present the potential for the collection of consumer movement patterns in relation to their purchasing patterns. Overall, such an infrastructure allows for the targeting of consumers in a platform agnostic and non-intrusive manner.\nHow we built it\n\nBluetooth 4.0 based beacons via one-way peripheral advertising\nAndroid mobile consumer application \niOS mobile beacon application (mocking hardware that would ideally be dedicated)\nA flexible infrastructure that allows for potential growth into other domains (e.x. venue visitor messaging, museum exhibit details, etc.)\n\nChallenges we ran into\n\nResearching and developing a Bluetooth advertising packet structure that is extendable and can be successfully transmitted by the beacon and received asynchronously by the consuming receiver.\nAdapting to the fact that our available Android devices did not support Android API 21(lack of BLE advertising functionality)\n\nAccomplishments that we're proud of\n\nImplementing a new way of targeted-marketing that has never been done before.\nCross-platform/Platform agnostic communication via Bluetooth\n\nWhat we learned\n\nIt is possible, to an extent, to transfer data via Bluetooth without pairing (i.e. broadcasting a constant signal)\nHow to send and receive Bluetooth signals using multiple devices across Android and iOS\n\nWhat's next for KACH Deals\n\nPreferences and Filters for users\nExpand to have a better vendor beacon user-interface\nAnalytics for vendors\nExtendible web platform\nExtend to other industry applications (e.x. entertainment)\n\n",
        "hackathon_id": "waterloohacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nWhen out for a trip, navigate through multiple destinations is a headache and we cannot have an estimated arriving time. We don't want to open Map applications again and again, search for destinations. We want to have an estimated plan for the trip.\nWhat it does\n\nChoose more than one destinations, with different travel modes (driving, transit, walking and cycling). \nHave an estimated arrival time showing on markers\nInteractive way to drag destinations on the map. \n\nHow we built it\n\nUsed Google Map iOS SDK\nUsed Google Direction Web API\nUsed Swift language\nTests are partially included.\n\nChallenges we ran into\n\nUser interaction\nWeb API integrations\n\nAccomplishments that we're proud of\n\nInteractive way to drag markers\nCustomized way to interact with Google map, included adding our own view to show all kinds of information like street name, transition methods\n\nWhat we learned\nTeamwork, Sharing and we learned how to query directions through Google Direction API, how to use with Google Map iOS SDK, all kinds of iOS development and Swift knowledge  to build an App.  \u2014 What we learned\nWhat's next for Way to Go\nActually Way-to-go is one of our previous startup ideas, but we chose another idea so we didn\u2019t get a chance for this. We\u2019ve finished a mockup in this hackathon and we\u2019d like to finish this app in the future.\n",
        "hackathon_id": "waterloohacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe originally started out trying to design a solution for a prevalent real world problem. We were looking into creating an auto shutoff module that could be integrated into existing stoves to prevent house fires. Eventually we decided to focus on making daily life more convenient, and doing so with a fun, over engineered design. After several hours of discussion, we developed an integrated dental hygiene concept for household use. \nWhat it does\nT\u00fcth is an all-in-one, internet-enabled solution for the future of dental hygiene. It holds multiple toothbrushes in a UV sanitation bay. It automatically dispenses the perfect amount of tooth paste and mouthwash with its automated dispensing systems. It offers an integrated audio timer and responsive illumination system which is used to give the user feedback on their brushing time and ensure that they brush and mouthwash for the dentist-recommended time. The system supports the extension of multiple user profiles, enabling the system to tailor its dispersal amounts based on which toothbrush is picked up. The internet capability keeps the users accountable for their brushing habits. If one of the users forgets to brush a particular morning or night, it will post to their Twitter account, notifying the world that they forgot to brush their teeth --public shaming at its finest.\nHow we built it\nThe T\u00fcth system was originally built using the Particle Photon board, providing wireless internet and easy access to web API's. During a momentary lapse of judgement in our sleep deprived state, we accidentally pumped 12v through the 5v board VIN pin, and that was the end of the Photon. Such is life. We ported the whole thing over to an Arduino Mega and wrote a Processing script on a laptop to rebuilt the twitter functionality.\nWe had some servos and acrylic lying around and we scavenged for most of the other parts. We used a water bottle, pieces of scrap wood, and a lot of hot glue.\nChallenges we ran into\nIt was surprisingly hard to use a servo to control the mouthwash. We were too cheap to buy a real valve so we spent hours trying to design a way to crimp a tube to stop the flow.\nThe Photon burnout cost us a tremendous amount of time in redesigning the electrical system and porting the code over.\nAccomplishments that we're proud of\nThe design prototype is fairly attractive considering how quickly it was put together.\nWe had a ton of fun making it, and are glad we picked a fun project to work on.\nWhat we learned\nIt is incredibly rewarding to over-engineer a simple everyday task and apply the internet of things to ridiculous objects. \nWhat's next for T\u00fcth\nWe've started prototyping a website interface that will hopefully allow users to track their brushing history. We also have a pico projector that we want to add to internally-project to the user a random YouTube video to keep them entertained.\n",
        "hackathon_id": "hack-wpi",
        "winner": true
    },
    {
        "description": "\nInspiration\nThe many times I forgot to book a room for my group meeting and spent hours searching for an open room on campus by walking through each building.\nWhat it does\nIt parses through 25live to gather scheduling information for WPI events and classes. It then uses the users geolocation to calculate the closest open classroom that the user can use.\nHow we built it\nUnorganizr is built on a flask server running on an Azure cloud instance. It uses requests to pull data from 25live and then parses it to gather scheduling information for rooms across campus and stores it in MongoDB. When a user connects to the Unorganizr web application, the app requests the user's location and uses it to determine the closest open classroom to the user. It then displays the location of open and taken classrooms on Bing maps using openlayers to overlay location markers.\nChallenges we ran into\nSome of the challenges we ran into were gathering location data for rooms across WPI campus. In addition, we had to deal with inconsistencies between 25live and the actual WPI campus. Another challenge was parsing data from 25live. Different xml namespaces made it tricky to pull down the data and easily parse it into a readable form. The final and possibly biggest challenge was overlaying. A lot of the locations had to be offset and correctly rotated, so that they would overlay nicely on the map.\nAccomplishments that we're proud of\nGetting data from 25live. \nWhat we learned\nWe learned a lot during this project. We learned how to use flask, requests, xml namespaces, mongodb, openlayers.\nWhat's next for Unorganizr\nBeing able to calculate floors into distance calculation. Adding more rooms on WPI campus. Adding group integration to find the closest room to all members.\n",
        "hackathon_id": "hack-wpi",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe want to provide a fun and interesting way to learn electronics and how to apply it to solve real life problems.\nWhat it does\nIt is a Monopoly like board game that teaches principles of electronics and programming.\nHow I built it\nWe built it by careful design and lots of sleep deprived hours of hard-work.\nChallenges I ran into\nDebugging, debugging, debugging...\nAccomplishments that I'm proud of\nIt looks cool. The pieces are neat. \nWhat I learned\nHelping hands are for kindergarten\nWhat's next for \u7535\u8def\u73a9\u513f\nDevelop a DIY version that can be laser cut and circuit printed. To be built by students through the world\n",
        "hackathon_id": "hack-wpi",
        "winner": true
    },
    {
        "description": "\nInspiration\nReverse snake was an idea I came up with Wednesday at a brainstorming meeting. Three other fine folks thought it was a good one, and we formed a team.\nHow we built it\nWe decided to code it in javascript so that it can be run on any platform. While this isn't a language any of us were familiar with, it wasn't too hard to pick up.\nChallenges we ran into\nA lot of the CSS and HTML we were writing to display our grid wound up not working on different browsers. We spent at least an hour trying to understand why something worked on one of our computers but not another's.\nAccomplishments that we're proud of\nCoding a functional AI... 5 times!\nWhat we learned\nAll 4 of us were javascript newbies, and now we are cadets. Although it wasn't the largest of projects, there was a considerable group-work aspect to it, and coordination was often a problem. In that vein, Hung, Maddy, and Quyen are now much more comfortable with git.\nWhat's next for Reverse Snake\nGlobal leaderboards! Time trials!\n",
        "hackathon_id": "hack-wpi",
        "winner": true
    },
    {
        "description": "\nWE ARE TEAM GARDENLAND\nInspiration\nWe wanted to build a dungeon crawler similar to Diablo or Champions of Norrath.\nWhat it does\nFully functional prototype with replayable level. Four types of enemies. Ranged and melee attacks. Pickup health items. Try to survive as long as you can.\nHow we built it\nThe game is built using Unity.\nChallenges we ran into\nUsing unity. \nAccomplishments that we're proud of\nActually having a working demo that is kind of fun to play.\nWhat we learned\nFeatures take a while to implement. Build up slowly. Constantly iterate.\nWhat's next for Dungeonthon\nPolish, add animations. Improve gameplay. Add more abilities and develop sophisticated combat.\n",
        "hackathon_id": "hack-wpi",
        "winner": true
    },
    {
        "description": "\nCopyCast\nGet Any Online Media on the Web Onto Your Chromecast\nHack WPI 2016 - a project by Evin Ugur\nCopyCast leverages APIs that the Chrome Runtime Engine exposes to sniff outgoing HTTP requests. While you're online, CopyCast will record HTTP requests to media, and allow you through a Browser Action dialog to send them to your Chromecast.\nContent behind proprietary players (Adobe Flash, JWPlayer, etc) are all now castable! \nIt Does FLV Video!\nThere are a few extensions similar to CopyCast already on the market, but none of them are able to cast FLV because the Chromecast can not run it. CopyCast is able to play most FLV videos on popular sites to get content onto your TV ASAP.\nHow Does it Cast FLV?!?!\nOriginally, I was toying with a client side ASM.js build of ffmpeg to convert FLV videos on the fly (client side via a web worker) into mp4. This is technically feasible, however it was slow and defeated the entire point of CopyCast.\nSo instead, CopyCast has an easy option to temporarilly spoof Chrome's User Agent on all outgoing HTTP requests to look like they were coming from an iPhone. For most sites that serve two primary things: television and advertisements, pretending to be a mobile user to grab the mp4 you want to cast works just fine :)\nMost TV/Movie based streaming sites that serve FLV also serve mp4 if you ask them nice enough. This weird duality most likely can be attributed to the fact that mobile operating systems like iOS are much more locked down so even if a user is given an mp4 there's little the user could do short of watching it and moving along -- not anymore!\nWhat Tech Did I Use (for HackWPI)\n\nChrome APIs \n\n\n chrome.webRequest\n chrome.webNavigation\n chrome.tabs\n\nChromecast Library: chrome.cast\nBootstrap\njQuery\n\nFuture Plans\nThis was a really fun project! In the near future I intend to further polish the UI and clean up and test more things that I didn't have the luxury to bother with during the context of a Hackathon. This includes:\n\nLocal Storage API - leveraging chrome.storage to persist data between sessions and even instances of your google account across Chrome Browsers would be really nice.\n\n\nThis would also pave the way to features such as playlists, exporting, sharing, etc. \n\nIdeally, I'd ditch the whole approach with the user agent spoofing. At the time, the easiest way I see to do this is to abadnon \n\nConfiguration\nYou need to add a file appid.js with the following\nvar APP_ID = 'your id';\nYou can obtain an app ID via the ChromeCast Developer Console.\n",
        "hackathon_id": "hack-wpi",
        "winner": true
    },
    {
        "description": "\nInspiration\nI like telling stories and making them fun and silly. I thought others would share this interest, but all of these stories go to waste. I created an app where these stories can be shared with children around the world. Authors can upload their silly stories with purple anteaters for anyone to read\nChallenges\nI hate HTML and CSS\nHow I built it\nI used javascript and jquery for all the functionality and Parse as the backend. \nAccomplishments\nIt actually works. I wish I could add more to the home page like top stories and most popular reads. Also, I wanted to add a way for authors to get more written feedback about their stories\nPurpose\nThe Storybook App is an easy way to share and ready stories. It is safe for children of all ages to read. Authors can easily upload any stories they have written as long as it is in PDF form. \n",
        "hackathon_id": "hack-wpi",
        "winner": false
    },
    {
        "description": "\nInspiration\nknife wielding robot\nWhat it doesf\nemotion recognition. slap you until u smile\nHow we built it\nwith a bucket and Bowler studio. and microsoft project oxford.\nChallenges we ran into\n3d printers\nAccomplishments that we're proud of\nbad puns\nWhat we learned\nBowler studio\nWhat's next for Positive Reinforcement\nmore joints to slap harder.\nmore degrees of slapping freedom\n",
        "hackathon_id": "hack-wpi",
        "winner": false
    },
    {
        "description": "\nInspiration\nI recently applied to colleges and it was a royal hassle having to remember ALL of the spectacular, extraordinary, and cool things I have done in the past 4 years.  I felt that if I had a system to gradually keep track and record everything I have done the process would have been a lot smoother and less time-consuming.  Hence I created My LaVie (My Life) and it....\nWhat it does\nAggregates the college requirements in one clean interface and reminds you weekly or bi-weekly to enter information.  You work a little bit now, to take it easy in the end and avoid frustration :)\nHow I built it\nMy LaVie, is an iOS application that was programing using swift and xCode.\nChallenges I ran into\nBiggest challenge was designing a clean interface.\nAccomplishments that I'm proud of\nMy LaVie was created in rapid iteration, so it was cool to have something that works then slowly add more and more features! \nWhat I learned\nLots and lots of UI features of storyboarding, and stack views!  Also got more experience in animations and creating a product!\nWhat's next for My LaVie\nSearch feature, and control over the frequency of notifications (Settings page)\n",
        "hackathon_id": "hack-wpi",
        "winner": false
    },
    {
        "description": "\nInspiration\nTwo members on our team are currently on the Women's Varsity Rowing team at WPI and there have always been issues and complications creating lineups (who will be in what boat, etc.) and many times some athletes are forgotten due to the large amount of members on the team. One of our team members had a coach in high school who asked for an easier way to build lineups, preferably through technology. Her coach used to use popsicle sticks with magnets to figure out lineups. This application will take less time and it will be easier to determine which athlete is already in a boat, and which ones need to be added to a boat. \nWhat it does\nThis application allows coaches to register their teams and rosters, which eventually allows them to have a detailed user interface of a boat that they can choose (we have three different boats that have 8 seats). They will have oars (starboard and port - the two sides that rowers can be) as well as a microphone that represents the coxswain (there is one coxswain per boat). The coaches can then drag and drop each oar (that has each rowers name on it) onto a boat that is in the middle of the screen. One feature that it has is that it will grey out an oar if it is selected and dragged into a boat. This allows the coach to know which athletes are already selected to be in a boat.   \nHow I built it\nWe used android studio, with java, xml, and photoshop (creating visuals) to build this application.\nChallenges I ran into\nSome challenges we ran into were that none of us were extremely familiar with android studio, so it took more time to resolve errors and it took a while for our github to work.\nAccomplishments that I'm proud of\nWe overcame many different challenges, while every group member had a different strengths and different backgrounds (two CS majors, one MIS major).\nWhat I learned\nHow to build an android application from scratch!\nWhat's next for The Perfect Lineup\nWe would like to eventually make it available for all sports, this would be a great tool for every sports coach to use!\n",
        "hackathon_id": "hack-wpi",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe team aspired to build a dance system which would recognize movements and accordingly create lighting and music. This would encourage the user to dance freely, and not have to worry about following a tune or the lighting patterns. This idea was born from the team's wild dancing spirit.\nWhat it does\n1) Music: Based on Roll, Yaw, and Pitch, the tunes are adjusted for the user. This allows the users expression in the form of dance to create corresponding music. This tool could also be used by music composers to develop melodies.\n2) Lighting: Based on gestures, different lighting patterns (and animations), are developed. This allows the user to change the ambiance and focus to optimize the effect of dance moves.\n3) Vibrations: A system with multiple vibrators is controlled based on gestures, which could allow coordination of dance moves. This can be used beyond the domain of dance, in sports, and other domains of coordination. \nHow we built it\n1) Music: Inputs from Myo Armband were passed to garage band (using midi and lua script) to control instruments through software input.\n2) Lighting: An LED (RGB) strip was controlled using Arduino. The input to this system was gestures from the Myo Armband. The Arduino was used to create patterns and animations in response to gestures.\n3) Vibrations: Vibrators attached to MOSFETS were used to create vibrations whenever gestures were observed from the Arduino.\nChallenges we ran into\n1) Using Midi to input music to GarageBand\n2) Using Myo Armband, which wasn't as stable as expected\n3) Finding a solution to Armband's locking systems. \nAccomplishments that we're proud of\n1) Creating a complete music, dance and lighting systems\n2) Achieving coordination\n3) Using a homemade power supply\nWhat we learned\n1) Lua scripting\n2) Using Windows 8\n3) Operating animations on LED strip\nWhat's next for Dance_your_tune\n1) Visual processing to coordinate dance and make better dance systems\n",
        "hackathon_id": "hack-wpi",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroidsensor-fusion\n",
        "hackathon_id": "hack-wpi",
        "winner": false
    },
    {
        "description": "\nInspiration\nI wanted to make a social networking website that would make life more fun!\nWhat it does\nIt does not do much right now, because it is not finished. You can only register, login, logout, upload a profile picture,write a post, change information about yourself and change password so far. Therefore, the functionality of adding friends and messaging each other does not work, because two days were not enough for that, but I am planning to continue to work on this project.\nHow I built it\nI used HTML and CSS for the Design and PHP for the server-side programming. For the database I used MySQL and phpMyAdmin of the website www.test-demo.com. I needed to use a lot of external sources, because it was my first time using PHP and MySQL. I watched a lot of videos on youtube and read a lot on different php websites to understand how to connect a website and a database. \nChallenges I ran into\nTime. I understand now that it is impossible to make a social networking website in two days, because I have not slept half an hour during the hackathon and I still could not finish it, or maybe it was because I was wasting a lot of time looking for functions of mysql and searching how to use php.\nMy index.php code got deleted 2 times and I had to rewrite it. I was very angry and I wanted to give up so much after 2nd deletion, but I felt bad that I worked so hard and there was only one deletion, so I tried to fix it. It does not function as well as it did before, but it's not bad too.\nThe main challenge was that I had no idea how to use PHP or MySQL and I had to learn it in 2 days and make a social networking website.\nAccomplishments that I'm proud of\nThat I have not slept and I am still awake!\nI made a new website!\nI learned PHP and MySQL!\nWhat I learned\nI can say that I learned a lot during this hackathon as how to plan a project, what kind of database is good for the website, how to encrypt information of the website, how to use php for server side programming, how to connect database to website, how to access information in the database and much more... \nWhat's next for PicChallenge\nI have to continue working on it, so that it has functions of sending messages, sending friend requests and accepting or declining them, uploading pictures for the albums, being able to delete the pictures and posts. \nThe main thing that I have to do and it is why I called it PicChallenge is I have to have a calendar for every user and 100 Challenge. If they want to participate in the challenge, they should start completing one challenge every day and the challenges are going to be something like: Take video of pranking your friends, Take a picture with a stranger on the subway and so on... \nIt would make the social networking website so much fun and after 100 days they would receive a legit video of all the things they did in 100 days so they would have the memories that are captured digitally and maybe someone who has done best in the challenge would receive some kind of gift too after 100 days.\nI have not planned it out yet all, because social network is kind of project that develops and develops all the time. There is no full stop for social network, it never ends and I am just in the beginning.\n",
        "hackathon_id": "hack-wpi",
        "winner": false
    },
    {
        "description": "\nRipple is a social app where posts reach a wider audience based on their popularity. New posts are only visible to users in the local area, but as a post gains upvotes, the area it is exposed to increases. The poster can view a map showing roughly how far their idea has spread. As with many forums, users can accumulate karma showing the net upvotes on all posts and comments they make. The algorithm that determines what posts are visible guarantees that a user will see the 25 most relevant posts to them, no matter where they are. As the app gains more users, it will become more difficult to reach the same area, however the likelihood of reaching the same number of users remains roughly the same.\n",
        "hackathon_id": "hack-wpi",
        "winner": false
    },
    {
        "description": "\nWhat's the main idea?\nTrivia Tour is a location based scavenger hunting app. Some people have compared to a modernized (yet greatly improved) version of geocaching. Users will be able to browse the built in \"package store\" and download their own adventures. Each package will have a set of locations that the user must reach. How the package takes you there, however, is up to its creator. The package could take you and your friends on a sightseeing tour, it could take you and your class on a educational trip, or it could take you and your date on a romantic hide and seek journey through a big city. The package will tell you where to start and then it will guide you from checkpoint to checkpoint. For example, maybe you want to learn about the history of Worcester. Simply download an educational package centered around Worcester and the app will take you on a tour, telling you where to go, then pausing at each predefined landmark to explain what you are looking at. Another example of possible use is during NSO at WPI. WPI would create a free package that would guide you throughout the entire campus, stopping you in front of certain buildings to explain what they are and what their significance is. Lastly, and perhaps my favorite example, Trivia Tour can make for a perfect first date. A package creator can lead a couple on a romantic scavenger hunt date. At each stop they receive a clue so that they must work together and use to find the next stop.\nMore technical parts / about the app:\nSo the obvious question now is: where are all these \"packages\" coming from? Well, the packages can be created by anyone! Anyone can become a developer and design their own unique packages with as many stops, clues, and hints as they like! This feature is actually mostly functioning and can be at tested (very beta, don't judge!) at http://users.wpi.edu/~jtfakult/public/TriviaTour/create_package/. All created packages will be downloaded formatted as a json. The user then only has to upload the file to the server where it will be encrypted, modified and polished until it's sparkly clean and ready to enter the package store. The app itself is already able to connect to the server and download packages. However, the search functionality of the store is not yet completed, so browsing isn't possible. There is still a lot of work to be done, but the more I work, the more gems I find hidden within the idea.\nWhy did I make it?\nTwo reasons. First, I want people to have another fun game that they can play. But unlike many, this game is interactive. It causes them to think, learn, laugh, and even go outside and exercise. Second, I want people to share their cool ideas, pictures, riddles, and maybe their secret romantic side. I want the developers to have just as much fun with the app as the users. I want developers to also be users, and users to also be developers. It can be a truly social, friendly, and fun community.\nAny future plans?\nToo many. One feature I definitely want to add is having picture based clues rather than text based clues. This would allow developers to be more creative, as well as produce simplistic yet entertaining content for users. I also have been toying with the idea of a point system. Pretty simple really: the more puzzles you solve, the more points you get. Maybe some days I could even design my own special event package that people can download and score even more points with. I also want to make the developer interface extremely simple: encourage developers with the ease of work. Also, maybe a better name for the app wouldn't be a bad idea... but I'm not sure yet. It would definitely be awesome if WPI ran with my NSO idea: I personally would have found it very cool to have a resource like that while I was learning the ropes. Then I also had the thought that teachers could use it to take attendance. Not sure how feasible that is though. The list goes on. The app has so many uses I can't explain it in a short bit of writing like this. I'm really excited to see where it could go.\n",
        "hackathon_id": "hack-wpi",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtmljavascriptcss\n",
        "hackathon_id": "hack-wpi",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe textbooks are expansive and college students are broke. Sometimes we ran into a situation where our professors give out homework on textbooks but we don't have them and we cannot get them delivered until the homework is due.\nWhat it does\nIt is a platform for students to post their books for sell or swap and to find the books they need for different courses.\nHow we built it\nWe built the database using parse and we make this iOS app using swift.\nWe also built an interactive website using NodeJS. \nChallenges we ran into\nConstraints across different iPhone devices.\nWhen building our website, data binding is a big problem.\nAccomplishments that we're proud of\nThis app is neat and handy.\nWhat we learned\nWhat's next for BookSwap\n\nAdd an in-app message system for users to communicate. \nUniversal design across all platforms (Android, Windows, etc)\nAuto-feed when the books you requested are available. \nUsers book swap history. \nA recommender system for all kinds of low cost books. \n\n",
        "hackathon_id": "hack-wpi",
        "winner": false
    },
    {
        "description": "\nInspiration\nHave you ever wanted to play in a virtual sandbox using a Kinect with lens flare and Rick Astley? Neither have we.\nWhat it does\nLets you play in a virtual sandbox using a Kinect with lens flare and Rick Astley.\nHow we built it\nLots of framebuffers.\nChallenges we ran into\nLots of framebuffers.\nAccomplishments that we're proud of\nLots of framebuffers.\nWhat we learned\nFedEx doesn't deliver.\nWhat's next for Project Archimedes\nMany tears.\n",
        "hackathon_id": "hack-wpi",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroid-studioazurepaint.netjava\n",
        "hackathon_id": "hack-wpi",
        "winner": false
    },
    {
        "description": "\nInspiration\nNilesh Obama\nWhat it does\ncombines people into horrific amalgamations\nHow I built it\nby sleeping\nChallenges I ran into\nugly faces\nAccomplishments that I'm proud of\nnone\nWhat I learned\nimgur has a significant amount of porn\nWhat's next for face swap\nI have to delete it from my computer\n",
        "hackathon_id": "hack-wpi",
        "winner": false
    },
    {
        "description": "\nBuilt With\nluapythonmyo\n",
        "hackathon_id": "hack-wpi",
        "winner": false
    },
    {
        "description": "\nBuilt With\njythonpythoneclipserequestsbeautiful-soup\n",
        "hackathon_id": "hack-wpi",
        "winner": false
    },
    {
        "description": "\nBuilt With\njsonmeteor.jsreactjsd3.jsmongodbraspberry-pipythongoogle-mapsjava\n",
        "hackathon_id": "hacknroll2016",
        "winner": true
    },
    {
        "description": "\nInspiration\nCUDA\nWhat it does\nParallel computation using WebGL API on browser with graceful javascript fallback\nHow I built it\nUsing javascript, JISON to make a compiler and lots of pain.\nChallenges I ran into\nCompiler was hard.\nAccomplishments that I'm proud of\nActually faster than CPU when workload too huge. Compiler actually works, somewhat.\nWhat I learned\nNot to make a compiler during a hackathon. \nWhat's next for GPU.js\nMore syntax support, maybe higher order functions.\nPLEASE RUN ON CHROME THANKS\n",
        "hackathon_id": "hacknroll2016",
        "winner": true
    },
    {
        "description": "\nit is 2016 and it is odd that we still design 3D objects on 2D interfaces - pen and paper, laptop screens etc. We think that users will be better designers and creators if they could intuitively do so i.e. draw 3D objects in 3D space.\nWe built daiso Kinect for this. The entire structure (save for the sensors which we borrowed for the event) cost less than S$20. Unlike the Kinect which is expensive and uses a high powered camera, we ditched the camera and used ultrasonic sensing and good ol' math to interpret 3D motion into a visualization.\nThe current prototype can do a few things - draw wire frames (like the real life 3D doodler pen), extrude on existing paths, and view drawn designs in VR. All the mechanisms were executed using a fantastic contraption made of cupcake covers, yarn, curtain hooks and dustpans.\n",
        "hackathon_id": "hacknroll2016",
        "winner": true
    },
    {
        "description": "\nInspiration\nHigh cost of blood-sugar tests, combined with the incredible importance of monitoring as part of managing diabetes means that low-income-individuals are unable to manage the disease. Over 80% of diabetics live in low-income cities, and there are over 75 million urban slum dwellers suffering from the disease (without the ability to buy the monitoring tools required).\nWhat it does\nMatchstick offers several main benefits to users:\n\nautomated monitoring and SMS subscription, where users input the results of their tests directly in through SMS, and a system searches the inputs for long-term trends.\npersonalized tips & tricks based on consumers' current diabetes progression timeline\npreventing emergencies with consistent communication and fast-response\nreporting to doctor remotely\n\nWhy it's amazing\nMatchstick offers several amazing advantages:\n\nIt's cheaper (2% of the cost of blood-glucose monitoring, while between 80-95% as accurate)\nFaster and private, saving long and expensive trips to the hospital / doctor for regular readings\nIt's pain-free, removing one of the biggest barriers for monitoring\nRemoves the risk of blood-borne diseases, since no finger-pricks are required\nProvides hyper-tailored monitoring and feedback to those who would otherwise not be able to access it.\n\nHow it fits what you're looking for\nCreativity:\n\nUsing SMS instead of smartphone app to tailor usage toward those who would not otherwise have access to monitoring solutions\nUsing urinalysis instead of blood and combining with remote logging, which has never been done before\nCombining data from all users to increase accuracy over time\n\nTechnical accomplishment:\n\nVariety of APIs and tools user: Geocoder, Twilio, Google Maps, Dictionary.com\nCode: HTML+CSS, Ruby on Rails, Javascript, PostgreSQL, XML+XPATH\nAdvanced multi-regression analysis to allow software to \"learn\"\nNatural language processing, both custom and with libraries\n\nPolish:\n\nExtremely error-proofed and theoretically crash-prone\nIndividualized & personalized to every user\n\nUsefulness:\n\nOutlined above: cheaper, faster, pain-free, accessible, no blood-borne disease risk, hyper-personalized\n\nHow I built it\nUsing Ruby on Rails and a PostgreSQL database to store the users. Twilio API is used to interface with SMS numbers, and Dictionary.com, Google Maps, and Geocoder are used to locate hospitals + provide definitions. Custom multiple-regression algorithms were built to help improve the accuracy of the monitoring solution over time. Custom fuzzy-match was created for blood glucose level inputs.\nChallenges I ran into\n\nTying PostgreSQL database into easy-to-code frontend website\n\nAccomplishments that I'm proud of\n\nCreating my own code to parse through XML in Ruby and extract the needed information from HTTP requests\nDeveloping algorithms that can correct for the limited accuracy of urine test-strips versus blood-testing, allowing for close to 95% correlation between the two methods of testing.\nBuilding custom fuzzy-match codes for medical- and diabetes-specific user inputs\n\nWhat I learned\nWhile creating Matchstick, I learned:\n\nRuby on Rails is an extremely flexible language, with gems for almost everything\nFuzzy-matching algorithms are blessed for helping make software more error-proof\n\nWhat's next for Matchstick\nGiven more time, Matchstick will:\n\nintegrate Uber / Lyft ASAP in case of emergency\norder test-strips directly through SMS\nprintable summary reports on customized time basis\n\n",
        "hackathon_id": "hacknroll2016",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe realised that many people were buying CCTV cameras for their homes recently due to the spike in terrorism fear and increase in crime rates. However, due to the high price of commercial CCTV cameras costing upwards of 250 dollars, many household can only afford one camera which is barely enough to cover a single room in a normal flat. Therefore, we decided to create a system which is low cost and ensures that a single camera can be used for surveillance throughout the entire house. And this of course led to us being inspired to build phobe.\nWhat it does\nPhobe basically uses the Roomba system and IR sensors to navigate around the house. This allows for a camera to roam around the house autonomously detecting unknown obstacles or people. It combines this aspect of hardware with a Web UI to create a simple user interface for the user to access anywhere in the world. It also allows the user to take over manual control of the drone and drive it to wherever the person desires.\nHow we built it\nWe built Phobe from a ZumoBot platform which we modified to include a raspberry pi as a primary processor. We also attached a camera to the raspberry pi and this allows Phobe to act as a IOT device.\nSoftware -wise, we streamed mjpg video using . The bot also acts as a web server through the node.js running on the Raspberry Pi, serving a simple control page featuring the status of the bot, the video stream and an option to override the autonomous pathing in favour of manual control.\nChallenges we ran into\nMost of the problems we ran into were those of the technical variety, such as the initial problems of an unreliable wifi and one of our motors burning out in the middle of the night, causing a mad rush to attain spares. \nAccomplishments that we're proud of\nWe achieved autonomous navigation and managed to get a video stream with relatively low latency up.\nWhat we learned\nIt is inefficient to just have a general idea of what to do and fill things along the way when working as a team, since all too often team members are left without anything to do while others rush to complete the \"major\" features. \nWhat's next for Phobe\nWe are going to implement a lot of features that were planned but ultimately unfulfilled due to time constraints, for example switching to a central server based system which multiple bots interface with. \n",
        "hackathon_id": "hacknroll2016",
        "winner": true
    },
    {
        "description": "\nInspiration\nAs Singapore is a multi-racial country with many different people of different races and religion are living in Singapore, all of us will have our different dietary needs. If we were to prepare certain food for our guests, we need to know what they prefer or what they cannot eat. Some of us are vegetarian, while some of us prefer local food. Thus we create this application to allow people to know whether the food that they are cooking will be suitable for their guests. Also, it allows people to interconnect by knowing the different type of food available around the world, with people enjoying the food cooked suited to their preferences.\nWhat it does\nUsers are able to view and create recipe that will be approved by the admin first. Users that are able to view the different recipe will have a choice to choose their own filter (e.g Halal, Vegetarian, Local) to sort out the recipe accordingly to this filters. After which, they are able to follow a step-by-step guideline to help them in cooking properly with the right ingredients and ensure that the taste will be right.\nHow we built it\nWe use Eclipse to create a web-prototype to show how the app will look like. The languages used are briefly javascript, css, php and html. We also use it with the database such as phpmyadmin and mysqli. The photos are edited with Adobe Photoshop.\nChallenges we ran into\nWe didn't have much experience in building a webpage and we had a lot of difficulties such as properly aligning the elements together or having the elements display as we wanted too. We also had trouble understanding the javascript codes as we do not have much experience with the different languages. Despite of the lack in experience, our team persevered.\nAccomplishments that we're proud of\nWe are not that experienced with our tools as this tools are briefly learn in our school. We are really proud that we could create this webpage within a short time and learn a lot of new skills.\nWhat we learned\nWe learned how to photoshop, how to tint the images to a dark color. We also managed to learn how to incorporate with different elements together to make the website work with the database.\nWhat's next for Let'sCook\nWe are planning to incorporate more social elements into the website such as ratings, commenting, 'liking'. We aim to make Let'sCook into a community-based website. Furthermore, we wish to sell this website to supermarket chains that have home delivery services. Specifically, users will be able to directly place their orders to supermarket chains to conveniently purchases the ingredients of the particular recipe from the chosen supermarket. In other words, we hope to create a B2C platform. \n",
        "hackathon_id": "hacknroll2016",
        "winner": true
    },
    {
        "description": "\nInspiration\nChildren are not motivated to throw their own litter away.\nFinding a more efficient way of knowing the rubbish level in the bin.\nWhat it does\nWhenever, someone steps on the foot pedal  to open the dustbin, the lights on the led will start to blink to the tune which will be played by a buzzer. This is to encourage children to throw their litter into the bins. At the same time, the amount of trash in the bin will be automatically detected and printed it out on a lcd display in terms of low, medium and high.\nHow we built it\nThe sensor we use is a ultrasonic sensor which will help detect the amount of trash that is left in the bin. The ultrasonic sensor emits sounds wave which will travel and bounces back when it hits an object/wall. The timing of the sound wave traveled through and from will determine the distance between the sensor and the object/wall. If the distance is getting lower and lower it will determine that the trash in the bin is almost full, while if the distance is still high, it will determine that the trash in the bin is still empty or low in trash. \nAnother sensor we use is a touch sensor, which will act as a trigger, such that when the touch sensor is being touch it will automatically trigger a buzzer which will buzz to the tune of the star wars imperial march and the led lights will blink to the beat of the tune. which will be entertaining and attractive to the children when they throw their rubbish into the bin. \nChallenges we ran into\nThe coding of the tune for the buzzer cannot be easily found, we have to go through a series of try and errors when coding the function as we have to calibrate the beat of the tune into coding terms.  \nAccomplishments that we're proud of\nWe end up being able to tune the buzzer to buzz a short verse of the theme song from star wars named the imperial march.\nWhat we learned\nWe learn to calibrate and modify the code for the buzzer for it to play a tune as accurately as possible to the imperial march theme.  \nWhat's next for annoyingly smart dustbin\nSending the data of the capacity in which the rate of rubbish generated to the cloud.\nThe data generated from the ultrasonic sensor in the bin can be use to notify the cleaners of any surrounding bins that are nearly full.\n",
        "hackathon_id": "hacknroll2016",
        "winner": true
    },
    {
        "description": "\nSocial media has always been a place where people upload images of stray pets/animals hoping to get these poor animals back to their respective owners. Our intentions of having such an application is to consolidate these social efforts into a common place where responsible organizations such as SPCA can take charge of these stray animals/pets.\nThe application also aims to help find matches between lost claims posted by pet owners and kind strangers who happened to spot these animals near their vicinity. This project starts off focused on finding lost and stray animals but it  can also extended to other lost claims such as finding lost relatives in the case of dementia .etc. \n",
        "hackathon_id": "hacknroll2016",
        "winner": true
    },
    {
        "description": "\nWebsite\nhttp://annoying-davidten.rhcloud.com \nInspiration\nThe inspiration behind our annoying hack was the growing exclamations from our friends that they got hacked. After numerous complains and cries for help, we decided to finally exact some revenge on them, and have them feel as though they really got hacked. \nWhat it does\nOur chrome extension replaces the videos that are loaded in the browser with a random trolling video. To make things even more annoying, videos are randomly replaced instead of being replaced all the time. [Just think of that feeling you get when you have a bug in your code that only shows up occasionally and you are not able to replicate it].\nWatch in glee as your friend tears his hair out thinking that he has a virus on his computer! Annoyance guaranteed! \nHow we built it\nWe built the chrome extension using javascript, and the website on wordpress.\nChallenges we ran into\nEveryone working on the same github file -> Conflict when merging\nDifficulty when there is more than 1 video on a page\nDifficulty in getting script to execute on youtube when changing from one video to the next.\nAccomplishments that we're proud of\nBuilding a chrome extension with zero background knowledge\nWhat we learned\nWe learnt to persevere through the challenges we ran into, and improving our stack overflow skills\nWhat's next for Never Gonna Give You Up\nNever gonna let you down.\n-\n-\nOn a more serious note, we plan to build an extension for Firefox and further improve and add functionalities to the Chrome extension. A custom domain will be made specially for the website, and YES, it will be kept us so you can use this extremely annoying prank on your lesser learned friends!\n",
        "hackathon_id": "hacknroll2016",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe were inspired by futuristic films in which certain personalities would walk freely while being automatically tracked and live-streamed to the rest of the world by flying machines. \nWhat it does\nWe managed to establish intuitive control of the quadracopter with the help of the leap-motion. We also used a raspberry pi to broadcast a live video feed. \nHow we built it\nWe started with the idea of a project involving a drone and let the idea grow to involve not only control, but also image processing and live-feed broadcasting.\nChallenges we ran into\nThe AR Parrot was running on a firmware which was incidentally highly incompatible with most of the major APIs. We were confident that we would be able to get a real-time video stream from the drone's camera, but requesting the data caused the firmware to become unstable and crash. We therefore had to resort to alternate video sources and that's where we included the raspberry-pi.\nAccomplishments that we're proud of\nSuccessfully setting up a web server with the raspberry-pi, establishing comfortable drone control through the leap motion and still-image face recognition and tracking.\nWhat we learned\nHow to control a parrot drone trough alternate means, how to use the leap motion, how to broadcast live video from a raspberry-pi and setting up an HTTP server in NodeJS, as well as performing various experiments with google carboard and the occulus rift.\nWhat's next for Flying Cameraman\nWe'd love to analyze and work much more in-depth with the API to establish full communication with the parrot drone and its peripherals. Once this is done, we could use the face recognition as input to a basic tracking AI that would follow a subject around in a 3D environment.\nMore info :D\nhttps://onedrive.live.com/?cid=008ed02514e5e0d7&id=8ED02514E5E0D7%2140483&ref=button&Bsrc=Share&Bpub=SDX.SkyDrive&authkey=!AoEmIYsigKUeHnM\n",
        "hackathon_id": "hacknroll2016",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascriptjquerysasszurb-foundationgrunt.jshtml5\n",
        "hackathon_id": "hacknroll2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\narduinoraspberry-pic\n",
        "hackathon_id": "hacknroll2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\narduinocraspberry-pibuzzerledusbcomputer\n",
        "hackathon_id": "hacknroll2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nWhile dot printers are everywhere, pictures cannot be painted.\nOur hack allows us to paint virtual images - artistically, on the fly.\nWhat it does\nPaints images, through a Lego and Arudino 3D printer\nHow I built it\nUsing Lego, rapid iterations, trial and error and a bit of engineering knowledge.\nChallenges I ran into\nControl systems, controlling the movement / precise location of the painter head.\nAccomplishments that I'm proud of\nWe created one during the hack, and got it to work!\nWhat I learned\nWhat's next for Painter\n",
        "hackathon_id": "hacknroll2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nBusy business individuals working in MNCs often face the problem of planning a suitable meeting across different timezones. Friends and family members often find it hard to efficiently arrange a common time to Skype across continents. We offer a fast and effective solution which can scaled to include more functionalities.\nWhat it does\nIt allows individuals to input their preferred time slot for a day in their own timezones. Our state-of-the-art algorithm will then compute the best time to meet for all participants of event.\nHow I built it\nWe built it using php, html, javascript, css for the front-end and MySQL for the back-end.\nChallenges I ran into\nUnable to get local server up for php debugging\nAccomplishments that I'm proud of\nGetting back-end ready. Coming up with slider with javascript \nWhat I learned\nTenacity \nWhat's next for Later, k.\nScalable future functionalities. For example, auto-sync to GoogleCalendar, integrated Skype, different timings for each day. \n",
        "hackathon_id": "hacknroll2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonnode.jsexpress.jsjquery\n",
        "hackathon_id": "hacknroll2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtml5css3lodash\n",
        "hackathon_id": "hacknroll2016",
        "winner": false
    },
    {
        "description": "\nRound 2\nEvery year, supermarkets and stores alike throw out tons of expired food which they were unable to sell out. Last year, Tesco, Britain\u2019s biggest retailer revealed it wasted an incredible over 30,000 tons of food in the first six months of 2012 alone. \nFood sold in supermarkets have a definite shelf life, and most consumers pick out those that have the longest time to expiry date while doing their shopping. In other words, food that are getting closer to their expiry dates have a decreasing probability of being sold - and this fuels wastage. \nRound 2 aims to provide store owners with a platform to put their expiring goods on sale. By reducing the prices of such goods when they get closer to their expiry dates, consumers will be enticed to make a purchase, leading to a win-win situation for both sellers and consumers. This can then help with the food wastage problem that stores face.\n",
        "hackathon_id": "hacknroll2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe always found it a bit troublesome to share files. You upload it to the cloud, you get a URL, you get the email address of your friend or find his Facebook, you message him. That's a hell lot of friction for something so simple.\nWhat we built is a tool for nearby file sharing through audio. You drag and drop a file you want to upload, and all nearby computers get prompted to download it. While developing this, we even started using our MVP to share assets between each other, accelerating our development workflow and proving how effective of a tool this can be. \nWhat it does\nIt provides a convenient platform for users to send files to nearby computers AND mobile devices through playing a series of tones. The nearby devices receiving the tones will automatically initiate file download.\nHow we built\nIt is using a web application and using Javascript to control the broadcast and receive different frequencies. The uploader will upload the file to our python Flask server which will respond with an address to retrieve the file. Then the uploading device will broadcast the address in form of sound waves that will be picked up by nearby receiving devices and will initiate file transfer.\nChallenges we ran into\nWe mostly ran into problems related to the amount of noise our sound wave experience as well as the limitations commercial hardware and compatibility. Our frequency analyser is very sensitive to noises and can easily be disturbed by other sounds. Furthermore, commercial microphones are designed to broadcast and pickup frequency ranges around 2000-3000 Hz, and cannot accurately determine higher frequency ranges.\nAccomplishments\nWe're proud of being able to work together and overcome many of the challenges described above. The project was more difficult than we had anticipated. We used heuristics to filter out noises and use statistical methods to increase the probability of picking up the right signals. Because of the high chance of incorrect information transfer, we minimized the amount of sound waves sent. There are a lot of things to improve upon and Howl is far from perfect, but we believe we did create a product that facilitates the transfer of files between devices or group of people.\nWhat we learned\nWe learned (about \u00bc way into the hackathon) that Google has attempted a similar project involving Google plugin for transferring urls between different chrome browsers through sound wave. At the point we were just starting to realize the difficulty associated with receiving sound waves accurately in a noisy environment. Our early attempts at transferring sound waves were disastrous. However, from this process, we learned a lot about the technical aspects of transmitting information through sound waves, and experienced first-hand just how the same pitch can sound different from just 2 feet away.\nWhat's next for Howl\nWe want to give users the ability to share not only files, but URL's as well. We also plan on building a Chrome Extension, allowing the functionality to be independent of a website and can upload from any web page.\n",
        "hackathon_id": "hacknroll2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nCoding is hard to learn. A lot of programs have been developed to teach coding in a fun way. SingScript is targeted at Singaporeans who want to learn the fundamentals of coding through a language they are already familiar with - Singlish!\nWhat it does\nCode in Singlish on the left and immediately see the output on the right.\nHow we built it\nBuilt on Python and inspired by LISP. Web Framework using Flask.\n",
        "hackathon_id": "hacknroll2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe thought that since people liked to take vintage photographs using a Polaroid, maybe they'd like to go back to the 90s and listen to jukebox music.\nWhat it does\nConnect the tiny jukebox to your computer and load the app. Switch the soundtrack by inserting the cassette into a different slot. \n\ngreat novelty for parties, party music, esp. due to aesthetic quality :)\nquirky desktop gadget\nreally cute!\n\nHow I built it\nUsing just a photoresistor, arduino and a box, and lots of WASHI tape :) We simply calibrated each slot to a different song by blocking out a certain amount of light. \nWhat's next for Jukebox\nMore songs and possibly remixes by inserting different cassettes! As well as a feature for users to upload their own songs and create their own playlists using different transparency casettes!\nxx\n",
        "hackathon_id": "hacknroll2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nUber seemed to have made a significant breakthrough in developing the nascent sharing economy into a viable industry \nof modern capitalist markets. Yet one only needs to inspect the treatment of Uber drivers to understand they are merely \"treated a little better than slaves.\".\nThis is clearly not how the sharing economy should be - subjugated and potentially monopolized by a single corporate entity. Hence we have sought a solution, and fortunately, found a promising one; combining Ethereum with ride-sharing. Ethereum, the decentralized platform for running application, makes use of the blockchain to decentralize the economy of sharing rides yet still providing a similar regulation and control that a centralized authority provides.\nHow we built it\nTech stack:\n\nFlask (for web-client server)\nNode.js (for Ethereum server)\n\nWhat we learned\nBy virtue of being young, Ethereum has a lot of potential to influence our lives in the coming years.\n",
        "hackathon_id": "hacknroll2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtml5python\n",
        "hackathon_id": "hacknroll2016",
        "winner": false
    },
    {
        "description": "\n[Submission for SwampHacks 2016]\n\nInspiration\nWe came across the idea of Iris while exploring the unique ability of the Clarifai API to analyze images and parse them for descriptive tags. We broke Clarifai down into an equation: Picture + Clarifai = Tags. So why not flip that equation on its head and use tags to \"create\" a picture? Through the use of descriptive tags, Iris aurally illustrates a scene in the minds of the blind. After all, a picture is worth a thousand words.\nWe also wanted to challenge ourselves to create an app that could be easily used by the visually impaired. By simply opening the app and sliding your device into your breast pocket with the camera peeking out, you're ready to go. Controls are simple with the Myo wristband, which enables the blind to interact with our app in a meaningful way.\nIris is a novel marriage of software and hardware, and we're excited for you to give it a try!\nWhat it does\nIris is an application built to help those who can\u2019t see, experience vision in a new way. With a simple gesture, Iris captures an image and gathers data about the image. Then, this information is spoken directly to the user, without any physical interaction with the device.\nHow we built it\nIris peeks out of the user\u2019s breast pocket, waiting until needed. Using the Myo armband, the user makes a fist to capture an image through Iris. The image is saved on the device and analyzed using the Clarifai API asynchronously. When the API returns information about the image, Android\u2019s text to speech functionality is used to read the attributes of the image to the user.\nChallenges we ran into\nMost of the challenges we faced were because of the many asynchronous threads required to make Iris function. The camera, Clarifai API, text to speech, and loading screen all run separate threads, making it extremely difficult to implement them all at once. When working with the camera, we had to get around using the built in camera software by using Android\u2019s hardware camera. The issue with this is that it is asynchronous, and we also have to handle raw image data, using byte streams and byte arrays. Our other significant issue was that the Myo armband became very unreliable at times, forcing us to recalibrate it before each use.\nAccomplishments that we're proud of\nOur team is fairly new to asynchronous programming, and working on separate threads, so this entire project was a great challenge. We worked on having the calls to APIs asynchronously, as the APIs\u2019 documentation suggested, however with only 6 hours left, we had an application that broke every time the async tasks finished in the wrong order. However, after a significant amount of refactoring, we were able to organize the application in a more efficient manner, making it fully functional and capable of helping those who need it. \nWhat we learned\nWe really learned a great deal about the less common sides of Android development. File manipulation, camera usage, and asynchronous task management, were among these aspects. As CS majors we usually do not dabble on the hardware side of things, so working with the armband was also a big learning experience for us.\n",
        "hackathon_id": "swamphacks2016",
        "winner": true
    },
    {
        "description": "\nBuilt With\nnode.jsexpress.jsmongodbtwiliopythonopencvmarketplace\n",
        "hackathon_id": "swamphacks2016",
        "winner": true
    },
    {
        "description": "\nThe StudyNote.JS web application is designed for those with a lot to read, and not enough time to read it. The algorithms in our solution provide an easy way to convert large chunks of boring and long text into quick and easy to read bullet points. \nThrough careful processing of each word, and the use of machine learning via the DatumBox API, we are able to select just the right balance of content and brevity to deliver a highly portable PDF document right in your web browser. The DatumBox API is accessed through a Python-dependent backend, which is able to be leveraged by Amazon AWS cloud severs. A variety of formatting options are available to make your study experience comfortable for any eyes. \nOn those long nights of research, an easy-to-use extension to the Google Chrome web browser allows users to condense pieces of articles into slick statements that are easy to discern and categorize with a quick glance. The aforementioned API from DatumBox helps to lift that burden too by assessing the complexity of the processed text and assigning one of 16 topics to the bulleted content.\n",
        "hackathon_id": "swamphacks2016",
        "winner": true
    },
    {
        "description": "\nBuilt With\nandroidnode.jsclarifai\n",
        "hackathon_id": "swamphacks2016",
        "winner": true
    },
    {
        "description": "\nBuilt With\ngohtmljavascriptcssamazon-web-servicesdomain.com\n",
        "hackathon_id": "swamphacks2016",
        "winner": true
    },
    {
        "description": "\nBuilt With\nnode.jsandroid-studioandroid-wearexpress.jsmongodbmongoosetwiliojavajavascript\n",
        "hackathon_id": "swamphacks2016",
        "winner": true
    },
    {
        "description": "\nInspiration\nAfter years of accumulating old textbooks, we decided enough was enough. We knew that there was a better textbook buying/selling experience out there and we wanted to create it.\nWhat it does\nOGBooks allows sellers to painlessly post their books in our Facebook group to sell to users of our iOS application. Sellers can even just post a photo of their book and a price tag, and our book-finding algorithm will do the rest!\nBuyers simply sign in to our iOS app and search for the books they want, based on things such as their current courses, the book's title, etc.\nHow we built it\nTo start, we built a back-end Facebook scraper using Facebook's Graph API, Node.js, and mysql. This scraper intelligently reads new information from the Facebook group and after parsing it, decides whether or not to fill in the book's remaining information with a computer vision search. After we gather all of the book's metadata, we then store it on our database, and expose our data through an easy to use API, which our front-end application makes use of.\nOur front-end calls our API's routes in order to populate itself (the iOS app) with new book information, for the buyers to utilize. This piece of our application makes use of Swift and XCode.\nChallenges we ran into\nWe ran into a lot of challenges, but enjoyed solving each and every one of them. The first challenge we ran into was figuring out how to expose Facebook's Graph API for easy use, and eventually was able to get all of the information from our group page's feed that we needed. \nThe next challenge we ran into was figuring out how to fill in empty book information, that would be a hassle for the user to enter, such as an ISBN number. To solve this, we developed an algorithm that uses Cloud Sight and Google Books to fill in this information.\nAccomplishments that we're proud of\nWe are extremely proud of being able to gather almost all of a textbook's data with only a photo of its cover.\nWhat we learned\nWe learned A LOT about Javascript server-side programming in Node.js, and ECMAScript 6 syntax, such as Promises.\nThe front-end team learned that there are many benefits of programmatically generating iOS views and though it takes a lot of time and care, once you get good at it it makes your workflow much more enjoyable.\nWhat's next for OG Gator Books\nNext we are going to clean up our code-base and make our application even easier to use for the user. We will do this by requiring even less information from the seller and intelligently filling it out to the best we possibly can. Additionally, we are going to implement an image verification system that can decide whether or not a user is submitting an image of a book, and if not, it would report an error and remove the post.\n",
        "hackathon_id": "swamphacks2016",
        "winner": true
    },
    {
        "description": "\nLabyrinth\nCreated at: SwampHacks 2016\nCreated by: Prithviraj Ammanabrolu, Matthew Chan, Jesse Huang, Shen(Caden) Jiang, Deb Banerji\nDescription\nLabyrinth is a multiplayer survival game developed with Unity for Microsoft Windows, OS X, Linux and mobile devices (in the near future). In the game, players control either a monster  or a human who attempts to survive for 90 seconds.\nGame Rules\nMonsters must catch all the humans in the game before the time limit is over and have a special power specific to the monster. Humans must avoid being caught until time is up. Game supports a maximum of 3 players.\nGame Modes\nThe game can be played in two different modes - Minotaur and Alien, selected at the main screen. The defining feature in each mode is the monster character. The minotaur is able to dash while the alien is able to shoot a projectile that acts like a tractor beam.\nDevelopment\nThe game was developed using Unity 5.3.1.\nThe game's first public showcase was on January 24, 2016.\nJudging Categories\nWe are applying for overall First, Second, Third Place prizes as well as Organizer's Choice. We are also hoping to be considered for State Farm's Favorite Hack\n",
        "hackathon_id": "swamphacks2016",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavaclarifai\n",
        "hackathon_id": "swamphacks2016",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe wanted to use the Clarifai API to do something very different that could give insights into your life in a way you wouldn't think would be realistic.\nWhat it does\nInstaType asks you to log into your Instagram account, then analysis your images, videos, and posts with the Clarifai API and various word classification APIs. Using the data discovered, it will determine your Myers-Briggs personality type and give you an overview of the previous year through social media's eyes.\nHow we built it\nThe server is built in Node.js to interface with various APIs. The frontend is built in vanilla HTML/CSS/JS and jQuery.\nChallenges we ran into\nOriginally, we wanted to create a card counting AI that could detect the a playing card, keep track of the score, and then decide if it wanted to hit or stay. However, Clarifai couldn't detect cards, symbols, or numbers, and its training API was down for the majority of the event. So we decided to pivot and see what ideas we could come up with using only Clarifai's tags.\nAccomplishments that we're proud of\nWe tried hard on our first project idea, failed, then learned from our mistakes and tried even harder for this new idea. Ultimately, we met our goal of attempting to predict your Myers-Briggs type. One of the dev's type (obtained from the extensive personality test) was (see screenshots). These user's actual result will likely always be ESFP because of pressure to conform to social media and make yourself seem exciting. We've been running user tests for several hours before the end of the hackathon deadline and are noting observations when people comment that their actual Myers-Briggs and how they realize that their online personalities actually differ from their IRL personas.\n\n\nWhat we learned\nWe learned what is and isn't possible with image recognition AI and how to quickly shake off from past failures and pivot into new ideas based on what we learned.\nWhat's next for InstaType\nBigger and better analysis! New social media platforms! The possibilities are endless!\n",
        "hackathon_id": "swamphacks2016",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascripthtml5css3clarifaijqueryprocessing\n",
        "hackathon_id": "swamphacks2016",
        "winner": true
    },
    {
        "description": "\nBuilt With\npythonjavascripthtml5bootstrapcssbeautiful-soup\n",
        "hackathon_id": "swamphacks2016",
        "winner": true
    },
    {
        "description": "\nBuilt With\nmongodbasynciod3.jsdevpost\n",
        "hackathon_id": "swamphacks2016",
        "winner": true
    },
    {
        "description": "\nBuilt With\nhtmljavascriptbootstrap\n",
        "hackathon_id": "swamphacks2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\nautohotkey\n",
        "hackathon_id": "swamphacks2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nLets everyone find their favorite products nearby. Why to look for them thousands of miles away when they might be very close!\nWhat it does\nUsing Geolocation it connects each potential buyer to seller within a certain radius. By default the radius only is limited to the city one is located in. \nBuyonear shows you what you want !! It allows searches by uploading a picture or typing a tag that identifies your product.\nIf the search is done by a picture, it will use artificial intelligence to recognize what's inside the picture and show related results !\nHow we built it\nPHP, Android Studio, Digital Ocean, Parse, Machine learning, Java, MySQL, Clarifai.\nChallenges we ran into\nWe ran into technical challenges with SSH and AWS, but that didn't stop us!  as our greatest shark friend, DigitalOcean VPS gave us the opportunity to continue regardless of the time lost.\nOur Android Studios were victim of Murphy and its law! \nAccomplishments that we're proud of\n\nEfficient tag queries thanks to Parse. \nFacebook Login integration with Android. \nClarifai PHP library development for censoring potential pornographic images uploaded by buyers/sellers\nDigitalOcean is beautiful!\n\nWhat we learned\nMachine Learning is not as beautiful as when its used!\n",
        "hackathon_id": "swamphacks2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\njava\n",
        "hackathon_id": "swamphacks2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptjavahtml\n",
        "hackathon_id": "swamphacks2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\nphphtmlcsswordpress\n",
        "hackathon_id": "swamphacks2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nI always had an affinity with privacy and a completely server-less communication architecture. I had no other idea for this Hackathon and therefore, I proceeded to jump into the fray with this hack.\nWhat it does\nUploads files over WebRTC on a Peer-to-peer communication architecture to share with another user over the internet.\nHow I built it\nUsing Electron, NodeJS, ES6/Object Observers and so forth.\nChallenges I ran into\nI have never done anything with WebRTC, nor to the level that I dipped with in streaming files on a completely server-less way (using magnet links/torrents).\nAccomplishments that I'm proud of\nLearning Electron's API (and its benefits over node-webkit), working with multiple processes (render vs main process).\nWhat I learned\nWhat's next for CryptChat\nPolishing the user interface and actually adding the encrypted and peer-less chatting component.\n",
        "hackathon_id": "swamphacks2016",
        "winner": false
    },
    {
        "description": "\nNotica\nSwampHacks Project\nA fun and easy way to familiarize yourself with basic notes on a musical staff. You can also develop a sense of pitch by listening to the pitches of the notes as you play. \n",
        "hackathon_id": "swamphacks2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\ntypescripthtmlphaser.js\n",
        "hackathon_id": "swamphacks2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\nswift\n",
        "hackathon_id": "swamphacks2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaandroid-studiogoogle-mapsclarifai\n",
        "hackathon_id": "swamphacks2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptangular.jsfirebasehtmlcss\n",
        "hackathon_id": "winfohackathon2016",
        "winner": false
    },
    {
        "description": "\nInspiration:\nThe inspiration we had for this web application is that we wanted to provide youth, people on the move, or all persons whom are dissuaded from reading large articles of text. Large text are essentially, but they aren't 'sexy' in the way that they are not appealing.\nWhat it does:\nArticle prompts for a user input of a web url. Our website will take that url, extract the text from that url, and then summarize it for users to see while also printing out the original text.\nHow we built it:\nWe used technologies including HTML5/CSS3, Vanilla JavaScript, angular.js, Algorithmia API, and DIFFBOT API in order to build a web application that parses news articles and output the original text and summary.\nChallenges we ran into:\nAPI Integration into our application was initially difficult. In addition, two of our team members were completely new to web programming, so the entire hackathon was a learning process for them.\nAccomplishments that we're proud of:\nWe ended up with a completed project that we can share with our friends, family, and the world.\nWhat we learned:\nWe learned that... perseverance is (major) key. No matter what technical background you have, you can create something beautiful.\nWhat's next for Articulate:\nKeep on the lookout for sentiment analysis + emoji integration! Mobile version will be released shortly.\nNote: video not 100% up-to-date. Please check out the link below!\n",
        "hackathon_id": "winfohackathon2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nI realized that we have social media sites such as Facebook, Instagram, and Twitter however we really don't have social media that captures the spontaneous moments during your day. Whether it is a dance off, a pickup basketball game, a party on Greek Row, or a hackathon like this, people may want bigger turnouts for events like those however some people may not be aware of the events that are taking place around them. Likewise, people who host events may not know who is interested in their events. Not only can this application help fix this disconnect, it is also a form of social media that encourages real life interaction. \nWhat it does\nThis is an Android application that helps students connect with the events that are going on around them. The main interfaces are the map and the live feed of posts. On the map, students can walk anywhere on campus and look at a map which has pins that correspond to different events. Examples of events are pickup games, parties, study sessions, etc. Users can then click the pin and click 'yes' to show that they are interested in going to the event. On the live feed of posts, users can see the details of the event and also show that they are interested. Once they are at the event, they can also post pictures, videos and descriptions of the event for other users to see. This is great especially for events like parties on Thursday nights, if people want to see which parties are lively and seem like fun. The application also allows users to send private messages to other users and add profile pictures. There is also a score feature based on how many posts a user makes.\nHow I built it\nI built the application using Eclipse for Android applications. I used the Google Maps API for the map. I ran the application on a Samsung Galaxy S. Data was stored in Microsoft Azure and Parse. \nChallenges I ran into\nSome challenges I ran into were that there was a lot of code so there were a lot of debugging issues. Also, there were some data storage issues as a lot of data is being saved and retrieved from online hosting. \nAccomplishments that I'm proud of\nI am proud that I was able to finish the application, and I think that it is something that I can try to bring to the University of Washington. It took a lot of work to finish so I am proud that I was able to stick with it. \nWhat I learned\nI learned that programming is both fun and stressful at the same time. However, just like anything else, it is important to just stick with what you are trying to do, and you will be able to finish what you set out to do. \nWhat's next for Kronakon\nI will try to improve on this application and try to get it to the level of a Facebook or Instagram application, in terms of design and capabilities.Once I get the application finalized and compatible for Android, Windows, and Apple devices, I will try to target a specific community for this application, and that community is Greek Row. I just signed Zeta Beta Tau last quarter and I think this is the best place to start because many events take place in this area. Once I can get a solid group of users, I am hoping to get the application to all parts of campus. There are so many ways to expand on the user group for the application; for example, restaurant owners who want people to know that they are having their weekly special for a discounted price, could post their event on the app. People in the library who want to have bigger study groups can post on the application. Stores who are having discounts on their merchandise can even post on the app. All in all, there are high hopes for the future of Kronakon and hopefully reality will meet expectation!\n",
        "hackathon_id": "winfohackathon2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe idea is to create a fun rating system using Algorithmia's APIs: Sentiment Analysis, Summarizer and Sentence Detection.\nWhat it does\nIt collects data from My Anime List (MAL) website, creates a database of animes and generate rating for each anime. I also want it to suggest new animes based on user's anime list.\nHow I built it\nThe rating system will be done using Sentiment Analysis on the overview of the anime collected by the Summarizer and Sentence Detection algorithms.\nChallenges I ran into\nThe overview xml site of each anime was encrypted so I had to run the 'curl' command from Java to get the file. Also, Java API for Algorithmia has a lot of problems relating to required libraries like Apache HTTP Nio or Apache HTTP. Because of that, I have not been able to generate the rating for the anime.\nAccomplishments that I'm proud of\nI have been able to get the list of watched animes from any user's MAL account.\nWhat I learned\nIt is not a good idea to use Java API in command line interface when the document tells you to use it with Maven. Tweaking is good but not all the time.\nWhat's next for Moe\nI will try to find a better anime API to collect data. Also, I will consider using another language for Moe instead of Java since Java was not a good programming language for scraping the web from the beginning. Probably Python.\n",
        "hackathon_id": "winfohackathon2016",
        "winner": false
    },
    {
        "description": "\nThis is Solar Bear. Solar Bear is an iOS application (written in Objective C) aimed at kids ages 7-12 to instill environmental consciousness, introduce \"green\" habits, and raise awareness of clean energy alternatives. The goal of the \"game\" is to maintain Bearnard's comfort levels by lowering CO2 emissions and keeping his environment clean. The solar panel, or the \"clean energy factory\", generates clean energy to keep CO2 levels low. Kids can earn solar points by keeping the solar panel out in the sun to generate clean energy or by removing trash from Bearnard's water. If the energy factory is not in use or Bearnard's environment is not kept clean, then CO2 levels will increase, smog will become more apparent, the iceberg will shrink, and Bearnard will begin to panic.\nKids can earn solar points by keeping the solar panel out in the sun to generate clean energy or by removing trash from Bearnard's water. Points can be exchanged for accessories to customize Bearnard's appearance.\nThrough this application, we will be able to shape kids to make environmentally conscious decisions and help the environment one Solar Bear at a time.\n",
        "hackathon_id": "winfohackathon2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nCollege students, by nature, are spontaneous creatures. They live off of adrenaline and adventures that make college memories unforgettable. With Yofo, college students can specify a price range they are willing to pay for a spontaneous vacation. You can score some sweet deals if the time is right.\nWhat it does\nGenerates a list of locations that a user can travel to based on a given price range.\nHow I built it\nUsing technologies from AngularJS, HTML5, and Twitter Bootstrap.\nChallenges I ran into\nAdding CSS classes were challenging to get it to look like our design mocks.\nAccomplishments that I'm proud of\nAdding CSS classes to our headers and stylizing the entire web application.\nWhat I learned\nWorking with a diverse team is rewarding. Having teammates with expertise in design and front-end development really helps with steering towards the direction of having a great user experience and user interface along with functionality.\nWhat's next for Yofo\nIntegrate more APIs to provide pictures and user-based reviews to give users an incentive to continue to book a trip to the given airline platform. We would also like to expand travel options to car, train, bike, etc.\n",
        "hackathon_id": "winfohackathon2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nLiving in a large city, we encounter homeless individuals almost every day. Tackling issues of homelessness in Seattle is a big social justice concern that our team members share. One issue of homelessness that we feel strongly passionate about is the lack of access to feminine hygiene products for homeless women. This lack of access causes high rates of vaginal infections, cervical cancer, and sexually transmitted diseases in homeless women. As women, we believe that all women should have access to comfort and cleanliness for their menstrual cycles, regardless of socioeconomic status.\nWhat it does\nWe created a website that connects those who want to provide support for homeless women and women who are in need of menstruation support. Women in need of support can search for shelters within their general proximity and view the inventory of feminine hygiene products in individual shelters. For shelters, there is a feature that allows them to update their inventory of feminine products daily so women can find shelters that have the products they need.\nTechnologies used\nLeaflet (mapping shelters), AngularJS (multiple tabs/features), FireBase (track data of shelters), JavaScript (interactivity), HTML (content), CSS (style), Bootstrap (responsive), Axure (mockups), Plivo (SMS capabilities)\nChallenges we ran into\nWe found it difficult to narrow down primary functionality of our website. In our brainstorming phase, there were many feasible ideas that were brought up to combat this social justice concern. We also found finding the perfect APIs for different features of our site extremely difficult.\nAccomplishments that we're proud of\nWe're extremely proud of our ability to work cohesively with each other. Prior to today, we were complete strangers. It was amazing to see how well we built on each other's ideas and how supportive we were of each other. We are also proud of our UX design and the issue we addressed.\nWhat's next for .cycle\nWe found it difficult to narrow down primary functionality of our website. In our brainstorming phase, there were many feasible ideas that were brought up to combat this social justice concern. We also found finding the perfect APIs for different features of our site extremely difficult.\n",
        "hackathon_id": "winfohackathon2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\nangular.jshtml5css3\n",
        "hackathon_id": "winfohackathon2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptphpmysql\n",
        "hackathon_id": "winfohackathon2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtmlcssjsonjavascriptsketchinvision\n",
        "hackathon_id": "winfohackathon2016",
        "winner": false
    },
    {
        "description": "\nDo you ever have issues starting on a school project? Upload your text, and Wiki Study Buddy will help you start!\nWiki Study Buddy allows you to copy/paste your text or upload a file containing the information. From that text, Wiki Study Buddy will generate a related list of wiki articles and summaries that may be of use to you. From these articles, you can find inspiration to start your school assignment. \n",
        "hackathon_id": "winfohackathon2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroid-studioobjective-cjava\n",
        "hackathon_id": "winfohackathon2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripttwilioangular.js\n",
        "hackathon_id": "winfohackathon2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtml5cssjavascriptblood-and-tears\n",
        "hackathon_id": "winfohackathon2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe wanted Double Vision to allow a continuous learning experience: watching video while simultaneously reading further up on topics of interest\nWhat it does\nUses audio and image recognition along with Natural Language Processing to generate smart context (i.e. Wikipedia links to articles) while watching your video\nHow I built it\ndownload video, extract frames using opencv, assign tags to video using tensorflow, download audio and transcribe to text using wit api, extract meaningful tags from text using Alchemy api, select most important tags (based on probability of accuracy) and display related Wikipedia articles along with accompanying Bing thumbnails\nChallenges I ran into\nUsing many different api's\nAccomplishments that I'm proud of\nBeing able to leverage both audio and image content to generate meaningful results\nWhat I learned\nTo be patient and persistent\nWhat's next for DOUBLEVISION\noptimize running time, perhaps transform DOUBLEVISION into a Chrome extension, develop an annotating community around videos and develop a more interactive UI\n",
        "hackathon_id": "conuhacks",
        "winner": true
    },
    {
        "description": "\nInspiration\nMy little brother suffers from anacusis, or in other words, hearing loss. Not just the little guy, but around 70 million people over the world are hearing impaired, and in just the United States, around a million people communicate using the American Sign Language. Surgical procedures happen to be really expensive, and day-to-day life gets a little complicated. Moreover, tech for social good is something we collectively believe in.\nWhat it does\nThe user puts on the Myo armband and makes gestures. The android app SignSpeaks scans the Myo, syncs it, and records these gestures internally. Using the Myo Raw Data Capture, we log the respective EMG, accelerometer, and gyroscope values in a .csv file which corresponds to a specific text character or string in the English & French languages. For the purpose of demonstration, we've used the implementation for every programmer's signature  first words - \"Hello world.\" Using the Nuance and Google's text-to-speech APIs, this text gets converted to speech, thus serving as an effective interpreter, making communication between people breezy.\nHow we built it\nWe built a native Android app, and integrated the Myo, Nuance, and Google text-to-speech APIs.\nChallenges we ran into\nGetting the Myo set up and running was the biggest problem of all. Initially, there was a lot of noise and interference while recording the gestures. Also, integrating multiple APIs into our app was a bit confusing initially, but we figured it out eventually thanks to the help of team collaboration and asking for mentor help when needed.\nAccomplishments that we're proud of\nWe made use of the raw data available and after a lot of tinkering, figured out how to record the gestures effectively. We made it bilingual - English and Canadian French!\nWhat we learned\nThis was our very first time with hardware - especially the Myo armband, and we've learnt quite a bit about sensors and accelerometer graphs. \nWhat's next for SignSpeaks\nWe're looking to fine-tune our hack, and also do another version with the LeapMotion. There's so many more functionalities that we can add to this, and that's what we'll be working on.\n",
        "hackathon_id": "conuhacks",
        "winner": true
    },
    {
        "description": "\nInspiration\nEver since the Paris attacks, when Facebook added the Paris flag filter, we knew that using people profile pictures is the perfect medium for creating viral support. Unfortunately there was a flaw with the way the Facebook implemented it. Having only one filter undermined other world events, and this only created viral support and did nother to solve the problem.\nWhat it does\nThis is where ProViralPictures.net comes into play. By having a wide selection of world events, charities, and campaign filters to choose from, no matter what is going on in the world you will be able to show your support. Also with integrated PayPal you are able to donate directly to these charities to make real in world progress.\nUsers go to the website and log in with their Facebook account. They then are able to see what the different filters would look like over their current profile picture and if they like it with one click they can upload the picture to Facebook to show the world their support, and with one more click they can donate through PayPal to create real world change.\nHow we built it\nUsing boot strap templates for the outline of the website we were able to build out creating a method of creating images from the users retrieved Facebook profile picture. We then added the tech for uploading this image to Facebook in one click. On the back end side there is a large infrastructure created to withstand our future growth, enabling companies to create their own accounts and manage multiple filter campaigns while tracking who is downloading which filter.\nChallenges we ran into\nBeing a group of relatively new programmers, each step was a learning process. From attempting to work our way through Facebook's restrictive setup for uploading images, to saving two images overlaid as one to the server, we had to work as a team /shout out to stack overflow/ and were able to compete the task at hand.\nAccomplishments that we're proud of\nWE FINISHED!!!!!\nAlso we each learnt so much about different sections that we were struggling in. Being able to upload the photo to Facebook would be our proudest step as it took the majority of the time learning and reimplementing different methods.\nWhat we learned\nEach of us will be taking home new skills and new knowledge in our respective programming languages. Also learnt that nothing compares to reading the forms when you reach a problem.\nWhat's next for ProViralPictures.net\nWe plan to expand the system to allow companies and non-profits to log in and create their own campaigns individually to us. Also by taking 0.01% of donation, we will be able to advertise our site and help it grow to the level we hope it can. We hope to see ProViralPictures.net on your Facebook Feed soon!!\n",
        "hackathon_id": "conuhacks",
        "winner": true
    },
    {
        "description": "\nInspiration\n\nWe wanted to try an api that seemed challenging for us to work. After talking with the Sponsors at the Transat A.T. kiosk, we all believed as a team that we could provide a solution that can use their API very well. We wanted to make a program that would suggest flights based on social network activity.\nWhat it does\nThis program lets the user connect log into his Instagram account. It will then look at his activity. The program will then suggest flights.\nHow we built it\nFlight Genie runs on a php server with Laravel framework to handle the REST api calls. The front end is built using the milligram framework (similar to Bootstrap) and uses jQuery.\nAccomplishments that we're proud of\nIt works. We were able to extract the data from multiple account and show flights based on the user's interest and interactions. It was really exciting to see everything working together in symbiosis.\n\nWhat we learned\nThe milligram framework can be difficult to work with if you do not include the style.css file that they don't provide and never tell you to use. I am talking about this code\nWhat's next for Flight Genie\nWe are going to build a traveling empire! Benjamin also talked about voice recognition but I must admit that I did not understand how he was thinking about implementing voice recognition to the app. As of right now it is very late (3:52 AM) and Ben is sleeping. I guess it will remain a mystery.\n\n",
        "hackathon_id": "conuhacks",
        "winner": true
    },
    {
        "description": "\nInspiration\nWanted to wake up each without having to think too much about what to wear. We also wanted to utilize the unused clothes in our wardrobe to the max. \nWhat it does\nYou can load your images of piece of clothing and it will automatically sort it categorize and give recommendation to you based on current weather, time, date and style.\nHow I built it\nOur front end was done utilizing HTML, CSS, Javascript, Angular.js, BootStrap, JQuery. The backend was completed using MongoDB, Express.js and Node.js. In addition, we have used Clarifai API to tag all user uploaded images of clothing.\nChallenges I ran into\nWe had difficulty tying the various requests from the server side and front end side.\nAccomplishments that I'm proud of\nWe have actually managed to make the core product, which is perfectly functional. \nWhat I learned\nMy team mates and I have learned a lot about integrating between frontend backend\nWhat's next for claridrobe\nFashion algorithms from Various clothing brands, and pop stars. Recommendation system from other users.\n",
        "hackathon_id": "conuhacks",
        "winner": true
    },
    {
        "description": "\nInspiration\nYou love your cat (maybe too much). But what do others think about him? \nEverybody knows a person that has a cat. \nWhy not put them in touch?  May the cutest win your heart!\nWhat it does\nComparing one cats to another. \nChoose the one you prefer\nGet feedback on your pet (is he the cutest?)\nConnect with the master (maybe the perfect match!)\nHow I built it\nAndroidStudio\nFirebase\nChallenges I ran into\nConnecting the app to firebase\nFetching pictures from the web directly from the phone\nAccomplishments that I'm proud of\nMy very first hackathon!\nWhat I learned\nHow cool is programming!\nWhat's next for KitCat\nLet cat owners create their own account in order to upload their own cat pictures and see their cat rating.\nLet cat owners chat together and maybe find love!\n",
        "hackathon_id": "conuhacks",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavanode.jsnuanceangular.jswebsockets\n",
        "hackathon_id": "conuhacks",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavanuance\n",
        "hackathon_id": "conuhacks",
        "winner": true
    },
    {
        "description": "\nPhotoverse\nPhotoverse is a web application creating using Node.js along with the Clarifai API that allows users to get 8tracks playlist suggestions based on pictures they select. Enjoy!\nMotivation\nWe've always loved music and technology, and for that reason we've created Photoverse. As the saying goes, a picture is worth a thousand words, so why can't a picture be worth a thousand songs? Leveraging the photo tagging power of the Clarifai API, we were able to search through 8tracks' library and show the user the top playlists to fit the mood created by their photots.\nContributors\nContributions to Photoverse are appreciated!\n",
        "hackathon_id": "conuhacks",
        "winner": true
    },
    {
        "description": "\nTHE STORY TO END ALL STORIES\nWe came to Conuhacks alone, tired and excited. We quickly banded together as the representatives of the University of Waterloo and quickly were drawn to the project Smart Pantry by Macadamian - \nWhat it does\nOur added functionality:\n\nwebsite\nadd items by photo and not by scanning barcode\nfind recipe \n\nHow we built it\n<3 with love <3\nChallenges we ran into\nAndroid development is hard if you've never done it before. there's so much overhead. \nAccomplishments that we're proud of\n\nFiguring out what the hell was going on in Android apps\nSuccessfully integrating an honestly bizzare selection of APIs to actually create useful features\nUsing image recognition\n\nWhat we learned\nWe're all a lot more confident with the technology that we worked with this weekend. We also learned that Concordia is a really cool university \nWhat's next for Smarter Pantry\nDepends how it's received by Macadamian! \n",
        "hackathon_id": "conuhacks",
        "winner": true
    },
    {
        "description": "\nInspiration\nThe story behind the code. We came in with no idea what we were going to develop...we hadn't even formed a team. After attending the workshop held by Clarifai about machine learning with their API. We just had to use this technology to make something amazing. After studying it and seeing potential for its facial recognition, we had the idea to make this app.\nWhat it does\nOur app, Twinder, analyzes an inputted picture by the user and searches among other users to find potential lookalikes. It returns the user's lookalike potentially allowing the user to find them and form a clone army!\nHow we built it\nThis application utilizes the Clarifai API to analyze inputted images and tag the photo with words that describe the image. Using this, we cross analyzed these tags with other tags in our database and narrowed down to find the lookalike of the user. Our algorithm also calculates the percentage likeness of the users to give the user an idea of how accurate the hack is!\nChallenges we ran into\nWe came across many issues while attempting to build this hack. We changed languages multiple times trying to find a way to implement both back end and front end development in such a way so that everybody could contribute to the project. We finally came down to using PHP and jQuery and the hack came out to be successful.\nAccomplishments that we're proud of\nThis project was as a whole an accomplishment we are all proud of. We came in with no ideas for a hack, with different skill sets that we thought would mismatch, and no plans to be a team. Rather than being a setback, all these things came together and everybody's different experiences helped us advance this hack to the next level.\nWhat we learned\nThis hackathon was a great learning experience for us, we learned to work as a team and a few new languages alone the way. PHP was a brand new language for half of us and it turned out to be something we plan to implement in future projects.\nWhat's next for Twinder\nThe future of Twinder is vast. We are hoping that with each advancement of Clarifai's API, we can further improve the reliability and accuracy of Twinder's facial comparison. We also want to increase our database to allow users to compare to celebrities, among Facebook friends, and as many more inputs as we could possibly find. Other possible improvements we were hoping to make in the future is to allow the users to communicate and meet up once they find each other.\nThe domain we purchased for the domain.com challenge was whyuhefftobemad.com, but domain.com did not process it on time\n",
        "hackathon_id": "conuhacks",
        "winner": true
    },
    {
        "description": "\nInspiration\nThe Clarifai API and a lot of thinking by two of our members. We wanted to work on developing a AI that could analyse a problem way better than a human. The real estate industry was for us an awesome gateway to this challenge because it's a market where the expertise is owned by few peoples and the general public is easily afraid of it.\nWhat it does\nIt analyse data provident on a real estate property and compare it to all the data we got on passed transactions. It can then estimate the price of this property within a certain margin. This way, the general public and real estate agents could use this tool to have an idea of the net worth of their property or the one they prize.\nLINK : http://realestategenius.tech\nHow we built it\nWe user Azure's Machine Leaning lab to train an AI(model) to be able to estimate real estate value. It can be accessed by our webservice from : http://realestategenius.tech\nWe also used  AWS as it can provide a way-point to all the information we gathered on real estate sites and can provide our web application. \nTech Talk : (AWS Running Windows Server on EC2 with a RDS Database linked with the Entity Framework ORM. We also have Beenstalk deployment integrated to our IDE (visual studio) and a Route 53 reroute from our public DNS to the provided .tech domain. We also had a S3 bucket to store images files to use with the Clarifai APi)\nWe also use the Clarifai API to get tag from images and compare those values with the ones entered by users. We used a lot of models and training to find the right one who offer the lower error on our data.\nChallenges we ran into\nObtaining the data was one of the challenge. Learning to use the Machine Learning lab was also a big one. We were able to make those two thing done, even if they took more time than planned, and get persistent and consistent results.\nAccomplishments that we're proud of\nWe were able to build a successful Machine Learning Api that is able to crunch data as fast as it can be provided.\nWhat's next for Real Estate Genius\nGetting more data is our top priority. With more data, we can refine our AI and offer even more precise result. Including other area than Montreal is also high on our list.\nThere are so many open API that provide information on real estate property and their surrounding. Montreal offer data that could be useful to improve our AI. Other information than real estate price could also be crunched. Hydro-Quebec bill and Condo monthly fees could also be nice information to gather.\n",
        "hackathon_id": "conuhacks",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascripthtml5css3json\n",
        "hackathon_id": "conuhacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroid-studionuancejavagithub\n",
        "hackathon_id": "conuhacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\ngoogle-directionsgoogle-mapsgoogle-placesgoogle-flightopen-weather-map\n",
        "hackathon_id": "conuhacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nBeing all beginner programmers and coming into ConU Hacks '16 without forming a team beforehand, we had to take part in the team-forming workshop which, to us, seemed tedious and to some extent ineffective especially when the hackers pitching their ideas did not really demand the expertise of some of younger programmers, such as ourselves. However, agains all odds, when we DID form a team, we decided to come up with an alternative to Hackathon team formation... so that no other hacker has to go through the suffering we endured...\nWhat it does\nHackMyTeam is a web app that acts as an online forum for all hackers participating in a Hackathon. Adroit hackers who have an idea in mind but are short of team mates can post their ideas on HackMyTeam. Other hackers who do not have a team mate or an idea can look up posts in the forum and comment or contact the original poster to collaborate or discuss ideas and form a team.\nHow we built it\nWe made the use of Ruby on Rails to form the structure and database for our website. We also used HTML, JSON and CSS.\nChallenges we ran into\nWe faced difficulty in using Facebook and Graph API to retrieve user information.\nStyling and formatting the site on Ruby on Rails proved to be another challenge and we could not implement CSS to our website in time which left the site with a very basic look.\nAccomplishments that we're proud of\nThis was a first full-on web development project for everyone on the team and we are proud that we built a functional site. The database management and learning Ruby was also an accomplishment.\nWhat we learned\nRuby on Rails, Ruby, HTML, APIs, CSS\nWhat's next for HackMyTeam\nWe plan on improving the site layout and structure to make it more aesthetically pleasing and user-friendly. We hope that this can one day be actually helpful to young hackers like ourselves and also serve as a platform for further collaboration on awesome hacks.\n",
        "hackathon_id": "conuhacks",
        "winner": false
    },
    {
        "description": "\nIt was 8 AM and we wanted to submit something and Haskell is hard. So we made a chatbot that replies with quotes from great english writers -- because English is also hard.\n",
        "hackathon_id": "conuhacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroidclarifaisweat\n",
        "hackathon_id": "conuhacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nTo make something silly but fun, to use machine learning in a less mysterious way, to find interesting technologies and values\nWhat it does\nIt takes in images and returns a haiku made with key terms appearing in the image\nHow we built it\nGet tags from images through Clarifai API, count the number of syllables, fill up the 5-7-5 format with magic (by magic I mean a lot of work), read it aloud through Nuance API, develop an awesome user interface\nChallenges we ran into\nDebugging javascript, debugging angular.js and navigating through different APIs\nAccomplishments that we're proud of\nIt delivers haiku in a brand new way that is extremely fun and entertaining\nWhat we learned\nMore web dev, more javascript, using different APIs\nWhat's next for Image to Haiku\nImplement the feedback function for Clarifai API, so in the same time users can help improve the quality of service\n",
        "hackathon_id": "conuhacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroidandroid-studio\n",
        "hackathon_id": "conuhacks",
        "winner": false
    },
    {
        "description": "\nProject Description\nOneJob is a hybrid application for both iOS and Android devices. The purpose of the application is to act as a medium between people who are looking for someone to do a small one time job such as helping them move, lawn care, dog sitting, babysitting, tutoring, and many more jobs with people who are offering those services. Another goal of the application is to be community driven, meaning users will rate each other when one provides a job for the other. The person seeking someone for a job will create a post with details about what the job is, the expected price, date, and the duration and then other people who can fulfill that service at the specified time will bid against other people. The job provider will then be able to view each bidders profile and the rate they offered and then pick who they want to fulfill their service. \nTechnology\nThe application was developed using the Ionic hybrid mobile application framework for Cordova, so web technologies such as HTML, CSS and Javascript with AngularJs were used to develop the application. Instead of developing a backend and setting up a database we decided to use Parse, which is a mBAAS. This allowed us to simply do the data access from the front-end and then letting Parse handle querying and storing the data.\nChallenges\nThe scope of the project was really large and we knew this going in so not all essential features were fully developed. \nThe Future\nWe are considering working on this project after the Hackathon to continue developing it as a team. We believe that our application could have potential. Although, there is competition out there that provides a similar experience to our application, they have shortcomings and/or are not widely used by the public.\n",
        "hackathon_id": "conuhacks",
        "winner": false
    },
    {
        "description": "\nFindMe\nWorking with a file system is not always easy. It often requires a lot of organization in order to name your files properly and put them in appropriate folders. This simply is not for everybody.\nDiscover FindMe. This dropbox-style application will allow you dump all of your files in the cloud while keeping them organized. Our advanced analysis tool will parse files and pictures (using the Clarifai API) for you to easily retrieve all you want, when you want it.\nDon't remember how you named your file? No problem, as long as you remember a small detail about it, FindMe will get you want you want.\nDevelopment\nIn 24 hours, we managed to do a lot, but not everything. A cloud based file system requires a very complex architecture which would require many days to design. As such, this application does not support user accounts yet, and the files are not safely stored online.\nFurthermore, only .txt, .jpeg, .jpg, .png, .gif files can be anaylzed by FindMe. The goal was to show that the system works and that more file types could be added in the future.\n",
        "hackathon_id": "conuhacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe internet is vast.\nAs brave explorers, we sail the infinite seas of the connected web, among the pitching, rolling waves of links, information and dank memes. How far can you get? Apparently everywhere. In our project, we examine the virtual reach of any image you can find. What does it connect to? Where can it bring you? What adventures lie in store for those who choose to embark on them? Harnessing the collective power of \"the internet's front page: reddit\", we are able to visualize just how far an image can take you.\nHave you ever wondered how people have millions of karma? Wonder no more, they know WHERE to post. With this app, you can always find the right subs for your pics. Use our tool, reap the karma.\n\"He earns millions of karma point every day. Mods hate him! Learn this one trick to gain karma!\"\n-Everybody 2016\nWhat it does\nMap Your World allows you to upload any image link from the internet, and generate a force directed network graph of the connections to all relevant subreddits for the image. \nHow we built it\nUsing Clarifai's API we are able to process the image, and extract relevant data from it. We then use the reddit API to gather reddit references to the extracted data. Parsing this data and analyzing the generated metrics, we use d3.js to construct a force directed network graph of the internet's opinion.\nChallenges we ran into\nParsing is no fun.\nAccomplishments that we're proud of\nWe did it.\nWhat we learned\nThe power of friendship and teamwork can overcome anything.\nWhat's next for Map Your World\nLet's expand our horizons. The applications are endless, as well as being damn fun to look at. One can think of many many many things to use this for ;)\n",
        "hackathon_id": "conuhacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\nunity\n",
        "hackathon_id": "conuhacks",
        "winner": false
    },
    {
        "description": "\nVideo: https://vimeo.com/152185264 Password: HackHW\nInspiration\nAt the start of HackHW, half of our team was away at a another competition. That left the two remaining members to brainstorm our idea. Our initial idea was to make a large program with many different features, but many of them required more knowledge of connectivity between languages than we knew. After throwing around a few school-related ideas, we settled on our current idea that assists with notes based classes. \nWhat it does\nOur program takes facts in a plain text document and turns them into questions to study. Many keywords in the sentence are replaced with the appropriate question words to create as many questions from the fact as there are keywords. These questions can be retrieved from the output file or can be studied using a simple GUI.\nHow we built it\nThe GUI is written in MATLAB, and calls API from Mathematica and our Java classes in order to run. The personalNotes class reads in a .txt file with a list of facts, each on a new line, and generates an ArrayList for each fact. These questions are, when not using the GUI, written to an output file in the format of the question text immediately followed by the answer on a new line.\nTo generate the list of questions, the static method toQuestion is called with a fact as a parameter. This fact is parsed into an ArrayList of individual words in the fact. The method then goes through each word and, if it is a question word as per the rules (see gallery), will create a Question object with the question and answer and add it to the ArrayList that will be returned. This repeats until the entire fact has been parsed.\nFinally, MATLAB calls the personalNotes main method after setting an input and output file. The Java code runs as described above while Mathematica processes answers typed into the GUI and evaluates their natural-language interpretation (so that, for example, NYC can be interpreted as New York City). Then MATLAB takes the output file from the Java code and uses it to display questions in a short-answer quiz format.\nChallenges we ran into\nThere were a number of challenges we encountered along the way. When initially working on this project, we had very large ambitions. For example, we wanted to be able to store and organize facts as well as classify the facts and questions into themes. Upon suggestion that the scope was too large, we narrowed it down to its current state.\nWe also encountered unsolved issues with turning facts into questions. Initially, the grammar in the outputted questions would be bad enough to render the question incomprehensible. Even after we fixed the problem, often, a question will be understandable, but not quite proper (for example, \"in when the Civil War started?\", is a possible question). Other times it will not be possible for us to know whether a question requires either a who/what or a when/how many. In this case, we have to provide both, leading to more strange phrasings. \nAnother problem was that during the majority of the time, we were only working on one Java class. This made it difficult for all four members to work on different sections. We were able to solve this using Saros, which allowed multiple people to alter the code at once. However, this was only a partial solution for Saros was unreliable when connecting more than 2 laptops.\nAccomplishments that we're proud of\nWe are proud that we were able to work together and have the code work well within 2 days. Our teamwork contributed to our success and it allowed us to have better communication. This lead to a decrease in stress and increase in work productivity. \nWe also managed to create a fairly consistent set of rules which are able to output useful and understandable study questions. These rules, while not complete and sometimes with exceptions, effectively allow us to find simple facts in statements without teaching our program english grammar.\nIn addition, we learned how to make a GUI in MATLAB that was effective enough to fluently display many questions. Before this weekend, we had almost no knowledge of GUIs (besides very basic Java GUI understanding). Our proficiency of GUIs will be helpful in the future as well.\nWhat's next for Class\nIn the future, we would like to both improve on current features and implement additional ones. First, we would like to improve on our rules for finding key words in the question so we would not need to use terms such as \"who/what\". In addition, we could improve the rules so that the questions are grammatically correct.\nIn terms of extra features, our highest priority goals are to implement a multiple choice mode with additional choices taken from other proper nouns in the notes and an ability to star questions to study again later. Another goal is to increase the usability of the GUI as well as making one through Java and MATLAB. \nThe Name \"Class\"\nWe choose the name Class because it sits in the intersection between school (class rooms) and computer science (classes in programs). \n",
        "hackathon_id": "hack-hw-2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavamachine-learningiphone-sdk\n",
        "hackathon_id": "hack-hw-2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\nraspberry-pihtml5phppython\n",
        "hackathon_id": "hack-hw-2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\nxcodeobjective-c\n",
        "hackathon_id": "hack-hw-2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nThroughout our years at Harvard-Westlake we have found one issue that continues to persist. Scheduling meetings with teachers, especially in time-sensitive cases, can be extremely monotonous. First off, you have to gather both your teacher's and your own schedule to confusingly compare them, while praying that your teacher does not have a meeting or is seeing another student during that period. The resulting issue is quite vexatious, so during our 36-hour hackathon, we set out to solve this problem, and thus HW Help was born. \nWhat it does\nSimply put, this web application allows you to quickly compare schedules with your teachers as well as establish meeting times. We wanted to make it as light and as simple as possible, without sacrificing functionality. This app will help students save time trying to schedule meetings, time they could use for something else, like studying or homework. \nHow I built it\nI built this site using HTML, CSS, Javascript, and JQuery.\nChallenges I ran into\nThe main issues I encountered were with interactive features. I hadn't had much experience with building web apps before this, but I enjoyed the challenge!  \nAccomplishments that I'm proud of\nIt was nice to have things completely turn around. Initially, it seemed we were falling behind schedule, but we soon picked up the pace after a few initial bugs were fixed. We soon picked up speed, finished much sooner than expected, leaving time to fine-tune. \nWhat I learned\nFrom coding this site, my web programming skills improved greatly and I picked up many new tools I can now use in the future. This was a great learning experience for the entire HW Help team! \nWhat's next for HW Help\nWe came out of this hackathon with a fully-functioning prototype that clearly and cleanly executes the intended function. We hope to fully develop this application for widespread use in the future. This includes improving scalability, speed, form, and function to craft a clean, fast, and sleek user experience.  \n",
        "hackathon_id": "hack-hw-2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nA lot of games focus on WASD-based platforming. We wanted to make something different: a game where even the simplest function, movement, is based on a new, innovative mechanic, the placement of gravity wells on the map.\nWhat it does\nOur game allows the player to interact with the environment by placing gravity and anti-gravity wells to solve puzzles.\nHow we built it\nWe used Unity and wrote scripts in C#.\nChallenges we ran into\nWe had difficulty tuning the player-gravity interaction to make gravity wells accurate but fun.\nAccomplishments that we're proud of\nWe were able to complete ten prototype levels of our game.\nWhat we learned\nGames with abstract movement, while rare, can be fun, and there is a lot of room for further exploration in this area.\nWhat's next for The Force of Gravity\nGraphics need to be improved, and we need to create more levels.\n",
        "hackathon_id": "hack-hw-2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\nobjective-cxcodeparsecocoapodssdk\n",
        "hackathon_id": "hack-hw-2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\nswift\n",
        "hackathon_id": "hack-hw-2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nSKYSync+ was created with Caregivers in mind. It's the platform designed to manage assisted living, senior care, or rehabilitative facilities in a lightweight, open source package.\nWhat it does\nSKYSync provides an interface and monitoring solution that delivers urgent and significant information to Caregivers. It consists of an administrative web application and a companion Pebble smartwatch application that work in tandem. Residents are given smartwatches preloaded with the software, effectively establishing continuous monitoring for location, physical activity, sleeping habits, and more.\nHow we built it\nThe webapp is built with PHP, Javascript, JQuery, HTML, and CSS with an underlying set of APIs driven by a MySQL database. This interfaces with the smartwatch running a PebbleJS application to exchange data between all three components. Frontend styling is provided by the Materialize CSS framework. APIs used include Google Maps and Pushbullet.\nChallenges we ran into\nMany of our problems were minor issues with Javascript and JQuery. After some tinkering we were able to resolve most issues, and our dependence on JS for this project pushed us to better understand the language.\nAccomplishments that we are proud of\nThe underlying backbone of the entire project was the most difficult yet rewarding component. We created an internal API to serve the appropriate data to each leg of the project (webapp and Pebble app), and this made the interactions more efficient and portable in the long run.\nWhat we learned\nThe group as a whole learned much about web technologies--throughout the project we were pushed to use unfamiliar approaches to the problems at hand and each of us took away lessons in data transportation, security, and wearables.\nWhat's next for SKYSync+\nSKYSync+ will benefit from more development. It is apparent that a tool of this nature has a place in the senior and health care industries, and the team looks forward to further exploring the future of the platform. \n",
        "hackathon_id": "hackrice-2016",
        "winner": true
    },
    {
        "description": "\nInspiration\nAs a group of primarily Rice students, we felt that there was a need for a rice utility app for android and felt that we could fill the void.\nWhat it does\nMap: Shows map of campus, building locations, class locations, points of interest, and bus locations in real time.\nHappening Today: Displays a list of current events happening on campus\nBus Notifications: Notifies user when a selected bus is a quarter mile away along the bus route from a particular bus stop.\nShoutout: Allows users to post short messages that are shown on the map at their locations, and to see messages that other people have posted.\nLinks: Various links to rice websites that open in the app.\nHow we built it\nWe built Rice Utilities in Android Studio, but also used Google App Engine to host our web server.\nChallenges we ran into\nGetting the app to run a service that notifies the user when a bus is a quarter mile away along the bus route from a bus stop of the user's choice.\nAccomplishments that we're proud of\nFinishing the bus notification service and creating a polished user interface.\nWhat we learned\nAndroid is hard.\nWhat's next for Rice Utilities\nWe plan on continuing to add features to the app (including an upvote/downvote system in Shoutout) and including more Rice related resources in the future.\n",
        "hackathon_id": "hackrice-2016",
        "winner": true
    },
    {
        "description": "\nInspiration\nMachine learning has become a pioneering technology in the field of computer science. We sought to build a hack that involved and built upon machine learning methods. Our mission with InstaTag is to provide a means for users to get the most out of their social media posts. As social media becomes a larger and larger part of everyday life, it becomes increasing more important for both businesses and nonprofits to optimize how they advertise. #InstaTag uses image recognition and machine learning to create hashtags that will produce the most likes. More likes means more coverage, and for businesses and nonprofits, that could ultimately improve profits and donations. So while the normal everyday user can use #InstaTag for their profile, our app has deeper implications with the evolving world of social media.\nWhat it does\nInstaTag generates optimum hashtags by running image recognition on the uploaded image and generates hashtags against previously learned images and hashtags. We used machine learning with the Clarifai API on Instagram data to find which hashtags corresponded to the most likes per picture. Thus when a user uploads an image, we are able to generate optimal hashtags for their image.\nHow we built it\nWe used Beaker to research optimal tag matching algorithms. We then used Java and JSoup to collect data about images, hashtags, and metadata from Instagram. We then applied machine learning on the data collected with Clarifai. Our frontend is built with HTML and Javascript.\nChallenges we ran into\nWe had challenges getting good tags for the images especially with less common words. We solved this by using a ranking heuristic. Scraping the JSON text also required some tricky regex magic.\nWhat we learned\nWe researched different kinds of machine learning methods in order to implement and effective and accurate hack.\n",
        "hackathon_id": "hackrice-2016",
        "winner": true
    },
    {
        "description": "\nWhat is it?\nIt's an elegant solution for wrist monitoring. It could basically be implemented with the same form factor as a jawbone/fitbit/standard watch, if it were to be a final product. \nIt monitors your wrist angle and alerts you when you bend your wrist at an angle that would increase your risk of carpal tunnel.\nYou could also use this as a controller, e.g. to play flappy bird.\n",
        "hackathon_id": "hackrice-2016",
        "winner": true
    },
    {
        "description": "\nInspiration\nHave you ever felt awkward and embarrassed in a foreign food restaurant, because you do not understand the menu? Menuer is designed to help people make orders in restaurants with entree names that are not familiar to them.\n\nNothing would better explain the food than a top-ranked image search result of the entree name using Microsoft Bing Image Search.\nWhat it does\n Menuer would allow users to take a photo of the menu they are trying to understand, then select the specific entree name they are looking for, and search on Microsoft Bing Image. And it would display a picture of the top-ranked result.\n\nIt works with all kinds of food around the world, as long as the food name is presented in Alphabetic letters.\nHow we built it\nWe used swift to develop our front-end on IOS, Node.js as the back-end, using AWS hosting the service, and Microsoft Bing API for Image Search.\n\nChallenges we ran into\n We had several cosmetic problem in building the IOS app, mainly due to a lack of familiarity with the language. Also, linking front-end and back-end had a lot of miscellaneous work to do. Also, there were a lot of configuration to be set hosting the app using AWS.\n\nAccomplishments that we're proud of\n We were able to take photo of the menu, and instantly crop out of the relevant text, doing a huge amount of OCR preprocessing with a click of the finger. Also, our OCR is near 100% accurate, and the image search result all came back super relevant.\n\nWhat we learned\nTeamwork, Swift, Node.js, Hosting Web Service, OCR.\n\nWhat's next for HackRice2016-Menuer-Swift\n Cosmetic improvements, and finding the right OCR for other languages, for example: Chinese, Russian, Japanese...\n\n",
        "hackathon_id": "hackrice-2016",
        "winner": true
    },
    {
        "description": "\nInspiration\nInspired by our teammate Ian's previous experience with sending text messages over an email server, we decided that it would be extremely useful to be able to do more with text messages.  In addition, it's often necessary to manage a server on the go, and given that text messages don't require a Wi-Fi connection, they're the perfect way to make sure that we could have access to our server 24/7.\nWhat it does\nOur python project listens for a text message (through a dedicated SMTP email server) then reads and parses the email to get a bash command.  Then it creates a subprocess to run the bash command on the server's shell.  It also includes two factor authentication, with a config file and a required usage password.\nHow I built it\nWe wrote 3 python scripts and used an IMAP library to create a running Python daemon to listen for bash commands.\nChallenges I ran into\nIt was difficult to change directory, since processes terminated after a single command, but we decided to store the directory and track changes.  Error handling with incorrect commands was also difficult, since error messages have different formatting.\nAccomplishments that I'm proud of\nThe python script is extremely fast, and took relatively little code to write, given the fact that it can run almost any one line bash command.\nWhat I learned\nWe learned how to spawn subprocesses, route text messages through email, and in general, how to use python's massive standard library to accomplish tasks far more difficult with other languages.\nWhat's next for SSH over SMS\nThe next step is support two line commands and commands that require interaction, such as \"sudo\".  In the future, we'd like to make it possible to conduct even more complex operations over text.\n",
        "hackathon_id": "hackrice-2016",
        "winner": true
    },
    {
        "description": "\nBeaker Notebook is a powerful tool that allows for rapid development of data insights. An open-source project started by Two Sigma, it bears much similarity to IPython notebook but adds the ability to execute code from many languages within the same notebook and to share data between them, allowing the user to use the best tool for any given job.\nWhile Beaker Notebook is very powerful tool, as data grows, so must our tools to analyze it. We have augmented Beaker Notebook using the Google Drive API to allow for fast and easy collaboration.\nTypically, when a new Beaker notebook is created, it is saved on the computer running it. Now, with the addition of Google Drive integration, you can now save directly to Google Drive. This capability means that the user can enjoy all the powerful sharing capability of Drive, allowing for the ability to share with specific people and to control access privileges.\nBeaker Notebook already has a substantial user base. With our addition of large scale collaboration, we can help Beaker Notebook and its users rise to the challenges posed by the Information Age.\n",
        "hackathon_id": "hackrice-2016",
        "winner": true
    },
    {
        "description": "\nInspiration\nThere is so much to discover in this world. So many great songs, movies, books... However, the content we can identify with the most is what is most relevant to our current stage in life. Content discovery services out there just don't capture this. What if there were a discovery service that would reveal to us new things based on where we are on our personal journey...\nWhat it does\nPicktureThis is a photo-based music discovery service. Given a photo, PicktureThis will find a Spotify playlist perfect for the scene. The ideal version of PicktureThis would be a mobile app, where the user can capture a moment they are currently experiencing, and be catered a personalized music experience for that moment. PicktureThis is currently implemented as a web-app as a proof-of-concept.\nHow we built it\nGiven a photo, we use Clarita's API to perform object and scene recognition. We then get a list of tags related to the photo. This list of tags is then mapped to 132 music genres using word vector similarity calculations. We used Google's word2vec word vector library to compute similarity between tags and genres. We select the genre that best matches the photo, and find a Spotify playlist in that genre using Spotify's API.\nChallenges we ran into\nMany Many challenges with getting things set up, especially with installing python packages and setting up the website on Azure. We also had trouble conceptualizing how to find songs given photo tags. It was only after scouring through countless music APIs and realizing the limited search capability they provide did we think of using word vectors. Other challenges were neither of us had much experience programming web apps. There was a lot of learning on the go and troubleshooting, but it was well worth it!\nAccomplishments that we're proud of\nWe are very proud that we were able to get a web-app working. We could imagine that if this app were further developed it would be useful to many people. As a user you can compound on new experiences with new music, and the convenience of photo-based song discovery is definitely very appealing. For example, looking for new yoga music? Just take a picture of your class and a new playlist will be handpicked for you.\nWhat we learned\nWe learned a lot about web development, getting environments set up, doing API calls, a little bit about word vectors, and developed a lot of patience.\nWhat's next for PicktureThis\nPicktureThis would be great as a mobile app. If we can have it interface with photo-sharing apps like Instagram then it would be even more useful to people. Also, music is only the beginning. PicktureThis can extend to catering movies, short films, poetry, art, books... With the rapid advancement of object and scene recognition technology, it will become more and more easy to discover content we can connect deeply with.\n",
        "hackathon_id": "hackrice-2016",
        "winner": true
    },
    {
        "description": "\nBuilt With\npythonnode.jsazurehtml5css3javascript\n",
        "hackathon_id": "hackrice-2016",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascripthtmlcssgoogle-cardboardthree.js\n",
        "hackathon_id": "hackrice-2016",
        "winner": true
    },
    {
        "description": "\nInspiration\nThis project was inspired by Intuitive Machine's Terrestrial Return Vehicle (TRV) TRaVeller spacecraft, and the suggested project statement to \"let a user know if TRV is visible from their current location.\" The TRV is an automated precision return vehicle, designed to deliver a scientific payload to a Low Earth Orbit (and beyond) and autonomously re-enter the Earth's atmosphere for a safe, precision landing. The initial idea was to create an Android application based on the open source Google Sky Map project, allowing users to explore the current location of the TRV on their mobile devices -- an augmented reality window of the night sky.\nWe also sat in the Google Cloud Platform workshop at HackRice and learned how to use Firebase to build real-time web applications, which was incorporated into the project's cloud infrastructure.\nWhat it does\nSpacecraft-Spotter is a web application that utilizes real telemetry data from the TRV to map its position in a simulated sky, allowing users to locate the vehicle in their own sky overhead as it makes its way home from the International Space Station. It was built to help people learn more about the TRV spacecraft and to interactively follow its mission in an engaging manner.\nHow we built it\nThe web app runs on a virtual server on the Google Cloud Platform. The frontend web interface was built with HTML, Bootstrap, Javascript, jQuery, and Underscore.js. Backend cloud services were provided by Firebase, which hosted the static site and its data content. Geolocation API's from Google Maps and freegeoip were used to determine a user's location based on their IP address. Alternatively, the user can specify a different city or custom latitude/longitude. With this information, Stellarium (a planetarium software) can generate a simulated view of the sky from that location, showing exactly what you would see when you look up at the stars. This 180-degree FOV view was then exported to a PNG image.\nIntuitive Machines provided a CSV file of simulated telemetry data of a TRV landing from the ISS to Vandenberg Air Force Base in California. This CSV file contained over 200,000 data entries for various TRV characteristics including mission time, sensor states, propellant and engine statuses, velocity/acceleration, attitude quaternions, and more. A Python script utilized NumPy data structures to parse and manipulate the CSV data to determine the TRV's latitude, longitude, altitude, and flight path angle. A calculated transformation was done to map the spacecraft's lat/long coordinates into the user's sky perspective at a discrete timestep. A further transformation was done with ImageMagick to overlay an image of the TRV onto the Stellarium image, incorporating the spacecraft's position in the sky, flight path angle, and altitude. The TRV image rotates over time corresponding to the flight path, and the closer it gets to landing, the bigger it appears on the sky map.\nThe output overlay image is then displayed back on the web interface. An extra feature was added to \"animate\" the flight by generating overlayed images at discrete timesteps and displaying them in sequential order.\nChallenges we ran into\nWe ran into several challenges throughout this project. As a demo, the web application was functional, but not optimized for performance. The largest bottleneck on latency was due to having to run the Stellarium software locally on the server. We could not find a good, open web API to generate an image of the sky based on the user's location. So, we had to settle with an offline solution of Stellarium.\nIt also took some time to fully interpret the telemetry data in the CSV file. Parsing the information is one task, but manipulating the data to ensure proper unit conversions and coordinate system transformations proved to be non-trivial. A less-than-ideal workaround was used to position the spacecraft into the sky image; it may not be 100% accurate, but it's good enough to display a landing pattern that can deceive the untrained eye.\nAccomplishments that we're proud of\nHackRice 2016 was both of our first hackathons, so we're proud to have gone through the experience (and to actually submit a project). We were fairly late in the game when we settled on this idea, so it was very rewarding to collaborate and see the project come alive. We were just a team of two this time around, but just imagine what we could do with a team of three!\nThis was also Rohit's first Node.js application!\nWhat we learned\nA lot! Both of us worked with new technologies and API's that we were previously unfamiliar with. We learned about Firebase and the Google Cloud Platform that same day from a locally-hosted seminar. We also learned about autonomous spacecraft landings, astronomy, celestial coordinates, and how MLH works.\nWhat's next for spacecraft-spotter\nThere are so many more features that we could add to improve the functionality and performance of this project. Although it was fun to build, it is unlikely that we will revisit it. We live in different cities, and Rohit is finishing up his last semester of school!\nMisc.\nHieu met Rohit at a shuttle stop in the visitors parking lot at Rice University in Houston, TX. They had both driven several hours from other cities (Hieu from Austin, Rohit from Arlington), and arrived on campus around 7pm to attend HackRice 2016. Both were completely lost, but managed to find their way to the hackathon with the help of three friendly Rice students. There, they shared a table together, discussing potential project ideas. Intuitive Machines was one of the hackathon's sponsors offering a special prize for working with their data set. With no other exciting prospective projects in mind, we went to work.\nFin.\n",
        "hackathon_id": "hackrice-2016",
        "winner": true
    },
    {
        "description": "\nWe combined many of our team members' interests - _ improv, comedy, games _ - to create this fun game! Coded communally using Microsoft Visual Studio Code's wonderful Git integration. Hosted through Domain.com with the wonderful URL of I Need to Write a Crocodile.com. As a team of freshmen (and 80% first-time hackers), we were impressed by how quickly the work moved!\n",
        "hackathon_id": "hackrice-2016",
        "winner": true
    },
    {
        "description": "\nBuilt With\npython\n",
        "hackathon_id": "hackrice-2016",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe were inspired by Ghandi, finance, and @realDonaldTrump (that's a joke).\nWhat it does\nOur project is a multi-player investment game in which the stock prices of three tech giants (Google, Microsoft, and Facebook) are controlled by the positive and negative tweets each company receives.  For each positive tweet the price of the stock rises, and for each negative tweet, it falls.  The stock prices are controlled traditionally by supply and demand too, so the more people buy stock of one company, the higher that company's stock price rises.\nHow we built it\nWe used python to scrape and analyze tweets, javascript to control the game, and HTML and CSS for the web user interface.\nChallenges we ran into\nWe spent the first night of the hackathon trying to visualize data in VR, but we eventually scrapped the idea in favor of this one.\nAccomplishments that we're proud of\nWe are proud that we integrated many different systems together, many of which we had little to no experience with.\nWhat we learned\nWe learned quite a bit about python, especially in regards to how it interacts with other systems.\nWhat's next for StockTalk\nWe hope to flesh out the price computing algorithm to make the prices more stable and fun;  we also intend to add graphs tracking the prices over time and user logon integration.\n",
        "hackathon_id": "hackrice-2016",
        "winner": true
    },
    {
        "description": "\nBackground\nSuccessful Alzheimer\u2019s treatments usually revolve around drugs/medication, but there are other therapies that work and trigger memory responses. Two such popular treatments are art therapy and music therapy.\nArt therapy: \n\u2022 Include old photographs and have therapists ask their patients to write stories on what they think is happening in the picture.\nMusic therapy: \n\u2022 Play music that the patient enjoyed in ages 18-25.\n\u2022 Use music to encourage behavior: upbeat tempo can encourage patients that are feeling down to do daily activities like shower, eat, etc.\n\u2022 Calm music can be soothing and help with sleep, etc.\nDescription\nReminiscence is an app meant for use with the guidance of a therapist. Family members and friends can upload old photographs or pictures of cherished items to a \"therapy Facebook account\" for the patient. This account is used to sign in to the app and give the therapist access to these pictures. From the therapist end, new patient information can be added and notes can be added about the progress of each patient. Family/friends can see these notes but not edit them.\nTo facilitate music therapy, the therapist goes to our music player to play music from the server.\nHow We Built It\nOur Android app interfaces with an API built using Node.js. The patient database is built using MongoDB and Mongoose. The music player uses JavaScript and runs on our Node server.\nWhat's Next\nIdeally, our service would provide more fully integrated support for music therapy, such as in-app access to a wider variety of songs. Additionally, we would provide the ability to edit the patient's schedule through the app itself, as currently we only display their schedule.\n",
        "hackathon_id": "hackrice-2016",
        "winner": true
    },
    {
        "description": "\nHackRice\nStrength Builder is a system that allows users to be able to quantify their rehabilitation progress. Usually Stroke victims are given 6 months to recover as much as they can. These are called the critical months. Once these are done, the recovery is entirely up to them. Some patients usually become very depressed, because they can not see their progress. This is very debilitating because you need to believe you can recover in order to continue recovery. We built this system so that people can visually see their progress no matter how small it is. This will hopefully restore some faith to the victims and allow them to continue rehabilitation so that they can regain as much of their abilities as they can and believe.\n",
        "hackathon_id": "hackrice-2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtml5leap-motion\n",
        "hackathon_id": "hackrice-2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nIt was inspired by the difficulty of maintaining an active facebook presence.\nWhat it does\nIt fixes this problem through posting and liking for you! Just do a little work to gather training data from your facebook page, then this uses markov chains to generate comments and a Naive Bayes algorithm to determine whether to like or comment on every post based on your previous patterns. \nHow we built it\nWe built it entirely using javascript and jquery.\nChallenges we ran into\nWe ran into many challenges interacting with facebook (liking and commenting posts programatically and gathering data).\nAccomplishments that we're proud of\nCreating a machine learning algorithm to decide what a user would or wouldn't like\nWhat we learned\nAbout using javascript to interact with facebook and how to implement machine learning.\nWhat's next for Self Driving Facebook\nWe hope to add easier use of access.\n",
        "hackathon_id": "hackrice-2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nI really liked Chrome's lightsaber experiment and jackbox.tv, decided I wanted to try something similar with multiple inputs.\nWhat it does\nTwo players enter, lots of balls spawn.  Tap/click the screen to pull the ball towards the cursor, but keep an eye on your click power (the green bar), it recharges slowly!  First to five points wins.\nHow I built it\nBy the grace of caffeine and the generosity of HackRice.  But seriously, I used Phaser.io as a basic game engine, and made a duplicate p2.js physics engine running serverside in Node to sync game physics between players (could largely prevent cheating etc.), and information is passed back and forth using socket.io on each side for lightweight structured communication.\nChallenges I ran into\nDecoupling the prototype's physics from Phaser.io's internal engine was...problematic.  Serving simple files with Node is way harder than I thought.\nAccomplishments that I'm proud of\nThat it works at all!  Seeing two devices in sync in realtime and knowing I built it all in 36 hours is a GREAT feeling\nWhat I learned\nThe value of writing \"bad\" code to be \"lifted up\" into abstractions later, instead of trying to get all the abstractions right from the get-go.  Cheers to an IRC friend for sending me some language design lectures that got me thinking along this line.  I will write more \"bad\" code in the future if it leads to projects that work like this and are this much fun!\n",
        "hackathon_id": "hackrice-2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\nc#glslunitylove\n",
        "hackathon_id": "hackrice-2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroidlocationrubyrubygemssinatraactiverecordherokujavajavascriptjquerypush-notificationsjsonrake\n",
        "hackathon_id": "hackrice-2016",
        "winner": false
    },
    {
        "description": "\nrice_delivery\nRice Hoot/etc. Delivery Web App    \nfile structure\nclient:\n    - templates:\n        - accept_delivery - code for accepting deliveries\n        - create_order - code for creating a new order\n        - main_feed - feed of orders (filterable), make an order, access user profile + settings\n        - user_history - active orders, active deliveries, history\n        - user_profile - edit venmo, profile info\ncollections:\n    - Mongo collections (active tasks (public), user tasks (private))\npublic: image Assets, etc.\nserver:\n    - \n",
        "hackathon_id": "hackrice-2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nInspired by current events in Europe and from the United States election cycle.\nWhat it does\nAllows users to give small loans to people in need in your surrounding area to help pay for emergency needs, equipment, or to improve thier employability standards (ie. prepare for an interview).\nHow we built it\nWe build an android app and did server side programming in php. We used Amazon Web Services for storing our database on cloud\nChallenges we ran into\nAccomplishments that we're proud of\nWhat we learned\nWhat's next for Microfinances\n",
        "hackathon_id": "hackrice-2016",
        "winner": false
    },
    {
        "description": "\nTwenty Questions Thesaurus \n:sparkles: HackRice 2016 Project :sparkles:\nA web application for discovering that word on the tip of your tongue, inspired by the game Twenty Questions.\nNow running on pythonanywhere servers\n",
        "hackathon_id": "hackrice-2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtmljavascriptcssphpapi\n",
        "hackathon_id": "cicodecamp",
        "winner": true
    },
    {
        "description": "\n\nThe number of people killed by police in 2014:1,149, according to Mapping Police Violence, a research collaborative collecting data on police killings nationwide.\nThe number of people killed by police so far in 2015: 470, according to the Guardian. \nThe percentage of those people who were women: 4.6%, or 22 people, according to the Guardian.\nOf those women, the percentage who were women of color: roughly 41%, or 9 people, according to the Guardian.\nThe number of people killed by police so far in June: four.\nThe state where two of the four shootings took place this month: Texas.\nThe likelihood that a black person killed by police, like 22-year-old Rekia Boyd (killed in Chicago), will be unarmed: Twiceas likely as a white person killed by police, according to the Guardian.\n\nIn England and Whales there have been 55 fatal police shootings in the last 24 years\nIn the US there were 59 fatal police shootings in the first 24 days of 2015\nIn Iceland there was only 1 fatal police shooting in its 71 years of existence\nWhat is the problem?\nAmerican teens in the USA today are unaware of police brutality and how it affects them, as well as how often it occurs in their area to people just like them. We plan to create both a game and website to help solve this problem. We are going to raise awareness as to what exactly police brutality is and how it ties into racial profiling. Both the game and website will supply users with facts regarding police brutality along with racial profiling. The game is to engage teens into the topic of police brutality; it is generally viewed as an \"overhyped\" topic by teens. The website will go more in-depth and better speak on the topic and inform people of what is going on.  \nPITCH:\nI want everyone in here to think about whether or not they have ever been brutalized by the police as a result of racial profiling. I personally have not experienced such injustices, but people around me have, and I actually fear the possibility of it happening to me on a daily basis. My group wishes to tackle police brutality based on racial profiling because it does happen often and is not \"overhyped\" as some people our age would describe it. We want to raise awareness and get people involved in local groups and organizations to help try and solve the problem. So we've created both a game and a website to assist.\nAt the end: Just think, it could be you next.\n",
        "hackathon_id": "cicodecamp",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascripthtml5css3\n",
        "hackathon_id": "cicodecamp",
        "winner": true
    },
    {
        "description": "\nBuilt With\nhtmlcssbootstrapjavascripttypeform\n",
        "hackathon_id": "cicodecamp",
        "winner": true
    },
    {
        "description": "\nInspiration- Our Inspiration Is as a teen in an community underrepresented I would want to meet people in the career field that I aspired to be in. Teens around me feel the same way.\nWhat it does- Currently what it does is allows menTeens find internships in their future career goal and mentors can help them follow that goal.\nHow I built it- We build this site using bootstrap and w3schools. We coded in Html, Css, and we utilized the soundcloud Api, to play music we think teens will enjoy.\nChallenges we ran into was utilizing the soundcloud Api, Finding the right elements and tags and also knowing how to align and adjust certain elements.\nAccomplishments that I'm proud of is finally learning how to do a Api for Soundcloud and also embedding a google calander.\nWhat I learned\nWe learned that collaboration is the key to success. Without my team I would not have been able to use padding because it was our first time using it. We also learned as a team is using API.  \nWhat's next for CreateTeenChange- We want to set up a system to let our menTeens meet up with our mentors. We also want to use google maps API to let people know future fairs for their careers is around.\n",
        "hackathon_id": "cicodecamp",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascriptgoodbarberapi\n",
        "hackathon_id": "cicodecamp",
        "winner": true
    },
    {
        "description": "\nMy Inspiration: I had been mugged not to long ago. All I could think of is how to get away from that area or take a new route to get to my destination. This made me think of how we can have travel safer in any time of day without being harmed or worried.   \nHow It Works: This application is supposed to make the community safer when traveling. There are people in this world and community that need to get to work or get to some destination  safely. Statistics has shown that people get mugged and robbed. Me myself had trouble getting to my destination and I had gotten robbed. Ever since then I have been watching which ways I go so I would not run into Gang Affiliations. This app is to help people reach their destination safely. With this app, people will be more safer, and know who is around them. You put trust into your community and you do not worry about any of this gang affiliation. When a incident like this occurs, you feel unsafe and do not want to travel anywhere again. There are alternate ways to travel around. The Red circles are where there are Gang activities, The green circles are safe zones, you are able to walk without worrying. The blue spots are where there are authorities like school safety, or Police that can help you. This app will not only benefit teenagers, it will benefit all ages.   \nAccomplishments that I'm proud of: I am proud of making this applications with mire than one API. I used Google Maps and live Chat Rooms. \nWhat was most difficult to build: The most difficult thing to build was the google maps. It was hard trying to get it online. \nWhat I learned: i learned that being part of team that has similar skills as you is very helping. Great minds think a like and when they come together we can accomplish something amazing. \nWhat's next for GangBusters: The next thing for this applications is more edits, add more things to make it more accurate and efficient. \n",
        "hackathon_id": "cicodecamp",
        "winner": true
    },
    {
        "description": "\nBuilt With\nhtmlcss\n",
        "hackathon_id": "cicodecamp",
        "winner": true
    },
    {
        "description": "\nBuilt With\neventbritemeetupapicloud9\n",
        "hackathon_id": "cicodecamp",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtmlcssjavascripttwitter\n",
        "hackathon_id": "cicodecamp",
        "winner": false
    },
    {
        "description": "\nInspiration\nMany students end up not doing their homework in schools because they do not have a mentor or somebody to assist them do their school work. Our group members Oumar, Adam, and Sidi, are all learning English because we just moved to the United States between 1 and 3 years ago, so we often need more help on our homework than other students. One time, Oumar was doing his math homework and he got stuck on a problem.  He was able to call Sidi and get some help, but they realized that it would be a lot easier to post this kind of question online, so we created AmHelp to inspire other students to get more help on their homework.\nWhat it does\nOur app allows the user to be assisted and be more confident about the school work they are doing. This platform allows the user invited other students who are advanced or taking the classes to instantly assist them online, through chat or call.  The user logs into their account, chooses a subject that they need help with, takes a picture of the question or writes it into the text box, then the user submits the question.  Other students from their class help the student who posted through a forum.\nHow I built it\nIt was build using HTML and CSS also a bit of JavaScript using Cloud9, an online IDE.  We connected Cloud9 to Github to share our work, as well.  We had to embed code to input the equation editor.\nChallenges I ran into\nIt was difficult embedding equation editor on the website using JavaScript so that students have a space to write their math equations.\nAccomplishments that I'm proud of\nWe were proud of the work we did by building the website and because we know that we are helping students to do their homework, which we all have had trouble with in the past.\nWhat I learned\nI learned that I really need to keep coding because it will help me speed up the work during Hackathon. We also learned how to embed an equation editor into our page.\nWhat's next for Am Help!\nThe next is making this website look realistic by building an App that can be useful for school because many students would want to access this site using their phones.  We also need to make the submission and response features functional so that the project starts to work.  We ran out of time to build a full working product, but with more time, we would be able to add submission and chat features.\n",
        "hackathon_id": "cicodecamp",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptsoundcloud\n",
        "hackathon_id": "cicodecamp",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtmlcssjavascript\n",
        "hackathon_id": "cicodecamp",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe know people who are stressed out and we created this website in hope to help them be better people mentally.\nWhat it does\nGives teens advice on common problems they may face and can even drop suicide rates across America.\nHow we built it\nWe used a series of div classes, links,Youtube Api,and Images that would support our topic.\nChallenges we ran into\nA member of the group often slack off and we had some struggles coding Api's. Also the night shift was really tiring.\nAccomplishments that we're proud of\nWe all didnt come the knowledge of Api but we picked it up on our way and our API product came out nice. Also this was our first hackaton and we did great.\nWhat we learned\nWe learned about Api, Bootstrap,and we leaned more about teamwork skills.\nWhat's next for Mynewfriend\nWe want to be able to create a chatting system using a kik API and a comments section at the bottom of the pages.\n",
        "hackathon_id": "cicodecamp",
        "winner": false
    },
    {
        "description": "\nBuilt With\ncss3html5zurb-foundationjavascript\n",
        "hackathon_id": "cicodecamp",
        "winner": false
    },
    {
        "description": "\nJoinIn is a website that can improve PittServe and connect to students\u2019 LinkedIn, catered to Pitt students and all organizations, that consolidates the process of finding volunteers for your event, finding volunteering events to attend, and showcase a history of volunteer work on a profile.\nCurrently in its prototype stage, JoinIn hopes to make it easier to connect volunteers and organizations!\n",
        "hackathon_id": "sheinnovates16",
        "winner": true
    },
    {
        "description": "\nBuilt With\nbuildfireprezipowerpointsurveymonkey\n",
        "hackathon_id": "sheinnovates16",
        "winner": true
    },
    {
        "description": "\nInspiration; As a group of avid travelers, we wanted an easier way to receive information at our fingertips about our surroundings! Hence, the birth of Pictouresque.\nWhat it does; The app allows users to take pictures of their surroundings and get an informative audio tour (featuring bites of information about what's in the picture).\nHow we built it; The app was built using Java and Android-studio.\nChallenges we ran into; We ran into a few issues while coding the app. First of all we did not realize that picture recognition software is still in primitive stages. Instead of making our own camera, we used an existing API to scan instead of take a picture, and then compare that scan to a library of buildings.\nAccomplishments that we're proud of; We're proud of having been able to work effectively with people we had just met. We're proud of the progress we made on the app, the information and research we gathered, and the design of our name, logo, and presentation. Being able to add our own creative flair makes the project completely ours.\nWhat we learned; The importance of diversity on a team! We have a computer science student, a computer engineering student, a mechanical engineering student, an economics and political science student, and an M.B.A. student, which allowed us to divide the work according to individual strengths.\nWhat's next for Pictouresque; We hope to grow the user-base so that users can generate information for attractions they visit. Our aim is to allow other users to vote for their favorite bites, and the most popular bites will be generated for users seeking information about that specific attraction. We also hope to create a feature that points users to nearby attractions, and connect to social media accounts to share about their experiences.\n",
        "hackathon_id": "sheinnovates16",
        "winner": true
    },
    {
        "description": "\nBuilt With\nruby-on-railsmaterializehtml5css\n",
        "hackathon_id": "sheinnovates16",
        "winner": true
    },
    {
        "description": "\nInspiration\nWhat it does\nMatch people based on interest to attend OCC events\nHow we built it\nWe used Java\nChallenges we ran into\nFormatting was tough\nAccomplishments that we're proud of\nIt works!\nWhat we learned\nWhat's next for OCC BuddyFinder\nApp conversion\n",
        "hackathon_id": "sheinnovates16",
        "winner": true
    },
    {
        "description": "\nInspiration\nOur strong interests in languages\nWhat it does\nCONNECT with language partners\nCOMMUNICATE with native speakers\nLEARN and practice languages\nMake friends and meaningful relationships\nHow we built it\nWith the help of our mentors!\nChallenges we ran into\n\"Language\" barriers. Not all of us are coders, and not all of us are proficient in HTML and Javascript\nTrimming down ideas and making features simple and user friendly\nLearning new frameworks and implementing them in a short period.\nWe learnt some new frameworks but couldn't include them completely(Facebook Javascript SDK)\nCreating a label for our project\nAccomplishments that we're proud of\nWe have a finished project\nThe fact that we could all come together as total strangers\nWe could include so many unique features and have plans to add even more\nWhat we learned\nDiversity is extremely helpful to teams. We have 3 Comp Sci, a French-German-Business major, and 2 Business majors.\nWhat's next for Pal-it\nRATINGS-2 parts (star system and BP)\nIncreasing user community and crowd sourcing data\nExpand on mobile and build a native app\nCertification\nPassword security\nCaptcha codes\n",
        "hackathon_id": "sheinnovates16",
        "winner": false
    },
    {
        "description": "\n##Inspiration\nOur inspiration for the project stemmed from the fact that everyone in our group were self-described introverts. Thus, we wanted to make an app that would be a comprehensive database event listings that people could attend if they so wish to do so. The name Evencial came from combining the words \"Event\" and \"Social.\"\n## What it does\nThe app lets people sign in through Facebook, therein automatically integrating one's Facebook profile into their Evencial profile. They can then find events through 3 settings: University, Local, and Private. University events are, ideally, events one can only find after registering and signing up with their official university ID. The events would also be only created by university officials. Local events are events that can be found around you within a certain mile radius that you assign. Private events are events that users can create and invite their friends where no other people would be able to find these events unless they were also invited. Moreover, there is a Search feature for people to find events based on categories, such as Hackathons, music festivals, and other functions. The app also has the feature of showing the user a map with pinpoints that indicate ongoing events near them in the area. They can also set privacy settings on the app where only friends that send them requests, which they accept, will be able to see them and their profile on the app. This app lets people connect and follow their friends and favorite celebrities to whichever event they choose to go to. It allows people to go out of their comfort zone and make friends. Not only does this app help people, but it is also philanthropic in the sense that people can find charity events to attend and volunteering events to join. A fun feature about the app is that, when people join, they have the choice to make their profile picture as an animal. As the person attends more and more events, they will automatically be upgraded to older versions of the animal. An example of this, and our personal favorite, is when a person starts out as a caterpillar. As they attend more events, they eventually become a \"social butterfly.\" In addition to the aforementioned option, another feature is the ability to earn badges and stickers as people attend more events and host them. Finally, and perhaps most importantly, the uniqueness of the app is encompassed by the fact that it is tailored specifically to the user. The app, once the user is registered, asks them to take a short survey to subsequently suggest events to the user based on interest. The app will gather data on the user throughout the course of the app's use to suggest more accurate and interesting events. It will, additionally, send notifications to the user regarding said interesting events. The target demographic for this app circumscribes all ages since people at all stages of life can use this app.The overall encompassing goal of the app is to connect people, regardless of age, to events that interest them where they can also meet people that share the same interest in an easy and efficient manner through the use of this app. \n## How we built it\nWe built the app using Ionic and our skills in Java, HTML, and CSS. Skills we taught ourselves over the past 2 days include Ionic, how to use Angular JavaScript, and learning about APIs.\n## Challenges we ran into\nThe biggest challenge of the app was having it connect to Facebook through the login feature. \n## Accomplishments that we're proud of\nAlthough we did not manage to fully integrate the app with Facebook, we did manage to get the login feature of Facebook to show up on the app, which was a big accomplishment for us. Making the whole app, in a sense, was also an accomplishment since this was the first time that the people in our group collaborated to make an app.\n## What we learned\nWe learned that making an app is a multi-step process that involves a lot of forethought. We also learned more about Ionic, the Facebook API, Angular JavaScript, HTML, and CSS. She Innovates helped us improve on our communication skills with each other, and we managed to create an app due to this. \n## What's next for Evencial\nWe plan to complete making Evencial so that it can become its own app and be sent into the market for general usage. We would have to fix any problems with it and improve the app visually. Our ultimate goal is to connect people who do not usually go outside and attend public gatherings, and we also wish to connect people that hope to help the community and bring them together. \n",
        "hackathon_id": "sheinnovates16",
        "winner": false
    },
    {
        "description": "\nBuilt With\nflaskpythoncoffee\n",
        "hackathon_id": "knighthacks",
        "winner": true
    },
    {
        "description": "\nInspiration\nSubmitting bank transaction records during tax season is a tedious and rigorous process. Not only do you need to parse through every transaction, but you need to dig through old receipts and match them up  with the bank records (if you actually still have the receipts). Spenser takes care of that.\nWhat it does\nSpenser quickly takes a picture of your receipt and matches it up with your credit card/bank record so you can throw the receipt out and never worry about it again.\nHow we built it\nWe used an API called ABBY to handle the OCR transcribing and we used Plaid API to safely and gain access to users bank transaction history.\nChallenges we ran into\nAuthorizing with banking is a hassle. To get the authorization flow working in a way where it is initiated by the iOS application but authorizes the Rails application to access the users' data was a struggle (expectedly, privacy is important and therefore complicated).\nAccomplishments that we're proud of\nIt works as intended. Can do the signup flow, get users' transactions, take a picture, and store to S3 for later.\nWhat we learned\nWe're really good at building apps. Jokes. Everything takes longer than you expected. Little things can burn hours. Need to be prepared to overcome unforeseen obstacles. \nWhat's next for Spenser\nGoing to patch some things up and allow authentication using multiple bank accounts, implement filtering, and implement exports and finally, submit it to the app store.\n",
        "hackathon_id": "knighthacks",
        "winner": true
    },
    {
        "description": "\nCreated for the Knight Hacks hackathon at UCF. This project was inspired by the theme at the event!\nChrome extension for students at the University of Central Florida\nIn short, the extension injects Rate my Professor ratings onto my.ucf class search page\n",
        "hackathon_id": "knighthacks",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe realized that most student don't know what they want to do as a career and there aren't many easy ways for them to sample different career paths. 25%-50% of students start college as an undecided major and 75% of graduates ended up switching their major. We wanted to create a service that will help easy this problem.\nWhat it does\nOur app lets employers post videos of their daily work like and allows students to view them. Students can choose what profession they want to explore and then which professional they want to follow. They can then watch the videos that that professional has posted. Students can also ask specific questions of a profession, such as \"how does a stand up meeting work,\" and professionals see these questions and have the chance to respond, helping students get a better idea of what exactly the profession is.\nHow I built it\nWe built an Android app with Java, a back-end persistence service with Python, and designed components with Photoshop.\nChallenges I ran into\nWe ran into a lot of problems with the back-end - it was some of the teammembers first time working with apis and it was a struggle to go through. There were lots of miscommunications due to not fully understanding the platforms we worked on, but we caught them and came to solutions that fixed the problems we were having.\nAccomplishments that I'm proud of\nI've very proud of myself and my teammates for pulling off this app - we worked very hard on it and we're happy with the result.\n",
        "hackathon_id": "knighthacks",
        "winner": true
    },
    {
        "description": "\nInspiration\nDreamcatcher was inspired by a dislike for forgetting dreams and a love for building cool stuff.\nWhat it does\nDreamcatcher builds a video for the users to simulate the feel of a dream they just had. They describe what the dream was about and we make a custom video that matches the description and feel of their dream. \nHow we built it\nWe build the mobile app in Xcode using swift. Our backend is a mongoldb database and a nodeJS server. \nChallenges we ran into\nWe ran into the challenges building our algorithms to parse and build our videos. \nAccomplishments that we're proud of\nWe finished the app to the full extent we wanted to take it during the hackathon. \nWhat we learned\nWe learned a lot of connecting mobile apps and web services. We also learned about work distribution in order to finish the project on time. In a team of two mobile developers and two web developers, we all had to learn about each others platform to make the app work.  \nWhat's next for Dreamcatcher\nScaling, social media sharing, and watch extension. \n",
        "hackathon_id": "knighthacks",
        "winner": true
    },
    {
        "description": "\nInspiration\n\nWe wanted to build something integrating both hardware and software. By utilizing the new Leap Motion platform we were able to achieve this goal.\n\nWhat it does\n\nSimulates a 3D Asteroids game using your hand a spaceship to avoid obstacles.\n\nHow we built it\n\nUsing three.js with a JavaScript library to interface with the Leap Motion\n\nChallenges we ran into\n\nLearning three.js was difficult due to our lack of experience with the framework.\n\nAccomplishments that we're proud of\n\nLearning three.js just enough to feel comfortable using it again in a personal or professional project. \nSuccessfully integrating with the Leap Motion through its JavaScript API.\n\nWhat we learned\n\nThree.js is a very powerful framework and should be considered for WebGL projects. The Leap Motion is an amazing and inexpensive platform for capturing high fidelity hand poses. The range of motion and gesture support we tapped in to while developing AstroRun barely scratched the surface of what the Leap is capable of. We hope to utilize this hardware for future projects.\n\nWhat's next for AstroRun\n\nAstroRun was a proof-of-concept 3D WebGL for us. We wanted to dive in to a mostly unknown framework and try to do something meaningful with it. With our experience gained from this project, we will probably move on to other, unrelated projects.\n\n",
        "hackathon_id": "knighthacks",
        "winner": true
    },
    {
        "description": "\nInspiration\nApple got rid of the bling (green light) on the side of our MacBooks that told of the battery percent when closed :(. So we had to come in with a quick fix.\nWhat it does\nWhile your Mac is closed, you are able to see how much battery you have left. Through the app, you are also able to see if you left you Mac connected.  \nHow I built it\nWe built a server, automated a terminal command and learned swift to create a widget to stream the data channels we wanted from the mac to the iPhone.\nChallenges I ran into\nWe first tried to use Bluetooth to display the battery power of the MacBook on the iPhone but were not able to. \nAccomplishments that I'm proud of\nThe group consisted of members who were at their second and first hackathon. We are very excited at what we were able to do in just 18 hours!\nWhat I learned\nWe learned how to use terminal, cron, Python, flask, swift, and APIs. \nWhat's next for How Lit?\nWe're launching worldwide baby\n...Coming Fall 2085\n",
        "hackathon_id": "knighthacks",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavaandroidmavenhtml5css3javascriptgoogle-calendarscheduleeducation\n",
        "hackathon_id": "knighthacks",
        "winner": true
    },
    {
        "description": "\nInspiration\nInjustice anywhere is a threat to justice everywhere. We must protect the memes if we wish to continue following the internets Meme Dream.\nWhat it does\nDank Swipe allows the user to upload and sell their own dank memes for Danks(currency). It also allows the user to vote on other peoples memes, and even invest in the memes.\nHow we built it\nWe built it our platform out of huge amounts of blood, dank, and meme. To power these heavy dependencies, we built it on ruby on rails, postgres, and javascript on the frontend.\nChallenges we ran into\nThe biggest challenge we ran into was designing the model layout to allow the trading and profiting off of memes. Countless migrations were generated before final committing of the migrations to master.\nAccomplishments that we're proud of\nWe are very proud of how memetastic the platform has become. Not only is it powered by static memes, but it takes advantage of our memetastic users to drive the content of the site.\nWhat we learned\nWe learned that you really should come into a hackathon with a plan. Changing projects at 4am hurts. Bad.\nWhat's next for DankSwipe\nWe plan to fork it for future security testing purposes, as well as future production development. This way we can get the best of both worlds: A learning platform, and a production \"fun\" platform.\nPLEASE NOTE:\nThis version has some bugs that we have intentionally not patched yet. We plan to use this as a platform for teaching web security on enterprise applications. Please see Bobby for details.\n",
        "hackathon_id": "knighthacks",
        "winner": true
    },
    {
        "description": "\nBuilt With\narduinohardwareelectronics\n",
        "hackathon_id": "knighthacks",
        "winner": true
    },
    {
        "description": "\nInspiration\nA couple guys met with two others at the beginning of the night. We instantly connected with our love of gaming and our enthusiasm to try VR.\nWhat it does\nA game that uses the Myo armband and oculus rift to provide a unique javelin-throwing experience.\nHow I built it\nUnreal Engine.\nChallenges I ran into\nInexperience with Unreal Engine, oculus, and myo.\nAccomplishments that I'm proud of\nWe got a game going. We're very proud of what we were able to do, given that we had planned it all when the hackathon started.\nWhat I learned\nUnreal Engine programming, using the myo armband and collecting sensor data, and setting up the Oculus Rift with UE.\nWhat's next for Virtual Reality Javelin Toss\nMore game modes (Hit the target, toss as hard as you can, bigger explosions)\n",
        "hackathon_id": "knighthacks",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascriptnode.jscanvasapachedockerwolfram-technologiesamazon-web-servicesgoogle-custom-search\n",
        "hackathon_id": "knighthacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\nunityc#\n",
        "hackathon_id": "knighthacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptjquerybootstrap\n",
        "hackathon_id": "knighthacks",
        "winner": false
    },
    {
        "description": "\nInspiration - The daily hassle that every person undergoes at UCF was the major inspiration for coming up with this easy to handle and monitoring parking system.\nWhat it does - Each parking spot will have a sensor that will detect whether the spot is free or not.\nHow we built it - Using an arduino coupled with a light sensor , send the spot information to the server and a web page will display the data\nChallenges we ran into - lots of backend problems.\nAccomplishments that we're proud of - A working protoype that is good to be scaled up !\nWhat we learned - Never give up !\nWhat's next for Knight Parking - INcreasing the scale of the system.\n",
        "hackathon_id": "knighthacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nI lost my umbrella yesterday and I had no idea how I would be able to get it back\nWhat it does\nIt helps students find their lost belongings through the help of other students\nHow we built it\nWe used domain.com domain and then we used a bootstrap to help finish up the html and css portion of the website\nChallenges we ran into\nWe had a really bad issue with the actual website and trying to upload things on it\nAccomplishments that we're proud of\nProud that we came in clutch with this project\nWhat we learned\nWe learned that we have no idea what we were doing and we need to work more\nWhat's next for Campus Findr\nHopefully gets picked up by the University of Central Florida and can make into an application or at least web friendly site\n",
        "hackathon_id": "knighthacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\nunitygoogle-cardboard\n",
        "hackathon_id": "knighthacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nLack of local knowledge of bars.\nWhat it does\nAllows the user to engage on a bar crawl to explore new bars or experience ones they've enjoyed previously.  This app also allows users to create their own custom bar crawls.\n",
        "hackathon_id": "knighthacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroid-studiojava\n",
        "hackathon_id": "knighthacks",
        "winner": false
    },
    {
        "description": "\nWith a 60,000 student campus, college events can often seem isolating. Last year our student government implemented a new system for organizing our pre-football game tailgating festivities. This app was built not only to support this new system, but also foster a way for students to meet new people on campus. Tailgateway is a social app that connects you to tailgating groups, allows you to track lists of things required, manage guests, and distribute key information such as table location.\n",
        "hackathon_id": "knighthacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nSexual assault is one of the biggest problems facing today's college students\nWhat it does\nHelps friends keep track of each other while out, and allows them to set user-defined regions and receive notifications when any group member enters or exits the region.\nHow I built it\nXcode, swift 2.1, iOS9\nChallenges I ran into\nToo many to list\nAccomplishments that I'm proud of\nIt's my first iOS app and I built it on my own!\nWhat I learned\niOS basics, Cocoa Touch development, Xcode, MapKit and CoreLocation frameworks, integration of third party libraries.\nWhat's next for Keeper\nFinish implementing features, hopefully public release within the next year to help make a difference in people's lives\n",
        "hackathon_id": "knighthacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\ncssjavascripthtmlphp\n",
        "hackathon_id": "knighthacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe were inspired by the need for conservation and we want to inform people of how the impact of their decisions can affect the environment in bad and good ways. \nThe objective of the game is to get the most resources, achieve more advanced civilization through tech tree progression, and maintain a good environment on your planets at the same time. By keeping your planets healthy, you can ensure the planet lasts longer and generate natural resources, maybe even some surprises. \nEach time you build an oil well, factory, or research center, some of the planet's nature is lost and if this is done repeatedly, it causes the planet to lose health and eventually become an uninhabitable desert. The game is over when this happens to one of the planets you built on. \nPlayers can use their money to buy upgrades such as jet packs and fly through the galaxy and explore unique planets. \nAverage game time is intended to be 15 minutes. \nWhat it does\nIt doesn't do much; this is more of a proof of concept at the moment. \nHow we built it\nWe built it using Unity. \nChallenges we ran into\nWe encountered challenges with having players put the factories on the rounded surface of the planet. The factories are to generate money in the game. \nAccomplishments that we're proud of\nWe learned a lot about Unity and debugging\nWhat we learned\nCoding a game is far harder than we expected. Later, we realized that we could have done something simpler and finished it. \nWhat's next for Green Core\nGet it done! \n",
        "hackathon_id": "knighthacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nMany different types of games, FTL was a great inspiration.\nWhat it does\nIt's a game that can be an rpg. bare bones.\nHow I built it\nWith Construct 2\nChallenges I ran into\nBeing the only person on my team to program.. even when I'm mostly a designer. \nAccomplishments that I'm proud of\nThat I got so much work done, wish I had more time. \nWhat I learned\nSome new ways to work with Construct 2 and about the story of some computer company. The guest speakers were great! \nWhat's next for Make Haste!\nFinishing the game then release on the mobile market.\n",
        "hackathon_id": "knighthacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe set out to create a tool that could be used to allow individuals suffering from temporary or permanent near-paralysis to communicate with their loved ones and express themselves in an accessible, intuitive and relatively inexpensive way. Our hope is to offer an option for the broadest possible audience of mobility impaired individuals, be they victims of genetic diseases, stroke, trauma or various other misfortunes, to easily input information into a computer.\nWhat it does\nIn its current state, our device allows any individual with moderate control over forehead muscles and/or the ability to blink to communicate messages comprising the full alphabet through their computer. Aggressive predictive text modeling assists the user in achieving reasonable speeds of transmission, helping combat one of the most frustrating dimensions of alternative input devices.\nOne additional benefit of our system is that (unlike Morse code or many muscular-activity based devices with a wide range of inputs) our user interface is designed to be intuitive enough that most users will be writing coherent messages within minutes of affixing the EEG band to their head.\nFinally, although this  a communication tool and not a medical device - the price differential between a $300 headband + open source hardware and other communication options available to victims of near-total paralysis is significant. Our hope is that, through future projects such as Typeface, the cost of communication will diminish greatly.\nHow we built it\nThe key components of our system are as follows:\n1) A python-based OSC server to receive and interpret data from the Muse headband. The Muse communicates over Bluetooth to a Muse provided input diver (in this case for Windows) which acts as a client and connects over UDP to our server.\n2) Our OSC server monitors the streams passing along this socket connection and isolates data of interest. This includes a value indicating the probability of muscle movement around the forehead and eyes - our most reliable metric for input at this time. We also have a few theoretical models that interpret EEG data without relying on muscle contractions of any type, and, with some calibration we have have limited success translating this data into codeable inputs. However, the lengthy calibration requirement as well as the general unpredictability of these models did not meet our needs for an intuitive and accessible device and thus remain a project for future development.\n3) The OSC server interprets this data and they relays that interpretation via a Tornado server, through websockets, to a web frontend. We chose a web frontend over a client side GUI for two chief reasons: from a project management perspective, web development was much easier to isolate from the hardware and sever development allowing us to better work concurrently during the hackathon; from a design perspective, web development + our python stack makes us readily cross-platform in a way that many OS-specific GUI libraries do not.\n4) The web GUI displays an array of values to the user and iterates through them in a predictable way - allowing the user to first select a column, and then a row of values from a 6*6 grid. This type of input is easily learned and relatively self-explanatory which means that users can start communicating right away.\nChallenges we ran into\nOur original plan was to build a device that would convert EEG readings to Morse Code based on K-Means clustering. It was not long until we realized this was not a viable strategy. In addition to neither of us having a background in Morse Code - a highly timing-sensitive protocol that isn't easily interpreted by computers to begin with - finding two distinct clusters amid the noise generated by our brains proved impossible. In general, the information monitored by the Muse headband seems better suited to recognizing overall states (such as drowsiness) than to isolating snap deviations in thought patterns.\nAccomplishments that we're proud of\nDespite these setbacks, we remain proud of the fact that our core objective - making it cheaper and easier for paralyzed individuals to communicate with friends and loved ones - was more or less met. The chief reason for this was our ability to devise a reliable, unary input protocol that averages a rate of 1 character every three seconds (comparable with many commercial devices, even without accounting for the predictive text modeling). Although this realization was more the result of a serendipitous recollection of a story about POWs who communicated using a similar scheme during Vietnam than the result of any particular insight on our parts, we feel strongly that it is one of the better ways to key input into a machine with use of only one (and in this case, virtual) button. \nWhat we learned\nDespite it not making its way into the final project, we learned a great deal about big data analytics (most of our models needed to wrestle with millions of data points in four+ dimensions) .\nOur sense of UI design was also pushed in new ways as we struggled with devising a user interface that could accept complex information from a user without the use of either a keyboard or mouse.\nWhat's next for TypeFace\nPerhaps more so than any other hackathon project we've completed, we'd like to ensure that this one has a future. Not only was it a blast to code, but we also hope that it might make someone's life easier or at least inspire someone better at EEG interpretation and biohacking than us to push this frontier forward.\nFor the remaining hours of the hackathon we will be continuing to work with our data modeling algorithms so maybe there'll be a surprise EEG-only option by the time demos start!\n",
        "hackathon_id": "hoyahacks",
        "winner": true
    },
    {
        "description": "\nInspiration\nRecently the world has been going through a lot of disasters. Some natural and the other man-made. Some people unite at these times but are unable to manage their will to help. Twitter has been really helpful in making this happen. However, this activity is not managed properly and many times tasks are overlooked or are looked by many people at once. Example: In Chennai Floods, many people tweeted about the help they required, however, sometimes the help was not given or was given by 2 sets of people. The motivation is to do a 1 to 1 matching of people who want to help and people who are in need of help with no conflicts and better management.\nWhat it does\nIt takes in twitter data for particular HashTags and creates a stream classifying relief required into various categories. Currently the categories are predefined. But intelligent systems can be used to mature the set of categories in the future. Each relief request is converted into a task which can be seen by everyone in the form of tabular format. Once someone takes up a task, they are given 1 day to work on it and if they are unable to finish the task, their trust level decreases. Once they complete the task, their trust level increases. This ensures that no task is taken by multiple users and that no task is overlooked. \nHow I built it\nWe built the application on HTML and used firebase for Database. We used twitter API to get all the relief request, for login purpose and also for showing tweets from a particular hash tag in real time. We also used Facebook login API for alternate login. We used Spark and Kafka for natural language processing and classification of tweets.  \nWe started by dividing tasks on various levels, like database, frontend and backend. Then as the app kept going we kept taking up tasks and working on it. We used slack for communicating important information and API keys.\nChallenges I ran into\nThe main challenge was to be able to built a working application using new technologies in such sort span of time. But that was the fun of it too. Hence we love hackathons ;) :P . \nSince none of us had worked on UI, we faced quite some challenges on that end as well.\nAccomplishments that I'm proud of\nTo be able to come here even after having so many assignments' overhead ;)\nFrankly it would be to able to mock about how we were pathetic at different aspects, still overcoming them and coming up with an awesome app which has a scope of lot of improvements and can help people. \nWhat I learned\nWe learned that what makes a great app is an awesome and nobel idea and its not so difficult to built on a new technology. You always end up learning from them.\nWhat's next for Rescue Rangers\nThere is a lot to our Rescue Rangers in the future.\n\nClassification of twitter data is not matured enough. We can do a lot of natural language processing to eliminate rumours and classify data on the basis of tasks\nTasks are not prioritized currently, however we are various algorithms in mind to prioritize. \na. On the basis of keywords(Emergency, SOS)\nb. On the basis of upvotes given by humans(Sometimes computer is unable to understand exact sentiment of a request)\nCurrently we determine the trust level on the basis of tasks taken by the user. We are not sure about whether the task is completed. We can have a mechanism of assuring that task marked completed is completed.\n\n",
        "hackathon_id": "hoyahacks",
        "winner": true
    },
    {
        "description": "\n\nTimeCheck\nA bus-tracking app designed for HoyaHacks 2016\nCredits:\nAkshay Goel (akshay15@vt.edu)\nLucas Conti (lconti97@vt.edu)\nDagmawi Yeshiwas (dagmawi@vt.edu)\nNever be too late again.\nA positive change in public service.\nOver the years society has had no option but to deal with the strict bus schedules presented to them. Sometimes though, it doesn't always work out with your schedule, not exactly at least. We have now implemented a way to find a middle ground where both passengers and drivers can communicate to deliver a better system.\nWith TimeCheck, passengers have the opportunity to ping bus drivers if they are one minute away from the bus stop as a bus approaches. This notifies the driver that there is someone close by and gives passengers the opportunity to board before departure, taking advantage of a small window to make a big difference.\nDownload Now!  Available for Android from our website at link\n",
        "hackathon_id": "hoyahacks",
        "winner": true
    },
    {
        "description": "\nBuilt With\npythonflaskgoogle\n",
        "hackathon_id": "hoyahacks",
        "winner": true
    },
    {
        "description": "\nInspiration\nInteracting with Rift is pretty cool. Interacting with Rift AND Myo to drive a mini car would be even cooler. So we decided to create this.\nWhat it does\nVRoom-VRoom is an immersive user experience that integrates virtual reality via an Oculus Rift. The user controls a miniature vehicle trapped inside a tabletop maze with the objective of finding the treasure hidden at the center of the labyrinth. With a first-person view through Rift, the user guides the vehicle by sending directions through a Myo armband. The user\u2019s movements are translated into instructions for Spark Core which causes the car to move in the direction desired by the user. \nHow we built it\nThe final version of the vehicle consists of a body built with stacked Jenga blocks secured with duct tape. Two servos lie beneath the main body and are attached to wheels that we salvaged from a box of old Legos. The vehicle is completely wireless as it is powered by a 9V battery and controlled through a wi-fi connected Spark Core. The user can determine the car\u2019s path through Myo by using hand gestures that correspond with different directions.\nThe maze takes the up the entire top of a circular table with a 6-foot diameter. The walls were constructed with cardboard and duct tape and are taller than the user\u2019s line of sight when viewing through Rift. \nThe back of the car holds a smartphone that streams the live video feed to a computer, which is then viewed by the user through a connected Oculus Rift. This cockpit view is intended to give the user the feeling of physically being inside the maze.\nCar: Jenga blocks, duct tape, servos, Spark Core, wheels for Lego, more tape\nMaze: Cardboard, duct tape\nVisual Simulation: Oculus VR and Virtual Desktop, Thalmic Myo armband, video conferencing software\nWhat's next for VRoom-VRoom\nWe wanted to create an engaging experience for a first-time user of Rift and Myo while providing a fun, simple objective for them to accomplish. This project will encourage new users (including us!) to further explore the growing applications of virtual reality technologies. For example, VRoom-VRoom could be used to inspect spaces that are too small or dangerous for human beings like air conditioning vents or unstable terrain caused by natural disaster. With further development, the use of a Myo Armband could even allow technicians to provide remote repairs and emergency responders to deliver medical treatment and crucial supplies. From a recreational standpoint, activities like VR Drone racing already exist, and many more are popping up. This project suggests the possibility of VR RC Car racing and other mini-vehicle activities.\nWhat we\u2019d like to improve about VRoom-VRoom\nBetter control of the car.\nMore immersive VR UX. \n",
        "hackathon_id": "hoyahacks",
        "winner": true
    },
    {
        "description": "\nBuilt With\nnode.jscortodbhtmlcsstorque.js\n",
        "hackathon_id": "hoyahacks",
        "winner": true
    },
    {
        "description": "\nRepme\nRepme uses a novel algorithm to determine which candidates match your views on important views such as gay marriage, immigration, death penalty, gender equality, etc. Our server has parsed almost 100,000 bills proposed in the Congress to analyze the voting patterns of legislators. Simply complete a 20-question survey, and we compute millions of calculations in the backend to find political candidates who support you on the issues that you most care care about.\n\nComplete a concise, clear and relevant survey.\nSee where you lie on the political spectrum.\nGet matched with the candidates that support you on issues that matter to you.\nEverything is completely driven by real, live data provided by FiscalNote's API.\nSee the specific issues where you and the candidates agree.\n\n",
        "hackathon_id": "hoyahacks",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavaandroid-studiotwiterfiscalnote\n",
        "hackathon_id": "hoyahacks",
        "winner": true
    },
    {
        "description": "\nBuilt With\nandroid-studioweb-apptwitterhtml5css3pythonjavascriptflasktwilio\n",
        "hackathon_id": "hoyahacks",
        "winner": true
    },
    {
        "description": "\nInspiration\nBased on personal experience of enrolling in STEM majors such as computer engineering and computer engineering. Once enrolled, students like us were blindsided with courses with long and intricate course names. Who knew that computer science requires so much math? Well, we found out the hard way. If only other students like us who dream of pursuing STEM majors could use a service that outlines all the different areas of study that they'll encounter in their major. Oh wait, now there is!\nWhat it does\nMajor Way takes your pdf. four-year plans of your major, and parses through to extract course names and gives your a pie diagram that gives you percentages of the different areas of study that composes your major. \nHow we built it\nUtilizing Python to organize the backend, Wikipedia and DBpedia API to help create the semantic relationships. We developed and coded the Natural Language Processing (NLP) on our own using background information on Intersection Graphs (Graph Theory). We trained our NLP utilizing Wikipedia's Outline of academic disciplines and DBpedia. The resulting categories are made into a JSON file that we format into a colorful and descriptive pie chart.\nChallenges we ran into\nThe math part of the Graph Intersection was challenging for us. In addition, to debating which data structure to utilize (in the end we worked with dictionaries and arrays).\nAccomplishments that we're proud of\nSuccessfully developing a working Natural Language Processor. \nWhat we learned\nWe got a taste of Graph Theory and furthered our HTML and CSS to develop the project.\nWhat's next for Major Way\nTo expand and improve our parsing pipeline for the system. Optimize our Intersection Graph.\n",
        "hackathon_id": "hoyahacks",
        "winner": true
    },
    {
        "description": "\nBuilt With\nhtml5javascriptcss3google-mapsyelpfacebook-graphmongodbnode.jsjquery\n",
        "hackathon_id": "hoyahacks",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavaandroid-studiojohnny-fivefiscalnotetwitterintel-edisonservos\n",
        "hackathon_id": "hoyahacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nToo often the Millennial generation is criticized for inaction and an acceptance of the unjust institutions around us. Yet there are more problems and more causes to take up than ever before. LeadUp is our solution, creating a platform for mobilization of people who care about an issue but aren\u2019t sure how to turn that care into action. \nWhat it does\nThere are two roles to take in LeadUp: everyday users and content creators. Every day users will be updated with stories related to issues they care about, with these preferences taken down at signup. These users also indicate the preference of notification based on proximity (local, national, international), to further personalize the scope of care. After being presented with a news story (the ones which trend/are most popular while meeting the criteria of user preferences are pushed to the top to create mass action), there are options to post online using a consolidated hashtag, but also options to act in real time with the cause, through donation of time, money, or even contact info to direct the user to the necessary persons. Content creators indicate local events and other things taking place in the area for people to participate with. \nHow I built it\nWe designed our application using Photoshop, created a fully functional prototype of our application using InVision, and coded the framework of our back-end code using C++. To create data visualizations of the social issues included in the app, we gathered data from two sources: websites we scraped using Python and datasets from Data.gov. Then, we used Tableau to visualize the data through regional map graphs. and  Attached is a link to our prototype: https://projects.invisionapp.com/share/DN5TIYQWQ#/screens \nChallenges I ran into\nWhat is considered to be a cause? How do we play god and choose what is more worthy than others? We cannot, and after debating this issue for a night, we settled on a more robust content creation function on LeadUp. We do not and probably cannot ever know what are new social causes that do not affect us, and do not have the same knowledge on the resources available to get involved as those who are already mobilizing others and are active within their movement have. \nAccomplishments that I'm proud of\nOur team was comprised of first-time hackers. Only two of the team members had programming experience, which was only in academic setting. Despite our inexperience, each member leveraged his or her person skills and talents to create a minimum viable product.\nWhat I learned\nThere is an inherent difficulty in mobilizing a world that interacts with so many pressing challenges at once. In creating a platform to convert care into action it must be considered that there are many different priorities among many different people, and this must be taken into account. \nWhat's next for LeadUp\nThe next step is taking LeadUp from a prototype to a fully functional app and marketing to relevant users\n",
        "hackathon_id": "hoyahacks",
        "winner": false
    },
    {
        "description": "\nWe programmed the delta robot to play a human in Tic Tac Toe. The user inputs the space they want to move to, and the Tic Tac Toe algorithm responds with the most optimal possible move. We built it using arduino and python. While doing so, We ran into a few challenges which causes minor numerical errors which we were able to fix. We are really proud that the robot works and we've learned how to make these technologies work together really well. In the future, Delta robot will operate off image processing and play autonomously with the user input being a regular pen and paper game versus the computer input. It will feel just like playing a friend!\n",
        "hackathon_id": "hoyahacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nI was inspired by the comprehensive twitter API\nWhat it does\nIt streams either your news feed or another's timeline to your computer in an elegant format. It can be used as a screen saver.\nHow I built it\njava\nChallenges I ran into\navoiding pulling data from twitter too frequently\nAccomplishments that I'm proud of\nI'm proud of finishing something that is presentable\nWhat I learned\nThrough my mistakes, I learned that working alone is not the proper way to go in an event such as this\nWhat's next for tweetStream\ntweetStream may include more user input in the future so it can be more versatile\n",
        "hackathon_id": "hoyahacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe wanted to build something new in the fitness world using hardwares, and do fund raising for student veterans in our school. I wasn't sure if anything useful would come out so I let my fantastic teammates decide. Between Ocululus Rift, Leap Motion, and... the Pebble watch, we picked the small and defiant.\nWhat it does\nIt records your weight and prompts you to perform a punch, and then by creatively using the watch's accelerometer, you can obtain the maximum velocity of your punch. It's best used on a leather punching bag, or... a rolled sleeping bag would work! Sleep, what is that...?\nHow we built it\nFirst we downloaded the Pebble Time Android app. Using that, we connected to the watch using Bluetooth. Then we studied Pebble's API since we weren't expert at Pebble products, but that's why we are here, to hack stuff! From there on, we dug deep into linear algebra, physics, electrical engineering and calculus in order to get this watch's accelerometer to do what we wanted, collect a series of movement signals as a base for calibration, then integrate to find the maximum velocity, upon which we can determine is the point of impact, and obtain the acceleration at that point. We wrote C in Pebble's cloud IDE, compiled the code on the cloud, ran it on Android and tested on Yi's pun... I mean sleeping bag.\nChallenges we ran into\nThere were many technical difficulties. All three of us being software developers working on a physics heavy hardware project, and writing code in an unfamiliar programming language was a challenge.\nAccomplishments that we're proud of\nWe were able to develop a working software that used the watch's accelerometer in a fun way, which is to measure the person's punch upon impact. We used mathematical models in our program to simulate the recoil of a punch by integrating acceleration to find the terminal velocity, thereby estimating the start frame of the recoil.\nWhat we learned\nEmbedded systems projects require specific knowledge of the instruction sets since each set is different from another. Calculus classes are useful, and physics, writing, and... coffee.\nWhat's next for Test Your Punch!\nUser input of his or her weight, and calculating force of impact based on estimates of the mass of a fighter's arm.\nFundraising campaign to finance tutors for veterans who need help in school.\nA Hall of Famers RESTful API.\n",
        "hackathon_id": "hoyahacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtml5css3\n",
        "hackathon_id": "hoyahacks",
        "winner": false
    },
    {
        "description": "\nAn Avenue to Combat Sexual Violence\nWith a plethora of studies reporting, 1 in 5 women will be a victim of sexual assault while they are in college, the need for college campuses to implement and/or improve prevention and awareness measures is at an all-time high. Additionally, researchers from the Association of American Universities stated that almost 40% of college students have little to no familiarity on how to report or get help after an incident of sexual assault.\nIn order for schools to continue retrieval of federal funds, educational institutions must be Title IX compliant. Title IX is related to the governance of gender discrimination on campuses, in hopes to remediate or prevent a \u201chostile environment\u201d for students. Sexual violence and neglecting to effectively assist a student after an incident occurs, is a key violation. But through innovation and collaboration with subject matter experts & survivors, a tool can be developed to increase awareness of resources nearby and protect an institution\u2019s brand.\nThis tool is actNOW.  A mobile empowerment platform delivering unique capabilities that will foster reassurance in the user\u2019s ability to seek help, support, and most importantly, justice.\nWhat it does\nactNOW is envisioned to:\nProvide instant psychological relief and empowerment to sexual assault survivors.\nEstablish an educational element to spread sexual assault awareness and advocacy.\nAct as a liaison or a \u201cone-stop shop\u201d for sexual assault survivors to obtain any help/service they may need.\nactNOW includes four different modules which serve an assortment of purposes to assist survivors and educate college students. The modules are: \u201cHelp Near Me\u201d, \u201cWhat Just Happened?\u201d, \u201cSAFEspace\u201d, and \u201cConsent 101\u201d.\nHow we built it\nOur team consisted of students from the Georgetown School of Professional Studies - Technology Management program.  The diversity within the actNOW team played a great role in collaborating and assessing what would be a feasible concept. Since the majority of the team's technical and programming background varied substantially, the actNOW solution is a hybrid of:\n\nInteractive Wireframes\nAdaptive web page to search for nearby resources, log incident details, and chat with Tele-Advocates.\n\n",
        "hackathon_id": "hoyahacks",
        "winner": false
    },
    {
        "description": "\nInspiration: Have you ever been to a party when the music was a bit lacking?  With our new web app, you will be able to tweet your favorite songs to your DJ in a matter of seconds.  Hashtag your local DJ's handle and your favorite song and artist and in no time, you will hear your favorite song being played at the party.\nWhat it does:  Takes in hashtags of a DJ and creates a DJ playlist for the night.\nHow we built it:  With JavaScript, CSS, HTML, and JQuery, we were able to create the web app using Twitter's API to retrieve the information and allow users to hear the song that they requested and easily get connected to the DJ before or during the party.\nChallenges we ran into:  Learn a new language and using various aspects of the Twitter API.\nAccomplishments that we're proud of: We were able to retrieve a list of songs and artists that people have tweeted previously.\nWhat we learned:  We learned that programming could be applicable to our daily lives and events.  We can create a web app that could solve the issues that we may face with communication during the night.\nWhat's next for DJStacks:  Add more features to the web app so that the DJ can get a better feel about what the guests want to listen to.  For example, listing the songs in different categories (ex. genre, beat numbers, and popular votes).\n",
        "hackathon_id": "hoyahacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe wanted to make everyday life easier by removing friction from computer control.\nWhat it does\nAirMouse allows you to control your mouse through hand gestures. Use the pointing branch of the repository for touch screen-esque control (Recommended). Use the master branch for joy stick-esque control.\nHow we built it\nProgrammed using PyUserInput and the LeapMotion API in Python\nChallenges we ran into\nCalibrating the mouse motions to feel natural was the largest challenge.\nAccomplishments that we're proud of\nBeing able to draw art in MSPaint using the pointing branch.\nWhat we learned\nWe learned multiple algorithms for clicking and moving.\nWhat's next for AirMouse\nAirMouse can become more functional with the introduction of more gestures to access more commands.\n",
        "hackathon_id": "hoyahacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nBig data is an increasingly important field, but to most people, it's simply charts and numbers. The truth is, people don't tend to care about data unless it affects them. To address this, we created a game that allows a new innovative way to visualize data--it allows users to be directly affected by the data, as gameplay changes based on the dataset. If for example, crime rates are high in a particular area, enemies would become more difficult.\nWhat it does\nPlayers must dodge enemies generated in various patterns, all based on big data gathered from data.gov in various categories. Each style of enemy is different, and it varies if there is a lot of data on one topic or a little.\nHow I built it\nData was gathered from data.gov, and parsed using Ruby. Then, the parsed data was fed into our game, which was written from scratch in Java. Enemy patterns were designed with algorithms in order to represent the datasets.\nChallenges I ran into\nIt was challenging to find the best way to visualize the data and how it affected enemies.\nAccomplishments that I'm proud of\nEveryone worked hard and managed to make something! And we all learned a lot of new stuff.\nWhat I learned\nMany of us had no experience using Java for anything other than school projects, so we learned a lot.\nWhat's next for Bitproof: Byte the Bullet\nYou should play it~\n",
        "hackathon_id": "hoyahacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nPremier League Highlights incorporates all the best moments of a particular game week. So, we found it cool to have a collection of stuff we wanted to view and what better medium than a video.\nTherefore we came up with the idea to present a person with a video comprising of his/her topics of interests.\nWhat it does\nBased on a person's twitter profile, a video comprising of smaller chunks is played. Each of those smaller chunks pertains to one or more of the person's likes. For example, if a person tweets about Seattle Sounders, vividly video is likely to show a classic goal score by the team.\nHow I built it\nThe backend is built on django. We used the regular HTML, CSS, Javascript for the frontend. We used pafy to download videos of interest, subprocesses to run bash scripts to extracts chunks from a video. All the extracting and combining was done using the command line tool ffmpeg.\nChallenges I ran into\nWorking with video, audio streams as part of ffmpeg. Adjusting codecs, frame sizes etc.\nAccomplishments that I'm proud of\nCombining chunks of videos to create one main video programmatically.\nWhat I learned\nWriting wrappers, exploring varied tools.\nWhat's next for Vivid.ly\nAdding functionality to merge quotations, screenshots etc. to the video.\n",
        "hackathon_id": "hoyahacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe wanted to design something that would fit into the modern internet of things.  Part of our inspiration came from the massive number of people on the Georgetown guest internet and another part came from a survey of sensors that were available to us.  We saw temperature and motion sensors and thought about doing something that could track the movements of people, allowing for better responses to certain needs, such as heating or extra routers.\nWhat it does\nOur product has two sides to it.  The first is a program that can be loaded onto any embedded device that is connected to the internet.  It works by sending out a ping on the wifi system that the device is connected to through the closest router, and then collecting data on the number of devices connected to the internet through that router. This information is then put onto our website which updates in realtime to provide location, trend, and device-specific data in an aesthetically pleasing manner.  This information can then be used to monitor foot traffic or provide extra routers in high usage areas among other things.\nHow we built it\nWe treated the embedded devices(we chose to use Spirent Qubes and Raspberry Pi's) like computers.  The program is loaded onto the devices and it can then run indefinitely.  These devices can be placed near any routers in order to gather information.  The website was built off of an existing template which we modified to better fit the information we needed to present.\nChallenges we ran into\nThis was a very ambitious project for a team of freshman.  Each stage of development presented its own challenges.  It took us a while to decide on this project, along with what applications it could possibly have.  Then we had the challenge of figuring out how to send out pings through the code that we wrote in Python.  This was novel to all of us, and we started out with no idea how it would be done, or even that it could be done.  Even as that was being figured out, other members of the team were writing algorithms to parse through the large amounts of complex data that the ping would return.  Creating a website that was both pleasing to the eye and able to effectively present the info was challenging as well.  Formatting everything was a huge challenge that took hours of tinkering in order to get right.\nAccomplishments that we're proud of\nWe are proud that in such a short amount of time we were able to finish a project that collected data on everybody connected to the wifi(possibly our most proud accomplishment), and send it all to a nice website.  More specifically, getting the code, especially the OS detection system, onto a handheld device and seeing it work was our proudest moment.\nWhat we learned\nThere was a mountain of tasks in front of us at the start of the hackathon, but each task taught us interesting things.  We learned the most about OS detection on wifi networks, but we also gained a lot of experience in data processing and website design.  Overall this taught the entire team about time management and efficiently splitting up tasks.\nWhat's next for IP Linkr\nWe intend to develop more intensive scans and packet sniffing.  We would also like to bring IP Linkr to a broader range of devices like mobile phones.\n",
        "hackathon_id": "hoyahacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaandroid-studioandroidxmlphpmysql\n",
        "hackathon_id": "hoyahacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\nc#unity\n",
        "hackathon_id": "quackhack",
        "winner": false
    },
    {
        "description": "\nAs a Twitch Streamer, you have no way of meeting and chatting with other Streamers, let alone Streamers who love the same games you do. \nTwitch Grouper matches Streamers based on mutually liked games.\nExperimental (not final) Android app apk\nhttps://drive.google.com/file/d/0B4twShEi6DZGRTRmMFVscUFWbU0/view?usp=sharing\nFinal App Submission\nhttps://www.flinto.com/p/0e4ac869\n",
        "hackathon_id": "quackhack",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe wanted to create a game that provided the social aspects and open structure of board games while bringing the interactivity and unique experiences of a video game.\nWhat it does\nThe game plays out with one player facilitating the experience, talking the players through a dungeon as the explore it. As the \"Game Master\" takes players through this game they will encounter random fights, bosses, and loot while exploring, however players are encouraged to go beyond just the gaming aspect of this creation to allow the GM to describe the world and actions in details. The GM paints the world, story, and background, as well as handles the actions of the players, while the game provides the players with a break from \"rolling dice\" to advanced their adventure.\nHow we built it\nWe used a plugin for UE4 that allowed the Arduino to be accessed via write and read commands through the serial port. By using this the game engine could take real time data from the players and GM, such as player movement, awarding loot, and experience, or other areas then pass data back for the GM or players. The players interact through a series of tile based movement, the play a simple turn based game to determine the outcome of fights with enemies.\nChallenges we ran into\nWe faced many challenges while going through this project, namely getting the Arduino to talk with UE4.When we found a plugin that allowed us to do it through visual scripting that made the process significantly easier. However the code to allow adequate back and forth communication between the Arduino and UE4 was difficult to manage to allow data and variables to be passed back and fourth.\nAccomplishments that we're proud of\nWe created the whole thing through UE4's visual scripting since none of us had to much experience coding a full game before. It was incredibly challenging getting all the code to work properly, especially some of the more in depth mechanics of the game but seeing a video game interact with the world around in such a way was incredible to see brought to life. \nWhat we learned\nWe learned a lot along the way in this project. It furthered our understanding in code and the way programs interact with each other, and helped us learn to really think about the process of designing a creative and fun way to interact with games and media. It helped some of us learn the aspects of game design that we really enjoyed and showed us how to work together to really highlight each of our skills. This project helped really learn the importance of prototyping a project though, and how even if it isn't the prettiest product, it can show the functionality of an idea quickly.\nWhat's next for Twitch_Names_Our_Game: Neckbeard Samurai\nWe would like to change the way the Arduino interacts with the UE4 by making the sensors IR or NFC instead. This would lower player effort to enjoy the game as well as allow it to write and read data to the chips to store important character information, allowing you to use your figure wherever you are without needing the computer you were on. We would also like to expand this idea from just D&D style games, allowing for a whole realm of physical games to take advantage of it. Imagine playing risk, but instead of rolling dice to fight you engage in a WW2 style FPS with the person you are trying to take over, or Monopoly that stimulates economic consequences of on player getting to much power, maybe a card game that allows you to level up and fight each other without just reading numbers off a piece of cardboard, or pandemic where you have to fight through waves of zombies to get through the city. There are so many areas and ideas we could apply this to that would really bring board games into the 21st century allowing more depth and creativity to the fun social environment of classic games.\n",
        "hackathon_id": "quackhack",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe were inspired by some of our favorite management simulation games (ex. Game Dev Tycoon, Pandemic) and applied our love for the security field to create a game that is robust and complex enough to kept us interested, as well as making a game that we would love to play.\nWhat it does\nAs of right now, our game contains robust, multiple ending, missions that are highly customize-able and we encourage community involvement by making our mission templates easy to create with a basic JSON file. Our game also contains functioning, realistic market economy to control market prices of purchasable's to control. Diverse player stats that directly influence later game choices and allow/limit mission choices. Profession grade art and design assets that were implemented in limited amount of time. \nHow we built it\nThe game itself is built off libgdx java game engine, all other resources were made from the ground up.\nChallenges we ran into\nWe ran into issues connecting and managing a server to kept the live economy going and had to temporarily make a local version of the server for proof of concept. Another issue was keeping all our ideas in check so we had to realize very quickly what was in scope for the event.\nAccomplishments that we're proud of\nWe are rather proud of an economic equation that adequately recreates a simulation of supply and demand for our live economy. We were even commended by industry professionals about our contextual recreation of the market.\nWhat we learned\nWe learned how to effectively distribute work in order to make our game in a unified way and how to properly keep ideas in relative scope.\nWhat's next for Drop Table \\x48\\x54\\x50\nWe have a 4 page outline of what we hope for the game, so we want to work on that. Here's a link https://docs.google.com/document/d/1YBDAbNHDYcyhhTIv0SaGMUKYqM_eoySicwNVwcE5NdM/edit?usp=sharing\n",
        "hackathon_id": "quackhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\nunity\n",
        "hackathon_id": "quackhack",
        "winner": false
    },
    {
        "description": "\nInspiration: Our inspiration for the game came from large party games such as Mario Kart. We wanted to create a game that would be very fast paced and support large amounts of people.\nWhat it does: Our game is a 2D side scrolling running game that can allow anyone with an Android device to join immediately. The game is a race to see which player can reach the end of the map without getting too far behind. There's a main screen, and then the phones would become controllers.\nHow we built it: We designed the maps with Tiled and we programed everything with the gaming frame work LIBGDX with Java.\nChallenges: we ran into Being able to manipulate the physics in the game, BOX2D, multiplayer and networking, and designing working maps.\nAccomplishments that we're proud of: Overcoming all of the above.\nWhat we learned: We learned that no matter how good the game is, we can't waste time with the wrong ideas and we must make a plan before doing everything.\nWhat's next for Inferno Duck: We may continue improving this project and may release it into the app store.\n",
        "hackathon_id": "quackhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptprocessinghtml5\n",
        "hackathon_id": "quackhack",
        "winner": false
    },
    {
        "description": "\nWe are having an awesome time here at QuackHack helping out where we can!\n",
        "hackathon_id": "quackhack",
        "winner": false
    },
    {
        "description": "\nWe Wanted to see the stars! and Explore! The game is a basic maze format, but also you can explore. Once you reach the end, you win the game and can replay. \nIt can be ran in third person and it is designed for Oculus. By using the Oculus there is so much more to see, look up!\nWe built it using Unity and C# scripts. We are have it working for Oculus. \nThe challenges I ran into were learning Unity as I was using it. Also getting 3d objects do exactly what I wanted them to do. Using the scripting to move around an object tended to be a little harder then I thought. \nI'm Proud it looks good and works. I'm also glad I was able to work with another person in getting this project working. \nI learned the basics of Unity and now can do bigger and better programs ! I also learned a few more scripts in C#.\nI hope to someday add more to Maze In The Stars. I would like to make more levels and more space related stuff.\n",
        "hackathon_id": "quackhack",
        "winner": false
    },
    {
        "description": "\nInspiration\nInspiration came from the old escape room games where you are only given prompts about your current situation and no hints as how to fix your problem.\nWhat it does\nDrops the player in a VR room where there are a certain number of items, player can use those items to find a way out.\nHow we built it\nWe ended up not finishing the project, we were both new to Oculus and Unity and both produced quite a lot of headaches.\nChallenges we ran into\nThe Oculus would not work for 24 hours until we eventually switched the computer we were working on. So we couldn't test the VR for a little while.\nAccomplishments that we're proud of\nComing to Quack Hack and having something to show for it, it was a really fun experience!\nWhat we learned\nTry to keep a realistic scope but still try for something that challenges you.\nWhat's next for Take Inventory\nTake Inventory needs to develop a way out as well as multiple levels. We need the objects to interact with other objects in the room. We plan to get it fully functional in the future!\n",
        "hackathon_id": "quackhack",
        "winner": false
    },
    {
        "description": "\nInspiration\n\ntrying to make a fighting game using the Myo wearable armband movement input technology, which is perfect for this application\nthe creation of procedurally generated terrain within a cube took on a cavelike form, which inspired the shadows and overall theme of fighting terrifying monsters in the cave\nafter asking for tips from the Fusion 360 booth we learned about Mesh Mixer and quickly and easily created many more super creepy monsters\n\nWhat it does\n\nthe Myo takes user input for fighting the monsters\nthe cave terrain is regenerated with every boot of the game, so no two plays are the same\ncharacters are randomly placed throughout the level to fight\n\nHow I built it\n\nprogrammer did some crazy magic in Unity and I spent the weekend making monsters with Sculptris/Mix Master/Max and creepy music with Garage Band and some random program online, and watching my computer crash about every 3 minutes.\n\nChallenges I ran into\nOur game is so good that our computers are even afraid of it! \nBoth of our computers crashed dozens upon dozens of times and required tons and tons of reworking. \nAlso, we were a team of two - a programmer and a non-programmer artist. \nAccomplishments that I'm proud of\nSomething worked. We are still awake. We have something to show for this weekend. Much of what we tried to do worked.\nWhat I learned\nartist:\n\nI need a new laptop.\nMesh Mixer can easily replace the Sculptris > Max portion of my previous Sculptris > Max > Unity pipeline (for sculpting and optimizing polygons)\nI need sleep more than the world needs scary monsters I made while avoiding sleep.\n\nWhat's next for Scary Dark Game\nPresenting, where we've got music, demos of the bits and bobs of our game, and lots of screenshots of the art\nartist:\n\nI will definitely be making more monsters, even if they just live in my computer scaring away my hard disk space. \n\n",
        "hackathon_id": "quackhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\nuntiy\n",
        "hackathon_id": "quackhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\nc#unity\n",
        "hackathon_id": "quackhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\nnode.jsreactjsthree.jshowlerexpress.jssocket.iohtml5css3javascriptlovedigitaloceangaragebandaudacityshure-sm57\n",
        "hackathon_id": "quackhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\nnode.jsthree.jsreact.jsexpress.jssocket.io\n",
        "hackathon_id": "quackhack",
        "winner": false
    },
    {
        "description": "\nInspiration\npong and my life\nWhat it does\npong in a circle\nHow we built it\nhardly with pain and tears\nChallenges we ran into\neverything\nAccomplishments that we're proud of\nsomething that does something\nWhat we learned\nmany\nWhat's next for CIRCLE PONG\nlife\n",
        "hackathon_id": "quackhack",
        "winner": false
    },
    {
        "description": "\nInspiration\nPolitical debates\nQuizup\nomegle\ncards against humanity\nWhat it does\nIt is an app that allows the user to join debates and argue with people on other mobile devices about questions submitted by others. The user can also spectate and watch debates that are currently happening. The spectators offer up the main questions as well as judge and vote for the winner.\nThe card game version includes many different questions along with make-your-own question cards in which you and your group try to convince each other of your views. The one who gets the most votes wins the card! The one who gets the most cards wins.\nHow we built it\nWe started off trying to make an Anrdroid app, and learned a lot, but due to none of us being programmers, we were not able to continue with making a realistic app that achieved what we were planning. We used uiflux.io in order to design a user interface. We printed out the interface in order to show how it would work in words.\nWe also used PowerPoint in order to create the cards for the card game. \nwe also used java to create a basic chat room to somewhat simulate what the app would be like.\nChallenges we ran into\nnot knowing how to program was a big road block\nAccomplishments that we're proud of\nGetting something done.\nThe designs we created.\nworking through the tough spots and still coming up with something we are proud of.\nWhat we learned\nWe learned a very small amount about Android app inventor\nWe learned how to work together to get tasks done and how to morph our ideas into something that would work.\nWhat's next for discourse\nMaking the actual app (online multiplayer)\nPossible Kickstart\n",
        "hackathon_id": "quackhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\nunityc#myooculus\n",
        "hackathon_id": "quackhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\nc#unity\n",
        "hackathon_id": "quackhack",
        "winner": false
    },
    {
        "description": "\nInspiration - We couldn't code to save our lives, so we made a physical board game. Y'know because it's the simple things in life.\nWhat it does - Makes you smile and gets competitive with friends.\nHow I built it - Sorcery. However, Ethan's 3D printer was essential to the production on board pieces.\nChallenges I ran into - We should have began 3D printing earlier. We did not take into account all of the errors that the printer ran into.\nAccomplishments that I'm proud of - Making my new friends. Aesthetically pleasing game board (Shout outs to Nick).\nWhat I learned - Communication skills, Fusion 360 skills, and a better understanding of working in a team, fluidly.\nWhat's next for Virus - Taking over the world.\n",
        "hackathon_id": "quackhack",
        "winner": false
    },
    {
        "description": "\nInspiration\nThere are easily over a dozen CS:GO fantasy and betting websites that report dealing out 100's of thousands of dollars a week. I briefly tried my hand at $0.50 leagues to only get destroyed, despite being an avid fan. I knew there was a better way of getting a head. Combined with my passion for gaming, and my partner Raj's passion for economics, we set foot to create a statistical gaming tool.\nWhat it does\nCS:GO Forecast is a web platform dedicated to evaluating the performance of eSports professionals and their careers playing Valve's blockbuster PC game, Counter Strike : Global Offensive. Historical and live statistics are pulled directly from the source of top professionals as they play. This data is aggregated, analyzed, and published as a roster of a 5-person fantasy draft.\nHow we built it\nWe accumulated Steam profiles of over a dozen of the top CS:GO professionals and put Steam's Web App API to use. Using PHP, we data mined as much statistics Steam published, which ended up being more than we needed. From the PHP script, the data is logged into a MySQL database to then be cross examined and presented in a user-friendly manner.\nChallenges we ran into\nWe spent 3 hours trying to get a local Apache server running via xampp before getting another machine. Multiple expected roadblocks in learning a new platform such as MySQL - a lot of trial and error.\nAccomplishments that we're proud of\nUsing PHP and MySQL to push data back onto a web template. Manipulating a large amount of data.\nWhat we learned\nFirst time working with MySQL - never realized how valuable it can be for web apps with large data sets. PHP may not have been the best language to use, but it certainly broadened my web dev perspective. Existing documentation on the 3rd party API was extremely limited, we spent a fair amount of time combining our previous programming knowledge to accomplish our goal.\nWhat's next for Counter Strike : Global Offensive Forecast\nAdditional analysis on most recent games: predict trends of new and upcoming players. Pulling unused data from multiple profiles can be slightly taxing on computation time - we would like to continue streamlining the algorithms used. Hope to eventually push the app into production and release it to the public.\n",
        "hackathon_id": "quackhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\nunityc#githubgit\n",
        "hackathon_id": "quackhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\nunityc#\n",
        "hackathon_id": "quackhack",
        "winner": false
    },
    {
        "description": "\nInspiration\nEntertainment industry is big and a substantial portion of it is filled by video games. Another big trend in entertainment is betting. We realized by combining these two elements we not only can make an amazing product but we can make something that entertains people and gives them an experience they've never had before.\nWhat it does\nLag is a real time video betting platform which enables people to watch twitch players play their favourite game and bet in real time. The app uses in app coins to make the whole betting experience more fun and less intense. \nHow we built it\nWe built our app for iOS using objective C and used python on the server to manage and fine tune the real time video streaming for mobile devices. We also used firebase as our real time database.\nChallenges we ran into\nAccomplishments that we're proud of\nTwitch doesn't provide real time video streaming api. We had to grab the live streams from our server, change the encoding, convert the stream and send the stream through the network to the app with the quality that matches the user's internet speed.\nOur real time stream and database is something we're really proud off.\nWhat we learned\nWe learned a lot about real time systems. \nWhat's next for Lag\nWe'll be integrating a payment system.\n",
        "hackathon_id": "hackthe6ix",
        "winner": true
    },
    {
        "description": "\nBuilt With\nunitynode.jsmongodbexpress.js\n",
        "hackathon_id": "hackthe6ix",
        "winner": true
    },
    {
        "description": "\nInspiration\n\nAugmented Reality too expensive. phone + AR = cheap alternative.\n\nWhat it does\nThird eye allows for an immersive experience right in your hands. It can detect and distinguish objects between one another and render 3D models.\nHow we built it\nWe used vuforia by Qualcomm for 3D rendering and object recognition. We originally built our concept on android studio, but transferred later to unity for higher efficiency. The process of each unique object included: Scanning the object, uploading to servers, importing to unity, event handle from detection. \nChallenges we ran into\nUnderstanding vuforia was proven difficult from the complexity. We ran into many bugs, some with no solution. When scanning the object, we made sure that each object was complex enough to be recognized with proper lighting. Many objects in our environment were not being recognized (too big),but we managed to gather some advice \nAccomplishments that we're proud of\n\nCompleted our goal\n\nWhat we learned\n\nVuforia\n\nWhat's next...\n\nDatabase filled with everyday objects in the cloud from user input\n\ngithub\nhttps://github.com/marceloneil/Third-Eye\n",
        "hackathon_id": "hackthe6ix",
        "winner": true
    },
    {
        "description": "\nBuilt With\nindicojavaandroid-studioandroid\n",
        "hackathon_id": "hackthe6ix",
        "winner": true
    },
    {
        "description": "\nBuilt With\nhtml\n",
        "hackathon_id": "hackthe6ix",
        "winner": false
    },
    {
        "description": "\nInspiration\nRemember how easy it was to make friendships as a child? Because you share something as simple as the same favourite colour, networking was never easier. You used to be able to make friends without worrying about the influence of social or online media. In this day and age, it \u2018s common to watch \u201csocial\u201d media disconnect users from their social lives. We add people on Facebook, follow on twitter like their posts etc. however, this is either amplified so much to the extent that all of our networking is done online or subliminally leveraged to the extent that you waste some of your networking on Facebook but do not leave enough room to connect with people in reality.\nWhat it does\nThe purpose of our app is to create a very simple game to induce social interaction among strangers. This game exists as a social catalyst for people to connect with each other and establish real connections. This is done by making this game purely multiplayer and leveraging the Bluetooth/NFC and wifi capabilities. This game is simple in the fact that it takes approximately 30 seconds for the average game to be finished. This allows just the correct amount of time for people to connect in person and hopefully establish a meaningful connection. In order to maximize this game to reach the success of other major VR games, we are including a team aspect within this game. There are 3 simple but engaging games we will be making, as well as a 3 family/trio system. This will allow people within 1 family to play together with games of their choice, and improve their family score. As well, players can play with people in other families in a random game which will allow the spontaneous environment for them to connect and establish real-time relationships.\nHow we built it\nTo make the game engaging in the niche market we are engaging, we have used the suggestions made by Tatsumi Kimishima, the CEO of Nintendo. Stating that an ideal game has to include: semi-complex challenges, opportunities for advancement in rank, a competitive aspect, and potential social connections. People are curious, and we love to exploit that. Using platforms such as Java and Android, we hope to expand this game into the palm of the \u201caverage Joe\u201d\u2019s hand.\nChallenges we ran into\nGetting the app from Java into Android so that it's accessible from any mobile.\nAccomplishments that we're proud of\nWe\u2019re particularly proud of creating this whole concept from scratch. Also, being able to semi-develop this concept and making our dreams a reality.\nWhat we learned\nIn terms of skills, we\u2019ve all learned about the Android development process using Android Studio, as well as some of us learning Java and Ruby on Rails. In addition to that, all four of our members have officially finished their first hackathon not as a group, or a team... but as a family (insert cheese here).\nWhat's next for Claim Game\nWe plan on porting the game to Android. Moreover, we\u2019d like to add Internet connectivity to the game in order to achieve more a social aspect and to achieve future adaptability.\n",
        "hackathon_id": "hackthe6ix",
        "winner": false
    },
    {
        "description": "\nInspiration\nImproving the mass invitation process for multiple social circles to impromptu events. \nWhat it does\n*Connect using social media, import contacts across all platforms \n*Create smart groups to sort all contacts from different social circles; group event preferences will be saved\n*\"Think\", \"create\", and \"invite\" using smart event card templates within seconds \n*Option for invitees to \"contest\" the event \"location\" and \"time\" using a upvoting & downvoting \n*Sponsored event \"ads\" curated for the user, generates revenue \nHow we built it\n*We combined our mobile design knowledge, with our web development skills to create a mobile app without Java or Objective-C (or Swift). \n*The design process involved brainstorming UI elements using pen & paper, creating a rough wireframe using Balsamiq, creating design assets using Adobe Photoshop and Sketch 3 (Bohemian Coding), creating beautiful and efficient user flows using Invision.\nChallenges we ran into\n*Avoiding aliasing and keeping the images crisp on such a large resolution (1920 x 1080 px) \n*Creating a mobile application with HTML and CSS (using a plugin)\nAccomplishments that we're proud of\n*Crisp graphical assets\n*Simple & intuitive UI\n*Designed for all target personas and use cases in mind, for both the average user and the power user \n*Drawer animation (hamburger menu)\n*Cute penguin\nWhat we learned\n*Never code a mobile app using HTML and CSS\nWhat's next for Joinmi\n*Use machine learning to suggest and auto-populate reoccurring and recommended invites \n*Further backend development, servers, etc. \n",
        "hackathon_id": "hackthe6ix",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe wanted to create a solution that would improve people's quality of life. Our service is useful for people trying to create blog posts, understand their writing or just have a good time. \nWhat it does\nIt provides a user friendly interface integrated with cool suite of analysis tools to organize your writing and guide you in the right direction.\nHow we built it\nThe website was built using HTML, CSS for the front-end application, javascript for animation and python and Indico for back-end algorithms.\nChallenges we ran into\nMany different frameworks were used and difficulties occurred with the integration of the frameworks.\nAccomplishments that we're proud of\nSleek and minimalistic design allows for great user experience. Intuitive analysis of suggestion tools to improve the user's writing flow.\nWhat we learned\nWe learned many new frameworks, such as Indico and Flask - as well as experience with bootstrap.\nWhat's next for Creafly\nA greater variety of tools to create a more robust system, specifically an image-text system which would convert images to stories.\n",
        "hackathon_id": "hackthe6ix",
        "winner": false
    },
    {
        "description": "\nInspiration\nDJ Khalid! He is a great mentor and we would really like to thank him for all the guidance and love he has given us.\nWhat it does\nSimulates lifelike battle on Star Destroyer between Darth Vader and Darth Vedar (Vader's Twin) sponsored by DJ Khalid. \nHow we built it\nMagic. The Magic of software development. Ask Will (the magician), he dosen't know how it works and neither do I. LOL.\nChallenges we ran into\nWe ran into bugs, and then ran into Another One, then Another One, and Another One, and Another One and then again Another One.\nAll kidding aside, plotting the device in a 3D space was one of our earliest issues. We had to use a mixture of sensors, algorithms and implemented filters to obtain acceleration in x, y and z directions. Using this and the time difference between each reading, we were able to approximately plot the distance according to a reference point.\nOnce we obtained the values, moving the saber and vader along with the saber was a major challenge. The wold coordinates obtained in the phone were not the same as the coordinates in Unity.\nAnother challenge we faced was getting all the devices to connect to each other and communicate successfully.\nAccomplishments that we're proud of\nCan do the Tut, pop & lock and Bboy now! ;)\nWhat we learned\nThe Key to success is to play Saber Wars.\nWhat's next for Saber Wars\nBUshshhshhshshhshshshshsshshhehshsehshehshshsshh (Light saber sound).\n",
        "hackathon_id": "hackthe6ix",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe wanted to create a social experience that leveraged the power of mobile without having people stare at a screen.\nWe wanted to bring people together and give them some motivation to discover their area and city.\nWhat it does\nThe game is a spin on the classic PacMan where players are assigned a random role upon joining - WakkMan, Ghost, Food, or Super Food. The WakkMan must find and eat all the food, while the ghosts must hunt the WakkMan. If the WakkMan eats a super food, they can hunt the ghosts for a period of an hour. Roles are intended to be randomized every 24 hours. The game is designed to be played passively from the user's pocket, and notifies them of nearby players through notifications. \nHow we built it\nThe game was built with a rapidly skyrocketing level of hatred for the Android and Google APIs. Not a lot of sleep was involved.\nChallenges we ran into\nExhaustion and some lack of familiarity with the technologies involved posed some challenges.\nAccomplishments that we're proud of\nWe finished a very basic prototype that does demo the main aspects of gameplay.\nWe also made a pretty rad EventBus.\nWhat we learned\nGoogle APIs are kind of a pain but having a thought out design helps a lot (which we did).\nWhat's next for WakkaWakka\nFinishing the game, adding a few major features such as chat, polishing the graphics with animations, and optimizing the power consumption.\n",
        "hackathon_id": "hackthe6ix",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptcsshtmlopendatabootstrap\n",
        "hackathon_id": "hackthe6ix",
        "winner": false
    },
    {
        "description": "\nInspiration\nHosting large-scale events has always been a hassle with numerous middle men and we aim to simplify this process. We are the Airbnb of hosting. \nWhat it does\nA web platform where users can rent out events spaces and add-ons in an effective and simply process.\nHow we built it\nWe developed a preliminary android platform and the concept of the web platform.\nChallenges we ran into\nDue to the time constraint and lack of designers, only preliminary versions can be developed.\nAccomplishments that we're proud of\nOur concept and android platform.\nWhat we learned\nWe learned about android app development as well as how to pitch a case effectively within a restricted available timeframe.\nWhat's next for EZhost\nDetailed design of the platform(s) and determining the business side of the potential startup concept.\n",
        "hackathon_id": "hackthe6ix",
        "winner": false
    },
    {
        "description": "\nVR'nChill\n",
        "hackathon_id": "hackthe6ix",
        "winner": false
    },
    {
        "description": "\nInspiration\nIt started out with meeting new people. We never met before and we decided to share our common interests. We came wanted to design a system that would evaluate a person\\s mood and respond accordingly. It turned out to be a simple AI but it started from the passion to develop something innovative and revolutionary. Our inspiration came from indicoio to develop an AI and from the theme of the event which was to entertain. \nWhat it does\nOur program asks a series of questions to the user to better understand their preferences in real time. Their answers are propelled through a series of arrays. Information from the movies, with tremendous amounts of credit given to IMDb (HTML files), was used to identify the movies that would closely align with the user's preferences. \nHow I built it\nLaboriously, over a handful of sleepless nights and sunlight-less days. Over the course of the weekend, the work was split up between two people. One person worked on determining a systematic way to read HTML files from IMDb, extracting movie information and supplying it in 2D Array. The other person would program the user interface as well as the scale that rates the movies from \"most preferred\" to \"least preferred\" based on the user's responses to the user's questions. \nChallenges I ran into\nIt was difficult to coordinate individually coded files to form a cohesive program. The most challenging portion of this endeavor was to scan the HTML files for data. Unfortunately, there were many spelling mistakes in their code. Thus, one method of data extraction would work for most webpages, while for others the program would just crash. Many exceptions (as it's called in Java) were caught and dealt with appropriately. It would have been nicer to work with properly formatted HTML files so that random punctuation (like commas) wouldn't cause random, unnecessary errors. \nAccomplishments that I'm proud of\nWe were able to work around poorly formatted files and extract most of the data that we needed. We were able to write nearly 500 (more or less) lines of code in 20 hrs. My teammate and I enjoyed the workshops and we were able to work quickly and collaborate well to produce the final product. This sort of teamwork is a fundamental quality to every project (especially programming, where code is shared and integrated together). We were also able to debug the program after integration, because although this part took the shortest amount of time, we kept our cool. Our greatest accomplishment was matching the user's response to an appropriate film. The algorithm that we developed works to a sufficient efficiency and effectiveness. \nWhat I learned\nWe learned how to access the Internet using Java, how to read HTML, and that we can churn out quite a bit of code with patience. In a team of two, it was easy to share code, files and ideas, especially because we were face to face. In larger teams, communication is key to a successful product. Furthermore, every good project starts out with a plan. If you do not know what code to consider, what algorithms to develop, what audience to address to, it can be very difficult to produce anything effective. We learned to make our code modular, design our code for readability and iterate through several algorithms of code to perform the same task (and obviously choose the most effective and/or efficient one based on our needs). \nWhat's next for Movie Recommendation Machine\nIn the future, we would like to try out indicoio's API to include special features like facial emotion recognition to generate a link to a film that would make the person happier. We would like to store this data so that future movie recommendations for the user (based on the API of facial features, and facial emotion recognition) are personalized. Due to a lack of time and manpower (team of 2!), we could not implement all the features that we wanted to.  For example, we wanted to provide a map (we knew how to do this in Greenfoot) to the nearest cinema for the latest movie (an added genre that was also not included, among others) or a link to a legal movie website. \n",
        "hackathon_id": "hackthe6ix",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavahtml5css3angular.js\n",
        "hackathon_id": "hackthe6ix",
        "winner": false
    },
    {
        "description": "\naskthe6god\nhackthe6 January 2015.\nPremise\nHave you ever wanted to talk to the almighty 6ix god? We all know he is watching but have you ever spoke to him directly? Well, look no further than the ask 6god Android application, blessing you with the opportunity to ask 6god for advice, answers or general life advise.   \nHow its made\nLeveraging the Indico.io API calls in Java we were able to create meta information for many Drake lyrics. By retrieving and storing information provided by Indico, such as the sentiment (happiness factor of the lyric), the top 3 key words from the lyric, and 5 predefined text tags, we were able to create a context for individual lyrics to be used as responses.\nWithin the application the user is able to pose a question, and through Indico api calls, we create this same data for this question and using parse and a super top secret selection algorithm, we output best matching lyric as the response. \ni.e: You: Why does it only snow when it's cold outside \n      6ix god: Because they rocking furs like its snowing in the south\nWhat we did\nIn order to create this idea there were 2 main components, the Android interface and the created database.\nSince this app was a very simple premise, one of our main goal was too keep it as lightweight and quick as possible. This lead to our inclusion of uploading our database to Parse and on app load quickly reading this information in. From within the app we make Indico.io api calls every time the user asks a question and compares it to the database to produce the lyric as the response.\nComing from the back, a simple Java program was created to \n\nread in Drake lyrics\ncall and retrieve the Indico.io information from the API call for each lyric \nSave it all as a .csv file to be uploaded to the parse cloud.\n\nWhat we'd do with more time\nSince the backend is loaded up through parse the opportunity to expand \"Ask the 6god\" to more platforms is available. Some immediate action would be to create a web app to run it, as well as integrate the program with a song playing api to better immerse yourself into the realm of the 6ix.\nWhat we learned\n\nAPI calls and how to interpret the information\nHow to connect an app to a parse cloud\nThe ways of @Drizzy himself peace.\n\n",
        "hackathon_id": "hackthe6ix",
        "winner": false
    },
    {
        "description": "\nInspiration\nWaiting far too long in line at the bar to buy drinks. If I can pay for everything else with my credit card, then why can't I do the same, easily, with my drinks?\nWhat it does\nAllow users to order drinks, and to be notified of when those drinks are ready, along with where to go to pick them up. The menu is intuitive, and will take into account a user's favourite drink choices, and is organized in an easily accessible manner. The primary method of payment would be by credit card, and one of the main upsides of using the app would be spending less time in line waiting to get to the front, just to fumble for change to pay for drinks.\nHow we built it\nOur team of four collaborated on coding in Android Studio, implementing the wireframe we put together towards the start of the hackathon. One of our members spent a great deal of time on creating graphics resources for use in our app.\nChallenges we ran into\nOur team members were not too familiar with the concepts of mobile development before coming into the hackathon, and we had a couple hiccups when it came to the limitations of the hardware we were working with (renderers causing crashes, or images not being the correct resolution).\nAccomplishments that we're proud of\nOvercoming the challenges mentioned above, and churning out a working app in the end, even though we didn't expect too much. Also, we're very proud of the fact that all of our graphics were made in-house during the hackathon by our graphic designer, Flora!\nWhat we learned\nLots and lots about mobile development, specific to Android. Also, that front-end and back-end developers really need to work closely to offer a smooth user experience with the app.\nWhat's next for bar\u00b7ter\nTrying to implement more back-end for the app, and potentially trying to roll out in a few local bars.\n",
        "hackathon_id": "hackthe6ix",
        "winner": false
    },
    {
        "description": "\nInspiration\nI want to put this under Kevin's bed and screw with him when he sleeps.\nWhat it does\nSpray a stink bomb remotely VIA bluetoothLE from a smartphone.\nHow we built it\nWith legos\nChallenges we ran into\nCordova's bluetooth plugin sucks.\nAccomplishments that we're proud of\nDidn't accidentally spray myself when testing\nWhat we learned\nSuperglue is bae unless it gets on your hands.\nWhat's next for FartedFromTheBottom\nMake it smaller and stinkier.\n",
        "hackathon_id": "hackthe6ix",
        "winner": false
    },
    {
        "description": "\nBuilt With\nunityc#javascript\n",
        "hackathon_id": "hackthe6ix",
        "winner": false
    },
    {
        "description": "\nInspiration\nAn MSN icon that said \"the problem with life is there isn't any background music\"\nWhat it does\nPlay music to suite your mood and activities. You tell the app what you like to listen to when you do various activities and give it your schedule. The app will pick songs to keep you in a good mood whether that means getting you pumped to do another lap around the track, or staying calm while you work on a stressful project.\nHow I built it\nWe used Android Studio, parallelized work with Git, ate a lot of chips, and wrote some Java. \nChallenges I ran into\nUnderstanding how Android libraries work together, and we all needed a Java refresher.\nAccomplishments that I'm proud of\nWe worked very well as a team. We were supportive of each other, we parallelized efficiently, and our skills complemented each others' well.\nWhat I learned\nProject scoping is very important. We were too ambitious and had to simplify the project as we went.\nWhat's next for SoundtrackYourLife\nConnecting with a wearable to more easily and conveniently measure heart rate.\n",
        "hackathon_id": "hackthe6ix",
        "winner": false
    },
    {
        "description": "\nOur app puts the metrics in plyometrics by making it effortless to measure, record and improve key indicators of explosive strength such as acceleration, vertical leap and air time. The next generation of lightning-quick running-backs and high-flying dunkers will never have to use a tape measure to find how high they jump. Users will learn the perfect fundamental movements of jumping, will know exactly how much force their knees withstand -- and when exactly to take a day off to recover. \nBy analyzing every minute aspect of the perfect jump using cutting-edge algorithms, we were able to craft an intelligent application that blows off sensor noise like a ground type Pokemon blows off Thunderbolt, identifies proper jumping form better than you can, and is so simple your grandmother will be dunking in two weeks*.  \n",
        "hackathon_id": "hackthe6ix",
        "winner": false
    },
    {
        "description": "\nInspiration\nDrake being the beauty he is.\nWhat it does\nEntertain all end-users. \nHow we built it\nAndroid studio. And friendship.\nChallenges we ran into\nA wall.\nAccomplishments that we're proud of\n5th grade spelling bee award. \nWhat we learned\nHow to use android studio as first time programmers.\nWhat's next for Drake in the 6ix\nA multimillionaire enterprise funding the app. \n",
        "hackathon_id": "hackthe6ix",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtmljavascriptcss\n",
        "hackathon_id": "hackthe6ix",
        "winner": false
    },
    {
        "description": "\nInspiration\nUnmanned Aerial Vehicles are the future! They are one of the world's fastest growing industries, with enterprises around the world exploring their widespread deployment. The difficulty, however, lies in efficiently managing them without unnecessary loitering and wasted time.\nWhat It Does\nDrone Flight Area Control, or DFAC for short, maintains a list of drones and tasks, and sends drones out to those tasks in the most efficient order. The drones and tasks can be monitored and managed through the DFAC web interface, which allows the user to visualize the layout of the tasks, keep track of the drones and their current tasks, and add, modify, and remove tasks. The interactions with the DFAC backend, however, are limitless. Data is exchanged via HTTP GET and JSON, so there are many innovative possibilities for managing the drones and tasks. This also means DFAC can be used as a scheduling and control backend to existing applications.\nWho Did What\nThe DFAC backend and interface was developed by Mark Omo, and the DFAC web interface was developed by James Rowley.\nHow I Built It\nMark:\nThe DFAC backend is a multi-tiered, multi-threaded, socket driven system, which allows it to be infinitely extensible and scalable to hundreds of task regions and hundreds of thousands of drones. The backend is entirely python based, leveraging existing resources, and enabling quick additions and modifications. Adding new types or classes of UAVs is very easy, and seamless integration into the current tasking system allows them to execute tasks tailored to their strengths.\nJames:\nThe DFAC web interface is a fully client-side webapp which can be either served as a static webpage or run from disk. It utilizes the basics web technologies, HTML, CSS, and JavaScript, as well as jQuery and the Google Maps API. jQuery is used for interaction with the DFAC backend as well as various simplifications, and the Google Maps API is used for displaying the map, the tasks and the drones, as well as for selecting a location for a new task. The interface is also scalable, and usable on mobile devices.\nChallenges I Ran Into\nMark:\nEnsuring the application was thread safe and did not require cross thread variables was a challenge, along with ensuring the whole system meshed together and could meet the load demands of many vehicles at the same time.\nJames:\nI have never written a real-time webapp before, so getting the data to update and synchronize with the server in a timely manner was a challenge. Additionally, getting the CSS to cooperate and not send entire sections off the page while still being scalable and extensible was tough at times.\nAccomplishments That I'm Proud Of\nMark:\nGetting the system working in the short time we were allotted was the biggest achievement in my eyes, along with keeping the server thread safe, and eliminating the possibility of the threads tripping on one another.\nJames:\nI'm definitely proud of getting the whole thing to run smoothly and interact with the DFAC backend, while being able to handle hundreds of tasks and drones scalably. Also I'm pretty happy with the overall look and feel, as well as the drone and marker graphics.\nWhat I Learned\nMark:\nI learned the importance of writing agreeable system interface documents. James and I went back and forth several times on the structure and terminology used in the application interface, using only text chat to boot, so getting the interface right was a learning experience.\nJames:\nThis was my first time working with jQuery, which I was a bit reluctant to pick up, but I've seen the light and learned quite a bit about what seems to be one of the most prominent web frameworks. I also picked up a bit of python from modifying the dummy server, so that's nice.\nWhat's Next for Drone Flight Area Control\nIn the future, we want to build in specific applications to assist with task creation, including automatic response to traffic congestion, traffic accidents, and emergencies, automatic industrial and commercial inspection (i.e. inspecting a skyscraper or pipeline), and features targeted for search and rescue applications. In terms of specific features, we want to add result collection and presentation for tasks, a log of previous tasks and drone actions, alerts for completed tasks and drone problems, and task prioritization. For the frontend, we want to add paths/trails for the drone as well as heading of the drone.\n",
        "hackathon_id": "hackarizona2016",
        "winner": true
    },
    {
        "description": "\nInspiration\nA few months ago a few of us came across a 15 Watt laser that we wanted to mount on a gimbal. Realizing the scale of that was impractical and unsafe for a first build, we decided to scale this down.\nWhat it does\nThe aim of this unit is to allow the end user to control a laser that can rotate about an axis and can change its pitch. An Oculus Rift allows the end user to control the drone with his or her head. A dedicated fire button controls the laser.\nHow we built it\nWe used a variety of manufacturing methods to build hardware unit. The base of our drone MDF (medium density fiber) board. It provides a very sturdy base for our turret. The lower part of our turret is a 3D printed custom designed base. It contains a racetrack ridge that we will detail in a bit. We used PLA for this part as it was readily available. Additive manufacturing allowed is to incorporate a racetrack on board, on which we have several marbles acting as ball bearings. On top of these marbles rests the upper part of our turret. Containing a another race track, and connected to a motor shaft in the center, this part is free to rotate. The ball bearings allow for reduced friction here. On top of turret sits another motor to which an armature is connected. On which rests our 10 miliWatt laser. The armature is free to move in the vertical axis allowing for our second degree of freedom. Lastly on top of the laser holding mechanism, rests a webcam. This provides a direct feed to our user.\nOn the electronics side, we use a raspberry pi as our turret controller. This is also connected to a motor controller shield powering two NEMA 17 motors. Additionally, a relay controls power to a laser while a button allows for a software trigger of the laser. The oculus control computer is a mac. It is connected the webcam and Oculus Rift. The rift provides a head mounted display as well as an inertial measurement unit to provide orientation information. The mac and pi are connected via CAT 5 ethernet.\nThe software on the pi is a heavily modified version of Adafruits motor controller example code written in. The oculus controller is a C++ code base, based on Occulus in Action. The systems are connected by a UDP packet linked.\nChallenges we ran into\n\nAccidental corruption of raspberry pi file system - Fixed by using a recovery software to rescue code before formatting the drive.\n3D printer misalignment issue - During the print of the upper turret piece the printer was off by 3 millimeters. This eliminated some symmetrical aspects of our design. Solved with liberal use of a mini Dremel. \n\nAccomplishments that we're proud of\n\nControlling a laser\nWorking with a interdisciplinary team of an engineering project. We had a Computer Science major, two Aerospace engineers, an Optical engineering engineer with minors in ECE,CS and math and lastly a CS and Aerospace engineering major. We were able to work together and play the strengths of our team.\n\nWhat we learned\n\n3D printing and metals don't mix too well\nAlways backup code\n\nWhat's next for Oculus Rift Controlled Laser Turret\n\nBetter resolution for webcam\nDepth of vision\nHighlighting of unit\nAutonomous tracking of targets\nAutonomous firing on targets\nBetter optics (lens mounts) for wider beam spread\n\n",
        "hackathon_id": "hackarizona2016",
        "winner": true
    },
    {
        "description": "\nInspiration\nWhat do you get when you combine Electrical Engineers, a Mechanical Engineer, a Biomedical Engineer, and a common love of music and the environment? An insanely fun musical instrument created from the leftover spoils of a hackathon well done. Hit the triple bottom line, while pounding on the triple bass.\nWhat it does\nWhen an aluminum can is touched, a MIDI signal is created, which can be fed into a MIDI software synth to create any kind of music you can imagine.\nHow I built it\nAn arduino converts aluminum cans into capacitive touch sensors that send MIDI data over USB, which gets translated to a MIDI signal, which is then fed into a virtual MIDI port on the PC to a MIDI input in a MIDI software synth. All of the cans are empty and connected with stickers given away during the hackathon.\nChallenges I ran into\nThe large aluminum can apparatus we created acted like a large antenna that was very sensitive to surrounding signals. \nWe were able to solve this issue by decreasing the impedance of the circuit, thus reducing the sensitivity.\nAccomplishments that I'm proud of\nI'm proud of our team for hacking on an arduino with no previous experience. We finished the project within the allotted time and it turned out to be even cooler than we had expected.\nWhat I learned\nI learned how to use an Arduino to control sensors and I also learned all about the Musical Instrument Digital Interface (MIDI) and its implementation.\nWhat's next for Mini MIDI: Rock, Roll, Recycle\nProbably a world tour... to save the Earth.\n",
        "hackathon_id": "hackarizona2016",
        "winner": true
    },
    {
        "description": "\nInspiration\nDoctors working in the pediatrics ward of the Banner UMC have a problem with dividing up their time between multiple patients and families. They require a streamlined solution for disseminating information that they can control - experience has shown that self-diagnosing via the internet by patients provides mixed results.\nWhat it does\nThis app allows medical doctors to write their own articles or share articles of their choosing via an administrative website, controlling content readily available through this app. Our app also provides a tour of the facility, to help patients and families navigate through the various areas of the hospital (lobby, radiology, oncology, pediatrics, etc.). We also have an activity that allows a doctor to draw on body parts to help patients understand their conditions.\nHow I built it\nAndroid Studio was used to develop the Android App. A php application hosted on a RedHat Openshift server runs the administrative website. Our persistence level is serviced through a Parse database.\nChallenges I ran into\nProduction went relatively smoothly! We had to learn Parse, and look up how to do drawing on an Android app. \nAccomplishments that I'm proud of\nWe feel we brought together a lot of different modules and activities (php server, Parse db, an encyclopedia activity, drawing activity, and tour activity) in a relatively short amount of time.\nWhat I learned\nParse! How to draw in Android!\nWhat's next for UMC Pediatrics App\nCollaborating with Dr. Ravi Sethi in the UA CS department in conjunction with Dr. Hilary Franke, and Julie Furmick at the Banner UMC Pediatrics ward to develop a full prototype to present to Banner Health for funding\n",
        "hackathon_id": "hackarizona2016",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascriptandroidjsonjavapythonangular.jsdjango\n",
        "hackathon_id": "hackarizona2016",
        "winner": true
    },
    {
        "description": "\nInspiration\nMetropia brought GPS data from Tucson drivers. What lies in store?\nWhat it does\nOur visualization merges two interactive views into the data. First, a spatio-temproal view. We layout the drivers and their routes over the city of Tucson and filter based on time and location. Second, an inter-user similarity view. This view shows the most closely related groups of users via an undirected graph. This view also allows filtering of the spatio-temporal view, helping answer questions about how similar users behave, as well as offering an evaluation of a given similarity measure by verification against the semantic similarity of the users paths. \nHow we built it\nA series of scripts take the raw, large GPS data from the Metropia data set and produce a smaller, cleaner version suitable for the web. We drop points that don't add much to the visualization -- We can get away with a few points for a 10-mile straight journey on the highway, but a meandering trip around the neighborhood requires more fidelity.\nNext, we ship the data onto a web client. This is where things get tricky -- the raw data set consists of 12 million points and nearly 800 megabytes, and we need to fit this into browser memory and compute budgets. Additional filtering where possible and good choice of data structures lets us present an interactive experience.\nChallenges we ran into\n\nNot enough data! Our similarity clustering algorithm as well as many failed experiments would have been more successful had we had a year of data.\nToo much data! The demands on the browser are almost higher than we can manage without some serious work on our visualization.\n\nAccomplishments that we're proud of\nWe've got a good looking user similarity graph, which will help inform decisions about ride-sharing. \nWe put 12 million data points worth of data in a web browser.\nWhat we learned\n\nVectorization is hard.\nSplitting a problem into pre-processing and client-side processing can help speed up the final product, but more importantly engage team members that are not familiar with the specific web tehniques that you are using\nSleep is important.\n\nWhat's next for Tucson Flux\nSpeed it up a bit, and then attack the overplotting, streaming, and latency problems that will show up with increasing data sizes.\nSource here.\n",
        "hackathon_id": "hackarizona2016",
        "winner": true
    },
    {
        "description": "\nBuilt With\nhtmlshelljavascriptclojurecss\n",
        "hackathon_id": "hackarizona2016",
        "winner": true
    },
    {
        "description": "\niSitter the IoT Baby Monitor\nUses the Particle Photon and Johnny-Five to send data to Parse. That data is pulled down to an IOS app!\n",
        "hackathon_id": "hackarizona2016",
        "winner": true
    },
    {
        "description": "\nInspiration\nThe increasing number of suicides and depressed people has become a major cause of concern. Being able to identify such individuals and help them out before it is too late would be valuable. \nPrevious research did not focus on the cause of mental illness. We wanted our model to provide personalized help by understanding the cause(not just predict the illness) and analyzing the networks and connection of those individuals. \nWhat it does\nWe analyzed tweets to find depressed individuals and predict the cause of their depression (education, relationship or money) \nHow we built it\nWe found tweets with keywords indicating that the user was depressed - the individuals who published these tweets were potentially depressed. But the depressed tweets may be a one time event and might not prove that the individual is depressed. \nSo, we looked at the latest 200 tweets of these users and found the possibility of those tweets being negative. If majority of the tweets were found to be depressing, the probability of the individual suffering from a mental condition would be high. Those tweets were further analysed individually to identify if they were related to relationship, money or education. We aggregated all the negative tweets for each of the categories for a specific user. This helped us identify the major cause of their depression.  \nChallenges we ran into\nAll of us participated in our first hackathon. Staying up for 36 hours at a stretch was our first experience and the biggest challenge. We are new to python and all the mining we did for the analysis was through python. We ran into issues while mining the data. These issues took some time to be resolved. \nLearning new technologies in extremely short span of time. Dealing with data poses unpredictable challenges. It is especially tough for us as psychology is not our expertise and understanding this data took a lot of time.\nAccomplishments that we're proud of\nThe visualizations look amazing. We could identify tweets which were clearly not normal. in less than 2 days we managed to make good progress with the analysis. \nBeing new to Python, mining the huge dataset was an achievement.\nWhat we learned\nTechnical: Python, gephi, NLP\nManagement: Creative thinking, time management(completed a semester project in 2 days), perseverance, commitment  \nWhat's next for Tweetimental\nWe are planning to design an app to provide real time analytics, so that this issue can be solved before it gets chronicle. \nImprove the efficiency of the algorithm by using paid softwares and tools to get real time data which does not limit the number of tweets we collect and analyze.  \n",
        "hackathon_id": "hackarizona2016",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe thought of creating a world where people love their work and what they do. At the same time, companies can find perfect candidate for their organization\nWhat it does\nRecommend best candidates to the organization who are \"Best Fit\"\nHow we built it\nData Mining  and NLP(Natural Language Processing) is used. \nChallenges we ran into\nReal-world data. A lot of processing is required. Lack of hardware capabilities\nAccomplishments that we're proud of\nWe have our own engine now. And we don't care whether we are gonna win or loose. Period\nWhat we learned\nWe can code for straight 36 hours. \nWhat's next for hackaz\nMore improvements required. With more capabilities and features, we will pitch it to investors in future. \n",
        "hackathon_id": "hackarizona2016",
        "winner": true
    },
    {
        "description": "\nInspiration\nBusinesses needs to know where their customers are located for effective marketing,improving customer service and better supply chain management.\nWhat it does\nIt plots the locations of customer transactions from QuickBooks on Google Maps.\nHow I built it\nJava and JavaScript are used to access the API's from Intuit and Google Maps, respectively.  JSON is used to interface between the Java and JavaScript components.\nChallenges I ran into\nWe needed to find a way to transfer data between components.\nAccomplishments that I'm proud of\nWe were able to access API's using multiple languages and combine the components.\nWhat I learned\nWe learned more about using API's in multiple software components.\nWhat's next for Customer Locator\nCreating an intensive data analytics application for creating hot zones based on individual items sold and providing search filters for time frame.We are also planning to use sensex data and other available marketing data to create hot zones about the present competition.  \n",
        "hackathon_id": "hackarizona2016",
        "winner": true
    },
    {
        "description": "\nThere was a urgent need for a change in the recruiting process. No one wants to create a profile for each job and apply. This was a great opportunity to contribute to this area. \nThe iOS app facilitates easy application process. User can look into the job description and apply on the fly. User might wish to save the job notification and look at it at a later point of time. We also provided a watch app that aims to target the user base. \nPrimarily, we used the iPhone core SDK, WatchKit and Parse to build it. \nIntegrating WatchOS2 with Parse, as the SDK that is available from Parse lacks documentation. \nWe were a team of two people, and still managed to pull off with our goals. \nUse the real world data and provide job opportunities for the users at their finger tips. We see a lot of potential in this app. \n",
        "hackathon_id": "hackarizona2016",
        "winner": true
    },
    {
        "description": "\nBuilt With\narduino-leonardomma7660fc-xyz-axis-accelerometeresp8266-wi-fi-modulec++arduino-wire-librarypythontwiliodigital-cloudflaskwalking-stick\n",
        "hackathon_id": "hackarizona2016",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe were inspired by a friend who used to complain about the manual process of tracking his workout statistics, so when given the opportunity to hack with the Myo Band, we instantly saw the potential of a fitness tracking app.\nWhat it does\nEndurance give the user full statistics about their fitness schedule in a very simple, easy to use manner. It does this by reading the EMG(electromyographic) sensor data from the Myo Band. \nHow we built it\nWe used the existing Myo iOS SDK and created our own specialized algorithm to recognize different exercises.\nChallenges we ran into\nSome of the challenges we faced were : configuring, calibrating, and capturing the raw sensor data from the Myo Band.\nAccomplishments that we're proud of\nWe made it.\nWhat we learned\nWe learned a lot about Myo.\nWhat's next for Endurance\nWe have some interesting ideas in how to further the app by adding new exercises.\n",
        "hackathon_id": "hackarizona2016",
        "winner": true
    },
    {
        "description": "\nInspiration\nAt every hackathon our team attends, we make it our goal to use Virtual Reality for good. Ranging from education to major social issues, we use VR to address what we believe needs the most change. Virtual Reality is a technology that can express thoughts, emotions, and experiences, and can therefore convey themes like no other medium truly can. Therefore, when talking about a subject that one must truly experience to understand, depression quickly came to mind.\nDepression is a powerful force that, most often, can only be understood from the inside. It's hard for others to differentiate between real depression and sadness. We wanted to create a VR experience that would allow those who haven't been through depression begin to understand how serious of an illness it really is. \nResearch\nA huge part of our project was actually researching depression. This was also the most impactful and eye-opening part of the entire hackathon. We all headed to online forums, social media sites, and chat rooms, trying to gather data through a prepared google form we wanted to spread to people who had experienced depression. The result was more than we could have ever asked for. By the time of our submission, nearly thirty individuals had anonymously shared their stories, backgrounds, and views with us. Each entry held a great deal of emotion, and without this research, we could have never understood what depressed people really feel. Each response was rewarding, but at the same time very somber as we read through personal accounts of depression.\nWhat it does\nAnother Day places you, the user, inside a bedroom that is initially filled with light. The first task in the game is simply to close the blinds and stop the blinding sunlight from entering. In the game, this sunlight is symbolically radiant and shining throughout the whole room. This is only the first step in helping our users understand depression.\nThe experience, as is, mainly involves looking around your bedroom and investigating items. Although many of these objects are completely ordinary, it's the unique thoughts that accompany each interaction that marks the signs of depression. We sought to focus heavily on feelings of apathy and reflection, noting how you- the protagonist- slowly descended into a state of demotivation and lack of care for the world. These thoughts literally appear on the screen, and each discovery gives even further insight.\nAt the conclusion of the room experience, we take a more direct approach to the issue by quoting the anonymous survey responders and explaining the hardest parts of depression. We also, however, believe that any project focused on depression needs a glimmer of hope. After carefully reading each interview, we selected quotes that focused on recovery, hope, and advice to others with depression. We put those together into an ending moment for the Virtual Reality experience, that seeks to empower a user to reach out and show compassion toward those with depression. It's everyone's responsibility.\nHow we built it\nWe built Another Day using the Unity Game Engine and the Samsung Gear VR. All scripts were coded in C#, and the application was tested on a Samsung Galaxy S6. Some of our 3D Models in the experience were created using Maya. We further used Google Forms to send out our surveys.\nChallenges we ran into\nDepression is a deep, powerful, and complex feeling that is incredibly hard to grasp without direct experience with it. We had to approach this problem cautiously, because if we weren't careful, we could entirely misrepresent the real problem at hand. We had to help others understand depression, but if we didn't understand ourselves, we would become enemies of our own cause. As a result, and because we wanted to be thorough, we chose to spend a majority of our time spreading an online survey to depression forums and other forums of social media. We lost a lot of time, but it was worth it.\nAccomplishments that we're proud of\nDepression:\nOur entire team learned much more than we ever thought we would. We discovered the ugly truths about depression, the scary realities, and then attempted to make that into an actual experience. It was a morose situation, and we achieved our work with a heavy heart. However, in the end, we grew as individuals and allied ourselves to a cause that was previously unknown. Regardless of the project quality, we learned a great deal about depression, and therefore achieved our ultimate goal in at least a small sense.\nGear VR:\nThough we often develop with Virtual Reality, this was our first time developing with the Gear VR, Samsung's mobile solution to Virtual Reality. In turn, it was our first time building for Android on Unity, and we found that there were quite a few tricks we encountered. However, in the end, we were able to overcome the new hardware and create a worthwhile experience.\nWhat we learned\nHonestly, what we learned from this project was far less about technical skill and far more about the severity of depression. The more we dedicated to our work, the more we became invested in the cause we're trying to support. We read first-hand accounts of depressed individuals, walked through their lives, tried to understand their minds. We had to put ourselves in that place, and then ask how we can show what we learned to others. We grew humbled by our research and our project, and gained a valuable lesson that few other subjects can provide.\nWhat's next for Another Day\nThis is a project we want to grow. Depression cannot just be represented in a five minute demo, and certainly not in a project that was thrown together rapidly in 36 hours. It's a massive subject that requires care, and we want to continue to perfect it. We want it to be something that can accurately capture a depressed mind. Through more research, actual tests with our target audience, and refined themes, we believe that Another Day can become a sobering educational and relatable experience for everyone.\n",
        "hackathon_id": "hackarizona2016",
        "winner": true
    },
    {
        "description": "\nInspiration]\nWe wanted to challenge ourselves and dive into the Wolfram language! Our team initially bonded over playing the Wikipedia game (see description below) so we wanted to create a solution written in Wolfram that computes the least number of \"page separations\" between two seemingly distinct Wikipedia articles.\nWhat it does\nIn order to play the Wikipedia game, users start on a given article with the goal of finishing on a specific article with the only rules being a) the user can only navigate to a new Wikipedia page via one of the embedded links and b) no ctrl-F!\nWhat we did was to allow a user to submit the urls of a starting and ending page. Our algorithm (with TONS of heavy lifting from the Wolfram language itself!) then seeks to find the least number of pages between these articles.\nHow we built it\nUsing the Wolfram language and a whiteboard!\nChallenges we ran into\nExceeding memory and initially learning the Wolfram way of programming!\nAccomplishments that we're proud of\nWe're happy that the algorithm works to a reasonable level and happy we chose to learn about the Wolfram language.\nWhat we learned\nWe've gotten a small taste of what the Wolfram language can do!\nWhat's next for Wolfram Wikipedia-Game Solver\nWe'd like to continue developing the the project to be deployed on our own webpage while still using the Wolfram cloud for all of our computations. \n",
        "hackathon_id": "hackarizona2016",
        "winner": true
    },
    {
        "description": "\nPlease visit our website for more information!!\nInspiration\nSpurred by wanting to find a hack that bridged each of our specialties (optical sciences, biomedical engineering, and computer science) in addition to the recent Ebola outbreak and epidemics in general, the X-Terminator Drone was born. This hack aims to reduce the risk of healthcare workers and volunteers in the face of an epidemic by using drones to UV sterilize the field. \nWhat it does\nThe X-Terminator Drone uses UV light that is reflected off of sputter-coated aluminum propeller blades to inactivate viruses (by irreversibly damaging its genetic material), making them no longer deadly and unable to replicate. The ultimate application of this hack is for healthcare facilities and patient clinics to be sterilized of harmful pathogenic diseases without need for human contact with deadly viruses and pathogens. High-risk areas can be first sanitized by a drone prior to human contact.\nHow we built it\nTo automate the Parrot AR Drone 2.0 Elite, an Arduino Uno connected to multiple ultrasonic distance sensors was connected to the drone. Each propeller blade was sputter-coated with aluminum metal (~50nm thick) to reflect UV light. A UV light source was mounted under each propeller blade at an ideal distance from the blade to best reflect the UV light below the drone (the physics is explained on our website). Finally, the drone itself was programmed to autonomously roam a room via feedback from its distance sensors mounted in each direction, at an altitude permitting UV inactivation of viruses and pathogens. \nChallenges we ran into\nThis was a very technical hack that involved many endless hours of troubleshooting, especially since none of us had done many of the technical hardware and software hacks involved. We were new to the Arduino and drones, as well as how to build the circuits we needed. This hack first involved identifying multiple UV light sources, of which we went through a couple LED light options before our final solution. Along the way, we encountered faulty hardware, and our procedure of soldering and connecting our initial ideal higher-powered UV LED lights resulted in their electrical failure. We then had to improvise and go with another set of different LED lights that were in the UV spectrum. Next, there is little documentation of hacking a Parrot Drone with an Arduino that combines all of the endpoints we included in our hack. \nBeginning with wiring the circuitry on breadboards to connect multiple distance sensors to the Arduino, we encountered issues with the readout and responses that we had to troubleshoot. Part of the issues were related to the voltage, and we eventually figured this out. Next, there were differences in Drone pinouts than what was posted online, we had to identify through voltage drops and differences the functions of the pinouts, and then connect the drone to the Arduino. For many hours, we were only able to connect successfully the computer to the Arduino and receive proper printouts from the sensors, and not from the Arduino to the drone. To solve this issue, we had to seek some advice on matching the voltages between our various types of hardware in order for all of our code, hardware and sensors to communicate. Based off of the advice and feedback we received, and online forums, we put together a level converter to divide voltage that allowed communication between the sensors, drone, and Arduino to finally happen (BUT, not before we faced a malfunctioning Arduino, and after using a fresh one we figured out that this had been the problem for a couple hours). \nNext, we had to weigh all the components and shave off any excess weight-- considering a second voltage divider to draw less energy. After that, we had to figure out the actual hardware and mechanical mounting of the LED lights. The next challenge was consolidating all of our multiple circuits into one small and lightweight board. Then finally, we wanted to command the flight of the drone to be similar to an iRoomba vacuum. We wrote javascript to automate the this type of room sweep via drone flight movements. This was one of the toughest hacks, as it was not clear in any instructional references we could find how to actually control the drone via the Arduino while using the sensors. We spent at least a full 16 hours on trying to get the communications between the devices working. Finally, we succeeded in reflecting UV light off our of drone propellers at the end, which allowed us to consider our hack a proof-of-concept for use during an epidemic. \nAccomplishments that we are proud of\nThe amazing collaborative teamwork and the fact my team worked together non-stop to make this happen! What an incredible effort, especially given that none of us have done much of the things we had to figure out for this hackathon. We each learned how to integrate and utilize new hardware, software components and languages, and had to draw from past science classes as far back as high school for the scientific concepts.\nWhat we learned\nMany many things, already alluded to in the challenges section... mostly along the lines of working with new hardware, circuits, writing Arduino code, working with Arduino libraries, interfacing multiple technologies, hacking a drone, new/unfamiliar coding languages, etc. \nWhat's next for X-Terminator Drone\nTrying to find the support to turn this drone into a reality where it can be utilized out in the field. What would be ideal is to use holograms on the propeller blades, instead of aluminum, and to use a high-powered UV laser. The future drone will also come with a companion rover that is a land-based robot that can manipulate obstacles and objects in the environment to deal with unfamiliar terrain and situations.\nImportant video links that should be viewed to show we've done technically! Since we were not allowed to demo our hack the way it was meant to be used indoors:\n1) Ultrasonic distance sensors working: https://youtu.be/2WZT5U6yAT4\n2) Sputter coated aluminum propellers: https://youtu.be/uWcDtlGyKJg\n",
        "hackathon_id": "hackarizona2016",
        "winner": true
    },
    {
        "description": "\nBuilt With\nhtml5css3javascriptnode.jsgithubexpress.jsangular.jsyoutube\n",
        "hackathon_id": "hackarizona2016",
        "winner": true
    },
    {
        "description": "\nInspiration\nSmall screens make it inconvenient to use a keyboard, so we developed a new way to write text using a joystick. However, we realize that joysticks are somewhat antiquated, and would like to use this prototype to further develop gestured typing and explore wearable options like conductive fabric.\nWhat it does\nLetters and punctuation are determined with a series of tilts and rotations, resulting in more intuitive typing while using the Xbox or an Apple Watch. This way you don't have to look at your screen or type through your phone, and while using an Xbox controller you can save time. \nHow I built it\nWe built this prototype using the Arduino and a joystick sensor, then used python to interpret the sensor output. \nChallenges I ran into\nSince we are currently outputting text to the console, text editing is limited.\nAccomplishments that I'm proud of\nWe wanted to build a working prototype and we reached that goal this weekend.\nWhat I learned\nWe gained experience interfacing software with hardware, including piping serial output to python.\nWhat's next for Joystick Keyboard\nWe want to create an app that allows typing on devices, as well as a keyboard replacement for smartphones. \n",
        "hackathon_id": "hackarizona2016",
        "winner": true
    },
    {
        "description": "\nBuilt With\njupyter-notebookpythonsklearnnumpy\n",
        "hackathon_id": "hackarizona2016",
        "winner": true
    },
    {
        "description": "\nInspiration\nE-mail is an important component in the business lives of many people today. Not all of us have the privilege to hire our own personal secretary, so AskTucson tries its best to imitate a real-life secretary, thus increasing the productivity of all its users.\nWhat it does\nThis server app uses Natural Language Processing to parse input entered and create reminders that are stored in a back end, or delay the sending of certain emails.\nHow we built it\nWe used Python and Node.JS. Python is used in the scripting and string parsing.\nChallenges we ran into\nThe natural language processing component was not easy to implement. At first we thought of using the NLTK library for Python, but in the end we ended doing all the string parsing by hand using regex. \nSetting up the server to receive email and configuring our DNS correctly for SMTP was difficult especially because the DNS takes 24-48 hours to copy and we are of course limited in time.\nTrying to figure out the most fitting logo for the product has also been somewhat of a challenge. \nAccomplishments that we're proud of\nWe managed to get string parsing working pretty well.\nThe design that we currently have for the logo is not bad, so we are happy with the result.\nWhat we learned\nWhat's next for AskTucson\n",
        "hackathon_id": "hackarizona2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\njava\n",
        "hackathon_id": "hackarizona2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nLearning the ways of the force shouldn\u2019t be only a skill that Jedi or Sith masters can acquire. Based on this idea, and the fact that the hackathon committee was borrowing some myo armband devices, we created a Java application utilizing some open source on GitHub to control a Spark fun robot. \nNote: The open source utilized was from NicholasAsuart and it consisted on Java binding of the Myo Armband. https://github.com/NicholasAStuart/myo-java.git\nHow We built it\nThe robot was programmed using a PIC24F microcontroller. The microcontroller controlled the amount of voltage that went through the two little motors of the vehicle aided by an H-bridge. The microcontroller was also connected through a Bluetooth module to the computer. IT is important to emphasize the robot was build by us but prior the competition.\nThe main goal of the project was to send commands and/or instructions to a spark-fun robot without any joystick, or phone input. Instead, we design the application taking the advantage that Myo send data from muscle contractions to the computer easily. We then were able to analyze the data utilizing eclipse and Java and send the information bya serial communication to the Small robot. \nOur learning\nWe discovered that being at a hackathon is nothing like being at a competition. It is the greatest place to learn, share, and build ideas with students around different campuses. We also learned that a team does not have to have all the resources to build something. In fact, what it really required is to have positive attitude and open mind, only then You can make stuff that you previously thought it was impossible to do. \nWhat's next for HthonMPortControl\nThere is still much to do with HthonMPortControl. First, make it so you can control the speed of the spark fun robot. Secondly, create a GUI to display the gesture the user is doing utilizing the Myo device and action the vehicles takes after the gesture. Finally, we should add proximity sensors to the robot to prevent young padawans from crashing the vehicle robot.\n",
        "hackathon_id": "hackarizona2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe lost our friends way too many times while skiing, snowmobiling, snowboarding, and hiking. After experiencing this and hearing about numerous groups getting lost in the backcountry we decided to make a heads-up display to aleviate these trials.\nWhat it does\nUses a compass and GPS to give a real-time augmented layover to show your possition relative to other recreationalists with the BuddyFinder and relative to your starting point or waypoint.\nHow we built it\nLots of soldering and fighting with GPS and I2C libraries. We created our own addressable LED strip.\nChallenges we ran into\nGPSD stopped working half way into our project for seemingly no reason. We also had a lot of trouble with I2C libraries for our compass\nAccomplishments that we're proud of\nThe form factor of our prototype is satisfying along with the functionality of the LEDs\nWhat we learned\nWe learnt lots about soldering and using I2C\nWhat's next for BuddyFinder\nFinding a cheaper and possibly simpler implementation\n",
        "hackathon_id": "hacked2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\npython\n",
        "hackathon_id": "hacked2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonarduinoraspberry-pixbeehall-sensormysqljsonhttp\n",
        "hackathon_id": "hacked2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptchromehtml5ios\n",
        "hackathon_id": "hacked2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonpygame\n",
        "hackathon_id": "hacked2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\nraspberry-piiospythonjsonamazon-web-services\n",
        "hackathon_id": "hacked2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nIt is a common story that when some people go shopping it takes them hours to find the perfect product to purchase.\nEven more, sometimes buyers may arrive at a retail only to be greeted with an out of stock merchandise.\nWe can build a geolocation based e-commerce that can solve this problem. It also introduces the opportunity for people to sell their products like shopify, but more simpler.\nWhat it does\nFind products around your area by category and coordinates. It allows you to sell or buy products online. Similar to shopify but with one click of a button.\nHow I built it\nios (swift), android (java), postgres, mongo, node, javascript\nChallenges I ran into\nOne man team is challenging especially when you're fatigued, you start writing codes that can make bugs and terrible software engineering\nAccomplishments that I'm proud of\nOne man team joined a hackathon and made a web app, android app, ios app for an mvp that allows payments, email and mobile notifications, and geolocation\nWhat I learned\nTry harder to get my friends and younger siblings to come to the hackathon. So, I can get some sleep.\nWhat's next for find products around you; geolocation based ecommerce\nsee if people are interested in the idea and see where it goes\n",
        "hackathon_id": "hacked2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtmlphpajaxjqueryleap-motion\n",
        "hackathon_id": "hacked2016",
        "winner": false
    },
    {
        "description": "\ndiaLog\nStartup 2016 Speech Coaching Android Application\nWe like Java, Android and long walks on the beach\n",
        "hackathon_id": "hacked2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\nc++sdltiled-map-editor\n",
        "hackathon_id": "hacked2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\nmongodbangular.jsexpress.jsnode.jses6sassgrunt.jsyeomanlovegithubmean\n",
        "hackathon_id": "hacked2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaandroid\n",
        "hackathon_id": "hacked2016",
        "winner": false
    },
    {
        "description": "\nWhat it does\nCopy Everything unifies the clip boards of all your devices with minimal set up. So when your friend texts you a link to a youtube video or a website that you wish to view on a computer, simply copy the link on your phone and paste it on your computer.\nThe app runs in the background on your phone and in the background on your desktop for a non intrusive experience that simply works when you need it.\nHow we built it\nThe desktop app is built from python and QT, while the android app was built using Android Studio and Java. We initially started off with using just pure firebase for both the database and the user authentication. However we found that we were unable to use the API's authentication. Therefore, we had to write a custom authentication system in PHP that uses MySQL to interface with the database to secure paste data and login information.\nFirebase will push correct, up to date pastes to all the devices logged in and online allowing for each device to be interconnected through the cloud in real time.\nChallenges we ran into\nGetting the custom authentication system to work with all three platforms securely and having all the pastes sync properly.\nAccomplishments we are proud of\nHave all the components of this system system in a working and usable state. The application is cross-platform, visually appealing and does not impede at all on the user experience of copying and pasting.\nWhat's next for Copy Everything\nEvent based desktop client, Image support and possible monetization strategies for long term support. Other features that could be added include team clipboards for collaborative projects.\n",
        "hackathon_id": "hacked2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nTransferring files from a computer to a mobile device wirelessly is a fairly common day-to-day need for me. The existing options for transferring files from my Mac to my iPhone (Email, Dropbox, AirDrop, etc.) either require too much user intervention and configuration, or are too unreliable for me to enjoy using. I set out to build Ares as a way to simplify this user experience as much as possible and allow for fast file transfers with no additional setup or configuration (except for the initial install of the Ares apps, creating an account, etc.).\nWhat it does\nAres greatly simplifies the process of transferring a file from your Mac to your iOS device.\nSteps:\n\nDrag a file to the Ares menu bar icon on your Mac\nSlide the push notification that appears on your iPhone\nThere is no step three.\n\nHow I built it\n\nI built 3 applications:\n\nNative Mac application written in Swift. Shows a menu bar icon that a user drags and drop files on, which results in an API call to the Ares back-end that sends a push notification payload to be delivered to the iOS device. The Mac app also handles requests for file transfers and transfers file data to the iOS device.\nNative iOS application written in Swift. Handles push notifications that are received from the Ares backend, requests file data from the Mac, and presents the downloaded file to the user.\nBackend written in JavaScript using Node.js. Handles user and device registration and authentication and sending push notification payloads to the APNS gateway for delivery to iOS devices. The back-end is hosted on Heroku and uses a MongoDB database hosted on MongoLab.\n\nChallenges I ran into\nDebugging this project was really difficult because there are so many communication links over several protocols where things can go wrong: Mac app -> Ares back-end -> APNS gateway -> iOS device -> Mac -> iOS device. There was lots of log reading and recompiling/redeploying involved.\nSimultaneously developing 3 applications that work closely with each other was also challenging. There was lots of context switching involved in continuously jumping between developing for iOS, Mac, and the server.\nAccomplishments that I'm proud of\nBuilding 3 applications in under 24 hours by myself is something that I'm proud of, especially since several of the core technologies I used were new to me.\nWhat I learned\n\nHow to use MongoDB\nHow to set up and use APNS (Apple Push Notification Service) on both the iOS side and the back-end\nHow to use the MultipeerConnectivity framework for P2P communication on OS X and iOS\n\nWhat's next for Ares\n\nBidirectional file transfer: iOS -> Mac transfers in addition to the Mac -> iOS transfer implemented currently\nA full file manager in the iOS app that lets you view and catalogue files that were previously downloaded over Ares\nMultiple simultaneous file transfers\nBetter security in verifying origins and the integrity of delivered payloads\nFallback to uploading files to a storage server when P2P communication is not available\niOS action extension for sending content from 3rd party apps via Ares\n\n",
        "hackathon_id": "hacked2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\njava\n",
        "hackathon_id": "hacked2016",
        "winner": false
    },
    {
        "description": "\nConcept\nThe idea of this project is to make an inexpensive WIFI enabled air particle sensor that can log it's historical data on the web for others to use. The data can also be used to send SMS alerts to your cell phone to let you know when the air quality is poor.\nBackground\nWith allergies and asthma I'm interested in both the indoor and outdoor air quality. I heat with a Quadrafire woodstove. It is suppose to be a clean stove. I was interested in the impact on both my inside air (ie. ash/dust) and outside air (smoke). New York State monitors the air quality at several locations around the State. Certified Allergy & Asthma Consultants in Albany NY published daily pollen counts. \nWhat I learned today\nTechnology is changing very quickly in the IoT environment. I learned a ton of new things.\nThe mentors are the Tech Valley Center Of Gravity Makerspace were wonderful!\nThanks to Jeff Brunson from Sparkfun, Scot Straight from Makerfront, and Tom Tongue from COG.\n\n\nSparkfun Particle Photon  and the \nDevelopment  Environment\n\nIFTTT IF This Than That alert generation\n\nOnShape Solid Modeling\n\ndata.sparkfun.com\ndatalogging\n\nAnalog.io Data Graphing\n\nHow it Works\n\n\nThe PPD42NS sensor outputs a signal on Pin 6. You measure how long the digital signal on pin is low during the 30 second sample time. This ratio is used in a transfer function to calculate the particles per 0.01 cubic feet.\n\n\nThe air particle concentration is pushed to the Internet in two different ways. The first is thru a\nspark.variable which is a global variable on the cloud. It can be seen by applications like IFTTT.\nThe second location is data.sparkfun.com. The Phant library is used to post the data. The data\ncan be retrieved in several formats: JSON, CSV, MySQL, PostgreSQL, Atom.\n\n\nThe analog.io site reads the data.sparkfun.com site and creates rolling graphs.\n\n\nThe text message alerts are generated using IFTTT. There are connection objects for the particle and SMS.\n \n\nHardware\n\n\nSparkfun Photon Red Board\n\nSeeedStudio Dust Sensor\n\nMakerfront i3 Pro 3D Printer\n\nSoftware\n/*\n Interface to Shinyei Model PPD42NS Particle Sensor\n Program by Christopher Nafis \n Written January 2016\n \n http://www.seeedstudio.com/depot/grove-dust-sensor-p-1050.html\n \n JST Pin 1 (Black Wire)  => Photon GND\n JST Pin 3 (Red wire)    => Photon 5VDC\n JST Pin 4 (Yellow wire) => Photon Digital Pin 6\n */\n#include \"math.h\"\n#include \"SparkFunPhant/SparkFunPhant.h\"\n\nint pin = 6;\nunsigned long duration;\nunsigned long starttime;\nunsigned long sampletime_ms = 30000;\nunsigned long lowpulseoccupancy = 0;\nfloat ratio = 0;\ndouble concentration = 0;\n\nconst char server[] = \"data.sparkfun.com\"; // Phant destination server\nconst char publicKey[] = \"your public key\"; // Phant public key\nconst char privateKey[] = \"your private key\"; // Phant private key\nPhant phant(server, publicKey, privateKey); // Create a Phant object\n\nconst int POST_RATE = 30000; // Time between posts, in ms.\nunsigned long lastPost = 0; // global variable to keep track of last post time\n\nvoid setup() {\n  Serial.begin(9600);\n  pinMode(pin,INPUT);\n  Spark.variable(\"partcons\", &concentration, DOUBLE);\n  starttime = millis();\n}\n\nvoid loop() {\n  duration = pulseIn(pin, LOW);\n  lowpulseoccupancy = lowpulseoccupancy+duration;\n\n  if ((millis()-starttime) > sampletime_ms)\n  {\n    ratio = lowpulseoccupancy/(sampletime_ms*10.0);  // Integer percentage 0=>100\n    concentration = 1.1*pow(ratio,3)-3.8*pow(ratio,2)+520*ratio+0.62; // using spec sheet curve\n    Serial.print(lowpulseoccupancy);\n    Serial.print(\", \");\n    Serial.print(ratio);\n    Serial.print(\", \");\n    Serial.println(concentration);\n    lowpulseoccupancy = 0;\n    \n    // If it's been POST_RATE ms (default 30 seconds), try to post again.\n    if (lastPost + POST_RATE < millis())\n    {\n        // If the post succeeds, update lastPost so we don't post for\n        // another 30 seconds.\n        if (postToPhant() > 0)\n        {\n            lastPost = millis();\n        }\n        // If the post fails, delay 1s and try again.\n    }\n    \n    starttime = millis();\n  }\n}\n\nint postToPhant()\n{\n    // Use phant.add(, ) to add data to each field.\n    // Phant requires you to update each and every field before posting,\n    // make sure all fields defined in the stream are added here.\n\n    phant.add(\"air\", concentration);\n    \n    TCPClient client;\n    char response[512];\n    int i = 0;\n    int retVal = 0;\n    \n    if (client.connect(server, 80)) // Connect to the server\n    {\n        // Post message to indicate connect success\n        Serial.println(\"Posting!\"); \n        \n        // phant.post() will return a string formatted as an HTTP POST.\n        // It'll include all of the field/data values we added before.\n        // Use client.print() to send that string to the server.\n        client.print(phant.post());\n        delay(1000);\n        // Now we'll do some simple checking to see what (if any) response\n        // the server gives us.\n        while (client.available())\n        {\n            char c = client.read();\n            Serial.print(c);    // Print the response for debugging help.\n            if (i < 512)\n                response[i++] = c; // Add character to response string\n        }\n        // Search the response string for \"200 OK\", if that's found the post\n        // succeeded.\n        if (strstr(response, \"200 OK\"))\n        {\n            Serial.println(\"Post success!\");\n            retVal = 1;\n        }\n        else if (strstr(response, \"400 Bad Request\"))\n        {   // \"400 Bad Request\" means the Phant POST was formatted incorrectly.\n            // This most commonly ocurrs because a field is either missing,\n            // duplicated, or misspelled.\n            Serial.println(\"Bad request\");\n            retVal = -1;\n        }\n        else\n        {\n            // Otherwise we got a response we weren't looking for.\n            retVal = -2;\n        }\n    }\n    else\n    {   // If the connection failed, print a message:\n        Serial.println(\"connection failed\");\n        retVal = -3;\n    }\n    client.stop();  // Close the connection to server.\n    return retVal;  // Return error (or success) code.\n}\n\nSome of my other Projects\n\n\nRabbit Powered 1-Wire Weather Station Controller\n\n1-Wire Snowfall /Snow Depth Sensor (Automated Snowboard)\n\nNetworked Ultrasonic Snow fall / Snow Depth / Water Height Sensor\n\nMonitoring Electricity Usage\n\nMonitoring Radon Gas Levels\n\nAir Quality Monitoring with Dylos DC1100 Paricle Monitor\n\n",
        "hackathon_id": "cogiothack",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe wanted to create an integrated solution for fire safety among the general public.  Many people die every year from smoke inhalation and carbon monoxide poisoning. The recent death of a mother and her daughter inside of a car due to carbon monoxide inspired us to come up with a solution to save lives. We wanted to come up with a system that could help fire fighters find victims quickly and prevent false alarms. \n\nWhat it does\nFeatures of the Flame Warden Alarm system\n\nSmoke and carbon monoxide sensor\nBlinking LEDs and loud buzzer sound\nAdditional layer of fire validation via real time video analysis\nImmediate alert to the authorities and registered users of a potential threat (SMS and Email)\nMobile application\nLocationing of people within the hazardous area\nLive image of the hazard area with count of people and type of threat\n\nHow we built it\n\nTechnologies: \n\nRaspberry Pi\nCamera / Touch Screen\nHardware Sensors (CO/Gas module/LED)\nMobile programming (iOS)\nImage processing and detection (OpenCV) \nCloud Deployment (Digital Ocean) \n\nChallenges we ran into Fire Warden\nHardware:\n\nSensors did not have documentation. \nLearning the Raspberry Pi GPIO controls. \nPush notifications in ILS. \nImage processing figuring out correct motion detection for identification of fire origin. \nSetting up the hardware (camera installation/driver installation/enabling i/o)\n\nSoftware:\n\nLearning how to better use iOS UI development.\nCompilation in Raspberry Pi of Open CV libraries. \nLack of knowledge of Python (sensors)\nHTTPS communication did not work by default on iOS\n\nAccomplishments that we're proud of\nWe achieved MVP quickly and were able to finish our stretch goals. We were able to deploy a full end to end solution that could be deployed commercially. We were able to get all of our sensors working. A lot of us worked with technology we never used before yet we were able to complete our solution. We also traveled a far distance on little sleep yet were able to stay up late into the night.\nWhat's next for Flame Warden\n\nFlesh out the proximity sensor\nAdd on full onboarding and configuration for iOS\nExpand to Android\nExpand to web\nMake a desktop UI application that runs for the Raspberry Pi\nBetter and accurate fire detection (combination of infrared and image algos) \nBuild nice form factor case for product \n\nDemo\n\n\n\n\n\n\nDemo (video)\nhttps://youtu.be/U5rABt6q_Qo\n",
        "hackathon_id": "cogiothack",
        "winner": true
    },
    {
        "description": "\nInspiration\nNoisy neighbors and neighborhoods\nWhat it does\nmonitors noise levels, creates non-confrontational communication between neighbors, tracks and maps noise levels in cities\nHow we built it\nHtoo Wai built a sensor using an electret mic. Gabby and Arsal setup the esp8266, and came up with the idea that ended the brainstorming torture. Amanda setup the raspberry pi servers with data logging and interface. Finn designed and 3D printed our cases, and put together our backup sensor. \nChallenges we ran into\nquality sensor readings\nbest protocols for storing and tansferring data\nlive web updates\nslow processing of large amounts of data\nserver crashed \nAccomplishments that we're proud of\nthe sensor\nhardware setup\nWhat we learned\nbrainstorming is hard \nhow to make a sound sensor\nop amps!\nesp8266 - connect processes \nWhat's next for Noisy or Nice\nfiguring out best ways to sample data for apartment level, building level, and city level. Adding anonymous response system for neighbors to alert each other of noise pollution. Complete interactive dashboard/ infographics. \n",
        "hackathon_id": "cogiothack",
        "winner": true
    },
    {
        "description": "\nI had an idea to build this a long time ago, but I put it off because it seemed too difficult.\nThe theme of the hackathon inspired me to try to do it though, and I got it working! (mostly).\nSo what is it? It's an RC buggy with a video camera that can be controlled over the cell network. The camera has a gimbal and can look around independently. The buggy is controlled from a PC using an xbox 360 controller. It has a little display that shows the battery voltage that you can look down at with the camera.\nSome cool things about it\nIt works perfectly on wifi. There's no noticeable lag, and you can race around under tables and explore the building. When I got frustrated late at night working on the 4G, i'd switch to wifi and do some laps to get my motivation back :)\nIt works via 4G, sort of.. It's not laggy, but the video quality is like youtube on dialup. After some tweaking, I was able to drive it remotely via 4g though so I think it was a success. Theoretically I could explore miles and miles away!\nBecause the buggy's on a virtual lan, I can SSH and even remote desktop into it while it's out in the world! There's no 4g reception in the maker space, so I eventually brought the rover 2 blocks away to the top of a deserted parking garage, then left it running and ran back to the maker space. The video barely worked at first, but I was able to stop and start the video stream with different settings until it came in reliably. The remote tweaking was really fun, it felt like working on the mars rover.\nHere's how I laid out the system, the code for each of these parts is attached below:\nPC Side Applications:\nZerotier service Zerotier is a free program that puts a group of computers onto a virtual private network (so they can talk to each other via IP addresses). It's like a regular VPN, but it tries to send packets directly to the destination using NAT traversal.\nController Reader  This is a python script I wrote that reads position of the joysticks on the gamepad 30 times per second. After every read, it packs the values into a UDP packet and sends it to the rovers IP address. It also numbers each packet, so the rover knows if it's getting them out of order.\nG-Streamer Client   G Streamer is a program that can read video streams and send them over IP (or other connections). There's a server on the buggy and a client on the PC. The configuration was pretty complicated, but there were a lot of examples on the net. After you figure out the right commands you just execute the scripts and it starts up easily.\nPing Script   The connections to the buggy were often flakey (especially on 4g) so I found it helpful to run a ping every 4 seconds continuously while connected to the buggy this gave me a real time indicator of the latency and packet losses.\nTightVNCClient      Can be used to remote desktop into the PI, not strictly necessary but handy.\nBuggy Applications:\nZerotier service    On linux you have to set it up with the terminal instead of a GUI, but it works the same way once it's set up.\nNetwork Manager  Basically a beefed up version of the network manager that comes with the PI. It supports talking to cell modems natively, so it eliminated that whole issue. With my modem I had to install \"usb mode switch\" to get the modem to appear on USB. After that it was smooth sailing though.\nReceive UDP Control   This is a python script I wrote. It waits for UDP control packets from the PC. When it gets one, it decodes it and sends the commands to the servos that control the buggy. It also checks that the packets are in order, and kills the throttle if a packet is not received for 100ms. I added some code later to adjust the servo center points and ranges.\nG-Streamer Server    Talks to the matching client on the PC.\ntightVNC Server        Allows remote desktop access to the PI. I was able to use it tune the video stream parameters while the rover was outside of the building.\nHardware\nRaspberry PI 2\nAdafruit I2C Servo Controller\nAdafruit Pan-Tilt Gimbal\n3x Adafruit 3a 5v Switching BECs (voltage regulators)\nRaspberry Pi Wifi Dongle\nHuwaai 3276-150 4G modem\nAdafruit Voltage Display 3-30v\nGamestop xbox360 controller (I had it lying around)\nRaspberry Pi Nightvision Camera\nHobbyking Rattler 4WD Buggy\n2s 6Ah Lipo Battery \nMy code: http://www.wolfsprojectfiles.com/4g_earth_rover_files.zip \n(Note, you'll need to install some stuff to run these scripts. They're more for informational use.)\nDemo Video: https://www.youtube.com/watch?v=K8ZM0I_Svlk\nMy website: www.wolfsprojectfiles.com\n",
        "hackathon_id": "cogiothack",
        "winner": true
    },
    {
        "description": "\nInspiration\nI am fascinated by the idea of simple and inexpensive hardware providing advanced and interesting functionality. Nest was valued at 2.3 Billion dollars by making a $250 device with a thermal sensor and a switch. The real value is in providing data about energy use. The exact same value can be provided in pest control: simply equip traps with a sensor package that is triggered by a kill or capture and send notifications via the internet that the trap should be serviced. More powerfully, relevant pest data can be recorded and logged such as environmental conditions such as temperature, light, sound, and other metrics. Having a device like this will reduce visits by service people who check traps and can also drastically improve service times as removing traps can be done in a very timely basis.\nWhat it does\nThe Better Mousetrap sends a message to the owner (house owner or pest control service) and records environmental data. \nThis device has benefits in three important areas: Cities, Buildings, and healthcare\nBy widespread use of the Better Mousetrap, the connected traps can map out where the traps have been more successful and the data can be recorded over time to see how the infestations move across the city or when new ones arrive. Further, ambient, environmental data provided by the widespread sue of these traps can help monitor conditions around the city that can be correlated to other characteristics such as crime rate, energy use and so forth.\nThe fast response time that is enabled by instant messaging to the pest control company will serve to eliminate pests in a timely manner while minimizing the number of times pest control personel need to enter buildings and apartments and offices.\nFinally in healthcare, the rat maps that is possible with Better Mousetraps, can be correlated to disease rates. But better than that is the fact the vermin trapping can be done in a \"set-it and forget it\" manner, possibly reducing the overall disease carrying, rodent populations throughout entire area.\nHow I built it\nI used a Woodstream multiple live catch trap link and used the metal trap mechanism as a switch. The software sees the trap ramp leave the top position and them get to the bottom position which can only happen when a mouse fully enters the trap. This triggers a data storage command and sends a text to the owner an puts a reminder in their to do list using IFTTT.\nChallenges I ran into\nThe top switch is hokey. The metal on metal contact is not reliable and I had to spend a large amount of time improving that. Other than that normal learning curves for using the Photon and IFTTT\nAccomplishments that I'm proud of\nThis old dog learned a couple of new tricks with the world of internet tools. I've perhaps convinced myself I could turn this into a real product.\nWhat I learned\nThe particle environment. I learned my old spark devices are not to be used in the future. I learned how to utilize IFTTT.\nWhat's next for A Better Mousetrap\nWin $1000 dollars to help confidence in actually pursuing this as a line of business. The sensor and electronics package can be made to be incredibly small and low power. If people believe in this device, I'll talk to pest control companies about what sort of other information might be relevant and useful.\n",
        "hackathon_id": "cogiothack",
        "winner": true
    },
    {
        "description": "\nThe Safe Kitchen\nInspiration\nHardware for a Safer Life\nOver 162,000 Home fires every year in the U.S. involving cooking equipment\n    - National Fire Prevention Assoc. (NFPA)\nRanges account for greater than 60% of the fires, and 86% of the deaths!\nUnattended equipment is the leading cause\nWhat it does\nOvenOn:\nEmbedded system to detect and alert users of appliances left on!\n\nWeb Application for data logging and user messaging\n\nHow we built it\nEmbedded System - Photon Particle, Sparkfun clamp-on current sensor (transformer)\nWeb Application\nRuby on Rails on private server\nMandrill e-mail services\n\nChallenges we ran into\nNonexistant/Poor pinout documentation for some components\nNot developing with a real oven/stovetop during the Hackathon\nApple MacBook Pro Graphics Card failures during Web App Development\nAccomplishments that we're proud of\nBuilding a strong/talented team\n   --Jim Beck\n   --C Cantello\n   --Jim Cifarelli\n   --Eric Robrigado\nWhat we learned\nPhoton programming\nResources offered by the Center of Gravity\nWhat's next for The Safe Kitchen\nNext Generation Project\n    The Smart Spoon Rest  -- added sensors, advanced detection/alerting algorithms\n",
        "hackathon_id": "cogiothack",
        "winner": false
    },
    {
        "description": "\nInspiration\nInternet connected color of led string based on twitter hashtag. Social interaction of twitter based input\nWhat it does\nwhen a twitter hashtag or word combination, in this case \"TVCOG\" the color on the led string cycles through a rainbow\nHow we built it\nThe hardware consists of a led light strip controller that was changed via a remote control, an arduino that controls the colors of the led lights, and a raspberry pi that handles the twitter interaction and hardware arduino I/0 with Johnny-Five\nThe led strip controller was used for the mosfets that drive an LED strip, all other chips were stripped off the board to directly connect the arduino pwm to the mosfet input logic. The raspberry pi needed several development packages installed and updated into a new configuration that was sparsely documented on the web. \nChallenges we ran into\nThe remote control on the led strip had limited information on the web and was just hacked for the power mosfet portion\nAccomplishments that we're proud of\ngetting Johnny-five running on the raspberry pi\nWhat we learned\nRpi current node application needs to be updated to 4.x to use Johnny-Five\nWhat's next for hashtag enabled led strip using rpi and arduino\nInstalling the package on a raspberry pi in the COG makerspace for use in the large windows in the space\n",
        "hackathon_id": "cogiothack",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe goal of Mike Robot is to upgrade all objects to be smart objects through personal robotics.\nWhat it does\nMike Robot recognizes intuitive gestures to control the movement of a robotic arm.\nHow we built it\nMike uses a leap motion controller for motion capture. A nodejs client reads data from the sensor, and send it over the network to a NodeJS server on a raspberry Pi, which controls a robotic arm via USB. A 3D printed case is mounted to an RC car for locomotion.\nChallenges we ran into\nCombining multiple simultaneous sensor inputs to precisely control the robot. 3D printing errors.\nAccomplishments that we're proud of\nHigh-fidelity motion control is intuitive and \"feels\" good - as though you are using \"the force\" to control an object. The motion capture is highly accurate and responsive. \nWhat we learned\nHow to combine different sensor inputs. How to 3D print custom parts.\nWhat's next for Mike Robot\nUpgrade all hardware components, including the mechanical arm and robotic base. Add \"eyes\" - a 3D sensor with object recognition so that interact automatically with real-world objects.\n",
        "hackathon_id": "cogiothack",
        "winner": false
    },
    {
        "description": "\nBuilt With\nbeaglebone-blackarduino-megapython\n",
        "hackathon_id": "cogiothack",
        "winner": false
    },
    {
        "description": "\nInspiration\nQuitting smoking is difficult because the health affects are not immediate, nor are the damages visible. Only over time, when it's too late.\nWhat it does\nA light sensor is tied to an electronic cigarette. Every time i puff on the electronic cigarette. A web service picks up the event and simulates a blackening of the lungs.\nHow we built it\nUses a light sensor on a vaporizer to sense every time we take a puff out of a cigarette.\nWhat's next for Smoker Lungs\nFinding single event sources that can essentially tie a single event to certain habits. Using temperature sensors on a lighter can definitely be a good use case of using this event driven logic.\n",
        "hackathon_id": "cogiothack",
        "winner": false
    },
    {
        "description": "\nInspiration\nLack of WIFI mailbox monitoring that is easy to install and low-power.\nWhat it does\nGet notifications when you send/receive mail. Basic security features are included.\nHow we built it\nWe hacked an Amazon dash and installed a software-development kit on it. With that tool we will code the Amazon Dash to send email notifications.  The hardware I/O and the Amazon Dash is controlled with an MSP430 microcontroller. We designed an enclosure representing a mailbox in Scetchpad, and if will (hopefully) be 3D printed.\n",
        "hackathon_id": "cogiothack",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe California water crisis. Also, my gas bill is too high. \nWhat it does\nTracks water consumed and water temperature, and then estimates the energy usage. \nHow I built it\nUses NRF24 to transmit data from a Hall effect water sensor and thyristor temperature monitor to a base station. \nChallenges I ran into\nEverything. Principally, programming AVR chips. Constantly running into synrchronization issues, bad protocols, communication issues up the wazoo. \nAccomplishments that I'm proud of\nAble to get water usage data and temperature transmitted. LED control is running but needs tweaking. Worked nearly the full 24 hours straight. Also wrote some arduino code that I think some of the best stuff I've written, despite the time crunch. \nWhat I learned\nSoldering proto boards to load ATMEL chips into and ISP programming just isn't worth the extra time and energy compared to solderless breadboards. Got really good at debugging microcontroller communication protocol bugs. \nDoing a hackathon solo is really, really tough. I tried reaching out the day of the hack to see if anyone was interested in joining my team for the project, but it seemed most people already had teams. Coming into a hackathon with a team is the way to go. I did try to rope my compsci classmates into the hackathon, but they all wimped out. \nWhat's next for Ought'r Wireless Shower Monitor\nMore prototyping. \n",
        "hackathon_id": "cogiothack",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonbluemixbatchkinectibmmicrosoftcommand-linenode.jsvisual-studioxamlc#\n",
        "hackathon_id": "dragonhacks2016",
        "winner": true
    },
    {
        "description": "\nMirror Mirror on the wall...\nImagine yourself waking up in the morning, walking towards your mirror and having everything you want to know about your day displayed all around you.\nNow that is possible with MirrorMirror! This magical mirror will display the time, weather, and upcoming events for your day. Using the Myo Armband, you can control the mirror and have it take a picture of you by a single gesture. Daily photos have never been easier!\nWith MirrorMirror you can record how you are feeling at the time you look in the mirror by simply talking to it. Later you could go back and reflect on your emotions. This will help you become more aware of yourself, consequentially resulting in a stronger self image!\n",
        "hackathon_id": "dragonhacks2016",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe wanted to create a hardware hack that will help the evolution of gaming. Most people get bored of using controllers to play video games because there is a missing aspect of gaming. In order to bring back this aspect, we decided on creating the Kindrone hack.\nWhat it does\nThe Kindrone hack uses the kinect sensor to communicate with the AR.Drone and send readings to control and fly the drone. The gesture readings from joints above the torso are used for flying the drone.\nLeft Hand:\nUp: Take Off\nDown: Land\nLeft: Turn Left\nRight: Turn Right\nForward: Hover\nRight Hand:\nUp: Fly Up\nDown: Fly Down\nForwards: Fly Forwards\nBackwards: Fly Backwards\nHow I built it\nThe Kindrone hack is compiled into a Visual Studio windows application. We mostly used C# to program the gesture controls. We used the AR.Drone project SDK found on their website to communicate between the kinect/application and drone. Visual studio was used to create the application and program the kinect controls. This hack is currently for windows only since kinect support only goes to windows.\nChallenges I ran into\nOne of the challenges that we ran into is programming the gestures to fly the drone. We had to do a lot of trial and error to get the approximate location. Another challenge was maintain a stable connection between the drone and application because it would disconnect every few minutes.\nAccomplishments that I'm proud of\nWe are proud of completing the project in the 24 hours and actually getting it to work. The completion of the project was a big effort and we really proud of it. Another thing we are proud of is the way we used the gestures.\nWhat I learned\nEvery hackathon we learn something new and we believe this is the most I've learned at a hackathon. We learned 3 dimensional programmable motion, documenting and understanding code, using various sdks to build the hack.\nWhat's next for Kindrone\nWe plan to add more gestures such as rolling . We also to use parallel programming to continuously monitor each gesture and have multiple gestures recognized at the same time. We would also like to add a VR so its connected to the drone camera, by doing so the user will get the complete package.\n",
        "hackathon_id": "dragonhacks2016",
        "winner": true
    },
    {
        "description": "\nInspiration\nDyslexia\nDyslexia is a language-based learning disability or disorder that includes poor word reading, word decoding, oral reading fluency and spelling.\nAccording to Austin Learning Solutions  , every 1 in 10 people are dyselxic, and over 40 million American Adults are dyslexic, but only 2 million know about it. They also state that with proper training and education dyslexic people can learn successfully. As a responsible citizen of the world, and with the technological knowledge that we possess, we thought tht we should do something about it. \nWhat it does\nDyslexify is an application-based aid that was built through Android Studio. The data received by the user is saved into the app to create the permuted words. An OCR (Optical Character Recognition) algorithm is used to Dyslexify a picture of text to an easy to read font for the user. \nHow We built it\nWe initially divided our team in two groups: one group working on android app development, and the other group researching on developing an efficient algorithm for OCR, keeping in mind the maximum problems that can be included in that. We also consulted a fellow hacker who has dyslexia, and it strengthened our \nChallenges We ran into\nSince none of our group members were dyslexic or had someone in their circle, who had dyslexia, we did not have the first hand experience about the problem. However, since we were determined to take every possible action in order to solve this, we did some onine research as well as tried to find someone who can give us a first-hand account of the problems. Luckily, we found one of the fellow hackers here, who had dyslexia and were able to discuss this sensitive topic of dyslexia with him. After the conversation and some brainstorming, and keeping in mind the limited time of the hackathon, we decided to tackle few of the problems, including the image recognition and inverted appearance of the letters.\nApart from not knowing the team members in the beginning, only a couple of our team members had any background in android development. Hence in past 24 hours everyone learned android development and also tried implementing it while learning.\nOur other challenge was to develop an Optical Character Recognition (OCR) algorithm that extracted letters from the image as well as correctly identified the right letter.\nAccomplishments that we are proud of\nWe are proud of whatever we accomplished, given the fact that we had almost no experience working with Android development, and we are proud that we were able to introduce to a healthy hacking experience to one of our teammates, for whom this was the first hackathon.\nWhat We Learned\nWe learned a lot this year at DragonHacks. Admittedly, certain parts of our user interface was lacking a great design element. Others still used some bad  coding convention that would get even the newest developers scolded. At the end of the day, we created a product that worked, and embodied our vision of being able to help those in need.\nWhat's next for Dyslexify\n\nWe are going to add additional functionalities to our application, and try to get involved with some 'learning solutions' provider so that we can understand the issues in more detail, and find ways to tackle it.\nWe also plan on reaching out to more people affected by dyslexia and get their thoughts on our product. \n\n",
        "hackathon_id": "dragonhacks2016",
        "winner": true
    },
    {
        "description": "\nThis is an unformatted version of a larger document, whose link is listed below. \nA Brief Description of Contents\nThis is a simple, but complex, and yet elegant, and bewildering product developed in the span of 24 hours during the 2016 Dragon Hacks Hack-A-Thon. The collection of microcontrollers and modules is designed to carefully meet the industry needs in the monitoring of propane tanks. Great stress was exhausted to ensure that there was an external system for: level detection, leak detection, wireless communication, and energy storage. The complete process is applicable to both rural and industrial needs, and should fall neatly under any corporate budget. \n    On location, the steel propane tank will have a small, stream-lined, weather-proof plastic enclosure stuck to it with permanent magnet (rare-earth) feet. The enclosure contains an ultrasonic transducer pair, which uses well-defined technology to measure the level of the liquid propane inside the tank. The tank also comes equipped with solar cells, to generate energy, and piezoelectric contact microphones, for use specifically with detecting leakage. A wireless module, as well, is included, for communication.\n    The propane tank, or tanks, can connect to a main hub either on location or up to 1mi away, which then acts as a server. The information (liquid level, temperature, leak warnings, etc) is stored on the network, creating a \u201ccloud\u201d interface, which an administrator can access through a dashboard. \n    This low-profile, micropower solution is well integrated and is very expandable. \nIntroduction\nNow that our \u201ckeywords\u201d are out of the way (any schmuck can write keywords!) we would like to present, in more detail, each subsection of the project in detail, as well as plans for further work.\nPropane Board\nThe first version of the propane tank circuit board cost approximately $40 each, including wireless modules and sensors. The majority of the cost and power draw, of course, comes from the wireless module, which is a ZigBit product. These are available quickly off the shelf and at a good price, and as such they met our criteria. The second rev. of the board swapped the microcontroller, eliminated one of the timer chips, and increased speed, saving over $7 per board in the process. \n    The board works in a fairly simple and almost linear fashion. It uses ultrasonic sensors, with the TDC1000 XP from Texas Instruments, to measure reflections off the boundaries  within the tank. By measuring the time in between pulses with either the microcontroller, or the TDC7200 timer chip, the height of the water tank can be approximated by the equation:\nD=H - (tc2)\nto find the distance from the sensor to the boundary of the liquid propane, where t is the time elapsed, and c is the speed of sound in liquid propane (about 1000m/s) and H is the height of the tank.\n    The microcontroller we have decided on is the PIC16F720, which draws minimal power. It has communication capabilities with SPI for the TDC1000 chip, and UART for connection with the ZigBit module. \nThe ultrasonic transducers used have a resonant frequency found by \nfclk2TXFREQDIV+1 \nwhere fclk is the clock frequency of the TDC1000, and TXFREQDIV is the frequency division implemented in the firmware within the TDC1000. \n    In order to monitor potential leaks, a number of possible methods were considered. The most cost-effective and simple method was the use of piezoelectric \u201ccontact microphone\u201d transducers with a resonant frequency is the 2.7kHz range. In this way, the piezoelectric element (usually some form of NZT, quartz, or other  piezoelectric materials) will resonate with the vibrations of the tank whenever a prolonged \u201chissing\u201d sound (associated with a gas leak) propagates through the steel tank. A time-gate is necessary to minimize false-alarms and if need be, the microcontroller can provide finer digital signal processing. \n    The board runs off of a 3.3V power supply. The energy is obtained through an Li-Ion battery cell rated at 600mAh, and 3.7V. In addition to this battery, solar cells will provide charging energy to the board. This limits the need for manual recharging. \n    Going further, it may be possible to use other modes of energy harvesting, such as vibration-harvesting in ultra-micropower wireless transmitters. This is a growing area of research today, and as such the technology was not fit for this commercial project. It would result in greater price, and higher complexity, but would have benefits such as eliminating the need for batteries. \nRev 1.0 of the propane tank board\nImprovements made in rev 2.0:\nNew MCU: PIC16F720\nCheaper\nMinimum features (SPI, UART) necessary\nMore IO (17)\nOptimal usage of SPI between MCU and TDC1000\nElimination of TDC7200, reducing price $6 each\nSelected parts for piezoelectric elements centered at 2.7kHz to detect hissing\nWireless ZigBee UART communication\nBuzzer interface\nWireless Modules\nThe propane board connects wirelessly to a \u201chub\u201d or \u201cserver\u201d located within 1mi of the propane tank site. The board itself connects to the hub via 2.4GHz serial communication, whereupon the hub connects itself to the internet to store the data in a cloud-format using IBM\u2019s Bluemix. \n    This was, of course, the most demanding requirement, in terms of cost, power usage, and complexity. After looking into the possibility of avoiding a hub, it was decided that the hub would have a wired or wireless connection to the internet, though it may be placed up to 4000ft away. The wireless module of choice is the XB24CZ7PIT-004, a 2.4GHz transceiver that boasts nearly 1mi range, at only 30mA of transmitting current. Other promising, though obsolete, options included the ATBZ-900-B0 module, which used 900MHz signal frequency real-estate to work back and forth between the hub and the tank. Since this part is now obsolete, the XB24 was used instead.\n    The power of the wireless component in the system is its extendability. In a rural setting, one only needs some sort of wired connection within a mile of the tank in order to send away information on the tank. In an industrial setting, many tanks may be managed at once by a single hub, saving cost and reducing complexity of the system.\n    The hub is made up of a microprocessor, such as that used in the Raspberry Pi, which we found to be a very convenient prototyping tool. Since more commercialized versions of these boards exist (i.e. without headers, prototyping tools, bells, and whistles) they are definitely being considered for the commercial product. \nServer-Side\nOn the server side, an embedded linux computer acts as an IOT device. It sends the tank id and level in mm over the internet using the versatile and secure mqtt protocol. Receiving this data is IBM bluemix which is used to interpret and organize the data in a meaningful way. The data can be analyzed for trends and can be viewed from any location with an internet connection. Bluemix also allows for email notifications when the tank level drops below a certain threshold.\nConclusion\nThis comprehensive solution-in-a-system, tirelessly pieced together by the Freshman members of our team at Drexel University, is an effective solution to a real-world problem. We have successfully integrated a number of components in a way such that the level of propane in any given tank may be monitored, leaks detected, and information managed. From the Internet of Things, to IBM\u2019s Bluemix server, and cutting edge measurement techniques, the system is a self-contained, cost effective, and easy to use problem-solver in the propane industry. \n",
        "hackathon_id": "dragonhacks2016",
        "winner": true
    },
    {
        "description": "\nTo everyone who comes across this:\nCLICK THE GOOGLE SLIDES TO INFORMATION:\nhttps://docs.google.com/presentation/d/13VXNXcQCobloyEnlgud-1r-afI24WNyevzgmiPG17wk/edit?usp=sharing \nTHANK YOU TO ALL OF THE SPONSORS, DREXEL UNIVERSITY, JUDGES, MENTORS, AND OTHER HACKERS FOR MAKING THIS AN AWESOME JANUARY 2016 WEEKEND! \n~Best of luck and may your hacking journey continue with success~\nWith Regards,\nVarun Chunduru, Hersh Patel, Nehal Joshi, and Sagar Patel.\n",
        "hackathon_id": "dragonhacks2016",
        "winner": true
    },
    {
        "description": "\nAbout\nThe Propane Tank Leveler 3000 was created at DragonHacks 2016 at Drexel University.\nIt is device that can be used to measure the amount of liquid in a container, made specifically to be used for propane tanks. \nWe decided to do this after we saw the challenge presented by AmeriGas for this hackathon, and thought that we could figure it out a way to solve their problem. We solved this problem utilizing hardware and software by KiernanTimberlake, whose sensors allowed us to determine the levels.\nHow it works\nFour (or any variable number, depending on the size of tank and accuracy desired) temperature sensors are placed on the outside of the container. These sensors will read a different value depending on whether or not there is liquid at the location that the sensor is at. We use this fact to determine a rough estimate of where the liquid level is.\nWhat it\u2019s made of\nOur prototype is made out of a five gallon water jug rigged with all of the wires and sensors. The node and sensors are part of Pointelist, which is developed by KiernanTimberlake. The water jug was stolen from under a table at DragonHacks.\nWho made it\nThis project was developed by Derek Schuster and Ethan Schoen, students at Binghamton University.\nA huge thank you to the guys at KiernanTimberlake for your equipment and for all the help you gave us.\nAnd of course, a thank you to Drexel University for hosting this great event.\n",
        "hackathon_id": "dragonhacks2016",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascripthtmlcss\n",
        "hackathon_id": "dragonhacks2016",
        "winner": true
    },
    {
        "description": "\nInspiration\nNearly 40 million people in the US suffer from some form of arthritis. For many of these people, simple hand exercises can go a long way in helping them feel better. But these exercises are often boring and even painful. We wanted to create a game that would make these exercises more enjoyable.\nWhat it does\nOur game helps users complete their arthritis hand exercises in a more enjoyable way. As different hand gestures scroll down the screen, the user tries to match those gestures as closely as possible. The more gestures they match, the more points they get!\nHow we built it\nWe built our game entirely in Java using libraries for the Leap Motion to recognize the user's hand gestures. The entire \"front-end\" is coded using Java's Swing library. \nChallenges we ran into\nThe hardest part of our project was integrating code from all three team members into the final project. We had one programmer working on the front-end and two working on the back-end. After all the individual components were coded, we ran into some trouble combining the pieces so that the front-end worked fluidly with the back-end.\nWe also ran into a lot of trouble exporting the project to an executable jar file for presentation.\nAccomplishments that we're proud of\nWe are particularly proud of the teamwork we demonstrated during this project. Each team member worked on a different component of the project, but we were still able to come together and create a very cohesive project. We area also proud of how professional our game looks. We spent a lot of time making sure everything looked as perfect as possible.\nWhat we learned\nWay too much about Swing components. \nBut in all seriousness, we learned a lot about creating games in Java and using the Leap Motion's libraries to receive input from hand gestures.\n",
        "hackathon_id": "dragonhacks2016",
        "winner": true
    },
    {
        "description": "\nT-Translate\nA common problem when visiting foreign countries is the language barrier. Learning the language can work, but is very time consuming and trying to translate on the go can be uncomfortable. To solve this issue, we are excited to present the T-Translator, the first translating shirt. \nThe T-Translator works by capturing the user\u2019s speech and using Google\u2019s built-in API to translate their words into a pre-selected language. \nOur product helps bridge the language gap between the user and the community around them. \nCheck us out at:\nwww.t-translate.tech/\n",
        "hackathon_id": "dragonhacks2016",
        "winner": true
    },
    {
        "description": "\nInspiration\nI want to get non-statisticians to explore data using the English language.\nI also want to get statisticians to talk about data using English.\nThe Alexa interface for the GapMinder database is inspired by this goal.\nWhat it does\nIt takes english statements and maps them to structured queries on the GapMinder dataset.  It is flexible in the english statements it recognizes.\nHow I built it\n\nI created an AWS Lambda function to respond to Alexa events.\nI wrote and deployed a node.js application to my new Linode server.  It crunches the data, responds to AWS Lambda, and serves visulaizations to the client. \nI created a graphical front-end using Highcharts and my usual front-end stack.\n\nChallenges I ran into\n\nThe echo device cannot get past wi-fi captive portals so I had to get creative to give it internet access.\nI have never written an AWS Lambda function or Alexa skill before so there was a lot of conceptual overhead to get through.\nThings went wrong in the production environment that didn't go wrong in dev environment.  This made debugging a very time consuming process.\n\nAccomplishments that I'm proud of\n\nI learned some cool new technologies \nMy hack works!\n\nWhat I learned\n\nAlexa app development\nThe importance of changing direction when a task becomes too time consuming\n\nWhat's next for alexa-gapminder\n\nMore descriptive stats names as well as units\nIncorporation of the _ complete _ GapMinder dataset\nExpansion of Alexa's supported \"Question Space\"\nUser Authentication and Deployment to Alexa App store\n\n",
        "hackathon_id": "dragonhacks2016",
        "winner": true
    },
    {
        "description": "\nBuilt With\npythonflaskswiftmysql\n",
        "hackathon_id": "dragonhacks2016",
        "winner": true
    },
    {
        "description": "\nInspiration\nGitHub is a large source code sharing and collaboration website. Currently there is an archive of all GitHub events per hour, but there is no visualization of the things happening on GitHub at real time. GitLive provides real time information and statistics about what's happening on GitHub, including trending users and projects.\nWhat it does\nGitLive provides real time graphs for the events on GitHub, new repositories, new branches and tags, trending repositories, trending users and per minute statistics.\nHow I built it\nIt polls GitHub event API every 2 seconds using a modified open source project https://github.com/igrigorik/githubarchive.org. Then this subscriber pushes the events to redis. On nodeJS side, it reads the events from redis, calculates the statistics and sends the data to the client using websocket.\nI used the \"MLH 2016 Hackathon Season\" AWS credit to host the website. I got a free domain from domain.com and used Let's Encrypt to get a free SSL certificate.\nThe event polling part used the igrigorik/githubarchive.org project. I developed the nodeJS backend and visualization html by myself. The structure of the project is ruby->redis->nodejs+express+socketio->google charts.\nChallenges I ran into\nThis is the first time for me to use ruby.\nAccomplishments that I'm proud of\nThis is my first time to build a large scale real time data visualization.\nWhat I learned\nruby, real time processing\nWhat's next for GitLive\nI will add more trending and statistics features.\nImportant information of the domain\nhttps://gitlive.net/ was registered last night (1/16/2016). Due to DNS TTL delays, the IP records take time to be updated everywhere. Add 52.91.7.236 gitlive.net in your hosts file if you meet DNS issues.\n",
        "hackathon_id": "dragonhacks2016",
        "winner": true
    },
    {
        "description": "\nBuilt With\nandroid-studio\n",
        "hackathon_id": "dragonhacks2016",
        "winner": true
    },
    {
        "description": "\nBuilt With\nnode.jsjavascript\n",
        "hackathon_id": "dragonhacks2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nIt thinks the way I think when it comes to getting X to Y.\nGoogle Maps lets you search for transit or biking or walking but doesn't combine both, and definitely not bikeshare. Sometimes the feastest way is bikeshare + transit, based on personal experience.\nWhat it does\nHow I built it\nChallenges I ran into\nAccomplishments that I'm proud of\nWhat I learned\nWhat's next for Hacker Routes\n",
        "hackathon_id": "dragonhacks2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptjavajava-servlethtmlcssmysqlbluemixibm-watsonjson\n",
        "hackathon_id": "dragonhacks2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nThis was created part as a proof of concept, part as an explorative project into Augmented Reality.\nWhat it does\nUses image tracking to overlay 3D images on a video and presents in 3D for a Google Cardboard.\nHow I built it\nUnity Engine, Vuforia SDK, Android SDK, C#\nChallenges I ran into\n3D modeling as well as the complications of rendering such detailed models on a phone. The draw of resources is tremendous.\nAccomplishments that I'm proud of\nThat it worked.\nWhat I learned\nTime management, 3D modeling, Unity Engine, C#, animation, Vuforia SDK, Android SDK\nWhat's next for CARD\nNot sure, but the possibilities are endless for education, security, gaming, and more!\n",
        "hackathon_id": "dragonhacks2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe were interested in utilizing a microcontroller for a 3D application, so we began attempting to create a 3D hand controlled by our own hand.  Once the hand was built, we made an application that is a proof of concept for potential healthcare hardware endeavors involving hand therapy associated with arthritis, hand injuries, carpal tunnel syndrome, etc.\nWhat it does\nOur glove attached to hardware controls all 5 digits of a human hand and translates movements in the real world to movements of a 3D model hand in Unity3D.  In Unity3D, we built a simple app that challenges the user to bend certain fingers when prompted.  \nHow we built it\nWe built several circuits on an Arduino board, 5 of which involved flex sensors for five fingers.  We used voltage splitting and relative value mapping to map the response voltages to numbers that can be translated to finger bending in Unity3D.  In order to communicate with Unity3D, we used an Arduino bluetooth peripheral and a Mac's bluetooth port to retrieve serial data from the Arduino and map it to each finger.  We wrote an overall hand moving class to recognize finger movement and add hand therapy app functionality.  \nChallenges we ran into\nIn general, bluetooth connectivity, serial output from the Arduino to unity, and finger motion were our biggest challenges.  \nAccomplishments that we're proud of\nCommunicating with Unity via a microcontroller in an intelligent way is something we're very proud of, and we're happy our aspirations produced a product that is both inexpensive and potentially useful for individuals struggling with hand-motion related ailments.  \nWhat we learned\nOur software people learned hardware.  Our hardware people learned software.  We all learned how hard it is to build out an interactive peripheral for a 3D model.  \nWhat's next for 3D Hand Therapy\nWe hope this hack serves as a proof of concept for inexpensive health recover/rehab methods related to hand motion in the future.  \n",
        "hackathon_id": "dragonhacks2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\nnode.jsraspberry-pi\n",
        "hackathon_id": "dragonhacks2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe inspiration for \"Skin On Me\" was to help identify a skin disorder some person may have but are not aware of what it actually is. This would have the potential to save many lives by catching preventable skin disorder early.\nWhat it does\nWith the application the user can easily able to identify any possible skin disorder with a degree of confidence. First, the user will take a photo of their condition under normal light conditions, then the application will process the image through IBM Watsons' Visual Recognition API to determine what the skin disorder might be. The application will return the most likely skin disorder and provide useful information to the user about where to get treatment.\nHow we built it\nWe built this application using IBM Bluemix, more specifically IBM Watson APIs and services for Visual Recognition. First we created an application through Bluemix using the Internet of Things boiler plate using Node RED. With Node RED we created flows to interact with the Visual Recognition service and process our images. Results will be returned back to our web application where the user can view it.\nChallenges we ran into\nWhen creating the application using Node RED with Visual Recognition(beta), we came across through many technical issue due to unavailability of proper documentation, we ran into some serious challenges, including problems encountered with the custom classifiers, which took couple hours to figure it out.\nAccomplishments that we're proud of\nWe contributed with the knowledge of functionality of IBM's latest API with filling in the loopholes in incomplete documentation and figuring out the API eventually after getting help from IBM personnel's.\nWhat we learned\nWe learned about IBM Bluemix products and services, mainly creating applications and using the Watson services for Visual Recognition. Additionally we gained practice of using Node RED for creating flows with IBMs services, and using Postman to test data calls. \nWhat's next for Skin On Me\nWe intend to get Watson to work as intended, currently waiting on updates to Node RED before we can continue. \n",
        "hackathon_id": "dragonhacks2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\nibm-watsonbluemixpython\n",
        "hackathon_id": "dragonhacks2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe inspiration of this hack came from the countless hours wasted on weekend nights trying to plan a place to go out to eat or drink. The complexity of the decision increases with the number of friends in the group. With varying preferences and food choices we decided it was high time there was an application that could help any group finally reach a Consensus!\nWhat it does\nConsensus is a web application that uses Yelp-Developer API to retrieve various check-ins and reviews by all members in a group. The application then sends these user-reviews to IBM Watson's Tone Analyzer to determine the sentiment of the review. Based on this analysis each member has a profile that keeps track of their cuisine preferences. When the member joins a group his preferences are compared with the preferences of other members and the application tries to reach a consensus as to what will be the most likely places that the specific group of members would enjoy.\nHow we built it\nConsensus was built completely in python on the back-end. The Yelp- Developer API was used to retrieve food preferences of the members. \nFirst, python was used to query the Yelp API for information regarding businesses.\nNext, python was used to query IBM Watson's analysis API with individual user reviews as the input\nThe results from IBM Watson were parsed, cleaned and then visualized for better clarity\nChallenges we ran into\n\nYelp API isn't the most well organized. So that took us a while to get a hang of\nIBM Watson has limitations on query lengths and so we ran into some issues because of that. \nOur team had two members both more comfortable with back-end than Front end UI/UX, hence that was a major roadblock. But like true Hackathon Hackers we did our best to figure it out and ended up with a fairly awesome proof of concept website.\n\nAccomplishments that we're proud of\nWe are proud of our idea and the meaningful insights we could retrieve from social media activity. \nWhat we learned\nWe got acquainted with Yelp and IBM Watson API.\nWe learned how to make a website wth decent visualizations\nWhat's next for Consensus\nWe plan to pull in data from other social media websites. Especially Instagram, since posting your favorite food on Instagram in most cases a higher priority than actually enjoying the meal!\n",
        "hackathon_id": "dragonhacks2016",
        "winner": false
    },
    {
        "description": "\nBE A FAN\nAndroid and IPhone app designed to get you where your teams are for the game, concert, or performance\nUsing Expedia\u2019s suggestions, geo, and package search APIs we match up itineraries to get you to events\nOur algorithm uses SeatGeek\u2019s API to search for artists and teams with upcoming events.  With some human learning, we select the correct performer.\nWith the performer we find ticket prices and trip packages for upcoming games and performances\n",
        "hackathon_id": "expedia-seattle-hackathon",
        "winner": true
    },
    {
        "description": "\nInspiration\nGroup trips are a lot of fun\u2026 in theory.  Except, they never happen, because inertia.  Yes, there are myriad portals and online travel aggregators that help people book travel, and even ones specialized in group trip planning but you forget to use them (and for the sites, customer acquisition cost is $$$).  It\u2019s not like you travel all the time after all, so you end us using a search engine.\n99% of the time, when you\u2019re planning travel with friends, you\u2019re already in a conversation, increasingly on Facebook Messenger or some other chat service.  \nWe were inspired to add an expedia travel agent to YOUR existing chat.\nWhat it does\nEmilia is a virtual chat agent that coordinates travel plans with your friends.  As a complement to the chat, there\u2019s a UNIQUE trip URL that you hit just for your trip.  It shows your friends and their booking status, details about where you\u2019re going, flights and hotels.  With a bit of imagination, you could see how Expedia could help you book these without even leaving this page.\nFacebook in Messenger\n\nEmilia suggesting locations\n\nOne of the best features about Emilia as a chat agent is unlike a portal site, she can \u2018nag\u2019 you with reminders until you\u2019ve booked.   The trip URL provides some gentle peer pressure so you know when one person hasn\u2019t booked.\nEmilia helps you book travel\n\nEmilia nags users that are tardy in booking\n\nSince everyone booked using Emilia and she knows about everyone\u2019s flight plans, you can see that all in one place.  If someone\u2019s flight is canceled and you need to change plans, you can talk to Emilia and you\u2019ll instantly get a human customer support person from Expedia.\n\nYou can invoke Emilia in the chat by simply typing \u2018@e \u2019.  Users might take a bit of time getting used to this, but we could experiment with this over time.   We chose \u2018@\u2018 because its a preexisting user convention in chat apps like Facebook newsfeed, the Twitter timeline, and business mesaging app Slack.\nHow we built it\nWe build the project using a combination of NodeJS, Facebook Messenger, and a Facebook chatbot API.  This year, both Google and Facebook are releasing more robust and fully featured chat API\u2019s with richer visual features.  \nChallenges we ran into\nBecause we are using Messenger in unconventional ways, the spam prevention service layer at Facebook seemed to kick in, and our Emilia chat bot got \u201ccaptcha\u2019d\u201d several times.  To get around this, we reduced the number of links we used in the chat. \nAccomplishments that we're proud of\nThis thing feels like it can actually work.  At least, work WAY more than the normal way of travel planning.   It fits most user\u2019s mental models.  And we love that we can continue our conversation like nothing happened and Emilia can just be a fly on the wall until we invoke her. \nWhat we learned\nWe learned this could actually work.  People will likely prefer to book travel this way in the near future.\nWhat's next for Emilia\nWe\u2019ve been interested in this chat technology for a while (previous startup was called Lizi, daughter of \u201cELIZA\u201d:  https://en.wikipedia.org/wiki/ELIZA)   \nI guess the answer is \u2018stay tuned\u2019!\n",
        "hackathon_id": "expedia-seattle-hackathon",
        "winner": true
    },
    {
        "description": "\nBuilt With\nsails.jsiosnode.jsmongodbexpediafacebook-login-apifacebook-graphgoogle-maps\n",
        "hackathon_id": "expedia-seattle-hackathon",
        "winner": true
    },
    {
        "description": "\nBuilt With\nnode.jsexpedianatural-language-processingmongoosemongodb\n",
        "hackathon_id": "expedia-seattle-hackathon",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascriptjquerygoogle-directionsgoogle-chartgoogle-mapsgoogle-placesgps\n",
        "hackathon_id": "expedia-seattle-hackathon",
        "winner": true
    },
    {
        "description": "\nInspiration\nHow many times have you had to plan for a trip and researched everything. The flights, hotels, things to do while you're there, things to see. You go on your trip, and once you\u2019ve come back from your trip, that itinerary is in the past. All that effort and research that you put into that itinerary is now lost. Now what if you could share that itinerary, your reviews on the experiences you just had, what was good and bad, and make money for each person you helped book a similar package? You could use our app to plan and fund your next trip! That is what we\u2019ve built for you this weekend.\nWe have elements that target all three sponsor prizes (Sabre - mobile, Apigee - APIs, and Expedia - Accessibility)\n",
        "hackathon_id": "expedia-seattle-hackathon",
        "winner": true
    },
    {
        "description": "\nBuilt With\nredisjerseyrestjavascript\n",
        "hackathon_id": "expedia-seattle-hackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtmlcssmeteor-angular\n",
        "hackathon_id": "expedia-seattle-hackathon",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe've all spent far too many flights bored with nothing to do, and landed feeling groggy and like the whole time was wasted. If it is an international flight, you land as just another foreigner and have to forgo many unique experiences due to the language barrier.\nWhat it does\nWhen you are flying to another country, will you feel bored due to the long-haul flight and worry about potential language issues? Fling is a great solution for both problems!\nAfter you book an international flight through Expedia, Fling will offer a language course that matches your destination country and the length of your international flight. It can notify you of your impending boredom again right before the flight in case you didn't download it earlier.\nWhen you are on the plane, you will get a basic crash course based on the length of your flight. By the time you land, you'll be able to get around without full reliance on a guides, and skip watching your neighbor's screen without audio for the whole flight.\nIn the event there is a delay or layover, Fling dynamically adjusts to provide more targeted language content.\nIt also can be operated by those with visual impairment or full blindness through audio cues and mouse clicks. These passengers will find that they were able to learn through their headphones and still get the full immersive experience Fling provides.\nUpon successful arrival, Fling suggests fun places to visit based on the Expedia ThingsToDo API, so that you can emerge into your destination with new language skills under your belt and an exciting journey ahead. The traveler will remember Fling and Expedia as a core part of their entire journey and experience, instead of just the site that makes it possible.\nFling works on desktop and mobile, so you can learn no matter what device you happen to be carrying. \n",
        "hackathon_id": "expedia-seattle-hackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\nalexa-skills-kitexpediaaws-lambdanode.jstwilio\n",
        "hackathon_id": "expedia-seattle-hackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\nreactjsreduxnode.jsexpediacar2gogoogle\n",
        "hackathon_id": "expedia-seattle-hackathon",
        "winner": false
    },
    {
        "description": "\nRoundUp | Travel Together\n\"Its not about where you're going, its about who you're with\"\nRoundUp is a mobile tool designed for the college student user to have control in planning, booking, and itinerary reviewing in an effective, exciting, and easy experience. \nRoundUp takes into account everyone\u2019s preferences through the in-app survey. The group leader will then be able to move forward with selecting the travel plan, giving everyone access to the same itinerary and individual payment. \nThis group experience guarantees the needed preparation and communication in travel planning. It reduces abandoned carts, further engages young adult users, and better markets the expanse offerings of Expedia. \n        _____________________________________________________________________________________\n\nRoundUp is created with Swift, Xcode, Adobe Illustrator,  Prepo, and JSON.\nFor most of us, this was our first Hackathon and we enjoyed every exhausting moment of it. \nWe have learned an entirely new coding language (Swift, Xcode), API integration (Especially tough in Swift).\nThis is a project created for the Expedia Hackathon on January 29th, 2016 at the University of Washington. \n",
        "hackathon_id": "expedia-seattle-hackathon",
        "winner": false
    },
    {
        "description": "\nWelcome to the fareaway wiki!\nFareAway\nTechnology Used:\n\nNode.js\u00ae - JavaScript runtime backend engine\nIonic Framework - build beautiful and interactive mobile apps using HTML5 and AngularJS\nExpress - Webservice backend for Node.js\nApigee Edge - as API Proxy to enable optimize accessing Expedia APIs.\nGithub - source control\nExpedia API - Flight search\n\nInnovation and Creativity\nObserve and vividly describe a problem\nMake travel available to those with limited income, using their own paycheck rather than a high interest loan.\nHypothesis, \"What if we could create or change one thing?\u201d\nTo do this we have created an Expedia 'Trip Box' trip saving experience that helps someone save for a trip through social, and game like encouragements.\nBusiness Value Add\nHow will you know if your project works?\nLook at impact to ticket sales and social media references.\nWhat will you measure?\n\nSocial media sharing and inviting of friends\nFrequency and trend of saving for individuals' piggy bank.\nTicket purchases via this application.\n\nHow will you make money? How will your partners make money?\n\nIncrease ticket sales for a segment that is not traveling since they find it out of their reach\n\nIf the project is successful, what would be one thing you would do next?\n\nUser testing and validation on the problem hypothesis and current application experience.\nInvestigate electronic savings options.\n\nApplication to Travel Industry\n\nHow does this fit into the travel ecosystem?\nGetting those who to start the Experience sharing from saving to going on the trip.  An app and store front experience separate of the 'regular' Expedia experience.\nWho are your customers?\nCustomers who are living from paycheck to paycheck.\nWho are your partners? Competitors?\nPotential partners could be banks or credit unions.  Content creators (image/articles) for the motivation page.\n\nCompetitors are credit card holders, high interest loans\n",
        "hackathon_id": "expedia-seattle-hackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtmlcss\n",
        "hackathon_id": "expedia-seattle-hackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\nnode.jsexpress.jshtmlcss\n",
        "hackathon_id": "expedia-seattle-hackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\nasp.nethtmllcss\n",
        "hackathon_id": "expedia-seattle-hackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\nphp5redislaravelunityc#jsonmysqlrest\n",
        "hackathon_id": "expedia-seattle-hackathon",
        "winner": false
    },
    {
        "description": "\nInspiration\nWhen shopping for a vacation, people not only care about the flight prices, hotels, or rental cars. They also want to know how other people planned their vacation to the same destination, how the experience was. It will be very valuable to have an app that allows people to easily share their travel experience, allows people to plan vacation based on others' story, and to easily book similar trip.\nWhat it does\n\nThe app allows people to very easily show off their vacation by sharing photos and trip plan\nIt also allows vacation shoppers to see other people's trip when shopping for a vacation package, which will make them more informed about the trip, and make them more likely to book on your website. And the app integrates with Expedia platform to give suggestion for a similar trip and give an estimated cost.\n\nHow I built it\nIt's on Android, using Google Map API, Google Play Service API, and Expedia API.\nChallenges I ran into\nI'm still working on it :)\nAccomplishments that I'm proud of\nWhat I learned\nWhat's next for ExShowCase\n",
        "hackathon_id": "expedia-seattle-hackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\nangular.jsexpedianode.jsgoogle-mapsopenweathermap\n",
        "hackathon_id": "expedia-seattle-hackathon",
        "winner": false
    },
    {
        "description": "\nInspiration\nFrom our own experience, finding food while traveling in middle-of-nowhere is a difficult thing to do. We remembered about Uber and Yelp, and thought of making something similar to that where traveller can search for food on the spot. \nWhat it does\n(target user: rural area travelers and local people who have time to serve food)\nTraveller: find active local people who can serve food to travelers at that time. Able to eat local food, talk to local people, and experience the local culture/dish for a decent price. \nLocal people: be active when available to serve food for the travelers. Able to communicate with travelers, hear their story, and earn money by making food for them. \nHow we built it\nWe used Android Studio platform to build a mobile application for Android OS. We also used Firebase for storing data.\nChallenges we ran into\nSince none of our team members had experience with handling the API, and both have very little to almost no experience with mobile application developing, we had hard time with almost everything. \nAccomplishments that we're proud of\nWe are proud that we were able to show Google map with current location marked on the map, write & read nested data by using Firebase, getting and processing the data from API, and making new markers on the google map. \nWhat we learned\nWe learned basic feature we need to do when building a mobile app (adding page, adding button, linking button to a new page, know what to import and where to write code, etc), learned how to handle API, how to debug with Android Studio. We learned too many things in two days that we don't know what to list. \nWhat's next for FooBar\nreviews and comment features, payment methods, host holiday/event meals using things to do API\n",
        "hackathon_id": "expedia-seattle-hackathon",
        "winner": false
    },
    {
        "description": "\nWhat it does\nThe product of the minds of three globetrotters, Caravan lets you find fun experiences quickly and easily and helps you make friends along the way! Traveling solo? Find new friends wherever you go with Caravan!\n",
        "hackathon_id": "expedia-seattle-hackathon",
        "winner": false
    },
    {
        "description": "\nInspiration\nOne of our team members, Shannon, told us about her personal experiences and pain with family gatherings. She told us of her father and a manila folder he would carry and constantly consult for family arrivals and lodging locations. While the folder-solution for her father was successful, it was a delicate construct that was only decipherable by him alone. With our team, we discussed an event manager that could put this information into one place that would be more user-friendly. A dashboard where the planner type can wrangle the loose family ends into one easy to understand interface that can be shared and updated between attending members.\nWhat it does\nUsers can come at RSVP from two directions. The first as an event manager. A user can create a new event, invite guests, and list the details of the event. The second way for a user to interact is as a guest. A guest is invited to an event via email (like a slack invitation) where they can log in and view the event. Guests can review lodging details for each guest and can even find lodging deals displayed through the site via Expedia's Hotel API. Guests' lodging details are recorded and displayed for other guests to see.\nHow we built it\nRails, Ruby, Bootstrap, Expedia Hotel API, Google Maps API, and love.\nChallenges we ran into\nSmooth sailing with team RSVP, always.\nAccomplishments that we're proud of\nLaunching the live project on Heroku with Mailers is always exciting at a hackathon. We're also proud that we were able to wrangle the Expedia APIs for displaying relevant hotel information for guests to reference in their own purchases.\nWhat we learned\nWe learned that a squad of five Rails developers can very quickly produce a prototype we're all happy to present.\nWhat's next for RSVP\nRSVP will go in two directions. The first is as a wedding planning tool, headed by one of our members, Aileen. The second is in the more general direction for any event, headed by our very own Jake.\n",
        "hackathon_id": "expedia-seattle-hackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\npython\n",
        "hackathon_id": "floodhack",
        "winner": true
    },
    {
        "description": "\nBuilt With\nncwmsleaflet.jswmsgdalrasdamanpythonjavascriptnetcdfasterdemglofasjsonwcscanvas\n",
        "hackathon_id": "floodhack",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascriptpythonshellsqlitehtml5css3canvasoclc-wmsjsonflaskopenshiftgithub\n",
        "hackathon_id": "floodhack",
        "winner": true
    },
    {
        "description": "\nInspiration:\nEnd users of flood forecast could gain more out of the system, if GloFAS forecast could be combine with information of critrical infrastructure on the ground.\nWhat it does\nIt link discharge flood forecast exceedances of severity thresholds (e.g. for the 5 yr return period) for the user defined area with external layers such us roads, hospitals, power supply stations etc. The result provides the affected infrastructure within the flood areas for different forecasts lead-times. \nHow we built it\nWe exploited Python to create a script able to retrive GloFAS data -through WCS- together with external datasets (i.e OpenStreetMap) and run spatial comparisons between them by obtaining information about likely flooded features which may be of interest for the end user.\nChallenges we ran into\nConfusion with latitudes and longitudes were rampant! We kept getting the coordinates wrong and as a result, could not progress beyond Day 5 forcast! However with a help from group of experts, the problem looks like it was resolved!\nAccomplishments that we're proud of\nTest new ways on GloFAS information delivery\nWe came out with a new acronym: Global Flood Awareness Queries (GloFAQ)\nWhat we learned\nIt is difficult to implement things on a short time, but was great to work with different people/background towards the same aim and vision.\nWhat's next for GloFAQ:\nBuild a Graphical User Interface, Allow dynamic queries responses, make queries compatiple with other kind of data, \n",
        "hackathon_id": "floodhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonrnode.jsd3.js\n",
        "hackathon_id": "floodhack",
        "winner": false
    },
    {
        "description": "\nWhat it does\nTinker is a \"personal assistant\" for telegram.\nHow we built it\nWe used The telegrams bot api and CLI as the platform \nand node.js for the \"server-side\".\nChallenges we ran into\nFirstly we had to learn how to use Node.js and understand the async nature of the language\nas part of the async nature of JS we had problems with understanding how to work with the DataBase.\nThen we had to understand the Telegram's BOT-API and the CLI library and how to compile.\nAccomplishments that we're proud of\nA working Bot that for now has the next features:\n-Weather telling\n-List management\n-Messaging management   \nWhat we learned\nWe have learned the node.js language and its asunc nature,\nthe Telegram's BOT-API and CLI.\nWhat's next for Tinker\nMore Features to make him an actual power tool. \n",
        "hackathon_id": "oshhack2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nunityc#\n",
        "hackathon_id": "oshhack2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nnode.jsjavascriptjqueryexpress.jsherokuandroidhtml5css3\n",
        "hackathon_id": "oshhack2015",
        "winner": true
    },
    {
        "description": "\nThe information in this page is based on the USENIX \u2018GSMem\u2019 paper [1] by Mordechai Guri et al (see reference below).\nRAMEAR uses the hardware every computer already has to secretly transmit your data, without you realising!\nWhat it does\nRAMEAR is combination transmitter and receiver designed for transmitting signals outside of standard computer interfaces. \nThe inspiration of RAMEAR comes from the following GSMem paper  presented at USENIX.\nWe have taken a standard Ubuntu PC, and managed to wirelessly transmit data from it - even though the PC has no Ethernet connection, no WiFi and no Bluetooth.\nThis is accomplished by bashing the Data Bus of the computer - the main communication avenue between the RAM and the CPU of the computer. We use a special assembler instruction to transmit 128 bits in parallel to the RAM, bypassing the cache. We repeatedly run this instruction to transmit random data over a period of 500ms, effectively increasing the radiated RF power from the bus substantially.\nA \u20181\u2019 transmission in our system corresponds to a period of high activity on the Data bus, and a \u20180\u2019 transmission corresponds to average activity. \nOn the receiving end, we calculate the amplitude of the signal and process it [5 stages] to decode the waveform. We developed the transmission system from scratch in order to fit our needs, including both developing noise rejection code ourselves and automatic clock synchronisation.\nHow we built it\nOn the transmission end, we used standard hardware to emulate a wall-gapped-system, potentially inside a secure facility. We wrote some low-profile code in C which hits the data bus at its maximumum frequency - on this computer, approximately 513Mhz [that's 513 million 128-bit transactions per second]. The code has a very low memory footprint [as it writes to the same location continually], and also has a very low CPU footprint - as the memory frequency is much lower than the CPU frequency.\nOn the receiving end, we use a python script to process the RF data from the bladeRF. During the course of the hackathon we developed our own transmission protocol, and our own algorithms for automatic clock resynchronisation and noise rejection. In order to reject noise, we did have to maximise the transmission period, such that our data rate is approximately 2 bits per second. However, for an example use case of transmitting a 512 bit secure key from a remote air-gapped computer, this only takes 4 minutes to transmit, which we consider reasonable.\nChallenges we ran into\nWe get noise from the frequency channel of our RAM. We had to do a lot of signal processing to reconstruct the data we send to our RAM.\nThe main challenges were involved with the RF processing (we had no prior RF experience) and decoding of the signal. We are dealing with extremely noisy data with no synchronising clock, and therefore the decoding algorithm was complex. However, we are comfortable with how it performed at the end - in several tests it managed to transmit 40 bytes consecutively without a single error.  \nAccomplishments that we're proud of\nActually managing to make it work was a challenge - especially when it came to data decoding. The data decoding automatically resynchronises the clock on high quality pulses, and then relies on this timing when the signal becomes worse in quality. Secondly, the system automatically keeps track of the high and low signal powers, and continually readjusts the thresholds to ensure that a drift in power still remains readable. \nWhat we learned\n\nHow to use the BladeRF\nHow to integrate assembler instructions into a C program\nHow to calculate the power of a I/Q RF signal\nHow to roll-your-own clock resynchronisation\n\nWhat's next for RAMEAR\nAt another hackathon we would love to increase the power of the system and improve its range. We believe we should be able to achieve substantially greater ranges by incorporating more RF knowledge into the project - using tools such as increasing the gain in hardware.\nWe would also like to hijack the mobile baseband in your phone to pick up these signals automatically - without the need for a Software Defined Radio (SDR) like the BladeRF. Overall, for 36 hours - we are happy!\nReference\n\nGuri, M., Kachlon, A., Hasson, O., Kedma, G., Mirsky, Y. and Elovici, Y., 2015. GSMem: data exfiltration from air-gapped computers over GSM frequencies. In 24th USENIX Security Symposium (USENIX Security 15) (pp. 849-864).\nLink to Paper\n\n",
        "hackathon_id": "pennapps-xiii",
        "winner": true
    },
    {
        "description": "\nInspiration:\nWe met with two nurses from Penn Medicine, who shed light on the process of nursing pre-maturely born babies to us. We visited the pre-natal care unit to get a better feel of the needs and requirements. We were surprised to know that even in today's tech-savvy world, the entire process of managing and tracking the breast milk for preemies was manual. This is our attempt at building a platform and trying to automate the process.\nBackground:\nPreemies or pre-mature babies are kept in NICU i.e. natal intensive care unit till they have fully developed. This can take months altogether, during which it is not possible for the mother to be present next to her baby every single moment of the day. The lactating mothers are given milk bottles to be filled with breast milk, which are then fed to the baby in the hospital by the nurses. Our app tries to automate the management and tracking of the milk bottles, while aiming to make it a simpler and happier experience for all involved.\nWhat it does:\nIt is a web-based app that streamlines the process of nursing preemies. It consists of three modules: one for the lactating mother who uses the app to record details for every breast milk bottle filled, the nurse who is responsible for feeding the new-born and keeping track of the tot's milk consumption and the admin at the hospital who maintains the system. The system involves use of QR codes to manage the details of each milk bottle. \nHow we built it:\nWe began with discussing the requirements and the infrastructure of the app. We set up a back-end to maintain the databases, enable QR code usage and flesh out the various users of the app. We then proceeded to develop a user-friendly and responsive front-end. Last but not the least, we hacked some hardware to come up with the self-measuring app that would emulate the milk-bottle.\nChallenges we ran into:\nWe wanted an app that could be used by any OS, be it Desktop (Mac/Windows) or Mobile (Android/iOS/Windows). We decided that a mobile-first, responsive web app would be the way to go.\nAccomplishments that we're proud of:\nOn a technological level: creation of a self-measuring cup! \nAs far as the larger picture is concerned, we love the fact that as part of Penn Apps, we got to work on something that addresses a real problem with a highly impactful solution. \nWhat we learned:\nFull-stack development and product management. \nWhat's next for Lact-o-log:\nWe hope to continue working on this to be able to deploy this on a large-scale for hospitals.\n",
        "hackathon_id": "pennapps-xiii",
        "winner": true
    },
    {
        "description": "\nInspiration\n_ \"I remember seeing my late-grandfather have difficulty managing his prescriptions for a number of chronic conditions. He had difficulty with the timings and quantities for prescription administration so I was inspired to make PillPal.\" _ - Phil\nWhat it does\nIt automatically dispenses pills based on a preset schedule. It also functions as a positive reinforcement mechanism to encourage young children to take their medications consistently. \nHow we built it\nFirst Phil prototyped and model the entire assembly in SolidWorks. We gleaned inspiration from other medical devices for their smooth contours and easy to clean surfaces, as well as current cutting-edge internet-of-things devices such as the Nest Thermostat and Apple Watch. We fabricated the model out of 3d-printed PLA and laser cut acrylic. \nChallenges we ran into\nThere was a number of difficulties with mechanical tolerances and bluetooth connectivity. (And not eating the candy).\nAccomplishments that we're proud of\nThe elegant exterior and closely integrated electro-mechanical design, we also love the intuitive indicator lights. \nWhat we learned\nYou can in fact recover from losing all your SolidWorks files halfway through the project that you forgot to save. Also that bluetooth 4.0 is very, very complicated. \nWhat's next for PillPal\nWe envision PillPal being a household amenity for the growing baby-boomer generation. \n",
        "hackathon_id": "pennapps-xiii",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe are always on the lookout for a faster and smoother experience, then why should we waste time scavenging through videos on a particular topic only to hear a few important lines, or manually scout to find that one fact/joke that we once heard. We feel that this is wrong and so we came up with audSearch - a video parsing tool which selectively highlights certain searched for segments of videos and gives general viewer trend on the topic.\nWhat it does\naudSearch gives the user the ability to choose a sequence of words which would then be parsed in the video. The user can choose any of the sections and can selectively hear about the topics of interest rather than going through the entire video. But wait there's more, we felt that likes/dislikes and views are not always sufficient explainers of a video, so we came up with a functionality of color coded entity level sentimental analysis. This would allow the users to see what past viewers have felt like while watching the video. \nHow we built it\nWe worked on creating the tool as a google extension to corroborate the existing youtube functionalities. Having coming up with the general control over the features and design of the extension, we worked on using Houndify's API to do voice to text conversion. Such a conversion allows us to search the video and highlight specific keyword occurrences in the videos. Afterwards, we spent our efforts coming up with providing our users a greater experience by providing past viewers sentiment analysis on the topic. This allows them to learn more about the video and the way people are thinking about it, as compared to mere likes/dislikes. All along the process, we kept on providing small surprises such as the pop up window, and the amazingly creative spiral loading bar.\nChallenges we ran into\nThere were a couple of challenges we ran into. Firstly working with the API, getting the video files into recognizable format took a great efforts and challenging tricks from us. For the algorithm to work the way we wanted it to, the file had to broken down into small chunks, which had to be learnt. Creating a google extension came in quick, however designing it to communicate with youtube and the backend made us think/experiment a lot. Since everyone was assigned a specific sub-task, towards the end meticulous effort was also required to merge everything into the app we had imagined.\nAccomplishments that we're proud of\nWe are really proud of finally making what we thought of. The first time we had thought of this idea, we weren't even sure if it was possible but seeing so many people working and taking challenges head first, we gave it our best shot. Making the front end communicate smoothly with the back end and seeing the first results of using the Houndify API got us super excited :) \nWhat we learned\nThese 36 hours were an amazing learning experience. Each of us learnt something new which we had never done before - be it back-end development, working with APIs or google extensions. We took on challenges and enjoyed every bit of the competition.\nWhat's next for audSearch\nAlthough we are proud of what we came up with in these 36 hours, we plan to make a couple of improvements to audSearch. We are thinking of extending features to work on non-youtube videos, adding a functionality to attaching Postmates API to be able to place orders while watching your favorite recipe videos. \n",
        "hackathon_id": "pennapps-xiii",
        "winner": true
    },
    {
        "description": "\nautoDirector\n",
        "hackathon_id": "pennapps-xiii",
        "winner": true
    },
    {
        "description": "\nBuilt With\npythonazurejavascriptajaxhtml5css3flask\n",
        "hackathon_id": "pennapps-xiii",
        "winner": true
    },
    {
        "description": "\nBuilt With\nunityjavascripthtml5css3c#google-cardboardaugmented-realityexpress.jsandroidiosnode.jssocket.io\n",
        "hackathon_id": "pennapps-xiii",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascripthtmlcssjsonxmlmysqlphpajaxgithub\n",
        "hackathon_id": "pennapps-xiii",
        "winner": true
    },
    {
        "description": "\nInspiration\nAlice in wonderland\nWhat it does\nAn exploratory game/escape the room\nHow we built it\nUsing Maya, Unity, C#, Oculus Rift\nChallenges we ran into\nGame mechanics, optimization for rendering, level design, hunger & sleep deprivation\nAccomplishments that we're proud of\nA complete playable level with VR\nWhat we learned\nWork as a team!\nWhat's next for Carroll\nShe goes to the next whimsical world\n",
        "hackathon_id": "pennapps-xiii",
        "winner": true
    },
    {
        "description": "\n\nInspiration\nFinding a good bathroom is essential to the human condition. FourPly makes it easy to make smart bathroom choices. Once you're there, FourPly becomes your bathroom companion. Leave your mark with virtual AR graffiti and see what others have left behind. Find out where the person one stall over got their awesome shoes with anonymous chat. And if you are in a jam, call for an emergency toilet paper delivery with Postmates.\nWhat it does\nFourPly lets you:\n\nDiscover nearby bathrooms\nView and create virtual Augmented Reality graffiti on bathroom walls\nRead and leave reviews on bathroom quality\nChat anonymously with fellow bathroom-goers\nOrder emergency supplies like more toilet paper or a change of clothes with Postmates\n\nHow we built it\nFourPly uses custom OpenCV image processing for our flagship feature - virtual AR graffiti.  The rest of the app uses Parse for data storage and Firebase for real-time chat.\nChallenges and learning\nQuality AR in bathrooms is challenging - everything from different lighting conditions to different stall door materials to complex tile patterns makes pattern recognition challenging and computationally taxing. This is an area we'd like to learn more about to improve the performance of FourPly and future machine vision projects we embark on.\nWhat's next for FourPly\nBathroom checkins, badges and achievements, improved AR functionality, who knows. Don't forget to flush! \n",
        "hackathon_id": "pennapps-xiii",
        "winner": true
    },
    {
        "description": "\nDiabetes is a lifestyle disease. Patients don\u2019t simply take their meds at the right times; they must make conscious diet and exercise choices, monitor their well-being every day, and cope with a plethora of complications. Patients often feel alone in the fight to keep their A1C stable with every action they take, resulting in lower motivation and the high occurrence of depression in the diabetic population.\nBlocks of Sugar is a social media for diabetic patients. Users sign up by entering their age, gender, and location. Based on these three features, they are matched to a league of diabetics in their neighborhood area with similar demographics. Within the web app, users can see relevant news articles and nearby events on a map interface and view their fellow league member\u2019s health status updates. A leaderboard, ranking league members on how well they\u2019re currently managing their diabetes, is included to gamify the experience and motivate users to make better choices. In addition, a group chat feature is available so users can anonymously discuss their tips and strategies for managing their disease.\nWe built this app in HTML/CSS using the Johnson and Johnson One Touch Reveal API as a test dataset of diabetes patient profiles. We performed unsupervised machine learning using hierarchical clustering in the Beaker Notebook on the diabetes patient demographic profiles from the Johnson and Johnson dataset. We also used the Every Block API to retrieve diabetes-relevant news articles and meetups in the user\u2019s local neighborhood league.\n",
        "hackathon_id": "pennapps-xiii",
        "winner": true
    },
    {
        "description": "\nInspiration\nDiabetes\nDiabetes is a metabolic disease in which the body\u2019s inability to produce any or enough insulin causes elevated levels of glucose in the blood.\nDiabetes in Kids\nThe amount of type 1 diabetes, an autoimmune disease, climbed 21% from 2000 to 2009, to 1.93 per 1,000 children. The prevalence of type 2 diabetes \u2014 which is associated with obesity \u2014 jumped more than 30% in the same period, to a rate of 0.46 per 1,000 kids, according to a study presented Saturday at the Pediatric Academic Societies' meeting in Vancouver, Canada.\nIt is really sad when kids can't eat their favorite candies/chocolates  because of something that they can monitor themselves.\nWhat it does\nOur iOS application is a simple attempt to encourage younger kids to monitor their Blood Glucose level at a fixed time interval, by providing an animated and fun-to-use interface. The app also tries to create awareness about Diabetes by providing short tips and information on how can certain blood glucose levels be attained, and what it means.\nHow We built it\nWe initially divided the tasks among the team members, and decided to create this project in different stages, starting with the user-interface, abstracting the data values from One-Touch Reveal API end-points, and then linking them through Parse in our iOS app built using Swift 2.0. We also attempted to build a web-interface to facilitate easier data monitoring.\nChallenges We ran into\nAs we tried to build our application in iOS, during the time of implementing Push Notifications, we realized that we would need an active Apple Developer account, which we didn't have. So we had to find a way around it, and create pop-ups/alerts instead. Apart from that, the OneTouch Reveal API did not give us any real-time updates or did not allow us to query a data search for an individual user, so we had to use JSON dump obtained via Swagger.\nApart from not knowing the team members in the beginning, only a couple of our team members had a substantial background in iOS development. Hence in past 36 hours everyone learned iOS development and also tried implementing it while learning.\nWhat We Learned\nWe learned a lot this year at PennApps. Admittedly, certain parts of our gaming interface was lacking a great UI design element, however we learned a lot about the frame rendering and creating animations within a single view in iOS.  We alos learned about back-end integration in swift using Parse and JSON. At the end of the day, we created a product that worked, and embodied our vision of being able to help those in need.\nWhat's next for SugarMinder\n\nWe are going to add additional functionalities to our application, and try to get get some real consumer feedback, which we were not able to do so at the hackathon as there were no kids, who are our prime traget market.\nWe also plan on reaching out to doctors and medical facilities to provide somewhat more personalized patient content and preferences.\n\n",
        "hackathon_id": "pennapps-xiii",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe wanted to revolutionize the way people think about exercise outside of the gym. Exercise does not have to be restricted to one place, it can include exploring the city you live in.\nWhat it does\nExercise is important for everybody, but especially for people with diabetes. But exercise isn't limited to lifting weights, it includes going to a local park, or visiting a museum. The app we built has multiple picture challenges, where users have to go to different locations around the city and document their adventure to earn points. The goal is to encourage people with diabetes to incorporate exercise into their daily lives by doing things you enjoy.\nHow we built it\nThe app is built around a gamification of exercise, where users can build up points by completing different activities that take them all around the city. The points and challenges are all stored on Parse. The app was built using objective-c and is dynamically populated from data pulled from the Parse database. \nChallenges we ran into\nTime.\nAccomplishments that we're proud of\nResisting insomnia cookies, and building an app in 2 days!\nWhat we learned\nParse is a nice framework that makes backend work a lot easier.\nWhat's next for Big Hero You\nPartner up with local attractions to get discounts or even include more incentives for diabetics to get up and get fit.\n",
        "hackathon_id": "pennapps-xiii",
        "winner": true
    },
    {
        "description": "\nInspiration\nA few months ago, a member of the VIA group had an experience in the Philadelphia SEPTA subway where he saw a visually impaired individual nearly crashing into a pole until he was millimeters apart from it. Observing this dangerous and preventable scenario, we realized that simply knowing whether there is something in front of someone isn't enough. Environmental context is innate to each and everyone of us, except for the visually impaired. With VIA (Visual Impairment Assistant), we want to bring context back to those that don't have it.\nWhat it does\n\nVIA consists of a close and long range component for the visually impaired to gather feedback and re-gain context of their surrounding environment. Five ultrasonic sensors interface with the a 4 x 5 array of micro-servos to give feedback to the user for up to 7 feet for close-range context. A recurrent neural network NeuralTalk2 trained on Microsoft COCO datasets describes to the user in real-time the environment in front of them for long-range context. \nTogether, the haptic feedback and the real-time neural network gives a complete overview of the user's immediate environment, telling the visually impaired individual what is in front of them, how far away an object is away from them, and where it is in front of them.\nHow we built it\n1 - Ideation on design thinking\n\nOn Friday night, using the Make Toast design thinking method, we came up with 4 - 5 different project ideas, from an electric snowboard (to pay homage to the Blizzard Jonas), to a machine learning electronics part sorter, and more. Our group had unanimous agreement on attempting a hack to assist the blind.\n2 - Proposing and testing out different mechanical haptic solutions\nOne major part of VIA is the haptic feedback device. The team proposed multiple mechanical solutions for the haptic feedback:\n\npins that go up and down driven by electromagnets (a solution that was dismissed after the prototype experienced too much EM interference when used in an array of said electromagnets)\nferrofluids (too complex/crazy)\nsmart fabric driven by electro-current that expands/contracts (too complex as we need to take into account the speed of heating and cooling)\n\n\nAfter many hours of continued prototyping, the final haptics solution consists of 4 x 5 micro-servos that takes in commands from a row of 5 multi-directional ultrasonic sensors controlled by an Arduino Mega. The final design also probably has enough wire to go from Drexel to Penn and back. \n3 - Recurrent neural network real-time video description\nUsing the NeuralTalk2 library, the team quickly built up an efficient and functional real-time environment describor that uses a webcam as the input feed. The original NeuralTalk2 library only offers image descriptions in the form of text, so the program had to be hacked to add text-to-speech as well as hooking up an external webcam. Click here to see test #2 for the image describor.\n4 - Rapid prototyping and modeling\n\nAs VIA consists of not only software components, but also heavy hardware and electronic components, rendering software such as SolidWorks and Keyshot were used for rapid prototyping, 3D printing, and laser cutting. All hardware components prior to assembling were designed on SolidWorks to ensure a 1:1 scale and maximum precision. VIA is a project that requires precision to ensure the haptic feedback device working correctly, so being able to rapidly prototype using 3D printing and laser cutting was an essential part of the success of the project. \nChallenges we ran into\n\n\nInstalling all the necessary dependencies required for NeuralTalk2\nApplying text-to-speech to NeuralTalk2 without simply using Bash piping\nRapidly designing and prototyping all hardware and electronic parts\nStripping long distances of wiring\nAssembling all enclosures such as the 4 x 5 array of servos, the 5 ultrasonic sensors, and the webcam\nBusted servos, not enough servos, confining servos\nLimited hardware components\nFaulty equipment, components, servos\nLots of soldering work\nTime consuming\nOutdated Arduino libraries\nSupplying enough current to electronics\nInitial design failed as there were too many custom hardware components\nPower issues\nOpenCV crashing exactly 100 seconds of program initialization - still haven't figured this one out\nNeural network consuming over 4 GBs of memory and crashing frequently during demo time\nLaser cutting and 3D printer not being available, taking too long, and not being precise enough\nSleep deprivation (all three members haven't slept in 48 hours)\n\nAccomplishments that we're proud of\n\n\nusing a 15 year old Celeron floppy IDE cable to connect the Arduino Mega to our array of ultrasonic sensors and servos\nafter changing design 2 - 3 times, all the hardware/electronics problems, and all the issues mentioned before we were still able to get something working. The team succeeded by change direction in-time, thinking outside the box, staying calm when facing new problems, and encouraging each other. \nincredible complexity of the multiple disciplines necessary to get VIA working (skills: electronics, hardware, prototyping, software, mechanical engineering design, working the 3DPrinters/LaserCutter, access to hardware things, machining.. and more)\nThree people (two of which were first time hackers, and the other his first hardware + machine learning hack) with very different skillsets working so well together in creating such a complex project\nVIA WORKS!!!!!\n\nWhat we learned\n\nCredits\nKarpathy for writing the NeuralTalk2 recurrent neural network library.\n",
        "hackathon_id": "pennapps-xiii",
        "winner": true
    },
    {
        "description": "\nInspiration\nA diagnosis of diabetes does not come lightly; it forces a drastic change in lifestyle and leads to the incredibly terrifying feeling of having no control. At any point in time, while studying, gardening, eating or even sleeping, a sudden spike in blood sugar levels could leave you comatose. This constant worry of being blindsided, and by your own body at that, inspired us to develop an app that would give diabetics back the steering wheel to their lives.\nWhat it does\nIt actively reads a patients data and predicts with 91% accuracy what their blood glucose level will be in 20 minutes. This allows patients to react and prevent any further damage. \nHow we built it\nSo we initially had 100 data points to work with to build a neural network that would make accurate predictions, however we needed more data to process, and managed to convince the Johnson and Johnson sponsors to provide us with 11000 data points. Then we implemented a creative algorithm that used machine learning to find the most effective configuration for the predictive machine learning - \"machine-ception\" if you will. A neural network that configured itself, all written from scratch!\nChallenges we ran into\nInitially we were only given a very limited amount of data, that led to a highly inconsistent algorithm. It would have wild swings from 72% accuracy down all the way to 40%. However, the real struggle came once we actually obtained an abundance of data. In order to process the 11000 data points, we had to find out how to run our machine learning on a multi-threaded Linode server. It took a great deal of configuration to make our algorithm compatible with the sever, and even more config to get the multi-threading to work.\nAccomplishments that we're proud of\nWorking with a team with a very diversified skillset, we achieved a predictive accuracy of 91%! Every member of the team had an opportunity to not only apply what they already knew, but grow into the necessary skills by the end of the hack.\nWhat we learned\nCreative machine learning algorithms, and how to analyse data using cross validation, test, and training sets as well as implementing a variety of pre-existing algorithms and our own algorithms to improve performance from an initial 11% to an incredible 91% final accuracy!\nWhat's next for Live Free\nThe implementation of RNNs instead of ANNs to increase accuracy.\n",
        "hackathon_id": "pennapps-xiii",
        "winner": true
    },
    {
        "description": "\nWhat it is\nA typical smartphone that we carry today can read, detect and store a lot of data about us. We thought wouldn't it be wonderful if there was this technology or an app, that like your personal autobiographer notes down everything you do, documenting every minute of your life.\nTechnologies & APIs used\nIt collates most of the offline data from the android smartphone, such as call logs, IM, contacts & Calendar.\nGoogle Fit API\nGoogle Photos\nFacebook API\nTwitter API\nPlaid API\nUber API\nSoundhound's, Houndify API\nTwo Sigma Beaker API\nVisit Protray.me for more details\n",
        "hackathon_id": "pennapps-xiii",
        "winner": true
    },
    {
        "description": "\nInspiration\nThe long checkout lines have made shopping a time-consuming chore for so many people that stores are losing about 5 million dollars of revenue because of this. Meanwhile, stores must expend large amounts of money to hire staff to run the checkout counters.\nPeople despise waiting in lines, especially when they have 3 items and are stuck behind someone with 30. Xpresscart lets the user take the process into their own hands and makes the transaction seamless. \nWe aim to revolutionize the shopping experience as a whole - by making shopping more efficient and personalized, XpressCart not only boosts revenues but also cuts labor costs.\nWhat it does\nXpressCart seeks to change the in-store shopping experience by moving the checkout counter into individual shopping carts. It keeps track of what the shopper has already bought and allows he/she to finish payment directly on the cart without having to wait in lines.\n1) The shopper tags their phone to the NFC chip implanted on the cart. The phone reads the cart data and sends the data into the cloud, binding them with their cart and their purchases. All their data is available to the merchant and they will not be able to get a cart without the NFC companion and they will not be able to leave until they either cancel or confirm a purchase and return the cart. \n2) As the shopper move through the store and select items, he/she would scan each item before placing it into the cart. The shopping list would get updated and they can place the item into the cart. If the shopper decides that he/she no longer want one of the items in the cart, the shopper can simply remove it using the quantity setter. \n3) When the shopper is ready to pay, he/she can finish payment on the app since it is connected to their Capital One accounts via the Nessie API. The app sends a Purchase to Nessie and handles the transfer of funds from customer to Merchant. \nThe goal is that the entire shopping process can be performed without any staff assistance. XpressCart would not only attract customers to supermarkets by speeding up the shopping process, but would also be beneficial to store owners by cutting labor costs.\nHow we built it\nWe log in our account (now implemented with nessie) on the phone app. Then we tap the phone on the NFC tag on the cart, which will trigger it's unlock. Afterwards, we can scan new items with the phone camera while shopping, and keep track of what we've bought on the screen.\nChallenges we ran into\nWe had no experience of working with log-in landing pages in an app before, so this time we spent a lot of efforts trying to realize that, so we can simulate the payment process.\nWe tried to add a scale which will physically keep track of the cart content, and compare that what's scanned and registered in the app so it can prevent shoplifting. The scale data has been transmitted to the phone through NFC, but we still need to work on how to coordinate that data in the app.\nThe Nessie API was also something new to work with and we had to figure out the format of its calls to the server (with the help of the Capital One Engineers).\nAccomplishments that we're proud of\nWe have successfully implemented the nessie API in our project (We all love the neat log in window!) and actually can keep track of the virtual capital flow in our accounts! We have integrated the barcode scanning and NFC reading components in the app. We have also accomplished the communication between the phone and the micro-controller. These are brand new experiences to us, but we keep learning.\nWhat we learned\nIntegration among different apps. NFC communication between phones and micro-controllers.\nWhat's next for Xpresscart\nWe will add the weight scale module to the whole system so we can avoid shoplifting. We also need to finish the payment module. We will test the prototype in supermarkets after it's done.\n",
        "hackathon_id": "pennapps-xiii",
        "winner": true
    },
    {
        "description": "\n\nBackground\nInquiry\nModel\nLimitations\nNext Steps\nAcknowledgments\n\nBackground: emerging, encouraging, splurging, purging \nWe may not be at the biggest nerd convention after all.\nAs we hack this, leaders and technocrats from around the world are meeting at the World Economic Forum in Davos, Switzerland. And \"high-altitude networking\" though it may be, there are real concerns about the future of globalist paradigms in finance and macroeconomic policy.\nHigh-yield \"junk\" bonds, especially those from \"emerging markets\", experienced a sharp \"correction\" in late 2015. The investor jargon is useful to a point: asset classes, like skirt lengths, go up and down as a matter of fashion.\nA slow-down in the once indefatigable Chinese economy, alongside decades-low commodity prices, seems poised to undermine older projections of the economic world to come. Voracious growth among developing (\"emerging\") countries---rich in natural resources and cheap labor, whether in South and Southeast Asia, the Gulf States, West Africa, or South America---cannot continue on 5+% GDP growth year over year.\nOut of skeptical curiosity, though not cynicism, we might consider possibilities:\n\nThe globalized economic structure is undergoing a long-term stress test (whether \"debt supercyle\" or \"secular stagnation\");\nThe globalized financial structure is more liable to the momentum of well-informed investor band-wagoning.\n\nInquiry: How well informed? Well informed how? \n\"To prove that Wall Street is an early omen of movements still to come in GNP, commentators quote economic studies alleging that market downturns predicted four out of the last five recessions. That is an understatement. Wall Street indexes predicted nine out of the last five recessions! And its mistakes were beauties.\"\n\n Prof. Paul Samuelson \n\nRegular readers of fact-dense, short-form financial news have long benefitted from knowing more, earlier. We're interested in the broader implications: How do emerging-market countries and the international media outlets---serving as intermediary to the wealthy, investing West---inform, influence, and incentivize each other? How can financial reporting itself engender financial phenomena?\nModel: Our proposed analysis \nEmerging Market: An term of investment, endearment, or euphemism referring to those countries with high growth potential, often due to natural resource abundance, infrastructural development, and relative deregulation. Ranging from small polities (qua startups) to 1b-person juggernauts, also called \"developing nations\" on the basis of human development and GDP-per-capita indices.\nETF: Exchange Traded Funds are attractive for our model because:\n\nAnyone can buy shares: they're low-cost, tax-effective, and therefore widely held assets\nUnlike mutual funds, they're traded openly on exchanges and usually reflect asset value in price\nThey invest in a representative basket of assets & bonds, while often also tracking indices\n\nETFs are widely disseminated, vulnerable to conventional market forces, and representative of their target sample.\nAladdin API: In addition to a clean .json request process for the need-to-know information about any stock, BlackRock's trading platform offers risk management data and all the bells and whistles of at-your-fingertips analytics. The portfolio modeling functionality was especially helpful in formulating our initial question: \"What if an investor in 2011 had followed only the implicit advice of financial news outlets?\" BlackRock's API offers the data and interface to get a reasonable answer.\nMedia outlets: There is a significant dearth of historical journalistic data that is available in bulk and without proprietary licensing. This may have been the most significant challenge and limitation to our project---as in the field. Manual downloading of Forbes and Financial Times, one small cache at a time, suffices for proof of concept. Looking forward, we defer to PhD candidates in Statistics and Computer Science who are working toward similar ends.\nNatural Language Processing: Right from the start, the project required some delving into the contemporary work in sentiment analysis. Yet, lacking sufficient media evidence to properly train a neural net, while also hoping for a better algorithm than \"bag of words\"---made even less workable by the dry tone of our matter of interest, business journalism---we were happy to discover vaderSentiment and sentlex. Raghav spent many sleepless hours fine-tuning a workable lexicon, and even though we could not run it across all ~25,000 articles, he deserves all the sleep in the world.\nLimitations; or, it's just a weekend... \nWe're not sure how many great regressions you've seen cobbled together in a few days' time---meaning ones with an R^2 above 0.5, let alone those demonstrable insights with earth-shattering implications.\nWe are proud to have pursued an ambitious goal, one which we also believe to have genuine intellectual merit.\nNext Steps \nDown the line, we hope to be able to work with better-structured data and run more involved natural language processing. The day when conducting larger-scale learning algorithms on public journalism, especially content as consistent as financial reporting, should bring with it new opportunities for research. And, of course, our visualizations could always be more intuitive and prettier.\nAcknowledgments \nOur sincere thanks to vaderSentiment (Hutto, C.J. & Gilbert, E.E., 2014), sentlex, c3, the BlackRock API, and everyone who made PennApps possible!\n",
        "hackathon_id": "pennapps-xiii",
        "winner": true
    },
    {
        "description": "\nSaving money has been one of the biggest challenges for people and the majority of americans are living paycheck to paycheck. The fact is that saving is not easy while people deal with variety of bills and debts such as student loans, house mortgages etc.\nOur team at Invest One understood this problem and came up with a unique solution to help people invest and save money everyday of their life. Based on our idea, when a person makes a transaction using his credit/debit card, the payed price will automatically be rounded up to the nearest dollar and then the difference is added to a separate savings account where the user has already defined how he wants to invest his money, such as saving up for various items in his/her wish list.For instance, if you purchase a dinner for $12.40, your card will get charged $13.00. Therefore, $12.40 will be payed to the restaurant and the extra 60 cents will be deposited into your savings account. In addition, Invest One lets you create your own wish list of the items you wish to buy in the future and you can easily determine what percentage of the invested money should be dedicated to which item.\nFinally, when you've reached your target for one of the items in your wishlist, Capital One will match 3% of the item's price and donate it to your favorite charity, such as the American Diabetes Association. Not only is this philanthropic act good for the community and the charity, but it also encourages the user to spend more money, so as to save up at a faster pace, so that the user's favorite charity can receive the money faster.\n",
        "hackathon_id": "pennapps-xiii",
        "winner": true
    },
    {
        "description": "\nWhat it does\nRecall is designed specifically for those who have early to moderate Alzheimer's Disease. At these stages, memory and learning are impaired, but most speech can still be conveyed. \nWhile in this state, most patients often suffer from memory loss which can severely impact their daily lives and functions. These people forget where they live, who their friends are, and even what they did yesterday and what they have to do today.\nThis is a very serious problem and to solve this, we have Recall.\nRecall is a personal wearable assistant for Alzheimer's patients that serves as a central hub for their lives. When the person wakes up, Recall lets the person know of their activities for the day and who they need to meet. But Recall also features the amazing ability to answer the questions that the person has.\nFor example, the person can ask, \"What is my son's name?\", \"Where do I live\", \"What are my interests\", and so on.\nThe assistant can also answer general questions such as \"What is the weather today?\" and \"What time is it?\"\nThe wearable device stays on the forearm of the person and features a status LED, a button to start voice input, and a microphone.\nIn addition to the wearable, there is a mobile app that a care-taker or loved one can use to fill in important information. The care-taker can enter in people the patient knows, what events they have on a certain day, their hobbies, where they've traveled, etc. This app makes Recall highly customization to the patient's needs and allows for someone to easily and remotely care for their loved ones.\nHow we built it\nWe used Houndify to power the text analysis and combined that with a Parse database to allow for extended functionality.\nWe designed and 3D printed the entire casing for the device and integrated all the components into a nice form factor.\nChallenges we ran into\nThe Houndify API had many quirks that differed across the SDK languages, but eventually we were able to use Python to achieve our tasks. \nOne of our first 3D prints also didn't have enough structural supports, so we had to redesign a bit \nAccomplishments that we're proud of\nWe were able to not only use the Houndify API, but were also able to create a superset of it that featured far more functionality via the use of a database that persistently stores the user's info.\nLogo base created by Sergey Patutin from the noun project\n",
        "hackathon_id": "pennapps-xiii",
        "winner": true
    },
    {
        "description": "\nInspiration\nYouTube videos are fun. But how about making it more involved by participating in discussions while watching? Why not shouting at critical moments and let everyone else watching the same video know your excitement? This is where our app comes in to play!\nWhat it does\nWhile watching a YouTube video, whatever you want to say, just say it out and we will convert it to text that flows through the screen like waves. Everyone else can see your comments on the screen at the same time of the video.\nAlso, we support smart video search by voice queries. Just ask it what you want to watch in plain English, the search engine will convert it to precise queries and give high quality results.\nFinally, you may use our Android app as a remote controller! With it, you can control the pause and play, and send voice comments remotely, all instantly!\nBelieve it or not, we also support YouTube live videos! Watch the same live stream with people around the world, and share your feelings with people in real time!\nHow I built it\nWe built the web app in Node.js. The voice to text conversion is done by Houndify API. Smart search is made possible by Stanford Named Entity Recognizer (NER), a Stanford natural language processing package in Java, followed by query of YouTube search API. Flowing comments are controlled by jQuery scripts. Android phone to web client pairing is done by bridge-connection through the web server by unique session IDs. The comments data are stored in MongoDB. Both the server and MongoDB are served on Linode instances. The domain name is registered on namecheap. \nChallenges I ran into\nThe biggest challenge came from finding the right tools for solutions and learn how to use them under stringent time limits. It took time to figure out what tools are proper for NLP, flowing comments, and Android-web connections. It was also the first time for us to use Houndify API, Linode, Namecheap, YouTube APIs, video controls, etc. We learnt fast and got things done!\nAccomplishments that I'm proud of\nBring many pieces of cool technologies together in harmony to build a fun app!\nWhat's next for VoiceWave\nSmart video recommendation by machine learning based on user comments data.\nAdd more features to Android app.\nAdd private chat room feature.\nImprove efficiency, serve on the cloud in the long run.\n",
        "hackathon_id": "pennapps-xiii",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascriptnode.jsexpress.jsjadescssmongodb\n",
        "hackathon_id": "pennapps-xiii",
        "winner": true
    },
    {
        "description": "\nInspiration\nInsulin prescription and supply delivered to diabetes patients before they need it.\n",
        "hackathon_id": "pennapps-xiii",
        "winner": true
    },
    {
        "description": "\nInspiration\nIt was that fateful day in mid-December, when Google gave me a frightening ultimatum. The background exhibited a vibrant contrast in colors, and the sabers were emanating, as if screaming, their blinding light. The question posed to me: Light Side or Dark Side? I ended up picking the Dark Side, and played Google's Lightsaber Escape. The phone calibration and relation to the virtual saber on the screen was astonishing. However, we noticed that all we could do is move the sword around to reflect StormTrooper Bullets. We wanted to further this -- so we decided to replicate that phone-computer communication, but make it multiplayer so anyone with a mobile phone could destroy their enemy by the hands of their (virtual) sword.\nWhat it does\nWhen you first visit Duelr on your computer, the website will present you a unique, four-digit code. It instructs you to use your mobile device to go to the same Duelr url, and enter the code there. After you enter the code, the computer shifts to a Three.JS canvas where your virtual sword reflects your phone's movements. When a 2nd player joins, that will be reflected on the screen. After battling out, one phone user remains standing and is victorious.\nHow we built it\nWe used node.js as our back-end, server language and HTML5, CSS3, and Javascript for the client-side. To generate the unique user IDs and to match users during game, we set up hash maps. Furthermore, In order to establish the streaming connection between phone and computer data, we used socket.io with node.js. In regards to phone data, we pulled from the phone's accelerometer and, on the server side, conducted some math to reflect phone movement in the virtual simulation. We made it so that the server updated the game with any collision detections, in a 3D world.\nChallenges we ran into\nThe most difficult part was matching phone accelerometer data to the virtual simulation. The data we receive from the phone is an array of 3 different angles, 1 for each axis. These angles describe rotation. We had to do some heavy mathematical translation to match the phone's movements to a virtual, three.js render. Furthermore, collision detection faces the same problem; detecting a virtual collision in the swords is difficult considering the nature of the phone data and mathematical struggle.\nAccomplishments that we're proud of\nManaging to sync the phone with the virtual sword, in a TWO PLAYER environment. When we first made it possible, we all screamed in excitement. SO COOL!\nWhat we learned\nA LOT of three.js, node.js, and socket.io. Also how phones work. \nWhat's next for Duelr\nMore accurate rendering, better collision detection and physics engine, better in-game interface\n",
        "hackathon_id": "pennapps-xiii",
        "winner": true
    },
    {
        "description": "\nBuilt With\nnode.jsexpress.jsalchemyapitwitterfirebaseunirestbootstraphtml5justgivinggoogle-mapsdomain.com\n",
        "hackathon_id": "greatunihack-fall-2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nAfter the recent climate change conference we wondered if we could get a rough estimation of car co2 emissions in the UK based on the real mileage of vehicles.\nWhat it does\nIt visualises an estimated of car co2 emissions per manufacturer and per year.\nHow I built it\nThe backend runs in NodeJS and queries the ElasticSearch instance of CDL to retrieve MOT test data. Using the mileage of each tested car, GIS data about the UK post code areas and data from the UK government about the registered average emissions of each manufacturer we came up with an estimation of CO2 emissions per post code area in the UK. You can also visualise the emission per year from 2008 for all the manufacturers.\nChallenges I ran into\nMashup CO2 emissions data with CDL data. Handling of big amounts of data coming from the CDL ES instance. NodeJS (it was the first time we used it)\nAccomplishments that I'm proud of\nThe mashup of data and the map visualisation of the emissions using JavaScript\nWhat I learned\nNodeJS, new map tools and bits of python scripting.\nWhat's next for CO2Much\nMaybe visualise other variables.\n",
        "hackathon_id": "greatunihack-fall-2015",
        "winner": true
    },
    {
        "description": "\nInspiration\n\"Ice Bucket Challenge\" and other kind of social movements attracted a lot of funds into charities. We thought there is a gap waiting to be filled by our app, which just gives to the society.\nWhat it does\nBy Challenging your friends, you put a price on those dares. When they complete them and provide proof, you need to donate a sum of money to a charity, with the help of JustGiving API\nHow We built it\nThe App is built on two servers, one PHP acting as a client and serving the pages, and also validating the data, while the other, written on node.js, performs the API calls and database connections.\nThe front-end is made using bootstrap CSS3 framework and basic HTML and JavaScript.\nChallenges we ran into\nWe had some problems with our node.js hosting, not being able to pass some links.\nAccomplishments that we're proud of\nWe managed to produce a full working prototype of the application.\nWhat I learned\nWe had the opportunity to increase our knowledge in web application building.\nWhat's next for hi-Dare\nWe plan to continue development, and also port the application on native mobile, with the help of Ionic Framework.\n",
        "hackathon_id": "greatunihack-fall-2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe wanted a challenge and to be tested, but also to do something that we would enjoy doing and keep us motivated all the way through (Even when things start breaking at 4am). We also wanted to get a real hands on experience with the Oculus Rift.\nWhat it does\nThe Rift Drift is a game which uses the Oculus Rift. You are spawned in above a beautifully generated 3D terrain & you have control to glide through the air on a hand-glider.\nScoring points by flying through hoops and trying to beat other connected players.\nHow we built it\nThe procedural terrain was generated by first creating a 2D image of noise using a Midpoint Displacement algorithm, which was then used as a height map in order to produce the 3 dimensional terrain. This algorithm has a roughness parameter which enables you to fine-tune the general shape of the terrain, and in conjunction with a height coefficient and running the entire map through an exponential function, we can create some very interesting terrain. \nThe terrain is then coloured and lit through a variety of materials and lights in order to give the terrain the icy look it has.\nIt was all hosted online using Amazon Web Services. We ran it on a Tomcat server using an EC2 instance and using the Amazon distribution of Linux. \nChallenges we ran into\nUsing an unfamiliar language, Javascript, for the core components of the project.\nThe Oculus Rift isn't supported for laptop use. At all.\nDeveloping a web socket when hearing it's name for the first time an hour into the hackathon.\nAccomplishments that we're proud of\nOvercoming our challenges, trying new things and using github properly!\nWhat we learned\nA lot about Javascript & WebSockets! About working in a team\nWhat's next for Rift Drift\nRun on a Desktop PC!! Much greater land sizes, far greater vertex density (detail), faster running, etc..\nBiomes: Generate two more noise maps and then use those as a moisture and heat map. Use these along with the height map to create varied biomes depending on their conditions.\nLakes and rivers - areas relatively low to their surroundings with high moisture levels can become lakes, for instance.\nExtra detail - Trees, buildings, etc.\nCollisions\nChallenges\nAmazon Challenge\nBloomberg Challenge\n",
        "hackathon_id": "greatunihack-fall-2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nThe major obstacle between people who want to learn and those who can teach is communication. The knowledge can't be shared without some kind of platform to connect the two ends.\nWhat it does\nineedanexpert.org provides this platform by matching people who are searching for a teacher with others that can provide this teaching. It initiates a video call between the two and allows any questions that are asked to be answered promptly.\nHow we built it\nThe backend is built using php which connects to a mysql database. Our entire backend is running on Amazon Web Services which was a pleasure to use. The frontend is written with vanilla html, css, and javascript. Our video calling system is built on top of OpenTok.\nChallenges we ran into\nThe OpenTok library ended up being very feature rich, meaning it took us some time to get to grips with it.\nAccomplishments that we're proud of\nWhat we learned\nWhat's next for ineedanexpert.org\n",
        "hackathon_id": "greatunihack-fall-2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nGetting lost as a child and wondering around IKEA for 3 hours, I think we ALL know how this story ends.\nWhat it does\nIn basic terms, this application, along with the Estimote beacons, is a convenient way of keeping track of your children when you are out and about with them. \nSimply attach the beacon to their clothes or bag, and you can track their movements on your phone! You will get notifications when they go a certain distance away from you, letting you know they have wandered off.\nHow we built it\nWe made use of Android Studio throughout the entire project, utilising XML for the front-end and Java for the back-end.\nWe initially designed the individual activities on paper, making sketches of the buttons and various input fields. Afterwards, we split the project into tasks, and distributed them out to the team. Maria and Sam worked primarily on the layout, focusing on the front-end, whereas Richa and Igor worked on the Estimote Bluetooth connections and how they linked into the application, which made up the bulk of the logic of the system.\nChallenges we ran into\nThe largest challenges we came across is learning how to make use of new tools and new languages.\nAs a team, 3 of us were experiencing a hackathon for the first time, so we had to figure out how to divide up our time between exploring the exciting hardware, and making sure we got the pIgor oject completed.\nMaria, Richa and Sam had to learn how to program in XML for the first time, which came with its struggles. Igor had to figure out how to configure the Estimote beacons, and get the correct data through the application, outputting it to the user.\nThe tools used, such as Android Studio and GitHub, made the experience a challenging, but rewarding one. Although hard to understand at first, the power of these systems made the whole project run smoother.\nAccomplishments that we're proud of\n-Making our first project together as a team, with it all working accordingly to the original plans. \n-Managing to program nearly solidly for a full 24 hours, proving that we can focus for long periods of time when sufficiently motivated.\nWhat we learned\n-How to configure and develop code around the Estimote beacons.\n-How to build front end of applications using XML, with an infusion of Java.\n-That solutions to all programming problems can be found on the internet, if you spend enough time searching.\nWhat's next for Never Far\nMore hackathons as a group, and hopefully progressing onto a extensive portfolio of weird and wonderful hacks.\n",
        "hackathon_id": "greatunihack-fall-2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nAchievements are included in almost all games ranging from easy to very difficult but there is little incentive to complete them aside from more score alongside user profiles. With AchieveForGood we combine the achievement system with challenging your friends, introducing new stakes to completing achievements within games and facilitating donations to charities at the same time.\nWe also saw lots of streamers offering to hold charity streams for 24 hours in order to raise money for a good cause while gaining viewership for themselves. Our project allows them to potentially increase rewards for charity as well as allowing the streamer and viewers to enjoy the experience more when there is money on the line for difficult challenges posed by the audience.\nWhat it does\nAchieveForGood links into the Steam API, allowing users to log in and register with their Steam account using OpenID and pose challenges to users who have also registered, placing a bounty of their choosing which they agree to pay should they complete the chosen achievement.\nOnce the achievement has been completed, a payment link through Just Giving to the charity of the player's choice is provided to the user for them to pay.\nHow we built it\nWe built our web app using Bootstrap for a fast basic HTML/CSS page design and programmed the back-end in PHP to manage our API and database use. Front end scripts for autocompletion on fields in Javascript was essential due to the large number of options for games and achievements possible on the Steam platform.\nChallenges we ran into\nIt was difficult in places to integrate the various APIs into a final working product.\nThere was also several restructures of our database as we refined our requirements which caused some problems with having to rewrite queries.\nAnd last of all, staying awake!\nAccomplishments that we're proud of\nPlanning out tasks more carefully before proceeding and delegating tasks amongst us allowed us to be a lot more productive at Great Uni Hack than our previous project at Hack Manchester. There was much less time spent idle and more focused on the task in different areas at once.\nWe are also very proud of being able to integrate the Steam API very successfully within the site and could access the immense numbers of games on the platform and all the achievements for each of them in order to create a compelling product which is also focused on social good!\nWhat we learned\nWe have learned a lot about the use of external APIs and the use of OpenID to authenticate with external providers while not having to collect a lot of sensitive user information ourselves.\nWhat's next for AchieveForGood\nThere is a huge amount of room for extra features and expansion on this project, from statistics on those who have donated to charity through the site or gained the most bounties from others to integration with game score leaderboards to challenge others based on specific values not limited to those in traditional achievements.\nHowever the most obvious next place to improve would be to implement caching for many of our API functions as this would drastically improve speed and responsiveness where calls are made to Steam servers.\nA system to place a hold on a payment method to guarantee payment from the challenger would also be useful for this project, as non-payment of bounties would be discouraging for users.\nAnother great feature would be the ability to set time limits on when the achievement can be completed to prevent funds from being held up if the above was implemented and to add additional challenge.\nWe anticipate that a very large market for this site would be for streamers as you can see the results of your challenge (usually the streamer's frustrations as to not being able to get the achievements!)\n",
        "hackathon_id": "greatunihack-fall-2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nhtml5css3javascript\n",
        "hackathon_id": "greatunihack-fall-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nEvery person uses internet on daily basis so a Car Advisor would help people to shop smarter\nWhat it does\nIt takes all the car Makers from the Body element of the webpage, and then finds all the models of the cars.\nIt uses CDL API to retrieve data of MOT tests \nHow we built it\nIt is a Google Chrome Extension which is very easy to install. We built it using Javascript and Jquery and data gathering from queries to CDL API.\nChallenges we ran into\nSyntax of jquery and Json were complex, and the sever of CDL was down all night long.\nAccomplishments that we're proud of\n2 of us managed to cope with a lot of work. Background script to communicate with front end was really hard. \nWhat we learned\nTeam work definitely, and new languages as well.\nWhat's next for Car Stat\nWorldwide popularity and more data gathering from cars in the future\n",
        "hackathon_id": "greatunihack-fall-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe were inspired by the need of people to visualize and see how cars are spread and what they can do in order to take their MOT test.\nWhat it does\nIt predicts whether a car will pass the mot test or nor and visualizes the total number of cars for each country tested.\nHow we built it\nWe built it using a machine learning algorithm and an Open Source given by Harvard with a free license for the \nvisualization.\nChallenges we ran into\nThe connection between the python and nodejs servers.\nAccomplishments that we're proud of\nWe managed to finish the visualization and the prediction both in the same time and getting past all the problems.\nWhat we learned\nWe learned about RPCs, flask and other back-end technologies plus about what other data visualizations APIs are out there.\nWhat's next for CheckIt\nWe will try to implement an algorithm which will predict when you will have to take your next technical test.\n",
        "hackathon_id": "greatunihack-fall-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nangular.jspythonhtml5css3justgivingapitwitterredisjavascriptjquery\n",
        "hackathon_id": "greatunihack-fall-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe were inspired by the current trend of utilising technology to inform and aid the public both during and after disasters, and therefore decided to create a system which could provide all the information needed.\nWhat it does\nThe system collates several key pieces of information, including: the site of the disaster, twitter feeds, facebook feeds, news feeds and relevant emergency numbers. Once this information is gathered, the solution displays them in a cross platform friendly format.\nHow we built it\nWe assembled Helplink using HTML, Javascript, PHP, Twitter, RSS and MySQL.\nChallenges we ran into\nOur primary challenges were dealing with the latitude and longitude provided by geocoder from Google Maps, utilising several functions of the Google Maps API simultaneously and finding a database to store emergency numbers for each location. Ultimately, we decided to create our own database using MySQL.\nAccomplishments that we're proud of\nSeveral of our team members were unfamiliar with Javascript and HTML, but ultimately persevered to provide a working project.\nWhat we learned\nWe learned Javascript, HTML, working with APIs, teamwork and effective work distribution.\nWhat's next for HelpLink\nThe next stages are improving mobile support, adding extra location dependent functionality and improving the aesthetic.\n",
        "hackathon_id": "greatunihack-fall-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonlua\n",
        "hackathon_id": "greatunihack-fall-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njscriptphphtmcssmysqlbootstrap\n",
        "hackathon_id": "greatunihack-fall-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroidjavaestimote\n",
        "hackathon_id": "greatunihack-fall-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njava\n",
        "hackathon_id": "greatunihack-fall-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe wanted to experiment with Google Cardboard, the most accessible form of virtual reality, to develop an app that could be enjoyed by everyone for cheap. We also target the app at disabled shoppers, to allow them to shop online with minimal use of the arms.\nWhat it does\nView a shelf full of items available to purchase. Upon interacting with the magnet while looking at an item, it is added to your cart, for later purchase.\nHow I built it\nAll models were built in Blender and exported to Unity, where they were placed and textures were added. The functionality was programmed in C#. The app was then built and run on an Android Phone, using the Google Cardboard VR headset.\nChallenges I ran into\nThe app was originally going to be built by a team of 4, but 2 team members left only hours in to the Hackathon, leaving the remaining two of us to power through on our own, with almost zero knowledge or experience of the required technologies.\nAccomplishments that I'm proud of\nLearning Blender and Unity in 24 hours, as well as C# to a proficient level.\nWhat I learned\nVirtual Reality, as a new technology has relatively few tutorials online, so we learned how to adapt it to work with each of the programmes we used.\nWhat's next for VRMarket\nDeveloping the app further to handle larger quantities of items, and possibly integrate real transactions using APIs without leaving the app.\n",
        "hackathon_id": "greatunihack-fall-2015",
        "winner": false
    },
    {
        "description": "\nPacHuMan\nAutonomous Drone Video: https://www.youtube.com/watch?v=7jd6ZlrzYa0\nPlayer Controlled: (To Be Uploaded)\n",
        "hackathon_id": "greatunihack-fall-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe were inspired by the idea of a travelling and exploring game.\nWhat it does\nFetches all pinned data on the app with radius around 1 mile, so you would be invited to find out more pins as you go.\nHow we built it\nWe used SQL and PHP to build and interact with the the database. We used Java for the front-end app with the Android Studio IDE.\nChallenges we ran into\n1) Get the app to communicate with the server to download the API\nAccomplishments that we're proud of\n1) Applying google maps api and obtaining key to integrate it with our app.\n2) Working back-end database to return nearest and top hot pins.\nWhat we learned\nWe have learned how to use Git more efficiently. We have also updated our communications and networking skills as being part of a team.\nWhat's next for Pin It\nWe would like to pin not only quotes and pictures, but music and even videos in the local area. \n",
        "hackathon_id": "greatunihack-fall-2015",
        "winner": false
    },
    {
        "description": "\ndriver\u2027conscio.us\nGreatUniHack project, we're building an app for drivers that lets people get in touch with you while protecting your identity, by using number plates as handles.\nHow I built it\nWe used openalpr for number plate detection and recognition, node.js for a backend and Angular.js in the frontend. Styling is Bootstrap based, user management makes use of a customized Passport.js Local Strategy.\nInstalation\n\ngit clone https://ibriq@bitbucket.org/ibriq/driveconscio.us.git\nchange directory to driveconscio.us\nback in the root of the project, run npm install to get your dependencies fixed\nchange directory to config, and add the Twillio credentials\nto run the server, back in the root of the project, type node server.js\n\nTeam and Credits\n\nIain Apreotesei, University of Manchester\nMircea Octavian Sebe, University of Birmingham\n\nWeb interface forked from scotch.io's easy-node-authentication.\nChallenges we ran into\nMaking the Twilio API work with international numbers, location-based validation.\nWhat's next for driveconscio.us\nFix Twilio bugs, improve account validation.\n",
        "hackathon_id": "greatunihack-fall-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nThere have been many occasions where we have visited a city with a group of friends and haven't known where to go and what to do. So the travel game challenge from WebApplications was the perfect opportunity for us to build upon these experiences and create a web application that solves the issue.\nWhat it does\nWhen opening the website, the user are greeted with a map of the surrounding area. On this map is a marker located at a point of interest that the user must get close to, after which a task is displayed which is about said point. There are \ntwo different types of tasks; photo tasks and question tasks. The photo tasks require the user to take a photo of the landmark that you have discovered and points are awarded for correct photos. The question tasks require the user to give the correct answer to a multiple-choice question with a potential point gain of 4. After the question is finished, the next marker is placed and the game continues.\nHow we built it\nThe web application was built using JavaScript with the Google Maps and Clarifai APIs plus HTML and CSS for the web layout. The server is hosted using MAMP.\nChallenges we ran into\nWe had some trouble with the HTTP requests and API authorisation, but after much debugging we managed to solve the issues. We also had issues with CSS layout formatting, but managed to solve the problems within the time limit.\nAccomplishments that we're proud of\nWe believe that our web application provides a fun and encouraging way to go about sightseeing in a city and discovering new places. We are also proud of finishing the project even though we thought of the idea quite late on Saturday.\nWhat we learned\nThe two team members for who the GreatUniHack was their first hackathon learnt a lot about time-management, teamwork and about programming in general. We have also learnt a lot more about the city of Manchester though our app, as we were researching the city when creating questions for the application. We also learnt about using MAMP as the server hosting system.\nWhat's next for TravelQuest\nWe would like to implement file uploading for the photo tasks, rather than just relying on image URLs, which is less useable. We would also like to add more question types, such as tasks where the user enters text themselves, rather than selection an answer from a selection of pre-defined choices. It would also be preferable if the future iterations of TravelQuest would allow users to upload their own tasks for others to complete, perhaps through the user of a MySQL database.\n",
        "hackathon_id": "greatunihack-fall-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nxamarin-c#-(android)node.jsjadecssjavascriptjquery\n",
        "hackathon_id": "greatunihack-fall-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nunity\n",
        "hackathon_id": "greatunihack-fall-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nraspberry-pi\n",
        "hackathon_id": "app-o-motive",
        "winner": true
    },
    {
        "description": "\nInspiration\nI was inspired to build this app because I see the need for a more efficient system to help people find free and affordable parking in LA.\nWhat it does\nIt takes city data to determine if you are are parked safely in LA, and reminds you when you should move your vehicle to avoid a ticket. \nHow we built it\nWe had our UX designer wireframe it. We have two dev's build a static mock. \nChallenges we ran into\nConverting the data into objects in the app. ( We needed more Dev power )\nAccomplishments that we're proud of\nWe found the data that is crucial to building this app. \nWhat we learned\nWe learned how to work together on one idea. We learned to use an empathy map and a business model canvas. We learned to utilize each other's skills to keep building on the same idea. \nWhat's next for ParkingUpdate\nThe backend build. We need a full stack developer to help us code this into IOS and Android. We are also considering making a Web App that will be able to convert to both markets.\n",
        "hackathon_id": "app-o-motive",
        "winner": true
    },
    {
        "description": "\nWhat it does\nAllows the user to share their vehicle's information for appraisal/offer purposes.\nHow we built it\nDesigned a simple interface. For development part, check out:\nhttps://github.com/blad/springboard-auto\nChallenges we ran into\nTime, there was not a lot of time to focus on research, testing, and design iterations.\nWhat's next for SpringboardAuto Trade-In Tool\nWe might try to do research, user testing, and improve the design.\n",
        "hackathon_id": "app-o-motive",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascript\n",
        "hackathon_id": "app-o-motive",
        "winner": false
    },
    {
        "description": "\nDevelop something thats quick to build, make money, and would be fun to promote.\n",
        "hackathon_id": "app-o-motive",
        "winner": false
    },
    {
        "description": "\nInspiration\nWhen we arrived to Georgia, we had an interesting problem. There were a lot of instances where we needed to know \nsomething and wanted to ask about it but the efforts were mostly futile since most people didn't understand us. \nAlso, most of these questions could easily be answered if we had an access to the Internet, but since we were in another country and data roaming is crazy expensive, that was not an option. It'd be really great if we could find a way to get the info we need by sending text messages in the absence of the Internet.\nSo, we decided to create Hext to address exactly this situation: To help people get answers/tips/etc. from the Internet\nwhen they don't have access to it.\nWhat it does\nIt allows you to send your question as a sms message to a given number and posts the question on our Twitter account as well as our web application. Any user on Twitter or on our web application can send a reply as a Twitter response or as an answer on the web app, and the response is sent as an sms to the asker.\nHow we built it\nWe built it using Ruby on Rails framework with Twilio integration for sending and receiving text messages. We use \noauth for the twitter integration for login and responses. We use Heroku for speeding our deployment. We also \nexperimented with Otto (successor to Vagrant) for speeding our devops and Amazon Web Services for deployment purposes.\nChallenges we ran into\nUnderstanding Twilio and how it works. Setting up AWS and Twitter social auth.\nWhat I learned\nOmniauth errors are elusive and the stack traces hard to comprehend.\nWhat's next for Hext\nGetting the twitter responses to tweets as answers to questions from within Twitter.\n",
        "hackathon_id": "hacktbilisi2015",
        "winner": true
    },
    {
        "description": "\n\u10e4\u10d4\u10d8\u10d5\u10d0\u10e2\u10dd\u10e0\u10d8 - Payvator\n\u10d2\u10d0\u10d3\u10d0\u10ee\u10d3\u10d8\u10e1 \u10d4\u10da\u10d4\u10e5\u10e2\u10e0\u10dd\u10dc\u10e3\u10da\u10d8 \u10e1\u10d0\u10e8\u10e3\u10d0\u10da\u10d4\u10d1\u10d0 \u10da\u10d8\u10e4\u10e2\u10e8\u10d8!\n\u10d7\u10d1\u10d8\u10da\u10d8\u10e1\u10e8\u10d8 \u10d9\u10dd\u10e0\u10de\u10e3\u10e1\u10d4\u10d1\u10d8\u10e1 75% \u10e8\u10d8 \u10d0\u10e0\u10d8\u10e1 \u10da\u10d8\u10e4\u10e2\u10d8, \u10e0\u10dd\u10db\u10d4\u10da\u10d7\u10d0 90% \u10e4\u10d0\u10e1\u10d8\u10d0\u10dc\u10d8\u10d0. \u10d0\u10e5\u10d4\u10d3\u10d0\u10dc \u10d2\u10d0\u10db\u10dd\u10db\u10d3\u10d8\u10dc\u10d0\u10e0\u10d4 \u10db\u10e3\u10d3\u10db\u10d8\u10d5\u10d0\u10d3 \u10e1\u10d0\u10ed\u10d8\u10e0\u10dd\u10d0 \u10ee\u10e3\u10e0\u10d3\u10d0 \u10e4\u10e3\u10da\u10d8\u10e1 \u10e0\u10d4\u10e1\u10e3\u10e0\u10e1\u10d8 \u10d9\u10d4\u10e0\u10eb\u10dd\u10d3 10 \u10d7\u10d4\u10d7\u10e0\u10d8\u10d0\u10dc\u10d8, \u10e0\u10dd\u10db\u10d4\u10da\u10d8\u10ea \u10e5\u10d5\u10d4\u10e7\u10d0\u10dc\u10d0\u10e8\u10d8 \u10e0\u10d4\u10d0\u10da\u10e3\u10e0\u10d0\u10d3 \u10df\u10d4\u10e2\u10dd\u10dc\u10d8\u10e1 \u10de\u10e0\u10d8\u10dc\u10ea\u10d8\u10de\u10d8\u10d7 \u10d2\u10d0\u10db\u10dd\u10d8\u10e7\u10d4\u10dc\u10d4\u10d1\u10d0. \u10db\u10e1\u10d2\u10d0\u10d5\u10e1\u10d8 \u10e1\u10d0\u10d6\u10dd\u10d2\u10d0\u10d3\u10dd\u10d4\u10d1\u10e0\u10d8\u10d5\u10d8 \u10de\u10e0\u10dd\u10d1\u10da\u10d4\u10db\u10d0 \u10d9\u10d8\u10d3\u10d4\u10d5 20-25 \u10ec\u10d4\u10da\u10d8 \u10d8\u10d3\u10d2\u10d4\u10d1\u10d0 \u10d7\u10d1\u10d8\u10da\u10d8\u10e1\u10e8\u10d8 \u10d0\u10db\u10d8\u10e2\u10dd\u10db \u10e9\u10d5\u10d4\u10dc \u10d5\u10d7\u10d0\u10d5\u10d0\u10d6\u10dd\u10d1\u10d7 \u10de\u10e0\u10dd\u10d1\u10da\u10d4\u10db\u10d8\u10e1 \u10db\u10dd\u10d2\u10d5\u10d0\u10e0\u10d4\u10d1\u10d0\u10e1:\n\u10e0\u10d0 \u10d0\u10e0\u10d8\u10e1?\n\n\u10e4\u10d4\u10d8\u10d5\u10d0\u10e2\u10dd\u10e0\u10d8 \u10d0\u10e0\u10d8\u10e1, \u10d2\u10d0\u10d3\u10d0\u10ee\u10d3\u10d8\u10e1 \u10e3\u10e4\u10e0\u10dd \u10d9\u10dd\u10db\u10e4\u10dd\u10e0\u10e2\u10e3\u10da\u10d8 \u10d3\u10d0 \u10e1\u10ec\u10e0\u10d0\u10e4\u10d8 \u10e1\u10d0\u10e8\u10e3\u10d0\u10da\u10d4\u10d1\u10d0 \u10da\u10d8\u10e4\u10e2\u10e8\u10d8\n\u10da\u10d8\u10e4\u10e2\u10d8\u10e1 \u10db\u10dd\u10db\u10e1\u10d0\u10ee\u10e3\u10e0\u10d4 \u10d9\u10dd\u10db\u10de\u10d0\u10dc\u10d8\u10d4\u10d1\u10d8\u10e1\u10d7\u10d5\u10d8\u10e1 \u10d9\u10dd\u10db\u10e4\u10dd\u10e0\u10e2\u10d8 \u10d3\u10d0 \u10d4\u10da\u10d4\u10e5\u10e2\u10e0\u10dd\u10dc\u10e3\u10da\u10d8 \u10e4\u10e3\u10da\u10d8\n\u10db\u10d2\u10d6\u10d0\u10d5\u10e0\u10d8\u10e1\u10d7\u10d5\u10d8\u10e1 \u10d3\u10d0\u10d6\u10dd\u10d2\u10d8\u10da\u10d8 \u10e4\u10e3\u10da\u10d8 \u10d6\u10e3\u10e1\u10e2\u10d8 \u10e0\u10d0\u10dd\u10d3\u10d4\u10dc\u10dd\u10d1\u10d8\u10d7 \u10d2\u10d0\u10d3\u10d0\u10ee\u10d3\u10d8\u10e1\u10d0\u10e1 + \u10d3\u10d0\u10d6\u10dd\u10d2\u10d8\u10da\u10d8 \u10d3\u10e0\u10dd \u10ee\u10e3\u10e0\u10d3\u10d8\u10e1 \u10eb\u10d4\u10d1\u10dc\u10d8\u10e1\u10d7\u10d5\u10d8\u10e1\n\n\u10e0\u10dd\u10d2\u10dd\u10e0 \u10db\u10e3\u10e8\u10d0\u10dd\u10d1\u10e1\n\u10e4\u10d4\u10d8\u10d5\u10d0\u10e2\u10dd\u10e0\u10d8 \u10d0\u10e0\u10d8\u10e1 \u10db\u10dd\u10ec\u10e7\u10dd\u10d1\u10d8\u10da\u10dd\u10d1\u10d0 \u10e0\u10dd\u10db\u10d4\u10da\u10d8\u10ea \u10e7\u10d4\u10dc\u10d3\u10d4\u10d1\u10d0 \u10da\u10d8\u10e4\u10e2\u10e8\u10d8 \u10d3\u10d0 \u10e8\u10d4\u10e3\u10eb\u10da\u10d8\u10d0 \u10d2\u10d0\u10d3\u10d0\u10ee\u10d3\u10d8\u10e1 \u10de\u10dd\u10de\u10e3\u10da\u10d0\u10e0\u10e3\u10da\u10d8 \u10d3\u10d0 \u10d0\u10d3\u10d0\u10de\u10e2\u10d8\u10e0\u10d4\u10d1\u10e3\u10da\u10d8 \u10db\u10d4\u10d7\u10dd\u10d3\u10d8\u10e1 \u10db\u10d4\u10e2\u10e0\u10dd\u10db\u10d0\u10dc\u10d8\u10e1 \u10d2\u10d0\u10db\u10dd\u10e7\u10d4\u10dc\u10d4\u10d1\u10d0, \u10db\u10dd\u10db\u10d0\u10d5\u10d0\u10da\u10e8\u10d8 NFC Tag-\u10d4\u10d1\u10d8\u10d7 \u10d3\u10d0 \u10e1\u10db\u10d0\u10e0\u10e2\u10e4\u10dd\u10dc\u10d4\u10d1\u10d8\u10d7 \u10d2\u10d0\u10d3\u10d0\u10ee\u10d3\u10d0. \n\u10e4\u10d4\u10d8\u10d5\u10d0\u10e2\u10dd\u10e0\u10d8\u10e1 \u10db\u10e3\u10e8\u10d0\u10dd\u10d1\u10d8\u10e1 \u10de\u10e0\u10d8\u10dc\u10ea\u10d8\u10de\u10d8 \u10db\u10e1\u10d2\u10d0\u10d5\u10e1\u10d8\u10d0 \u10e1\u10ee\u10d5\u10d0 \u10e1\u10d0\u10e2\u10e0\u10d0\u10dc\u10e1\u10de\u10dd\u10e0\u10e2\u10dd \u10e1\u10d0\u10e8\u10e3\u10d0\u10da\u10d4\u10d1\u10d4\u10d1\u10e8\u10d8 \u10d3\u10d0\u10db\u10dd\u10dc\u10e2\u10d0\u10df\u10d4\u10d1\u10e3\u10da\u10d8 \u10d0\u10de\u10d0\u10e0\u10d0\u10e2\u10e3\u10e0\u10d4\u10d1\u10d8\u10e1, \u10ec\u10d0\u10e0\u10db\u10d0\u10e2\u10d4\u10d1\u10e3\u10da\u10d8 \u10d2\u10d0\u10d3\u10d0\u10ee\u10d3\u10d8\u10e1 \u10e8\u10d4\u10d3\u10d4\u10d2\u10d0\u10d3 \u10d8\u10eb\u10da\u10d4\u10d5\u10d0 \u10ee\u10db\u10dd\u10d5\u10d0\u10dc \u10e1\u10d8\u10d2\u10dc\u10d0\u10da\u10e1 \u10d3\u10d0 \u10d2\u10e0\u10d0\u10e4\u10d8\u10d9\u10e3\u10da \u10d2\u10d0\u10db\u10dd\u10e1\u10d0\u10ee\u10e3\u10da\u10d4\u10d1\u10d0\u10e1, \u10d0\u10dc\u10d2\u10d0\u10e0\u10d8\u10e8\u10d6\u10d4 \u10d7\u10d0\u10dc\u10ee\u10d8\u10e1 \u10d0\u10e0\u10e5\u10dd\u10dc\u10d8\u10e1 \u10e8\u10d4\u10db\u10d7\u10ee\u10d5\u10d4\u10d5\u10d0\u10e8\u10d8 \u10d0\u10d1\u10e0\u10e3\u10dc\u10d4\u10d1\u10e1 \u10e8\u10d4\u10e1\u10d0\u10d1\u10d0\u10db\u10d8\u10e1 \u10e8\u10d4\u10e2\u10e7\u10dd\u10d1\u10d8\u10dc\u10d4\u10d1\u10d0\u10e1. \u10e4\u10d4\u10d8\u10d5\u10d0\u10e2\u10dd\u10e0\u10d8\u10e1 \u10e1\u10d0\u10e8\u10e3\u10d0\u10da\u10d4\u10d1\u10d8\u10d7 \u10d0\u10db\u10ef\u10d4\u10e0\u10d0\u10d3 \u10e8\u10d4\u10e1\u10d0\u10eb\u10da\u10d4\u10d1\u10d4\u10da\u10d8\u10d0 \u10d0\u10dc\u10d2\u10d0\u10e0\u10d8\u10e8\u10d6\u10d4 \u10d7\u10d0\u10dc\u10ee\u10d8\u10e1 \u10e8\u10d4\u10d5\u10e1\u10d4\u10d1\u10d0\u10ea, \u10e0\u10d0\u10d7\u10d0 \u10e1\u10e0\u10e3\u10da\u10d0\u10d3 \u10db\u10dd\u10ee\u10d3\u10d4\u10e1 \u10e1\u10d8\u10e1\u10e2\u10d4\u10db\u10d8\u10e1 \u10e1\u10d8\u10db\u10e3\u10da\u10d8\u10e0\u10d4\u10d1\u10d0.\n\u10e4\u10d4\u10d8\u10d5\u10d0\u10e2\u10dd\u10e0\u10d8\u10e1 \u10d4\u10e0\u10d7-\u10d4\u10e0\u10d7\u10d8 \u10db\u10d7\u10d0\u10d5\u10d0\u10e0\u10d8 \u10e6\u10d8\u10e0\u10e1\u10d4\u10d1\u10d0, \u10d0\u10e5\u10d5\u10e1 \u10e2\u10e0\u10d0\u10dc\u10d6\u10d0\u10e5\u10ea\u10d8\u10d4\u10d1\u10d8\u10e1 \u10e9\u10d0\u10dc\u10d0\u10ec\u10d4\u10e0\u10d4\u10d1\u10d8\u10e1 \u10db\u10ee\u10d0\u10e0\u10d3\u10d0\u10ed\u10d4\u10e0\u10d0, \u10e0\u10dd\u10db\u10d4\u10da\u10d8\u10ea \u10e1\u10d0\u10ed\u10d8\u10e0\u10dd\u10d4\u10d1\u10d8\u10e1 \u10e8\u10d4\u10db\u10d7\u10ee\u10d5\u10d4\u10d5\u10d0\u10e8\u10d8 \u10e8\u10d4\u10e1\u10d0\u10eb\u10da\u10d4\u10d1\u10d4\u10da\u10d8\u10d0 \u10d2\u10d0\u10db\u10dd\u10e7\u10d4\u10dc\u10d4\u10d1\u10e3\u10da \u10d8\u10e5\u10dc\u10d0\u10e1 \u10da\u10d8\u10e4\u10e2\u10d8\u10e1 \u10d9\u10dd\u10db\u10de\u10d0\u10dc\u10d8\u10d8\u10e1 \u10db\u10ee\u10e0\u10d8\u10d3\u10d0\u10dc \u10e1\u10ee\u10d5\u10d0\u10d3\u10d0\u10e1\u10ee\u10d5\u10d0 \u10e1\u10e2\u10d0\u10e2\u10d8\u10e1\u10e2\u10d8\u10d9\u10d4\u10d1\u10d8\u10e1 \u10e8\u10d4\u10e1\u10d0\u10d3\u10d2\u10d4\u10dc\u10d0\u10d3 \u10d9\u10dd\u10e0\u10de\u10e3\u10e1\u10d4\u10d1\u10d8\u10e1 \u10db\u10d8\u10ee\u10d4\u10d3\u10d5\u10d8\u10d7.\n\u10d5\u10d8\u10e1\u10d7\u10d5\u10d8\u10e1 \u10d0\u10e0\u10d8\u10e1 \u10e4\u10d4\u10d8\u10d5\u10d0\u10e2\u10dd\u10e0\u10d8?\n\u10da\u10d8\u10e4\u10e2\u10d8\u10e1 \u10db\u10dd\u10db\u10e1\u10d0\u10ee\u10e3\u10e0\u10d4 \u10d9\u10dd\u10db\u10de\u10d0\u10dc\u10d8\u10d4\u10d1\u10d8\n\u10e4\u10d4\u10d8\u10d5\u10d0\u10e2\u10dd\u10e0\u10d8 \u10e8\u10d4\u10e5\u10db\u10dc\u10d8\u10da\u10d8\u10d0 \u10d3\u10d0 \u10eb\u10d8\u10e0\u10d8\u10d7\u10d0\u10d3 \u10db\u10d8\u10d6\u10d0\u10dc\u10e1 \u10d8\u10e6\u10d4\u10d1\u10e1 \u10da\u10d8\u10e4\u10e2\u10d8\u10e1 \u10d9\u10dd\u10db\u10de\u10d0\u10dc\u10d8\u10d4\u10d1\u10d8\u10e1\u10d9\u10d4\u10dc. \u10e9\u10d5\u10d4\u10dc \u10d9\u10dd\u10db\u10de\u10d0\u10dc\u10d8\u10d4\u10d1\u10e1 \u10d5\u10d7\u10d0\u10d5\u10d0\u10d6\u10dd\u10d1\u10d7 \u10d4\u10da\u10d4\u10e5\u10e2\u10e0\u10dd\u10dc\u10e3\u10da \u10d2\u10d0\u10d3\u10d0\u10ee\u10d3\u10d4\u10d1\u10e1, \u10e0\u10d8\u10e1 \u10e8\u10d4\u10db\u10d7\u10ee\u10d5\u10d4\u10d5\u10d0\u10e8\u10d8\u10ea \u10ed\u10e0\u10d8\u10d0\u10dc \u10de\u10e0\u10dd\u10d1\u10da\u10d4\u10db\u10d4\u10d1\u10e1: \n\n\u10ee\u10e3\u10e0\u10d3\u10d4\u10d1\u10d8\u10e1 \u10d9\u10dd\u10dc\u10e2\u10d4\u10d8\u10dc\u10d4\u10e0\u10d8\u10e1 \u10d2\u10d0\u10e2\u10d4\u10ee\u10d5\u10d8\u10e1 \u10d3\u10d0 \u10e4\u10e3\u10da\u10d8\u10e1 \u10db\u10dd\u10de\u10d0\u10e0\u10d5\u10d8\u10e1 \u10e8\u10d4\u10db\u10d7\u10ee\u10d5\u10d4\u10d5\u10d4\u10d1\u10e1.\n\u10ee\u10e3\u10e0\u10d3\u10d4\u10d1\u10d8\u10e1 \u10d8\u10dc\u10d9\u10d0\u10e1\u10d0\u10ea\u10d8\u10d8\u10e1 \u10e8\u10d4\u10db\u10d3\u10d4\u10d2, 1 \u10e1\u10d0\u10d3\u10d0\u10e0\u10d1\u10d0\u10d6\u10dd\u10d3\u10d0\u10dc  10 \u10d9\u10d2 \u10ee\u10e3\u10e0\u10d3\u10d8\u10e1 \u10d2\u10d0\u10d3\u10d0\u10ee\u10e3\u10e0\u10d3\u10d0\u10d5\u10d4\u10d1\u10d8\u10e1 \u10de\u10e0\u10dd\u10d1\u10da\u10d4\u10db\u10d0\u10e1, \u10e0\u10d0\u10d3\u10d2\u10d0\u10dc\u10d0\u10ea \u10d4\u10e1 \u10d2\u10d0\u10d3\u10d0\u10ee\u10e3\u10e0\u10d3\u10d0\u10d5\u10d4\u10d1\u10e3\u10da\u10d8 \u10e4\u10e3\u10da\u10d8 \u10d8\u10e1\u10d4\u10d5 \u10e1\u10d0\u10d1\u10d0\u10dc\u10d9\u10dd \u10d0\u10dc\u10d2\u10d0\u10e0\u10d8\u10e8\u10d6\u10d4 \u10e3\u10dc\u10d3\u10d0 \u10d3\u10d0\u10d8\u10e0\u10d8\u10ea\u10ee\u10dd\u10e1 \u10e0\u10d0\u10d7\u10d0 \u10d7\u10d0\u10dc\u10d0\u10db\u10e8\u10e0\u10dd\u10db\u10da\u10d4\u10d1\u10e1 \u10ee\u10d4\u10da\u10e4\u10d0\u10e1\u10d4\u10d1\u10d8 \u10e9\u10d0\u10d4\u10e0\u10d8\u10ea\u10ee\u10dd\u10d7. \u10e4\u10d4\u10d8\u10d5\u10d0\u10e2\u10dd\u10e0\u10d8\u10e1 \u10d2\u10d0\u10db\u10dd\u10e7\u10d4\u10dc\u10d4\u10d1\u10d8\u10d7, \u10ef\u10d0\u10ed\u10d5\u10d8\u10d3\u10d0\u10dc 2 \u10e0\u10d2\u10dd\u10da\u10d8 \u10d5\u10d0\u10e0\u10d3\u10d4\u10d1\u10d0 \u10e0\u10d8\u10d7\u10d0\u10ea \u10de\u10e0\u10dd\u10ea\u10d4\u10e1\u10d8 \u10e3\u10e4\u10e0\u10dd \u10d9\u10dd\u10dc\u10e2\u10e0\u10dd\u10da\u10d8\u10e0\u10d4\u10d1\u10d0\u10d3\u10d8, \u10d0\u10e6\u10e0\u10d8\u10ea\u10ee\u10d5\u10d0\u10d3\u10d8 \u10d3\u10d0 \u10db\u10d0\u10e0\u10e2\u10d8\u10d5\u10d8 \u10ee\u10d3\u10d4\u10d1\u10d0\n\u10d8\u10dc\u10d9\u10d0\u10e1\u10d0\u10ea\u10d8\u10d8\u10e1 \u10d3\u10e0\u10dd\u10e1 \u10d3\u10d0\u10d9\u10d0\u10e0\u10d2\u10e3\u10da\u10d8 (\u10db\u10dd\u10de\u10d0\u10e0\u10e3\u10da\u10d8 \u10e4\u10e3\u10da\u10d8)\n\n\u10d9\u10dd\u10db\u10de\u10d0\u10dc\u10d8\u10d0\u10e1 \u10e1\u10d0\u10e8\u10e3\u10d0\u10da\u10d4\u10d1\u10d0 \u10d4\u10e5\u10dc\u10d4\u10d1\u10d0 \u10d0\u10ec\u10d0\u10e0\u10db\u10dd\u10dd\u10e1 \u10e1\u10e0\u10e3\u10da\u10d8 \u10e1\u10e2\u10d0\u10e2\u10d8\u10e1\u10e2\u10d8\u10d9\u10d0, \u10e8\u10d4\u10e3\u10eb\u10da\u10d8\u10d0 \u10e1\u10de\u10d4\u10ea\u10d8\u10d0\u10da\u10e3\u10e0\u10d8 \u10e1\u10d4\u10e0\u10d5\u10d8\u10e1\u10d4\u10d1\u10d8\u10e1 \u10d2\u10d0\u10d9\u10d4\u10d7\u10d4\u10d1\u10d0 \u10e1\u10ee\u10d5\u10d0\u10d3\u10d0\u10e1\u10ee\u10d5\u10d0 \u10d9\u10dd\u10e0\u10de\u10e3\u10e1\u10d4\u10d1\u10d8\u10e1 \u10db\u10d8\u10db\u10d0\u10e0\u10d7 \u10d3\u10d0 \u10d0.\u10e8.\n\u10db\u10d2\u10d6\u10d0\u10d5\u10e0\u10d4\u10d1\u10d8\n\u10e7\u10d5\u10d4\u10da\u10d0 \u10db\u10d2\u10d6\u10d0\u10d5\u10e0\u10d8\u10e1\u10d7\u10d5\u10d8\u10e1 \u10db\u10e3\u10d3\u10db\u10d8\u10d5\u10d8 \u10de\u10e0\u10dd\u10d1\u10da\u10d4\u10db\u10d0 \u10d0\u10e0\u10d8\u10e1 10 \u10d7\u10d4\u10d7\u10e0\u10d8\u10d0\u10dc\u10d8\u10e1 \u10e8\u10dd\u10d5\u10dc\u10d0. \u10ee\u10e8\u10d8\u10e0\u10d0\u10d3 \u10d0\u10e0 \u10e5\u10dd\u10dc\u10d8\u10e1 \u10d2\u10d0\u10db\u10dd, \u10e4\u10d4\u10ee\u10d8\u10d7\u10d0\u10ea \u10e8\u10d4\u10d8\u10eb\u10da\u10d4\u10d1\u10d0 \u10d0\u10d5\u10d8\u10d3\u10d4\u10e1 \u10d0\u10dc 20 \u10d7\u10d4\u10d7\u10e0\u10d8 \u10d2\u10d0\u10d3\u10d0\u10d8\u10ee\u10d0\u10d3\u10dd\u10e1 \u10d0\u10dc\u10e3 200% \u10d8\u10d7 \u10db\u10d4\u10e2\u10d8 \u10d2\u10d0\u10d3\u10d0\u10d8\u10ee\u10d0\u10d3\u10dd\u10e1 \u10d5\u10d4\u10e0\u10e2\u10d8\u10d9\u10d0\u10da\u10e3\u10e0\u10d8 \u10db\u10d2\u10d6\u10d0\u10d5\u10e0\u10dd\u10d1\u10d8\u10e1\u10d7\u10d5\u10d8\u10e1.\n\n\u10e4\u10d4\u10d8\u10d5\u10d0\u10e2\u10dd\u10e0\u10d8\u10d7 \u10d8\u10ee\u10d3\u10d8 \u10d6\u10e3\u10e1\u10e2\u10d0\u10d3 \u10d8\u10db\u10d3\u10d4\u10dc\u10e1 \u10e0\u10d0\u10db\u10d3\u10d4\u10dc\u10d8\u10ea \u10e1\u10d0\u10ed\u10d8\u10e0\u10dd\u10d0\n\u10ef\u10d8\u10d1\u10d4\u10e8\u10d8 \u10d0\u10e0 \u10d8\u10d9\u10d0\u10d5\u10d4\u10d1\u10e1 \u10d6\u10d4\u10d3\u10db\u10d4\u10e2 \u10d0\u10d3\u10d2\u10d8\u10da\u10e1 \u10e0\u10d0\u10d3\u10d2\u10d0\u10dc\u10d0\u10ea \u10d8\u10e1 \u10e3\u10d9\u10d5\u10d4 \u10d7\u10e5\u10d5\u10d4\u10dc\u10e1 \u10d0\u10e0\u10e1\u10d4\u10d1\u10e3\u10da \u10d1\u10d0\u10e0\u10d0\u10d7\u10d6\u10d4\u10d0\n\u10de\u10d4\u10dc\u10e1\u10d8\u10dd\u10dc\u10d4\u10e0\u10d4\u10d1\u10d8\u10e1\u10d7\u10d5\u10e1 \u10d3\u10d0 \u10db\u10e0\u10d0\u10d5\u10d0\u10da\u10e1\u10e3\u10da\u10d8\u10d0\u10dc\u10d8 \u10dd\u10ef\u10d0\u10ee\u10d4\u10d1\u10d8\u10e1\u10d7\u10d5\u10d8\u10e1 \u10d6\u10d4\u10d3\u10db\u10d4\u10e2\u10d8 \u10d3\u10d0\u10dc\u10d0\u10ee\u10d0\u10e0\u10ef\u10d4\u10d1\u10d8\u10e1 \u10d0\u10ea\u10d8\u10da\u10d4\u10d1\u10d8\u10e1 \u10e1\u10d0\u10e8\u10e3\u10d0\u10da\u10d4\u10d1\u10d0\n\n\u10e4\u10d4\u10d8\u10d5\u10d0\u10e2\u10dd\u10e0\u10d8 \u10e1\u10d8\u10e1\u10e2\u10d4\u10db\u10d0\n\u10e4\u10d4\u10d8\u10d5\u10d0\u10e2\u10dd\u10e0\u10d8\u10e1 \u10e8\u10d4\u10d7\u10d0\u10d5\u10d0\u10d6\u10d4\u10d1\u10d8\u10e1 2 \u10d2\u10d6\u10d0 \u10d0\u10e0\u10d8\u10e1 \u10da\u10d8\u10e4\u10e2\u10d8\u10dd\u10e0\u10d8 \u10d9\u10dd\u10db\u10de\u10d0\u10dc\u10d8\u10d4\u10d1\u10d8\u10e1\u10d0\u10d3\u10db\u10d8\n\u10d0) \u10d4\u10e0\u10d7\u10ef\u10d4\u10e0\u10d0\u10d3\u10d8 \u10de\u10e0\u10dd\u10d3\u10e3\u10e5\u10e2\u10d8\u10e1 \u10e1\u10d0\u10ee\u10d8\u10d7\n\u10d1) \u10e0\u10dd\u10d2\u10dd\u10e0\u10ea \u10e1\u10d4\u10e0\u10d5\u10d8\u10e1\u10d8, \u10d7\u10d8\u10d7\u10dd \u10e9\u10d0\u10e0\u10d8\u10ea\u10ee\u10d5\u10d8\u10d3\u10d0\u10dc X \u10de\u10e0\u10dd\u10ea\u10d4\u10dc\u10e2\u10d8, \u10d0\u10dc \u10e7\u10dd\u10d5\u10d4\u10da\u10d7\u10d5\u10d8\u10e3\u10e0\u10d8 \u10d2\u10d0\u10d3\u10d0\u10e1\u10d0\u10ee\u10d0\u10d3\u10d8. \u10d7\u10d8\u10d7\u10dd\u10d4\u10e3\u10da\u10d8 \u10d9\u10dd\u10db\u10de\u10d0\u10dc\u10d8\u10d8\u10e1\u10d7\u10d5\u10d8\u10e1 \u10d2\u10d0\u10dc\u10e1\u10ee\u10d0\u10d5\u10d4\u10d1\u10e3\u10da\u10d8, \u10db\u10d0\u10e1\u10d6\u10d4 \u10db\u10dd\u10e0\u10d2\u10d4\u10d1\u10e3\u10da\u10d8 \u10e1\u10d8\u10e1\u10e2\u10d4\u10db\u10d8\u10d7.\n\u10e4\u10d4\u10d8\u10d5\u10d0\u10e2\u10dd\u10e0\u10d8 \u10db\u10dd\u10db\u10d0\u10d5\u10d0\u10da\u10d8\n\u10db\u10dd\u10e5\u10dc\u10d8\u10da\u10d8 \u10e1\u10d8\u10e1\u10e2\u10d4\u10db\u10d0 \u10e1\u10d0\u10e8\u10e3\u10d0\u10da\u10d4\u10d1\u10d0\u10e1 \u10d8\u10eb\u10da\u10d4\u10d5\u10d0 \u10d3\u10d0\u10d0\u10ee\u10da\u10dd\u10d4\u10d1\u10d8\u10d7 2-3 \u10d7\u10d5\u10d4\u10e8\u10d8 \u10e1\u10e0\u10e3\u10da\u10d8\u10d0\u10d3 \u10d8\u10e5\u10dc\u10d4\u10e1 \u10ee\u10e3\u10e0\u10d3\u10d0 \u10e4\u10e3\u10da\u10d8 \u10e9\u10d0\u10dc\u10d0\u10ea\u10d5\u10da\u10d4\u10d1\u10e3\u10da\u10d8 \u10d4\u10da\u10d4\u10e5\u10e2\u10e0\u10dd\u10dc\u10e3\u10da\u10d8 \u10d2\u10d0\u10d3\u10d0\u10ee\u10d3\u10d8\u10d7, \u10e0\u10d0\u10ea \u10e2\u10d4\u10e5\u10dc\u10dd\u10da\u10dd\u10d2\u10d8\u10e3\u10e0\u10d8 \u10ec\u10d8\u10dc\u10e1\u10d5\u10da\u10d0\u10d0 \u10e1\u10d0\u10d6\u10dd\u10d2\u10d0\u10d3\u10dd\u10d4\u10d1\u10d8\u10e1\u10d7\u10d5\u10d8\u10e1.\u10d7\u10d0\u10d5\u10d3\u10d0\u10de\u10d8\u10e0\u10d5\u10d4\u10da\u10d0\u10d3 \u10d8\u10e5\u10dc\u10d4\u10d1\u10d0 \u10d2\u10d0\u10d3\u10d0\u10ee\u10d3\u10d8\u10e1 \u10dd\u10e0\u10d8\u10d5\u10d4 \u10e1\u10d0\u10e8\u10e3\u10d0\u10da\u10d4\u10d1, \u10db\u10d0\u10d2\u10e0\u10d0\u10db \u10e9\u10d0\u10dc\u10d0\u10ea\u10d5\u10da\u10d4\u10d1\u10d8\u10e1 \u10de\u10e0\u10dd\u10ea\u10d4\u10e1\u10e1 \u10d5\u10d4\u10e0 \u10e8\u10d4\u10d0\u10e9\u10d4\u10e0\u10d4\u10d1\u10e1. \u10d0\u10e1\u10d4\u10d5\u10d4 \u10d0\u10e6\u10d0\u10e0 \u10d8\u10e5\u10dc\u10d4\u10d1\u10d0 \u10ee\u10e3\u10e0\u10d3\u10d8\u10e1 \u10de\u10e0\u10dd\u10d1\u10da\u10d4\u10db\u10d0 \u10e5\u10d0\u10da\u10d0\u10e5\u10e8\u10d8. \n\u10e1\u10d8\u10e1\u10e2\u10d4\u10db\u10d8\u10e1 \u10e1\u10e0\u10e3\u10da\u10d8 \u10e1\u10d8\u10db\u10e3\u10da\u10d0\u10ea\u10d8\u10d0 App \u10d8\u10e1 \u10e1\u10d0\u10ee\u10d8\u10d7\n\n",
        "hackathon_id": "hacktbilisi2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nI was inspired by selfie time-lapse videos of people that are very popular through social networks.\nI liked that idea and thought why I wasn't doing that?\nThe reason was that I was just too lazy to pose everyday in front of Camera and take a picture. \nSo I thought that machine could do that lazy stuff for me... :) \nWhat it does\nIf waits for screen unlock than pops up in a very little round window(like facebook popup) to notify user that it's gonna take a selfie. \nSo user gets ready while can see it's entire screen and isn't disturbed at all! \nHe/She can dismiss a capture or take a selfie. \nIf picture was bad it's deleted automatically!\nUser can see it's selfie gallery and order pictures by emotion!\nThan it's just one click to create timeLapse video from there. \nHow we built it\nWe used Android SDK because only Android enables us to Popup and make smart selfie suggestion for user. \nFor image filtering and emotion Microsoft Emotion API\nThan we have several services to manage picture capture, synchronisation with emotion api provider server and than deleting bad images.\nChallenges we ran into\nIt was very difficult to make smart popup because It's not standard UI thing. \nYou have to manage UI from background service. \nAlso there was difficulties with shape and design of camera preview in nonstandard popup window.\nThe rest was as expected, scaling down images at gridView, reading asynchronously from disk and than placing data in recycler view (That might be changed).\nAlso we had interesting discuss about application logo :) \nAccomplishments that we're proud of\nWe are proud that we finished all the work on time and application is fully functional!\nApplication Idea itself is new and innovative. \nWhat we learned\nWe learned that even in 36 hours you can create serious working application.\nOur team skills grew up(even if we where two :D) \nWe managed to design UI and also make working back.\nWhat's next for SelfLapse\nI think next thing will be to make this application ready for production. \nTo add settings for making timeLapse and for choosing right time for selfie. :) \nWe may use better API for filtering bad quality images. \nPopup window will have much better UI (Even now is good)\nWe will need to rewrite some code and make it more scalable for production.\n",
        "hackathon_id": "hacktbilisi2015",
        "winner": true
    },
    {
        "description": "\nInspiration\n6.8 billion people use cell-phones today. Phones were created to send and receive calls => making people able to talk to each other from distance. But Mute people can't use this important feature. They can SMS, but It's a very slow process. There are more than 6,000,000 mute people in the world, so we got an idea that could help them use this important feature. We searched for similar ideas but couldn't find one, so that encouraged us even more to build it.\nWhat it does\nIt is calling app, where normal person talks normally, and mute person types the text which is converted to speech and sent to normal person, so they have conversation. This is way faster than messaging and almost as fast as normal calling.\nHow we built it\nWe used C# for Serverside Code and Actionscript 3 for client-side,Also we used text-to-speech and facebook api's.\nWhat's next for Unmute\nCurrently Unmute works with our server and internet connection, in the next version, we want to make it work in background without internet connection, and when someone calls mute person, keyboard pops up, and it will work like a charm. I don't think what I said is clear, but we'll explain this better in our presentation\n",
        "hackathon_id": "hacktbilisi2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nMy friend and I were working on Android project. The project was divided in two parts: client side and backend. My responsibility was to develop REST services so every time my friend made changes to client side I had to pull new requests from GitHub, build project and deploy to my device to make end-to-end tests. It was time consuming and boring. So I decided to solve this problem.\nWhat it does\nTristan offers to test, watch and enjoy your Android application development process without build tools or USB cables.\nHow we built it\nEvery commit pushed to Android project on GitHub launches Travis-ci build that produces .apk file. Then the build artifacts are uploaded to AWS S3 object store. This event is monitored by AWS Lambda service which sends notifications with commit message, url to GitHub commit summary page and .apk url to certain people. The notifications are delivered by Slack which offers nice environment for project members to collaborate.\nChallenges we ran into\nThe only major challenge we faced was to design adjustable solution not only for developers but also for anyone who is interested to experience a mobile application at early stages.\nAccomplishments that we're proud of\nThe process chain in Tristan the deployer works nice and smoothly.\nWhat we learned\nWe learned the flexibilities and capabilities of AWS infrastructure.\nWhat's next for Tristan the deployer\nCurrently Tristan is not a generic solution. So the project maintainers have to build the infrastructure and customise certain services for their needs. The next improvement for Tristan is to become more user friendly and simple to use with more data and geek stats for project members.\n",
        "hackathon_id": "hacktbilisi2015",
        "winner": true
    },
    {
        "description": "\n\u10db\u10e2\u10e0\u10d4\u10d3\u10d8 \u10d0\u10e0\u10d8\u10e1 \u10d8\u10e1\u10e2\u10dd\u10e0\u10d8\u10d0\u10e8\u10d8 \u10de\u10d8\u10e0\u10d5\u10d4\u10da\u10d8 \u10e5\u10d0\u10e0\u10d7\u10e3\u10da\u10d8 \u10e1\u10d0\u10d9\u10dd\u10db\u10e3\u10dc\u10d8\u10d9\u10d0\u10ea\u10d8\u10dd \u10d0\u10de\u10da\u10d8\u10d9\u10d0\u10ea\u10d8\u10d0. \u10e1\u10d8\u10e2\u10e7\u10d5\u10d0 \"\u10e5\u10d0\u10e0\u10d7\u10e3\u10da\u10e8\u10d8\" \u10d8\u10d2\u10e3\u10da\u10d8\u10e1\u10ee\u10db\u10d4\u10d1\u10d0: \u10e5\u10d0\u10e0\u10d7\u10e3\u10da\u10d8 \u10d8\u10dc\u10e2\u10d4\u10e0\u10e4\u10d4\u10d8\u10e1\u10d8 \u10d3\u10d0 \u10e0\u10d0\u10db\u10d3\u10d4\u10dc\u10d8\u10db\u10d4 \u10db\u10d0\u10ee\u10d0\u10e1\u10d8\u10d0\u10d7\u10d4\u10d1\u10d4\u10da\u10d8: \u10e8\u10d4\u10e2\u10e7\u10dd\u10d1\u10d8\u10dc\u10d4\u10d1\u10d8\u10e1 \u10d2\u10d0\u10d2\u10d6\u10d0\u10d5\u10dc\u10d8\u10e1\u10d0\u10e1 \u10d7\u10e3\u10d9\u10d8 \u10d7\u10e5\u10d5\u10d4\u10dc \u10d2\u10d0\u10db\u10dd\u10d8\u10e7\u10d4\u10dc\u10d4\u10d1\u10d7 \u10e0\u10d0\u10d8\u10db\u10d4 \u10d1\u10d0\u10e0\u10d1\u10d0\u10e0\u10d8\u10d6\u10db\u10e1 \u10dc\u10d4\u10d1\u10d8\u10e1\u10db\u10d8\u10d4\u10e0 \u10d1\u10e0\u10e3\u10dc\u10d5\u10d0\u10e8\u10d8, \u10d0\u10de\u10da\u10d8\u10d9\u10d0\u10ea\u10d8\u10d0 \u10e8\u10d4\u10d2\u10d8\u10e1\u10ec\u10dd\u10e0\u10d4\u10d1\u10d7 \u10db\u10d0\u10e1 \u10e8\u10d4\u10e1\u10d0\u10d1\u10d0\u10db\u10d8\u10e1\u10d8 \u10e1\u10d8\u10e2\u10e7\u10d5\u10d8\u10d7. \u10db\u10e2\u10e0\u10d4\u10d3\u10e8\u10d8 \u10e8\u10d4\u10e1\u10d0\u10eb\u10da\u10d4\u10d1\u10d4\u10da\u10d8\u10d0 \u10db\u10ee\u10dd\u10da\u10dd\u10d3 \u10e5\u10d0\u10e0\u10d7\u10e3\u10da\u10d0\u10d3 \u10ec\u10d4\u10e0\u10d0, \u10e0\u10d0\u10d3\u10d2\u10d0\u10dc \u10db\u10e2\u10e0\u10d4\u10d3\u10d8\u10ea \u10d3\u10d0 \u10e9\u10d5\u10d4\u10dc\u10ea \u10db\u10ee\u10d0\u10e0\u10e1 \u10d5\u10e3\u10ed\u10d4\u10e0\u10d7 #\u10ec\u10d4\u10e0\u10d4\u10e5\u10d0\u10e0\u10d7\u10e3\u10da\u10d0\u10d3 \u10d9\u10d0\u10db\u10de\u10d0\u10dc\u10d8\u10d0\u10e1. \n\u10e0\u10d0 \u10d5\u10d8\u10e1\u10ec\u10d0\u10d5\u10da\u10d4\u10d7 \u10e9\u10d5\u10d4\u10dc\n\u10e9\u10d5\u10d4\u10dc \u10d0\u10db \u10e0\u10d0\u10db\u10d3\u10d4\u10dc\u10d8\u10db\u10d4 \u10d3\u10e6\u10d8\u10e1 \u10d2\u10d0\u10dc\u10db\u10d0\u10d5\u10da\u10dd\u10d1\u10d0\u10e8\u10d8 \u10d5\u10d8\u10e1\u10ec\u10d0\u10d5\u10da\u10d4\u10d7 \u10e0\u10d0\u10db\u10d3\u10d4\u10dc\u10d8\u10db\u10d4 \u10d0\u10ee\u10d0\u10da\u10d8 \u10e2\u10d4\u10e5\u10dc\u10dd\u10da\u10dd\u10d2\u10d8\u10d0 \u10d3\u10d0 \u10e0\u10d0 \u10d7\u10e5\u10db\u10d0 \u10e3\u10dc\u10d3\u10d0, \u10db\u10d8\u10d5\u10d8\u10e6\u10d4\u10d7 \u10e3\u10db\u10d0\u10d2\u10e0\u10d4\u10e1\u10d8 \u10d2\u10d0\u10db\u10dd\u10ea\u10d3\u10d8\u10da\u10d4\u10d1\u10d0.\n\u10e0\u10d8\u10e1\u10d8 \u10d7\u10e5\u10db\u10d0 \u10d2\u10d5\u10d8\u10dc\u10d3\u10d0\n\u10d0\u10db \u10d0\u10de\u10da\u10d8\u10d9\u10d0\u10ea\u10d8\u10d8\u10d7 \u10e9\u10d5\u10d4\u10dc \u10e9\u10d5\u10d4\u10dc\u10d8 \u10d8\u10d3\u10d4\u10dd\u10da\u10dd\u10d2\u10d8\u10d8\u10d7 \u10ee\u10d4\u10da\u10e1 \u10d5\u10e3\u10ec\u10e7\u10dd\u10d1\u10d7 #\u10ec\u10d4\u10e0\u10d4\u10e5\u10d0\u10e0\u10d7\u10e3\u10da\u10d0\u10d3 \u10d9\u10d0\u10db\u10de\u10d0\u10dc\u10d8\u10d8\u10e1 \u10d2\u10d0\u10d5\u10e0\u10ea\u10d4\u10da\u10d4\u10d1\u10d0\u10e1 \u10e5\u10d0\u10e0\u10d7\u10d5\u10d4\u10da \u10ee\u10d0\u10da\u10ee\u10e8\u10d8,\u10e0\u10d0\u10d3\u10d2\u10d0\u10dc \u10e3\u10db\u10dc\u10d8\u10e8\u10d5\u10dc\u10d4\u10da\u10dd\u10d5\u10d0\u10dc\u10d4\u10e1\u10d8\u10d0 \u10ec\u10d4\u10e0\u10dd \u10e8\u10d4\u10dc\u10e1 \u10d4\u10dc\u10d0\u10d6\u10d4. \u10db\u10d8\u10d7 \u10e3\u10db\u10d4\u10e2\u10d4\u10e1,\u10e0\u10dd\u10db \u10e5\u10d0\u10e0\u10d7\u10e3\u10da\u10d8 \u10d4\u10dc\u10d0 \u10d0\u10e1\u10d4\u10d7\u10d8 \u10db\u10d0\u10d2\u10d0\u10e0\u10d8\u10d0!\n\u10e0\u10d0\u10e1 \u10d2\u10d0\u10d5\u10d0\u10d9\u10d4\u10d7\u10d4\u10d1\u10d7 \u10db\u10d8\u10e1\u10d8 \u10d2\u10d0\u10dc\u10d5\u10d8\u10d7\u10d0\u10e0\u10d4\u10d1\u10d8\u10e1\u10d7\u10d5\u10d8\u10e1\n\u10e9\u10d5\u10d4\u10dc \u10f0\u10d0\u10d9\u10d0\u10d7\u10dd\u10dc\u10d8\u10e1 \u10db\u10d4\u10e0\u10d4\u10ea \u10d2\u10d0\u10dc\u10d5\u10d0\u10d2\u10e0\u10eb\u10dd\u10d1\u10d7 \u10de\u10e0\u10dd\u10d4\u10e5\u10e2\u10d8\u10e1 \u10d2\u10d0\u10dc\u10d5\u10d8\u10d7\u10d0\u10e0\u10d4\u10d1\u10d0\u10e1 \u10d3\u10d0 \u10d8\u10d2\u10d8 \u10e3\u10d0\u10ee\u10da\u10dd\u10d4\u10e1 \u10db\u10dd\u10db\u10d0\u10d5\u10d0\u10da\u10e8\u10d8 \u10d2\u10d0\u10dc\u10d7\u10d0\u10d5\u10e1\u10d3\u10d4\u10d1\u10d0 Play Store-\u10d6\u10d4.\n",
        "hackathon_id": "hacktbilisi2015",
        "winner": true
    },
    {
        "description": "\n\u10d8\u10d3\u10d4\u10d0\n\u10d0\u10de\u10da\u10d8\u10d9\u10d0\u10ea\u10d8\u10d0 \u10e8\u10d4\u10e5\u10db\u10dc\u10d8\u10da\u10d8\u10d0 \u10d8\u10db\u10d8\u10e1\u10d7\u10d5\u10d8\u10e1, \u10e0\u10dd\u10db \u10db\u10e8\u10dd\u10d1\u10d4\u10da\u10db\u10d0 \u10d0\u10d9\u10dd\u10dc\u10e2\u10e0\u10dd\u10da\u10dd\u10e1 \u10d1\u10d0\u10d5\u10e8\u10d5\u10d8 \u10d3\u10d0 \u10d8\u10e1 \u10d4\u10db\u10e1\u10d0\u10ee\u10e3\u10e0\u10d4\u10d1\u10d0 \u10d0\u10de\u10da\u10d8\u10d9\u10d0\u10ea\u10d8\u10d4\u10d1\u10d8 \u10d3\u10d0\u10d1\u10da\u10dd\u10d9\u10d5\u10d8\u10e1 \u10d8\u10d3\u10d4\u10d0\u10e1.\n\u10d2\u10d0\u10db\u10dd\u10e7\u10d4\u10dc\u10d4\u10d1\u10d0\n\u10e9\u10d5\u10d4\u10dc\u10d8 \u10d3\u10d0\u10db\u10d6\u10d0\u10d3\u10d4\u10d1\u10e3\u10da\u10d8 \u10d0\u10de\u10da\u10d8\u10d9\u10d0\u10ea\u10d8\u10d0 \u10d1\u10da\u10dd\u10d9\u10d0\u10d5\u10e1 \u10e1\u10ee\u10d5\u10d0 \u10d0\u10de\u10da\u10d8\u10d9\u10d0\u10ea\u10d8\u10d4\u10d1\u10e1 \u10db\u10d0\u10dc\u10d0\u10db, \u10e1\u10d0\u10dc\u10d0\u10db \u10ec\u10d8\u10dc\u10d0\u10e1\u10ec\u10d0\u10e0 \u10e8\u10d4\u10e7\u10d5\u10d0\u10dc\u10d8\u10da \u10d9\u10d8\u10d7\u10ee\u10d5\u10d0\u10d6\u10d4 \u10e1\u10ec\u10dd\u10e0 \u10de\u10d0\u10e1\u10e3\u10ee\u10e1 \u10d0\u10e0 \u10d2\u10d0\u10e1\u10ea\u10d4\u10db. \u10d9\u10d8\u10d7\u10ee\u10d5\u10d4\u10d1\u10d8\u10e1\u10d0 \u10d3\u10d0 \u10de\u10d0\u10e1\u10e3\u10ee\u10d4\u10d1\u10d8\u10e1 \u10e8\u10d4\u10d3\u10d2\u10d4\u10dc\u10d0 \u10ee\u10d3\u10d4\u10d1\u10d0 \u10e9\u10d5\u10d4\u10dc\u10e1 \u10db\u10d8\u10d4\u10e0 \u10d3\u10d0\u10db\u10d6\u10d0\u10d3\u10d4\u10d1\u10e3\u10da \u10d5\u10d4\u10d1 \u10de\u10d0\u10dc\u10d4\u10da\u10d6\u10d4, \u10e0\u10dd\u10db\u10d4\u10da\u10d6\u10d4 \u10ec\u10d5\u10d3\u10dd\u10db\u10d0\u10ea \u10d0\u10e5\u10d5\u10e1 \u10db\u10e8\u10dd\u10d1\u10d4\u10da\u10e1. \u10d9\u10d8\u10d7\u10ee\u10d5\u10d4\u10d1\u10d8 \u10d0\u10e0\u10d8\u10e1 \u10e0\u10dd\u10d2\u10dd\u10e0\u10ea \u10e6\u10d8\u10d0, \u10d0\u10e1\u10d4\u10d5\u10d4 \u10e2\u10d4\u10e1\u10e2\u10d8\u10e0\u10d4\u10d1\u10e3\u10da\u10d8, \u10d0\u10dc\u10e3 \u10e0\u10d0\u10db\u10d3\u10d4\u10dc\u10d8\u10db\u10d4 \u10d5\u10d0\u10e0\u10d8\u10d0\u10dc\u10e2\u10d8\u10e1\u10d0\u10d2\u10d0\u10dc \u10e8\u10d4\u10db\u10d3\u10d2\u10d0\u10e0\u10d8 (\u10e6\u10d8\u10d0 \u10d9\u10d8\u10d7\u10ee\u10d5\u10d0 \u10d3\u10d0 \u10db\u10d0\u10d2\u10d0\u10da\u10d8\u10d7\u10d4\u10d1\u10d8\u10d0\u10dc\u10d8). \n\u10e4\u10e3\u10dc\u10e5\u10ea\u10d8\u10dd\u10dc\u10d0\u10da\u10d8\n\u10d5\u10d4\u10d1 \u10de\u10d0\u10dc\u10d4\u10da\u10e8\u10d8 \u10d0\u10e0\u10d8\u10e1 \u10d0\u10de\u10da\u10d8\u10d9\u10d0\u10ea\u10d8\u10d8\u10e1 \u10d3\u10d0\u10db\u10d0\u10e2\u10d4\u10d1\u10d8\u10e1 \u10e1\u10d8\u10e1\u10e2\u10d4\u10db\u10d0, \u10e0\u10dd\u10db\u10d4\u10da\u10e8\u10d8\u10ea \u10d0\u10de\u10da\u10d8\u10d9\u10d0\u10ea\u10d8\u10d8\u10e1 \u10d3\u10d0\u10db\u10d0\u10e2\u10d4\u10d1\u10d0 \u10ee\u10d3\u10d4\u10d1\u10d0 Google Play Store \u10da\u10d8\u10dc\u10d9\u10d8\u10e1 \u10db\u10d4\u10e8\u10d5\u10d4\u10dd\u10d1\u10d8\u10d7. \u10d0\u10e1\u10d4\u10d5\u10d4 \u10d0\u10e0\u10d8\u10e1 \u10d9\u10d8\u10d7\u10ee\u10d5\u10d0-\u10de\u10d0\u10e1\u10e3\u10ee\u10d8\u10e1 \u10e8\u10d4\u10e1\u10d0\u10e7\u10d5\u10d0\u10dc\u10d8 \u10e1\u10d8\u10e1\u10e2\u10d4\u10db\u10d0. \nP.S. \u10e1\u10d0\u10d1\u10db\u10d8\u10e8\u10d4\u10dc\u10d8 \u10db\u10d0\u10da\u10d4 \u10d2\u10d0\u10dc\u10d0\u10ee\u10da\u10d3\u10d4\u10d1\u10d0\n",
        "hackathon_id": "hacktbilisi2015",
        "winner": true
    },
    {
        "description": "\nInspiration\n\u10e9\u10d5\u10d4\u10dc \u10e7\u10dd\u10d5\u10d4\u10da\u10d3\u10e6\u10d8\u10e3\u10e0\u10d0\u10d3 \u10d5\u10d9\u10d8\u10d7\u10ee\u10e3\u10da\u10dd\u10d1\u10d7, \u10d5\u10e3\u10e7\u10e3\u10e0\u10d4\u10d1\u10d7 \u10d3\u10d0 \u10d5\u10e3\u10e1\u10db\u10d4\u10dc\u10d7 \u10e1\u10ee\u10d5\u10d0\u10d3\u10d0\u10e1\u10ee\u10d5\u10d0 \u10e1\u10e2\u10d0\u10e2\u10d8\u10d4\u10d1\u10e1 \u10dd\u10dc\u10da\u10d0\u10d8\u10dc\u10e8\u10d8, \u10d7\u10e3\u10db\u10ea\u10d0 \u10e1\u10d0\u10d8\u10dc\u10e2\u10d4\u10e0\u10d4\u10e1\u10dd \u10d9\u10dd\u10dc\u10e2\u10d4\u10e2\u10d8\u10e1 \u10d0\u10e6\u10db\u10dd\u10e1\u10d0\u10e9\u10d4\u10dc\u10d0\u10d3 \u10d2\u10d0\u10e0\u10d9\u10d5\u10d4\u10e3\u10da \u10d7\u10d4\u10db\u10d0\u10d6\u10d4 \u10d2\u10d5\u10d8\u10ec\u10d4\u10d5\u10e1 \"\u10e1\u10e2\u10d0\u10e2\u10d8\u10d4\u10d1\u10d8\u10e1 \u10d6\u10e6\u10d5\u10d0\u10e8\u10d8\u201d \u10e9\u10d5\u10d4\u10dc\u10d7\u10d5\u10d8\u10e1 \u10e0\u10d4\u10da\u10d4\u10d5\u10d0\u10dc\u10e2\u10e3\u10e0\u10d8 \u10d8\u10dc\u10e4\u10dd\u10e0\u10db\u10d0\u10ea\u10d8\u10d8\u10e1 \u10db\u10dd\u10eb\u10d8\u10d4\u10d1\u10d0. \u10e1\u10ec\u10dd\u10e0\u10d4\u10d3 \u10d0\u10e5, \u10ee\u10e8\u10d8\u10e0\u10d0\u10d3 \u10d2\u10d0\u10d2\u10d5\u10d8\u10e4\u10d8\u10e5\u10e0\u10d8\u10d0 - \"\u10d8\u10e5\u10dc\u10d4\u10d1 \u10d5\u10d8\u10dc\u10db\u10d4\u10e1 \u10e8\u10d4\u10d4\u10d2\u10e0\u10dd\u10d5\u10d4\u10d1\u10d8\u10dc\u10d0 \u10d0\u10db \u10d7\u10d4\u10db\u10d0\u10d6\u10d4 \u10e1\u10d0\u10d8\u10dc\u10e2\u10d4\u10e0\u10d4\u10e1\u10dd \u10d9\u10dd\u10dc\u10e2\u10d4\u10dc\u10e2\u10d8 \u10d3\u10d0 \u10de\u10da\u10d0\u10d7\u10e4\u10dd\u10e0\u10db\u10d0\u10d6\u10d4 \u10d2\u10d0\u10dc\u10d4\u10d7\u10d0\u10d5\u10e1\u10d4\u10d1\u10d8\u10dc\u10d0\".  \u10d5\u10e4\u10d8\u10e5\u10dd\u10e0\u10d1\u10d7 \u10e0\u10dd\u10db \u10db\u10e1\u10d2\u10d0\u10d5\u10e1\u10d8 \u10d2\u10d0\u10e4\u10d8\u10e5\u10e0\u10d4\u10d1\u10d0, \u10e1\u10e3\u10e0\u10d5\u10d8\u10da\u10d8 \u10d3\u10d0 \u10e1\u10d0\u10ed\u10d8\u10e0\u10dd\u10d4\u10d1\u10d0 \u10e9\u10d5\u10d4\u10dc\u10d7\u10d0\u10dc \u10d4\u10e0\u10d7\u10d0\u10d3 \u10e1\u10ee\u10d5\u10d4\u10d1\u10e1\u10d0\u10ea \u10d0\u10e5\u10d5\u10d7.\nWhat it does\n\u10e1\u10ec\u10dd\u10e0\u10d4\u10d3 \u10d0\u10db \u10e1\u10e3\u10e0\u10d5\u10d8\u10da\u10d8\u10e1\u10d0 \u10d3\u10d0 \u10e1\u10d0\u10ed\u10d8\u10e0\u10dd\u10d4\u10d1\u10d8\u10e1 \u10e8\u10d4\u10e1\u10d0\u10d5\u10e1\u10d4\u10d1\u10d0\u10d3, \u10d2\u10d0\u10d3\u10d0\u10d5\u10ec\u10e7\u10d5\u10d8\u10e2\u10d4\u10d7 \u10e8\u10d4\u10d5\u10e5\u10db\u10dc\u10d0\u10d7 \u10de\u10da\u10d0\u10d7\u10e4\u10dd\u10e0\u10db\u10d0, \u10e0\u10dd\u10db\u10d4\u10da\u10d8\u10ea \u10d4\u10e0\u10d7\u10db\u10d0\u10dc\u10d4\u10d7\u10e1 \u10d3\u10d0\u10d0\u10d9\u10d0\u10d5\u10e8\u10d8\u10e0\u10d4\u10d1\u10e1 \u10e1\u10d0\u10d4\u10e0\u10d7\u10dd \u10d8\u10e2\u10dc\u10d4\u10e0\u10d4\u10e1\u10d8\u10e1 \u10db\u10e5\u10dd\u10dc\u10d4 \u10d0\u10d3\u10db\u10d0\u10d8\u10d0\u10dc\u10d4\u10d1\u10e1 \u10e1\u10e2\u10d0\u10e2\u10d8\u10d4\u10d1\u10d8\u10e1 \u10d9\u10dd\u10da\u10d4\u10e5\u10ea\u10d8\u10d4\u10d1\u10d8\u10d7.\n\u10d7\u10e3 Medium.com  \u10d0\u10d9\u10d0\u10d5\u10e8\u10d8\u10e0\u10d4\u10d1\u10e1 \u10ee\u10d0\u10da\u10ee\u10e1 \u10e1\u10e2\u10d0\u10e2\u10d8\u10d4\u10d1\u10d8\u10d7 \u10d3\u10d0 \u10d8\u10e1\u10e2\u10dd\u10e0\u10d8\u10d4\u10d1\u10d8\u10d7, \u10e9\u10d5\u10d4\u10dc \u10e1\u10e2\u10d0\u10e2\u10d8\u10d4\u10d1\u10d8\u10e1 \u10d9\u10dd\u10da\u10d4\u10e5\u10ea\u10d8\u10d8\u10d7 \u10d4\u10e0\u10d7\u10d8 \u10d7\u10d4\u10db\u10d8\u10e1 \u10d8\u10e0\u10d2\u10d5\u10da\u10d8\u10d5.\n\u10db\u10dd\u10db\u10ee\u10db\u10d0\u10e0\u10d4\u10d1\u10d4\u10da\u10e1 \u10e8\u10d4\u10d4\u10eb\u10da\u10d4\u10d1\u10d0 \u10e8\u10d4\u10e5\u10db\u10dc\u10d0\u10e1 \u10e1\u10d0\u10d9\u10e3\u10d7\u10d0\u10e0\u10d8 \u10de\u10e0\u10dd\u10e4\u10d8\u10da\u10d8 (bundle.io/temurleng), \u10db\u10d0\u10e0\u10e2\u10d8\u10d5\u10d8 \u10d4\u10d3\u10d8\u10d7\u10dd\u10e0\u10d8\u10e1 \u10d3\u10d0\u10ee\u10db\u10d0\u10e0\u10d4\u10d1\u10d8\u10d7 \u10db\u10dd\u10d0\u10ee\u10d3\u10d4\u10dc\u10e1 \u10db\u10d8\u10e1\u10d7\u10d5\u10d8\u10e1 \u10e1\u10d0\u10d8\u10dc\u10e2\u10d4\u10e0\u10d4\u10e1\u10dd \u10da\u10d8\u10dc\u10d9\u10d4\u10d1\u10d8\u10e1 \u10d0\u10da\u10dd\u10d9\u10d0\u10ea\u10d8\u10d0\u10e1 \u10d4\u10e0\u10d7\u10e1\u10d8\u10d5\u10e0\u10ea\u10d4\u10e8\u10d8 \u10d3\u10d0 \u10d2\u10d0\u10e3\u10d6\u10d8\u10d0\u10e0\u10d4\u10d1\u10e1 \u10e1\u10ee\u10d5\u10d4\u10d1\u10e1.\n\u10e9\u10d5\u10d4\u10dc \u10e8\u10d4\u10d5\u10e5\u10db\u10d4\u10dc\u10d8\u10d7 flexible template \u10da\u10d8\u10dc\u10d9\u10d4\u10d1\u10d8\u10e1 \u10d9\u10dd\u10da\u10d4\u10e5\u10ea\u10d8\u10d4\u10d1\u10d8\u10e1\u10d0\u10d7\u10d5\u10d8\u10e1. \u10d9\u10dd\u10da\u10d4\u10e5\u10ea\u10d8\u10d8\u10e1 \u10e1\u10d0\u10d7\u10d0\u10e3\u10e0\u10d8\u10e1\u10d0 \u10d3\u10d0 \u10d0\u10e6\u10ec\u10d4\u10e0\u10d8\u10e1 \u10d3\u10d0\u10ec\u10d4\u10e0\u10d8\u10e1 \u10d2\u10d0\u10e0\u10d3\u10d0 \u10db\u10dd\u10ee\u10dd\u10da\u10dd\u10d3 \u10da\u10d8\u10dc\u10d9\u10d4\u10d1\u10d8\u10e1 \u10d3\u10d0\u10db\u10d0\u10e2\u10d4\u10d1\u10d0\u10d0 \u10e1\u10d0\u10ed\u10d8\u10e0\u10dd, \u10e0\u10d0\u10d3\u10e0\u10dd\u10e1\u10d0\u10ea \u10e1\u10d8\u10e1\u10e2\u10d4\u10db\u10d0 \u10d0\u10d5\u10dd\u10e2\u10db\u10d0\u10e2\u10e3\u10e0\u10d0\u10d3 \u10e9\u10d0\u10e1\u10d5\u10d0\u10db\u10e1 \u10de\u10da\u10d0\u10d7\u10e4\u10dd\u10e0\u10db\u10d0\u10d6\u10d4  \u10e1\u10d0\u10d7\u10d0\u10e3\u10e0\u10e1, \u10e1\u10e3\u10e0\u10d0\u10d7\u10e1 \u10d3\u10d0 \u10db\u10d8\u10e1 \u10d0\u10e6\u10ec\u10d4\u10e0\u10d0\u10e1. (\u10d3\u10d8\u10d3\u10d8\u10f0\u10d0\u10d9\u10d8 \u10d0\u10db\u10dc\u10d0\u10ec\u10d8\u10da\u10e8\u10d8 \u10d0\u10e0\u10d0\u10e0\u10d8\u10e1, \u10d7\u10e3\u10db\u10ea\u10d0 \u10da\u10d8\u10dc\u10d9\u10d4\u10d1\u10d8\u10e1 \u10d0\u10da\u10dd\u10d9\u10d0\u10ea\u10d8\u10d8\u10e1 \u10de\u10e0\u10dd\u10ea\u10d4\u10e1\u10d8 \u10d2\u10d0\u10d5\u10d0\u10db\u10d0\u10e0\u10e2\u10d8\u10d5\u10d4\u10d7 \u10e1\u10d0\u10d2\u10e0\u10eb\u10dc\u10dd\u10d1\u10da\u10d0\u10d3 \u10d0\u10db\u10df\u10d0\u10db\u10d0\u10d3 \u10d0\u10e0\u10e1\u10d4\u10d1\u10e3\u10da\u10d8 \u10db\u10e1\u10d2\u10d0\u10d5\u10e1\u10d8 \u10d2\u10d0\u10d3\u10d0\u10ec\u10e7\u10d5\u10d4\u10e2\u10d8\u10da\u10d4\u10d1\u10d4\u10d1\u10d8\u10e1\u10d2\u10d0\u10dc \u10d2\u10d0\u10dc\u10e1\u10ee\u10d5\u10d0\u10d5\u10d4\u10d1\u10d8\u10d7)\n\u10db\u10d9\u10d8\u10d7\u10ee\u10d5\u10d4\u10da\u10d4\u10d1\u10e1 \u10d9\u10d8 \u10e8\u10d4\u10e3\u10eb\u10da\u10d8\u10d0\u10d7 \u10e8\u10d4\u10e1\u10d7\u10d0\u10d5\u10d0\u10d6\u10dd\u10dc \u10d7\u10d4\u10db\u10d0\u10e2\u10e3\u10e0\u10d8 \u10e1\u10e2\u10d0\u10e2\u10d8\u10d0 \u10d9\u10dd\u10da\u10d4\u10e5\u10ea\u10d8\u10d8\u10e1 \u10e8\u10d4\u10db\u10e5\u10dc\u10d4\u10da\u10e1, \u10d3\u10d0\u10e3\u10e1\u10e3\u10d1\u10e1\u10e5\u10e0\u10d0\u10d8\u10d1\u10d3\u10dc\u10d4\u10dc \u10db\u10d4\u10d8\u10da\u10d8\u10e1 \u10e1\u10d0\u10e8\u10e3\u10d0\u10da\u10d4\u10d1\u10d8\u10d7 \u10d3\u10d0 \u10db\u10d8\u10d8\u10e6\u10dd\u10dc \u10d2\u10d0\u10dc\u10d0\u10ee\u10da\u10d4\u10d1\u10d4\u10d1\u10d8. \n\u10e0\u10d0 \u10d0\u10e0 \u10d5\u10d0\u10e0\u10d7?\nGetpocket -  private \u10e1\u10d8\u10d5\u10e0\u10ea\u10d4\u10d0, \u10da\u10d8\u10dc\u10d9\u10d4\u10d1\u10d8\u10e1 \u10d4\u10e0\u10d7\u10d7\u10d4\u10db\u10d0\u10e8\u10d8 \u10d0\u10da\u10dd\u10d9\u10d0\u10ea\u10d8\u10d0 \u10db\u10ee\u10dd\u10da\u10dd\u10d3 Tag\u10d4\u10d1\u10d8\u10e1 \u10db\u10ee\u10e0\u10d8\u10d5 \u10d0\u10e0\u10d8\u10e1 \u10e8\u10d4\u10e1\u10d0\u10eb\u10da\u10d4\u10d1\u10d4\u10da\u10d8, \u10e1\u10ee\u10d5\u10d4\u10d1\u10d8\u10e1 \u10d5\u10d4\u10e0\u10e3\u10d6\u10d8\u10d0\u10e0\u10d4\u10d1. \u10db\u10d4\u10d8\u10da \u10e1\u10d8\u10e1\u10e2\u10d4\u10db\u10d0 \u10d3\u10d0 subscribe \u10d2\u10d0\u10e0\u10d4\u10db\u10dd \u10d0\u10db\u10de\u10d0\u10da\u10d7\u10e4\u10dd\u10e0\u10db\u10d0\u10d6\u10d4 \u10d0\u10e0\u10d2\u10d5\u10ee\u10d5\u10d3\u10d4\u10d1\u10d0.\nGibbon - \u10d2\u10d8\u10d1\u10dd\u10dc\u10d8 \u10e4\u10dd\u10d9\u10e3\u10e1\u10d8\u10e0\u10d4\u10d1\u10e3\u10da\u10d8\u10d0 \u10d2\u10e3\u10dc\u10d3\u10e1, \u10e5\u10dd\u10db\u10e3\u10dc\u10d8\u10d7\u10d8\u10e1 \u10e8\u10dd\u10e0\u10d8\u10e1 edu \u10e1\u10e2\u10d0\u10e2\u10d8\u10d4\u10d1\u10d8\u10e1 \u10d2\u10d0\u10e8\u10d4\u10d0\u10e0\u10d4\u10d1\u10d8\u10d7. \u10d4\u10d3\u10d8\u10d7\u10dd\u10e0\u10d8 \u10d3\u10d0 \u10d2\u10d0\u10e0\u10d4\u10db\u10dd \u10d0\u10e0 \u10d0\u10e0\u10d8\u10e1 \u10e4\u10dd\u10d9\u10e3\u10e1\u10d8\u10e0\u10d4\u10d1\u10e3\u10da\u10d8 \u10de\u10d4\u10e0\u10e1\u10dd\u10dc\u10d4\u10d1\u10d6\u10d4, \u10e0\u10dd\u10db\u10da\u10d4\u10d1\u10e1\u10d0\u10ea \u10e1\u10e3\u10e0\u10d7 \u10e1\u10d0\u10d4\u10e0\u10d7\u10dd \u10d8\u10dc\u10e2\u10d4\u10e0\u10d4\u10e1\u10d4\u10d1\u10d8\u10e1 \u10db\u10e5\u10dd\u10dc\u10d4 \u10d0\u10d3\u10d0\u10db\u10d8\u10d0\u10dc\u10d4\u10d1\u10d8\u10e1 \u10ec\u10e0\u10d4 \u10d2\u10d0\u10d6\u10d0\u10e0\u10dd\u10d3\u10dd\u10e1.\nMailchimp - private \u10e1\u10d8\u10d5\u10e0\u10ea\u10d4, \u10d0\u10e0 \u10d0\u10e0\u10d8\u10e1 \u10de\u10d4\u10e0\u10dd\u10e1\u10dc\u10da\u10d0\u10e3\u10e0\u10d8 \u10de\u10e0\u10dd\u10e4\u10d8\u10da\u10d8, \u10e1\u10d0\u10ed\u10d8\u10e0\u10dd\u10d0 template\u10d8\u10e1 \u10d3\u10d8\u10d6\u10d0\u10d8\u10dc\u10d8/\u10d9\u10dd\u10d3\u10d8 \u10e0\u10dd\u10db\u10d4\u10da\u10d8\u10ea sucks.\nHow we built it\n\u10db\u10e3\u10e8\u10d0\u10dd\u10d1\u10d8\u10e1 \u10de\u10d4\u10e0\u10d8\u10dd\u10d3\u10e8\u10d8 \u10d2\u10d0\u10db\u10dd\u10d5\u10d8\u10e7\u10d4\u10dc\u10d4\u10d7 Backend: Ruby on Rails framework, \u10e0\u10d0\u10db\u10d3\u10d4\u10dc\u10d8\u10db\u10d4 ruby gem, Frontend: React, Design: Sketch.app . \u10d0\u10de\u10da\u10d8\u10d9\u10d0\u10ea\u10d8\u10d0 \u10d0\u10e0\u10d8\u10e1 \u10e1\u10d0\u10d9\u10db\u10d0\u10dd\u10d3 \u10d9\u10dd\u10db\u10de\u10da\u10d4\u10e5\u10e1\u10e3\u10e0\u10d8, i.e \u10d0\u10e0\u10d8\u10e1 notification-\u10d4\u10d1\u10d8\u10e1 \u10e1\u10d4\u10e0\u10d5\u10d8\u10e1\u10d8 \u10d7\u10d0\u10d5\u10d8\u10e1\u10d8 email delivery, weekly subscribe \u10d3\u10d0 \u10d0.\u10e8\nAccomplishments that we're proud of\n\u10de\u10d8\u10e0\u10d5\u10d4\u10da\u10e0\u10d8\u10d2\u10e8\u10d8 \u10e3\u10e4\u10e0\u10dd \u10d2\u10d0\u10d5\u10d0\u10e4\u10d0\u10e0\u10d7\u10dd\u10d5\u10d4\u10d7 \u10e1\u10d0\u10d4\u10e0\u10d7\u10dd \u10d8\u10dc\u10e2\u10d4\u10e0\u10d4\u10e1\u10d8\u10e1 \u10db\u10e5\u10dd\u10dc\u10d4 \u10d0\u10d3\u10d0\u10db\u10d8\u10d0\u10dc\u10d4\u10d1\u10d8\u10e1 \u10ec\u10e0\u10d4 :)\nWhat's next for Bundle\n\u10d5\u10e4\u10d8\u10e5\u10e0\u10dd\u10d1\u10d7 \u10e0\u10dd\u10db \u10e9\u10d5\u10d4\u10dc\u10d8 \u10de\u10da\u10d0\u10d7\u10e4\u10dd\u10e0\u10db\u10d8\u10e1 \u10e1\u10d0\u10ed\u10d8\u10e0\u10dd\u10d4\u10d1\u10d0 \u10d0\u10e0\u10e1\u10d4\u10d1\u10dd\u10d1\u10e1 \u10d3\u10d0 \u10d5\u10d0\u10de\u10d8\u10e0\u10d4\u10d1\u10d7 \u10d8\u10d3\u10d4\u10d0 \u10d2\u10d0\u10d5\u10e3\u10d6\u10d8\u10d0\u10e0\u10dd\u10d7 \u10e1\u10ee\u10d5\u10d4\u10d1\u10e1\u10d0\u10ea.\n",
        "hackathon_id": "hacktbilisi2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe use Whatsapp group messaging and alternatives a lot. However, they are hard to follow for active groups, skimming through what has been talked is impossible, talking on a few subjects at a time is painful, finally, there's little incentive to introduce new topics.\nTherefore, we thought there is a need for an group messaging application that threads discussions under specific topics and we began developing \"Gang!\".\nWhat it does\nGang is and instant messaging application designed for groups. Groups are called gangs. In gangs you can text under existing threads or create a new thread. Every thread has its list of messages and you can easily discuss several topics in the same group. Therefore, since the first message is seen on top of threads it's assumed that new subjects will be talked under new threads. That would lead to see the list of topics talked about in the threads list easily. \nThe problem of introducing new topics is not a pain anymore but an enhancement to the discussion in group messaging!\nHow I built it\nEmrehan Tuzun has build the front-end with ClojureScript and Reagent on top of React.js. Halil Ozercan has build the backend with Flask and Python. We both used Socket.io and communicated through it.\nChallenges I ran into\nHalil Ibrahim has developed the backend services of Gang. My biggest challenge was to bring so many different Flask extensions together to create a robust and well structured server side implementation. We use Flask because it is highly light-weight, modular and self-explanatory for a web framework. Next challenge was to use Socket.IO from Python. Socket.IO is officially developed for both javascript backend and frontend. Flask extension of Socket.IO was very similar to official one but accessing session and global data of flask and python code was not easy to execute.\nAccomplishments that I'm proud of\nI'm proud of that I solely designed and implemented a backend structure which included websockets, session management, open graph access and OAuth login for facebook. Designing a database scheme, then managing object relation mapping from actual running code is a fulfilling experience as a hacker.  \nWhat I learned\nI learned different design patterns in web development. For the first time, I used an external tool or extension to map a database scheme into objects(SQAlchemy). Also this was my first experience with websockets in backend side(SocketIO). I learned how to manage web sessions and keep track of what is going on with current user.\nWhat's next for Gang\nGang is still not ready. We are planning to expand Gang's features from private area to public. What I mean is that Gang is aimed to be used between friends right now but it has a huge potential to serve larger communities similar to sub-reddits. We are planning to develop for mobile in next step because instant messaging world is now centered around mobile applications.\n",
        "hackathon_id": "hacktbilisi2015",
        "winner": false
    },
    {
        "description": "\nInspiration\n\u10d2\u10d0\u10d3\u10d0\u10d5\u10ec\u10e7\u10d5\u10d8\u10e2\u10d4\u10d7 \u10f0\u10d0\u10d9\u10d0\u10d7\u10dd\u10dc\u10d6\u10d4 \u10d2\u10d0\u10db\u10dd\u10d2\u10d5\u10d4\u10e7\u10d4\u10dc\u10d4\u10d1\u10d8\u10dc\u10d0 \u10e9\u10d5\u10d4\u10dc\u10d7\u10d5\u10d8\u10e1 \u10d0\u10ee\u10d0\u10da\u10d8 \u10e2\u10d4\u10e5\u10dc\u10dd\u10da\u10dd\u10d2\u10d8\u10d0, \u10d0\u10db \u10e8\u10d4\u10db\u10d7\u10ee\u10d5\u10d4\u10d5\u10d0\u10e8\u10d8 Apple-\u10d8\u10e1 iBeacon-\u10d4\u10d1\u10d8 \u10d3\u10d0 \u10e8\u10d4\u10d2\u10d5\u10d4\u10e5\u10db\u10dc\u10d0 \u10d4\u10e0\u10d7\u10d2\u10d5\u10d0\u10e0\u10d8 \u10d7\u10d0\u10db\u10d0\u10e8\u10d8 \u10e0\u10dd\u10db\u10d4\u10da\u10d8\u10ea \u10db\u10d8\u10dc\u10d8\u10e8\u10dc\u10d4\u10d1\u10d4\u10d1\u10d8\u10e1 \u10e1\u10d0\u10e8\u10e3\u10d0\u10da\u10d4\u10d1\u10d8\u10d7 \u10d2\u10d4\u10ee\u10db\u10d0\u10e0\u10d4\u10d1\u10d0 \u10d8\u10de\u10dd\u10d5\u10dd \u10d3\u10d0\u10db\u10d0\u10da\u10e3\u10da\u10d8 \u10d1\u10d4\u10d9\u10dd\u10dc\u10d4\u10d1\u10d8.\nWhat it does\n\u10e1\u10d0\u10e8\u10e3\u10d0\u10da\u10d4\u10d1\u10d0\u10e1 \u10d0\u10eb\u10da\u10d4\u10d5\u10e1 \u10db\u10dd\u10db\u10ee\u10db\u10d0\u10e0\u10d4\u10d1\u10d4\u10da\u10e1 \u10d3\u10d0\u10db\u10d0\u10da\u10dd\u10e1 \u10e1\u10d0\u10e1\u10e3\u10e0\u10d5\u10d4\u10da\u10d8 \u10e0\u10d0\u10dd\u10d3\u10d4\u10dc\u10dd\u10d1\u10d8\u10e1 iBeacon-\u10d4\u10d1\u10d8 \u10d3\u10d0 \u10e8\u10d4\u10db\u10d3\u10d4\u10d2 \u10d3\u10d0\u10d0\u10d5\u10d0\u10da\u10dd\u10e1 \u10e1\u10ee\u10d5\u10d0\u10e1 \u10db\u10d0\u10d7\u10d8 \u10db\u10dd\u10eb\u10d4\u10d1\u10dc\u10d0. \nHow I built it\n\u10d2\u10d0\u10db\u10dd\u10d5\u10d8\u10e7\u10d4\u10dc\u10d4\u10d7 iBeacon bluetooth LE \u10db\u10dd\u10ec\u10e7\u10dd\u10d1\u10d8\u10da\u10dd\u10d1\u10d4\u10d1\u10d8 \u10d3\u10d0 \u10d0\u10dc\u10d3\u10e0\u10dd\u10d8\u10d3 \u10e1\u10db\u10d0\u10e0\u10e2\u10e4\u10dd\u10dc\u10d8.\n\u10d4\u10e1 \u10d0\u10de\u10da\u10d8\u10d9\u10d0\u10ea\u10d8\u10d0 \u10d0\u10e0\u10d8\u10e1 \u10d4\u10e0\u10d7\u10d2\u10d5\u10d0\u10e0\u10d8 \u10e9\u10dd\u10dc\u10e9\u10ee\u10d8 \u10e0\u10dd\u10db\u10d4\u10da\u10db\u10d0\u10ea \u10e8\u10d4\u10d8\u10eb\u10da\u10d4\u10d1\u10d0 \u10db\u10d8\u10d8\u10e6\u10dd\u10e1 \u10e1\u10ee\u10d5\u10d0\u10d3\u10d0\u10e1\u10ee\u10d5\u10d0 \u10e1\u10d0\u10ee\u10d4. \u10db\u10d0\u10d2\u10d0\u10da\u10d8\u10d7\u10d0\u10d3, \u10d2\u10d0\u10dc\u10eb\u10d8\u10e1 \u10de\u10dd\u10d5\u10dc\u10d8\u10e1 \u10d0\u10dc \u10d3\u10d0\u10d9\u10d0\u10e0\u10d2\u10e3\u10da\u10d8 \u10d2\u10d0\u10e1\u10d0\u10e6\u10d4\u10d1\u10d8\u10e1 \u10d0\u10e6\u10db\u10dd\u10e9\u10d4\u10dc\u10d8\u10e1.\n",
        "hackathon_id": "hacktbilisi2015",
        "winner": false
    },
    {
        "description": "\nInspiration\n\u10d0\u10da\u10d1\u10d0\u10d7 \u10e7\u10d5\u10d4\u10da\u10d0\u10e1 \u10d2\u10e5\u10dd\u10dc\u10d8\u10d0\u10d7 \u10d8\u10e1 \u10db\u10dd\u10db\u10d4\u10dc\u10e2\u10d8, \u10e0\u10dd\u10d3\u10d4\u10e1\u10d0\u10ea \u10e1\u10d0\u10ee\u10da\u10e8\u10d8 \u10db\u10d4\u10d2\u10dd\u10d1\u10e0\u10d4\u10d7\u10d0\u10dc \u10d4\u10e0\u10d7\u10d0\u10d3 \u10d8\u10db\u10e7\u10dd\u10e4\u10d4\u10d1\u10d8\u10d7 \u10d3\u10d0 \u10e3\u10e7\u10e3\u10e0\u10d4\u10d1\u10d7 \u10d0\u10dc \u10e3\u10e1\u10db\u10d4\u10dc\u10d7 \u10e1\u10ee\u10d5\u10d0\u10d3\u10d0\u10e1\u10ee\u10d5\u10d0 \u10e1\u10d0\u10d8\u10dc\u10e2\u10d4\u10e0\u10d4\u10e1\u10dd \u10d3\u10d0 \u10e1\u10d0\u10e1\u10d8\u10d0\u10db\u10dd\u10d5\u10dc\u10dd \u10db\u10dd\u10db\u10d4\u10dc\u10e2\u10d4\u10d1\u10e1 \u10d3\u10d0 \u10d0\u10db\u10d0\u10d5\u10d3\u10e0\u10dd\u10e3\u10da\u10d0\u10d3 \u10d3\u10d8\u10e1\u10d9\u10dd\u10db\u10e4\u10dd\u10e0\u10e2\u10e1 \u10d2\u10d0\u10dc\u10d8\u10ed\u10d4\u10d1\u10d7 \u10d8\u10e1 \u10e4\u10d0\u10e5\u10e2\u10d8, \u10e0\u10dd\u10db \u10d2\u10d8\u10ec\u10d4\u10d5\u10d7 \u10d0\u10d3\u10d2\u10d4\u10d7, \u10db\u10d8\u10ee\u10d5\u10d8\u10d3\u10d4\u10d7 \u10d9\u10dd\u10db\u10de\u10d8\u10e3\u10e2\u10d4\u10e0\u10d7\u10d0\u10dc \u10d3\u10d0 \u10e9\u10d0\u10e0\u10d7\u10dd\u10d7 \u10d0\u10dc \u10d2\u10d0\u10d3\u10d0\u10d0\u10ee\u10d5\u10d8\u10dd\u10d7 \u10e1\u10d0\u10e1\u10e3\u10e0\u10d5\u10d4\u10da\u10d8 \u10e4\u10d0\u10d8\u10da\u10d8,\n\u10d1\u10d4\u10d5\u10e0\u10e1 \u10d2\u10e5\u10dd\u10dc\u10d8\u10d0\u10d7 \u10db\u10dd\u10db\u10d4\u10dc\u10e2\u10d8 \u10e0\u10dd\u10d3\u10d4\u10e1\u10d0\u10ea \u10e4\u10d0\u10e0\u10d7\u10dd \u10d0\u10e3\u10d3\u10d8\u10e2\u10dd\u10e0\u10d8\u10d8\u10e1 \u10ec\u10d8\u10dc\u10d0\u10e8\u10d4 \u10d3\u10d2\u10d0\u10ee\u10d0\u10e0\u10d7 \u10de\u10e0\u10d4\u10d6\u10d4\u10dc\u10e2\u10d0\u10ea\u10d8\u10d8\u10e1 \u10ec\u10d0\u10e0\u10e1\u10d0\u10d3\u10d2\u10d4\u10dc\u10d0\u10d3\n\u10d3\u10d0 \u10e1\u10d0\u10ed\u10d8\u10e0\u10dd \u10db\u10dd\u10db\u10d4\u10dc\u10e2\u10e8\u10d8 \u10d2\u10d8\u10ec\u10d4\u10d5\u10d7 \u10d9\u10dd\u10db\u10de\u10d8\u10e3\u10e2\u10d4\u10e0\u10d7\u10d0\u10dc \u10db\u10d8\u10e1\u10d5\u10da\u10d0 \u10d3\u10d0 \u10e1\u10d0\u10e1\u10e3\u10e0\u10d5\u10d4\u10da \u10e1\u10da\u10d0\u10d8\u10d3\u10d6\u10d4 \u10d2\u10d0\u10d3\u10d0\u10e0\u10d7\u10d5\u10d0 \u10d0\u10dc \u10e1\u10d0\u10e1\u10e3\u10e0\u10d5\u10d4\u10da\u10d8 \u10db\u10dd\u10dc\u10d0\u10d9\u10d5\u10d4\u10d7\u10e1 \u10d0\u10e6\u10dc\u10d8\u10e8\u10d5\u10dc\u10d0 \u10db\u10d0\u10e0\u10d9\u10d4\u10e0\u10d8\u10d7 \u10db\u10d8\u10db\u10d3\u10d8\u10dc\u10d0\u10e0\u10d4 \u10e1\u10da\u10d0\u10d8\u10d3\u10d6\u10d4 - \u10e0\u10d0\u10db\u10d0\u10ea \u10e8\u10d4\u10d8\u10eb\u10da\u10d4\u10d1\u10d0 \u10d3\u10d8\u10e1\u10d9\u10dd\u10db\u10e4\u10dd\u10e0\u10e2\u10d8 \u10db\u10dd\u10d2\u10d0\u10dc\u10d8\u10ed\u10dd\u10d7.\n\u10d2\u10d7\u10d0\u10d5\u10d0\u10d6\u10dd\u10d1\u10d7 \u10e1\u10d0\u10e8\u10e3\u10d0\u10da\u10d4\u10d1\u10d0\u10e1 \u10e0\u10dd\u10db\u10da\u10d8\u10d7\u10d0\u10ea \u10d4\u10e1 \u10d3\u10d0 \u10e1\u10ee\u10d5\u10d0 \u10db\u10e1\u10d2\u10d0\u10d5\u10e1\u10d8 \u10de\u10e0\u10dd\u10d1\u10da\u10d4\u10db\u10d4\u10d1\u10d8 \u10d2\u10d0\u10d3\u10d0\u10ec\u10e7\u10d5\u10d4\u10e2\u10d8\u10da\u10d8 \u10d8\u10e5\u10dc\u10d4\u10d1\u10d0 - \u10d0\u10de\u10da\u10d8\u10d9\u10d0\u10ea\u10d8\u10d0\u10e1,\n\u10e0\u10dd\u10db\u10d4\u10da\u10d8\u10e1 \u10d7\u10e5\u10d5\u10d4\u10dc\u10e1 \u10de\u10dd\u10e0\u10e2\u10d0\u10e2\u10e3\u10da \u10db\u10dd\u10ec\u10e7\u10dd\u10d1\u10d8\u10da\u10dd\u10d1\u10d0\u10d6\u10d4 \u10d3\u10d0\u10d8\u10dc\u10e1\u10e2\u10d0\u10da\u10d8\u10e0\u10d4\u10d1\u10d8\u10e1 \u10e8\u10d4\u10db\u10d3\u10d4\u10d2 - \u10d8\u10e5\u10dc\u10d4\u10d1\u10d0 \u10d4\u10e1 \u10e1\u10db\u10d0\u10e0\u10e2\u10e4\u10dd\u10dc\u10d8 \u10d7\u10e3 \u10de\u10da\u10d0\u10dc\u10e8\u10d4\u10e2\u10d8 - \u10d2\u10d4\u10eb\u10da\u10d4\u10d5\u10d0\u10d7 \u10e8\u10d4\u10e1\u10d0\u10eb\u10da\u10d4\u10d1\u10da\u10dd\u10d1\u10d0 \u10db\u10d0\u10e0\u10d7\u10dd\u10d7 \u10d9\u10dd\u10db\u10de\u10d8\u10e3\u10e2\u10d4\u10e0\u10d8, \u10d0\u10ec\u10d0\u10e0\u10db\u10dd\u10dd\u10d7 \u10e4\u10d0\u10d8\u10da\u10d4\u10d1\u10d8\u10e1 \u10db\u10d4\u10dc\u10d4\u10ef\u10db\u10d4\u10dc\u10e2\u10d8 \u10d3\u10d0 \u10e9\u10d0\u10d0\u10e2\u10d0\u10e0\u10dd\u10d7 \u10e1\u10ee\u10d5\u10d0\u10d3\u10d0\u10e1\u10ee\u10d5\u10d0 \u10db\u10d0\u10dc\u10d8\u10de\u10e3\u10da\u10d0\u10ea\u10d8\u10d4\u10d1\u10d8 \u10de\u10d8\u10e0\u10d3\u10d0\u10de\u10d8\u10e0 \u10d7\u10e5\u10d5\u10d4\u10dc\u10d8 \u10e1\u10db\u10d0\u10e0\u10e2\u10e4\u10dd\u10dc\u10d8\u10d3\u10d0\u10dc\nWhat it does\n\u10d0\u10db\u10e7\u10d0\u10e0\u10d4\u10d1\u10e1 \u10e3\u10e1\u10ec\u10e0\u10d0\u10e4\u10d4\u10e1 \u10dd\u10e0\u10db\u10ee\u10e0\u10d8\u10d5 \u10d9\u10d0\u10d5\u10e8\u10d8\u10e0\u10e1 \u10d9\u10dd\u10db\u10de\u10d8\u10e3\u10e2\u10d4\u10e0\u10e1\u10d0 \u10d3\u10d0 \u10e1\u10db\u10d0\u10e0\u10e2\u10e4\u10dd\u10dc\u10e1/\u10e2\u10d4\u10da\u10d4\u10e4\u10dd\u10dc\u10e1 \u10e8\u10dd\u10e0\u10d8\u10e1, \u10e0\u10d0\u10ea \u10e1\u10db\u10d0\u10e0\u10e2\u10e4\u10dd\u10dc\u10d8\u10e1 \u10db\u10dd\u10db\u10ee\u10db\u10d0\u10e0\u10d4\u10d1\u10d4\u10da\u10e1 \u10d0\u10eb\u10da\u10d4\u10d5\u10e1 \u10e8\u10d4\u10d8\u10e1\u10d0\u10eb\u10da\u10d4\u10d1\u10da\u10dd\u10d1\u10d0\u10e1 \u10db\u10d8\u10e1\u10d8 \u10db\u10d4\u10e8\u10d5\u10d4\u10dd\u10d1\u10d8\u10d7 \u10d0\u10ec\u10d0\u10e0\u10db\u10dd\u10dd\u10e1 \u10d3\u10d0\u10d9\u10d0\u10d5\u10e8\u10d8\u10e0\u10d4\u10d1\u10e3\u10da\u10d8 \u10d9\u10dd\u10db\u10de\u10d8\u10e3\u10e2\u10d4\u10e0\u10d8\u10e1 \u10e1\u10e0\u10e3\u10da\u10d8 \u10db\u10d0\u10e0\u10d7\u10d5\u10d0 - \u10d5\u10d8\u10e0\u10e2\u10e3\u10d0\u10da\u10e3\u10e0\u10d8 \u10d9\u10da\u10d0\u10d5\u10d8\u10d0\u10e2\u10e3\u10e0\u10d8\u10e1\u10d0 \u10d3\u10d0 \u10d7\u10d0\u10e9\u10de\u10d0\u10d3\u10d8\u10e1 \u10db\u10d4\u10e8\u10d5\u10d4\u10dd\u10d1\u10d8\u10d7, \u10d2\u10d0\u10e0\u10d3\u10d0 \u10d0\u10db\u10d8\u10e1\u10d0 \u10de\u10e0\u10d4\u10d6\u10d4\u10dc\u10e2\u10d0\u10ea\u10d8\u10d4\u10d1\u10d8\u10e1 \u10db\u10d0\u10e0\u10d7\u10d5\u10d0 \u10d3\u10d0 \u10d9\u10dd\u10db\u10de\u10d8\u10e3\u10e2\u10d4\u10e0\u10d8\u10e1 \u10e4\u10d0\u10d8\u10da\u10d4\u10d1\u10d8\u10e1 \u10db\u10d4\u10dc\u10d4\u10ef\u10db\u10d4\u10dc\u10e2\u10d8 \u10de\u10d8\u10e0\u10d3\u10d0\u10de\u10d8\u10e0 \u10e1\u10db\u10d0\u10e0\u10e2\u10e4\u10dd\u10dc\u10e8\u10d8.\nHow we built it\n\u10de\u10e0\u10dd\u10d2\u10e0\u10d0\u10db\u10d0 \u10db\u10dd\u10d8\u10ea\u10d0\u10d5\u10e1 \u10dd\u10e0 \u10db\u10ee\u10d0\u10e0\u10d4\u10e1 - \u10e1\u10d4\u10e0\u10d5\u10d4\u10e0\u10d8\u10e1 \u10db\u10ee\u10d0\u10e0\u10d4 - \u10e0\u10dd\u10db\u10d4\u10da\u10d8\u10ea \u10e7\u10d4\u10dc\u10d3\u10d4\u10d1\u10d0 \u10d9\u10dd\u10db\u10de\u10d8\u10e3\u10e2\u10d4\u10e0\u10d6\u10d4 \u10d3\u10d0 \u10d8\u10eb\u10da\u10d4\u10d5\u10d0 \u10db\u10d0\u10e1\u10d7\u10d0\u10dc \u10d3\u10d0\u10d9\u10d0\u10d5\u10e8\u10d8\u10e0\u10d4\u10d1\u10d8\u10e1 \u10e8\u10d4\u10e1\u10d0\u10eb\u10da\u10d4\u10d1\u10da\u10dd\u10d1\u10d0\u10e1\n\u10d3\u10d0 \u10d9\u10da\u10d8\u10d4\u10dc\u10e2\u10d8\u10e1 \u10db\u10ee\u10d0\u10e0\u10d4\u10e1 \u10e0\u10dd\u10db\u10d4\u10da\u10d8\u10ea \u10d8\u10dc\u10e1\u10e2\u10d0\u10da\u10d8\u10e0\u10d3\u10d4\u10d1\u10d0 \u10d0\u10dc\u10d3\u10e0\u10dd\u10d8\u10d3 \u10e1\u10db\u10d0\u10e0\u10e2\u10e4\u10dd\u10dc\u10d6\u10d4/\u10de\u10da\u10d0\u10dc\u10e8\u10d4\u10e2\u10d6\u10d4 \u10d3\u10d0 \u10d5\u10d4\u10d1\u10e1\u10dd\u10d9\u10d4\u10e2\u10d4\u10d1\u10d8\u10e1 \u10e1\u10d0\u10e8\u10e3\u10d0\u10da\u10d4\u10d1\u10d8\u10d7 \u10e3\u10d9\u10d0\u10d5\u10e8\u10d8\u10e0\u10d3\u10d4\u10d1\u10d0 \u10d9\u10dd\u10db\u10de\u10d8\u10e3\u10e2\u10d4\u10e0\u10e1.\nChallenges we ran into\n\u10d5\u10d8\u10dc\u10d0\u10d8\u10d3\u10d0\u10dc \u10e1\u10d0\u10e5\u10db\u10d4 \u10d4\u10ee\u10d4\u10d1\u10d0 \u10d8\u10e1\u10d4\u10d7\u10d8 \u10e0\u10d0\u10dd\u10d3\u10d4\u10dc\u10dd\u10d1\u10d8\u10e1 \u10d8\u10dc\u10e4\u10dd\u10e0\u10db\u10d0\u10ea\u10d8\u10d0\u10e1 \u10e0\u10dd\u10d3\u10d4\u10e1\u10d0\u10ea \u10e1\u10db\u10d0\u10e0\u10e2\u10e4\u10dd\u10dc\u10d6\u10d4 \u10e7\u10dd\u10d5\u10d4\u10da\u10d8 \u10db\u10dd\u10e5\u10db\u10d4\u10d3\u10d4\u10d1\u10d8\u10e1 \u10e8\u10d4\u10e1\u10e0\u10e3\u10da\u10d4\u10d1\u10d8\u10e1\u10d0\u10e1 (\u10d0\u10de\u10da\u10d8\u10d9\u10d0\u10ea\u10d8\u10d8\u10e1 \u10db\u10d8\u10d3\u10d0\u10db\u10dd\u10e8\u10d8) - \u10d8\u10e5\u10dc\u10d4\u10d1\u10d0 \u10d4\u10e1 \u10d5\u10d8\u10e0\u10e2\u10e3\u10d0\u10da\u10e3\u10e0 \u10d7\u10d0\u10e9\u10de\u10d0\u10d3\u10d6\u10d4 \u10d7\u10d8\u10d7\u10d8\u10e1 \u10d2\u10d0\u10e1\u10db\u10d0 \u10d7\u10e3 \u10e4\u10d0\u10d8\u10da\u10d8\u10e1 \u10d2\u10d0\u10d3\u10db\u10dd\u10ec\u10d4\u10e0\u10d0 \u10d9\u10dd\u10db\u10de\u10d8\u10e3\u10e2\u10d4\u10e0\u10d8\u10d3\u10d0\u10dc - \u10db\u10d7\u10d0\u10d5\u10d0\u10e0 \u10de\u10e0\u10dd\u10d1\u10da\u10d4\u10db\u10d0 \u10d2\u10d0\u10ee\u10d3\u10d0\u10d9\u10dd\u10db\u10de\u10d8\u10e3\u10e2\u10d4\u10e0\u10e1\u10d0 \u10d3\u10d0 \u10e1\u10db\u10d0\u10e0\u10e2\u10e4\u10dd\u10dc\u10e1 \u10e8\u10dd\u10e0\u10d8\u10e1 \u10d8\u10db\u10d3\u10d4\u10dc\u10d0\u10d3 \u10e1\u10ec\u10e0\u10d0\u10e4\u10d8 \u10d9\u10d0\u10d5\u10e8\u10d8\u10e0\u10d8\u10e1 \u10d3\u10d0\u10db\u10e7\u10d0\u10e0\u10d4\u10d1\u10d0 \u10e0\u10d0\u10d7\u10d0 \u10db\u10d0\u10e5\u10e1\u10d8\u10db\u10d0\u10da\u10e3\u10e0\u10d0\u10d3 \u10e8\u10d4\u10e3\u10e4\u10d4\u10e0\u10ee\u10d4\u10d1\u10da\u10d0\u10d3 \u10d3\u10d0 \u10e1\u10ec\u10e0\u10d0\u10e4\u10d0\u10d3 \u10ec\u10d0\u10e0\u10db\u10dd\u10d4\u10d1\u10e3\u10da\u10d8\u10e7\u10dd \u10d0\u10e1\u10d4\u10d7\u10d8 \u10e2\u10d8\u10de\u10d8\u10e1 \u10d8\u10dc\u10e4\u10dd\u10e0\u10db\u10d0\u10ea\u10d8\u10d8\u10e1 \u10db\u10d8\u10db\u10dd\u10ea\u10d5\u10da\u10d0 \u10db\u10d0\u10d7 \u10e8\u10dd\u10e0\u10d8\u10e1.\nAccomplishments that we're proud of\n\u10e9\u10d5\u10d4\u10dc \u10d3\u10d0\u10d5\u10d0\u10db\u10e7\u10d0\u10e0\u10d4\u10d7 \u10e3\u10e1\u10ec\u10e0\u10d0\u10e4\u10d4\u10e1\u10d8 \u10d9\u10d0\u10d5\u10e8\u10d8\u10e0\u10d8 PC-\u10e1\u10d0 \u10d3\u10d0 \u10e1\u10db\u10d0\u10e0\u10e2\u10e4\u10dd\u10dc\u10e1 \u10e8\u10dd\u10e0\u10d8\u10e1 \u10e7\u10dd\u10d5\u10d4\u10da\u10d2\u10d5\u10d0\u10e0\u10d8 \u10e8\u10e3\u10d0\u10db\u10d0\u10d5\u10d0\u10da\u10d8 \u10e1\u10d4\u10e0\u10d5\u10d4\u10e0\u10d8\u10e1 \u10d2\u10d0\u10e0\u10d4\u10e8\u10d4 - \u10d9\u10da\u10d8\u10d4\u10dc\u10e2\u10d8 (\u10e1\u10db\u10d0\u10e0\u10e2\u10e4\u10dd\u10dc\u10d8) \u10d9\u10dd\u10db\u10de\u10d8\u10e3\u10e2\u10d4\u10e0\u10e1 \u10e3\u10d9\u10d0\u10d5\u10e8\u10d8\u10e0\u10d3\u10d4\u10d1\u10d0 \u10e0\u10dd\u10d2\u10dd\u10e0\u10ea \u10e1\u10d4\u10e0\u10d5\u10d4\u10e0\u10e1 \u10d3\u10d0 \u10d0\u10ec\u10d0\u10e0\u10db\u10dd\u10d4\u10d1\u10e1 \u10db\u10d8\u10e1\u10d8 \u10e0\u10dd\u10d2\u10dd\u10e0\u10ea \u10d9\u10da\u10d8\u10d4\u10dc\u10e2\u10d8\u10e1 \u10db\u10d0\u10e0\u10d7\u10d5\u10d0\u10e1. \u10d0\u10e1\u10d4\u10d7\u10db\u10d0 \u10db\u10dd\u10d3\u10d4\u10da\u10db\u10d0 \u10e1\u10d0\u10e8\u10e3\u10d0\u10da\u10d4\u10d1\u10d0 \u10db\u10dd\u10d2\u10d5\u10ea\u10d0 \u10d2\u10d5\u10d4\u10ec\u10d0\u10e0\u10db\u10dd\u10d4\u10d1\u10d8\u10dc\u10d0 \u10e3\u10d6\u10d0\u10e0\u10db\u10d0\u10d6\u10d0\u10e0\u10d8 \u10e0\u10d0\u10dd\u10d3\u10d4\u10dc\u10dd\u10d1\u10d8\u10e1 \u10d8\u10dc\u10e4\u10dd\u10e0\u10db\u10d0\u10ea\u10d8\u10d8\u10e1 \u10db\u10d8\u10db\u10dd\u10ea\u10d5\u10da\u10d0 \u10db\u10d0\u10e5\u10e1\u10d8\u10db\u10d0\u10da\u10e3\u10e0\u10d0\u10d3 \u10e1\u10ec\u10e0\u10d0\u10e4\u10d0\u10d3.\n\u10e8\u10d4\u10d5\u10e5\u10db\u10d4\u10dc\u10d8\u10d7 \u10db\u10d0\u10e0\u10e2\u10d8\u10d5\u10d8 \u10d3\u10d0 \u10d9\u10dd\u10db\u10de\u10d0\u10e5\u10e2\u10e3\u10e0\u10d8 \u10d8\u10dc\u10e2\u10d4\u10e0\u10e4\u10d4\u10d8\u10e1\u10d8, \u10e0\u10d0\u10d7\u10d0 \u10db\u10d0\u10e5\u10e1\u10d8\u10db\u10d0\u10da\u10e3\u10e0\u10d0\u10d3 \u10db\u10dd\u10e1\u10d0\u10ee\u10d4\u10e0\u10ee\u10d4\u10d1\u10d4\u10da\u10d8 \u10d2\u10d0\u10db\u10ee\u10d3\u10d0\u10e0\u10d8\u10e7\u10dd \u10d7\u10e5\u10d5\u10d4\u10dc\u10d8 \u10db\u10dd\u10d1\u10d8\u10da\u10e3\u10e0\u10d8 \u10db\u10dd\u10ec\u10e7\u10dd\u10d1\u10d8\u10da\u10dd\u10d1\u10d8\u10e1 \u10db\u10d4\u10e8\u10d5\u10d4\u10dd\u10d1\u10d8\u10d7 \u10d9\u10dd\u10db\u10de\u10d8\u10e3\u10e2\u10d4\u10e0\u10d8\u10e1 \u10db\u10d0\u10e0\u10d7\u10d5\u10d0 \u10d3\u10d0 \u10e1\u10ee\u10d5\u10d0\u10d3\u10d0\u10e1\u10ee\u10d5\u10d0 \u10dd\u10de\u10d4\u10e0\u10d0\u10ea\u10d8\u10d4\u10d1\u10d8\u10e1 \u10e8\u10d4\u10e1\u10e0\u10e3\u10da\u10d4\u10d1\u10d0.\nWhat we learned\n\u10e9\u10d5\u10d4\u10dc \u10db\u10d8\u10d5\u10d8\u10e6\u10d4\u10d7 \u10e3\u10d3\u10d8\u10d3\u10d4\u10e1\u10d8 \u10d2\u10d0\u10db\u10dd\u10ea\u10d3\u10d8\u10da\u10d4\u10d1\u10d0 \u10ef\u10d2\u10e3\u10e4\u10e3\u10e0\u10d8 \u10db\u10e3\u10e8\u10d0\u10dd\u10d1\u10d8\u10e1 \u10db\u10ee\u10e0\u10d8\u10d5.\n\u10d0\u10e1\u10d4\u10d5\u10d4 \u10d2\u10d0\u10d5\u10d8\u10e6\u10e0\u10db\u10d0\u10d5\u10d4\u10d7 \u10ea\u10dd\u10d3\u10dc\u10d0 \u10e1\u10ee\u10d5\u10d0\u10d3\u10d0\u10e1\u10ee\u10d5\u10d0 \u10e2\u10d4\u10e5\u10dc\u10dd\u10da\u10dd\u10d2\u10d8\u10d8\u10e1 \u10d2\u10d0\u10db\u10dd\u10e7\u10d4\u10dc\u10d4\u10d1\u10d8\u10e1 \u10de\u10d8\u10e0\u10dd\u10d1\u10d4\u10d1\u10e8\u10d8.\nWhat's next for Remote PC Controller\n\u10d5\u10d2\u10d4\u10d2\u10db\u10d0\u10d5\u10d7 \u10d5\u10d8\u10d3\u10d4\u10dd/\u10d0\u10e3\u10d3\u10d8\u10dd \u10e1\u10e2\u10e0\u10d8\u10db\u10d8\u10dc\u10d2\u10d8\u10e1 \u10d3\u10d0\u10db\u10d0\u10e2\u10d4\u10d1\u10d0\u10e1 \u10e1\u10db\u10d0\u10e0\u10e2\u10e4\u10dd\u10dc\u10d8\u10d3\u10d0\u10dc \u10d9\u10dd\u10db\u10de\u10d8\u10e3\u10e2\u10d4\u10e0\u10e8\u10d8,\n\u10d0\u10d2\u10e0\u10d4\u10d7\u10d5\u10d4 \u10de\u10d8\u10e0\u10d5\u10d4\u10da\u10d8 \u10d9\u10d0\u10d5\u10e8\u10d8\u10e0\u10d8\u10e1 \u10e8\u10d4\u10db\u10d3\u10d4\u10d2 - \u10db\u10dd\u10dc\u10d0\u10ea\u10d4\u10db\u10d4\u10d1\u10d8\u10e1 \u10d3\u10d0\u10db\u10d0\u10ee\u10e1\u10dd\u10d5\u10e0\u10d4\u10d1\u10d8\u10e1\u10d0 \u10d3\u10d0 \u10e8\u10d4\u10db\u10d3\u10d2\u10dd\u10db\u10e8\u10d8 \u10d0\u10d5\u10e2\u10dd\u10db\u10d0\u10e2\u10e3\u10e0\u10d8 \u10d3\u10d0\u10d9\u10d0\u10d5\u10e8\u10d8\u10e0\u10d4\u10d1\u10d8\u10e1 \u10e8\u10d4\u10e1\u10d0\u10eb\u10da\u10d4\u10d1\u10da\u10dd\u10d1\u10d8\u10e1 \u10e3\u10d6\u10e0\u10e3\u10dc\u10d5\u10d4\u10da\u10e7\u10dd\u10e4\u10d0\u10e1.\n",
        "hackathon_id": "hacktbilisi2015",
        "winner": false
    },
    {
        "description": "\nInspiration - Music\nWhat it does - Plays music easily. (with hand shake)\nHow I built it - arduino, laser diods, photoresistors\nChallenges I ran into - We had to make photoresistor system work well, also we had to solve problem about arduiono and sound frequency.\nAccomplishments that I'm proud of - We finally finished our project correctly and made it cool entertaining gadget.\nWhat I learned - I learned the system of sound frequency and how to make the code a real thing.\nWhat's next for Laser DJ - I think we can develop this gadget by adding lots of new combined sounds and make it available for everybody.\n",
        "hackathon_id": "hacktbilisi2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nMany hardware developers have problems with prototyping so I wanted to create something that could make this more easy\nWhat it does\nprototype just moves around leaving the trace \nHow we built it\nUsing laser cutter arduino and stepper motors\nChallenges we ran into\nshortage of resources \nAccomplishments that we're proud of\nmaking the thing work!\nWhat we learned\nmaking laser work is harder than it seems\nWhat's next for Laser Runner\nadding actual laser and bluetooth\n",
        "hackathon_id": "hacktbilisi2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavamatlabnotepad++visual-studio\n",
        "hackathon_id": "hacktbilisi2015",
        "winner": false
    },
    {
        "description": "\n  \u10e9\u10d5\u10d4\u10dc \u10d5\u10d4\u10ea\u10d0\u10d3\u10d4\u10d7 \u10e8\u10d4\u10d2\u10d5\u10d4\u10e5\u10db\u10dc\u10d0 \u10d8\u10e1\u10d4\u10d7\u10d8 \u10e0\u10d0\u10db \u10e0\u10d0\u10ea \u10d0\u10e5\u10e2\u10e3\u10d0\u10da\u10e3\u10e0\u10d8 \u10d8\u10e5\u10dc\u10d4\u10d1\u10dd\u10d3\u10d0 \u10e7\u10d5\u10d4\u10da\u10d0\u10e1\u10d0\u10d7\u10d5\u10d8\u10e1. \u10d0\u10db\u10d8\u10e1\u10d0\u10d7\u10d5\u10d8\u10e1 \u10e3\u10dc\u10d3\u10d0 \u10db\u10d8\u10d2\u10d5\u10d4\u10d2\u10dd\u10dc\u10dd \u10d8\u10e1\u10d4\u10d7\u10d8 \u10db\u10dd\u10d7\u10ee\u10dd\u10d5\u10dc\u10d8\u10da\u10d4\u10d1\u10d0 \u10e0\u10d0\u10ea \u10e7\u10d5\u10d4\u10da\u10d0 \u10e9\u10d5\u10d4\u10dc\u10d2\u10d0\u10dc\u10e1 \u10d2\u10d0\u10d0\u10e9\u10dc\u10d8\u10d0. \u10d0\u10e1\u10d4\u10d7\u10d0\u10d3 \u10db\u10d8\u10d5\u10d8\u10e9\u10dc\u10d8\u10d4\u10d7 \u10e9\u10d5\u10d4\u10dc\u10d8 \u10e1\u10e3\u10e0\u10d5\u10d8\u10da\u10d4\u10d1\u10d8 \u10d3\u10d0 \u10dd\u10ea\u10dc\u10d4\u10d1\u10d4\u10d1\u10d8. \u10e7\u10d5\u10d4\u10da\u10d0 \u10d0\u10d3\u10d0\u10db\u10d8\u10d0\u10dc\u10e1 \u10d2\u10d0\u10dc\u10e3\u10e0\u10e9\u10d4\u10d5\u10da\u10d0\u10d3 \u10e1\u10e5\u10d4\u10e1\u10d8\u10e1\u10d0, \u10d0\u10e1\u10d0\u10d9\u10d8\u10e1\u10d0, \u10d9\u10d0\u10dc\u10d8\u10e1 \u10e4\u10d4\u10e0\u10d8\u10e1\u10d0 \u10d7\u10e3 \u10e1\u10d0\u10e0\u10ec\u10db\u10e3\u10dc\u10dd\u10d4\u10d1\u10d8\u10e1\u10d0 \u10d2\u10d0\u10d0\u10e9\u10dc\u10d8\u10d0 \u10e1\u10e3\u10e0\u10d5\u10d8\u10da\u10d4\u10d1\u10d8 \u10d3\u10d0 \u10dd\u10ea\u10dc\u10d4\u10d1\u10d4\u10d1\u10d8, \u10e0\u10dd\u10db\u10da\u10d8\u10e1 \u10d0\u10e1\u10e0\u10e3\u10da\u10d4\u10d1\u10d0\u10e1 \u10dc\u10d4\u10d1\u10d8\u10e1\u10db\u10d8\u10d4\u10e0\u10d8 \u10e9\u10d5\u10d4\u10dc\u10d2\u10d0\u10dc\u10d8 \u10db\u10d8\u10d6\u10dc\u10d0\u10d7 \u10d8\u10e1\u10d0\u10ee\u10d0\u10d5\u10e1. \u10e9\u10d5\u10d4\u10dc \u10e8\u10d4\u10d5\u10d4\u10ea\u10d0\u10d3\u10d4\u10d7 \u10d3\u10d0\u10d5\u10ee\u10db\u10d0\u10e0\u10d4\u10d1\u10dd\u10d3\u10d8\u10d7 \u10e7\u10d5\u10d4\u10da\u10d0\u10e1 \u10d5\u10d8\u10dc\u10ea \u10d7\u10d0\u10d5\u10d8\u10e1\u10d8 \u10dd\u10ea\u10dc\u10d4\u10d1\u10d8\u10e1 \u10d0\u10e1\u10e0\u10e3\u10da\u10d4\u10d1\u10d8\u10e1\u10d0\u10d9\u10d4\u10dc \u10db\u10d8\u10d8\u10e1\u10ec\u10e0\u10d0\u10e4\u10d5\u10d8\u10e1 \u10d3\u10d0 \u10e8\u10d4\u10d5\u10e5\u10db\u10d4\u10dc\u10d8\u10d7 \u10d2\u10d0\u10e0\u10d4\u10db\u10dd \u10e0\u10dd\u10db\u10d4\u10da\u10d8\u10ea \u10e7\u10d5\u10d4\u10da\u10d0 \u10db\u10d8\u10d6\u10d0\u10dc\u10d3\u10d0\u10e1\u10d0\u10ee\u10e3\u10da\u10e1 \u10db\u10d8\u10ea\u10d4\u10db\u10e1 \u10e1\u10d0\u10e8\u10e3\u10d0\u10da\u10d4\u10d1\u10d0\u10e1 \u10d7\u10d0\u10d5\u10d8\u10e1\u10d8 \u10e7\u10d5\u10d4\u10da\u10d0\u10d6\u10d4 \u10e1\u10d0\u10dc\u10e3\u10d9\u10d5\u10d0\u10e0\u10d8 \u10dd\u10ea\u10dc\u10d4\u10d1\u10d0 \u10e0\u10d4\u10d0\u10da\u10dd\u10d1\u10d0\u10d3 \u10d0\u10e5\u10ea\u10d8\u10dd\u10e1.\n \u10d0\u10e1\u10d4\u10d5\u10d4 \u10e1\u10d0\u10e8\u10e3\u10d0\u10da\u10d4\u10d1\u10d0 \u10d4\u10eb\u10da\u10d4\u10d5\u10d0\u10d7 \u10e7\u10d5\u10d4\u10da\u10d0 \u10e5\u10d5\u10d4\u10da\u10db\u10dd\u10e5\u10db\u10d4\u10d3\u10e1 \u10d3\u10d0\u10d4\u10ee\u10db\u10d0\u10e0\u10dd\u10dc \u10ee\u10d0\u10da\u10ee\u10e1 \u10dd\u10ea\u10dc\u10d4\u10d1\u10d4\u10d1\u10d8\u10e1 \u10d0\u10e1\u10e0\u10e3\u10da\u10d4\u10d1\u10d0\u10e8\u10d8, \u10e0\u10d0\u10d3\u10d2\u10d0\u10dc\u10d0\u10ea \u10d4\u10e0\u10d7\u10d8\u10e1\u10d7\u10d5\u10d8\u10e1 \u10dd\u10ea\u10dc\u10d4\u10d1\u10d0 \u10e8\u10d4\u10e1\u10d0\u10eb\u10da\u10dd\u10d0 \u10db\u10d4\u10dd\u10e0\u10d4\u10e1\u10d0\u10d7\u10d5\u10d8\u10e1 \u10e7\u10dd\u10d5\u10d4\u10da\u10d3\u10e6\u10d8\u10e3\u10e0\u10dd\u10d1\u10d8\u10e1 \u10dc\u10d0\u10ec\u10d8\u10da\u10d8 \u10d8\u10e7\u10dd\u10e1.\n\nDreamNet \u10d8\u10e1 \u10d2\u10d0\u10e0\u10d4\u10db\u10dd \u10d0\u10eb\u10da\u10d4\u10d5\u10e1 \u10e7\u10d5\u10d4\u10da\u10d0\u10e1 \u10e1\u10d0\u10e8\u10e3\u10d0\u10da\u10d4\u10d1\u10d0\u10e1 \u10d2\u10d0\u10d0\u10d6\u10d8\u10d0\u10e0\u10dd\u10e1 \u10d7\u10d0\u10d5\u10d8\u10e1\u10d8 \u10dd\u10ea\u10dc\u10d4\u10d1\u10d0 \u10d7\u10e3 \u10e1\u10e3\u10e0\u10d5\u10d8\u10da\u10d8 \u10d3\u10d0 \u10d7\u10e5\u10d5\u10d0\u10e1 \u10e0\u10d0 \u10d0\u10db\u10dd\u10eb\u10e0\u10d0\u10d5\u10d4\u10d1\u10e1 \u10db\u10d0\u10e1 \u10d0\u10db \u10db\u10d8\u10d6\u10dc\u10d8\u10e1\u10d0\u10d9\u10d4\u10dc. \u10dc\u10d4\u10d1\u10d8\u10e1\u10db\u10d8\u10d4\u10e0 \u10dd\u10ea\u10dc\u10d4\u10d1\u10d0\u10e1\u10d0 \u10d7\u10e3 \u10e1\u10e3\u10e0\u10d5\u10d8\u10da\u10e1 \u10e8\u10d4\u10e1\u10d0\u10eb\u10da\u10dd\u10d0 \u10d2\u10d0\u10db\u10dd\u10e3\u10e9\u10dc\u10d3\u10d4\u10e1 \u10d1\u10d4\u10d5\u10e0\u10d8 \u10db\u10ee\u10d0\u10e0\u10d3\u10d0\u10db\u10ed\u10d4\u10e0\u10d8, \u10e0\u10dd\u10db\u10d4\u10da\u10d8\u10ea \u10db\u10d0\u10e1 \u10d3\u10d0\u10d4\u10ee\u10db\u10d0\u10e0\u10d4\u10d1\u10d0 \u10db\u10d8\u10e1\u10d8 \u10dd\u10ea\u10dc\u10d4\u10d1\u10d0 \u10e0\u10d4\u10d0\u10da\u10dd\u10d1\u10d0\u10d3 \u10d0\u10e5\u10ea\u10d8\u10dd\u10e1. \u10dc\u10d4\u10d1\u10d8\u10e1\u10db\u10d8\u10d4\u10e0\u10e1 \u10e8\u10d4\u10d4\u10eb\u10da\u10d4\u10d1\u10d0 \u10e0\u10dd\u10db\u10d4\u10da\u10d8\u10db\u10d4 \u10d0\u10d3\u10d0\u10db\u10d8\u10d0\u10dc\u10d8\u10e1 \u10dd\u10ea\u10dc\u10d4\u10d1\u10d0 \u10e0\u10d4\u10d0\u10da\u10dd\u10d1\u10d0\u10d3 \u10d0\u10e5\u10ea\u10d8\u10dd\u10e1 \u10e0\u10d8\u10e1 \u10d2\u10d0\u10db\u10dd\u10ea \u10d8\u10e1 \u10d3\u10d8\u10d3 \u10de\u10d0\u10e2\u10d8\u10d5\u10d8\u10e1\u10ea\u10d4\u10db\u10d0\u10e1\u10d0 \u10d3\u10d0 \u10db\u10d0\u10d3\u10da\u10dd\u10d1\u10d0\u10e1 \u10d3\u10d0\u10d8\u10db\u10e1\u10d0\u10ee\u10e3\u10e0\u10d4\u10d1\u10e1 \u10e7\u10d5\u10d4\u10da\u10d0\u10e1\u10d0\u10d2\u10d0\u10dc \u10d3\u10d0 \u10d4\u10e1 \u10e7\u10d5\u10d4\u10da\u10d0\u10e4\u10d4\u10e0\u10d8 DreamNet \u10d6\u10d4\u10ea \u10d0\u10d8\u10e1\u10d0\u10ee\u10d4\u10d1\u10d0. \u10d0\u10e1\u10d4\u10d5\u10d4 \u10e1\u10d0\u10e8\u10e3\u10d0\u10da\u10d4\u10d1\u10d0 \u10d4\u10eb\u10da\u10d4\u10d5\u10d0\u10d7 \u10d9\u10dd\u10db\u10de\u10d0\u10dc\u10d8\u10d4\u10d1\u10e1 \u10d2\u10d0\u10db\u10dd\u10d0\u10d5\u10da\u10d8\u10dc\u10dd\u10dc \u10e1\u10d0\u10d9\u10e3\u10d7\u10d0\u10e0\u10d8 \u10e5\u10d5\u10d4\u10da\u10db\u10dd\u10e5\u10db\u10d4\u10d3\u10d4\u10d1\u10d8\u10e1 \u10e1\u10e3\u10e0\u10d5\u10d8\u10da\u10d8.\nDreamNet \u10d8 \u10e8\u10d4\u10d5\u10e5\u10db\u10d4\u10dc\u10d8\u10d7 \u10d5\u10d4\u10d1 \u10e2\u10d4\u10e5\u10dc\u10dd\u10da\u10dd\u10d2\u10d8\u10d4\u10d1\u10d6\u10d4 \u10d3\u10d0\u10e4\u10e3\u10eb\u10dc\u10d4\u10d1\u10d8\u10d7 \u10d3\u10d0 \u10d2\u10d0\u10db\u10dd\u10d5\u10d8\u10e7\u10d4\u10dc\u10d4\u10d7 \u10e8\u10d4\u10db\u10d3\u10d4\u10d2\u10d8 \u10e2\u10d4\u10e5\u10dc\u10dd\u10da\u10dd\u10d2\u10d8\u10d4\u10d1\u10d8: JavaScript, PHP, HTML, CSS, BootStrap, MySQL \u10d3\u10d0 Ajax \u10d8.\n\u10e1\u10d8\u10e0\u10d7\u10e3\u10da\u10d4 \u10e0\u10dd\u10db\u10d4\u10da\u10e1\u10d0\u10ea \u10e9\u10d5\u10d4\u10dc \u10ec\u10d0\u10d5\u10d0\u10ec\u10e7\u10d3\u10d8\u10d7 \u10d8\u10e7\u10dd \u10e1\u10d0\u10db\u10dd\u10db\u10ee\u10db\u10d0\u10e0\u10d4\u10d1\u10da\u10dd \u10d8\u10dc\u10e2\u10d4\u10e0\u10e4\u10d4\u10d8\u10e1\u10d8\u10e1 \u10e1\u10d8\u10db\u10d0\u10e0\u10e2\u10d8\u10d5\u10d4. \u10e0\u10d0\u10d3\u10d2\u10d0\u10dc\u10d0\u10ea \u10e9\u10d5\u10d4\u10dc DreamNet \u10d8 \u10d2\u10d0\u10d7\u10d5\u10da\u10d8\u10da\u10d8 \u10d2\u10d5\u10d0\u10e5\u10d5\u10e1 \u10e7\u10d5\u10d4\u10da\u10d0\u10e1\u10d0\u10d7\u10d5\u10d8\u10e1, \u10e1\u10d0\u10ed\u10d8\u10e0\u10dd \u10d8\u10e7\u10dd \u10d8\u10dc\u10e2\u10d4\u10e0\u10e4\u10d4\u10d8\u10e1\u10d8, \u10e0\u10dd\u10db\u10d4\u10da\u10e8\u10d8\u10ea \u10db\u10d0\u10e0\u10e2\u10d8\u10d5\u10d0\u10d3 \u10d2\u10d0\u10d4\u10e0\u10d9\u10d5\u10d4\u10dd\u10d3\u10d0 \u10e7\u10d5\u10d4\u10da\u10d0. \u10d0\u10db\u10df\u10d0\u10db\u10d0\u10d3 DreamNet \u10d8 \u10e0\u10d4\u10d9\u10dd\u10dc\u10e1\u10e2\u10e0\u10e3\u10e5\u10ea\u10d8\u10d8\u10e1 \u10e5\u10d5\u10d4\u10e8\u10d0\u10d0 \u10d3\u10d0 \u10d5\u10d2\u10d4\u10d2\u10db\u10d0\u10d5\u10d7 \u10db\u10dc\u10d8\u10e8\u10d5\u10dc\u10d4\u10da\u10dd\u10d5\u10d0\u10dc \u10ea\u10d5\u10da\u10d8\u10da\u10d4\u10d1\u10d4\u10d1\u10e1.\n\u10e9\u10d5\u10d4\u10dc \u10d5\u10d0\u10db\u10d0\u10e7\u10dd\u10d1\u10d7 \u10d8\u10db\u10d8\u10d7 \u10e0\u10dd\u10db \u10e1\u10d0\u10d9\u10db\u10d0\u10dd\u10d3 \u10db\u10ea\u10d8\u10e0\u10d4 \u10d3\u10e0\u10dd\u10e8\u10d8 \u10d3\u10d0 \u10d2\u10d0\u10e0\u10d9\u10d5\u10d4\u10e3\u10da\u10d8 \u10de\u10e0\u10dd\u10d1\u10da\u10d4\u10db\u10d4\u10d1\u10d8\u10e1 \u10d2\u10d0\u10d7\u10d5\u10d0\u10da\u10d8\u10e1\u10ec\u10d8\u10dc\u10d4\u10d1\u10d8\u10d7 \u10e9\u10d5\u10d4\u10dc \u10db\u10d0\u10d8\u10dc\u10ea \u10e8\u10d4\u10d5\u10eb\u10d4\u10da\u10d8\u10d7 \u10d0\u10db \u10d8\u10d3\u10d4\u10d8\u10e1 \u10d2\u10d0\u10ee\u10dd\u10e0\u10ea\u10d8\u10d4\u10da\u10d4\u10d1\u10d0.\n\u10e9\u10d5\u10d4\u10dc \u10db\u10d8\u10d5\u10d8\u10e6\u10d4\u10d7 \u10d2\u10d0\u10db\u10dd\u10ea\u10d3\u10d8\u10da\u10d4\u10d1\u10d0 \u10d2\u10e3\u10dc\u10d3\u10e3\u10e0 \u10db\u10e3\u10e8\u10d0\u10dd\u10d1\u10d0\u10e8\u10d8, \u10db\u10ea\u10d8\u10e0\u10d4 \u10d3\u10e0\u10dd\u10e8\u10d8 \u10de\u10e0\u10dd\u10d1\u10da\u10d4\u10db\u10d4\u10d1\u10d8\u10e1 \u10d0\u10e6\u10db\u10dd\u10e4\u10ee\u10d5\u10e0\u10d0\u10e1\u10d0 \u10d3\u10d0 \u10db\u10dd\u10d2\u10d5\u10d0\u10e0\u10d4\u10d1\u10d0\u10e8\u10d8. \u10d0\u10e1\u10d4\u10d5\u10d4 \u10db\u10d8\u10d5\u10d8\u10e6\u10d4\u10d7 \u10d2\u10d0\u10db\u10dd\u10ea\u10d3\u10d8\u10da\u10d4\u10d1\u10d0 \u10e1\u10ee\u10d5\u10d0\u10d3\u10d0\u10e1\u10ee\u10d5\u10d0 \u10e2\u10d4\u10e5\u10dc\u10dd\u10da\u10dd\u10d2\u10d8\u10d4\u10d1\u10d8\u10e1 \u10d4\u10e0\u10d7\u10db\u10d0\u10dc\u10d4\u10d7\u10d7\u10d0\u10dc \u10d2\u10d0\u10d4\u10e0\u10d7\u10d8\u10d0\u10dc\u10d4\u10d1\u10d0\u10e8\u10d8.\n\u10e9\u10d5\u10d4\u10dc \u10d2\u10d5\u10ef\u10d4\u10e0\u10d0 \u10e0\u10dd\u10db DreamNet \u10d8 \u10d3\u10d8\u10d3\u10d8 \u10de\u10e0\u10dd\u10d4\u10e5\u10e2\u10d8\u10e1 \u10d3\u10d0\u10e1\u10d0\u10ec\u10e7\u10d8\u10e1\u10d8\u10d0 \u10d3\u10d0 \u10d0\u10db\u10df\u10d0\u10db\u10d0\u10d3 \u10e1\u10e0\u10e3\u10da\u10d8 \u10d8\u10d3\u10d4\u10d8\u10e1 \u10db\u10ee\u10dd\u10da\u10dd\u10d3 10% \u10d8\u10d0 \u10d2\u10d0\u10dc\u10ee\u10dd\u10e0\u10ea\u10d8\u10d4\u10da\u10d4\u10d1\u10e3\u10da\u10d8. \u10d5\u10d2\u10d4\u10d2\u10db\u10d0\u10d5\u10d7 DreamNet \u10d8\u10e1 \u10e1\u10e0\u10e3\u10da \u10e0\u10d4\u10dd\u10e0\u10d2\u10d0\u10dc\u10d8\u10d6\u10d0\u10ea\u10d8\u10d0\u10e1 \u10d3\u10d0 \u10d2\u10d0\u10e4\u10d0\u10e0\u10d7\u10dd\u10d4\u10d1\u10d0\u10e1. \u10d2\u10d0\u10e0\u10d3\u10d0 \u10d3\u10d8\u10d3\u10d8 \u10dd\u10ea\u10dc\u10d4\u10d1\u10d8\u10e1\u10d0 \u10e0\u10dd\u10db\u10d4\u10da\u10d8\u10ea \u10d0\u10d3\u10d0\u10db\u10d8\u10d0\u10dc\u10e1 \u10ea\u10ee\u10dd\u10d5\u10e0\u10d4\u10d1\u10d0\u10e8\u10d8 \u10e8\u10d4\u10e1\u10d0\u10eb\u10da\u10dd\u10d0 \u10db\u10ee\u10dd\u10da\u10dd\u10d3 \u10d4\u10e0\u10d7\u10d8 \u10d2\u10d0\u10d0\u10e9\u10dc\u10d3\u10d4\u10e1 \u10d0\u10e1\u10d4\u10d5\u10d4 \u10d0\u10e0\u10e1\u10d4\u10d1\u10dd\u10d1\u10e1 \u10db\u10ea\u10d8\u10e0\u10d4\u10d3\u10d8 \u10e1\u10e3\u10e0\u10d5\u10d8\u10da\u10d4\u10d1\u10d8\u10ea. \u10d0\u10db\u10d8\u10e2\u10dd\u10db \u10d5\u10d2\u10d4\u10d2\u10db\u10d0\u10d5\u10d7 \u10d3\u10d0\u10d5\u10d0\u10db\u10d0\u10e2\u10dd\u10d7 DreamNet  \u10e1 \u10ea\u10d0\u10da\u10d9\u10d4 \u10d2\u10d0\u10dc\u10e7\u10dd\u10e4\u10d8\u10da\u10d4\u10d1\u10d4\u10d1\u10d8\u10ea, \u10e1\u10d0\u10d3\u10d0\u10ea \u10e1\u10ee\u10d5\u10d0\u10d3\u10d0\u10e1\u10ee\u10d5\u10d0 \u10de\u10e0\u10dd\u10e4\u10d4\u10e1\u10d8\u10d8\u10e1 \u10ee\u10d0\u10da\u10ee\u10e1 (\u10de\u10e0\u10dd\u10d2\u10e0\u10d0\u10db\u10d8\u10e1\u10e2\u10d4\u10d1\u10e1, \u10d4\u10e5\u10d8\u10db\u10d4\u10d1\u10e1, \u10d3\u10d8\u10d6\u10d0\u10d8\u10dc\u10d4\u10e0\u10d4\u10d1\u10e1, \u10d4\u10d9\u10dd\u10dc\u10dd\u10db\u10d8\u10e1\u10e2\u10d4\u10d1\u10e1 \u10d3\u10d0 \u10d0.\u10e8) \u10db\u10d8\u10d8\u10e6\u10dd\u10dc \u10d3\u10d0 \u10d2\u10d0\u10ea\u10d4\u10dc \u10d3\u10d0\u10ee\u10db\u10d0\u10e0\u10d4\u10d1\u10d0. \u10db\u10d0\u10d2\u10d0\u10da\u10d8\u10d7\u10d0\u10d3 \u10de\u10e0\u10dd\u10d2\u10e0\u10d0\u10db\u10d8\u10e1\u10e2\u10d4\u10d1\u10e1 \u10e8\u10d4\u10d4\u10eb\u10da\u10d4\u10d1\u10d0\u10d7 \u10d2\u10d0\u10e3\u10ea\u10d5\u10d0\u10da\u10dd\u10dc \u10d4\u10e0\u10d7\u10db\u10d0\u10dc\u10d4\u10d7\u10e1 \u10e1\u10ee\u10d5\u10d0\u10d3\u10d0\u10e1\u10ee\u10d5\u10d0 \u10d9\u10dd\u10d3\u10d4\u10d1\u10d8 \u10d0\u10dc \u10d3\u10d0\u10d4\u10ee\u10db\u10d0\u10e0\u10dd\u10dc \u10d3\u10d0\u10db\u10ec\u10e7\u10d4\u10d1\u10d4\u10d1\u10e1 \u10e0\u10d0\u10d8\u10db\u10d4 \u10de\u10e0\u10dd\u10d1\u10da\u10d4\u10db\u10d8\u10e1 \u10d2\u10d0\u10d3\u10d0\u10ed\u10e0\u10d0\u10e8\u10d8, \u10d4\u10e5\u10d8\u10db\u10d4\u10d1\u10e1 \u10e8\u10d4\u10d4\u10eb\u10da\u10d4\u10d1\u10d0\u10d7 \u10d2\u10d0\u10e3\u10ea\u10d5\u10d0\u10da\u10dd\u10dc \u10d4\u10e0\u10d7\u10db\u10d0\u10dc\u10d4\u10d7\u10e1 \u10eb\u10d5\u10d8\u10e0\u10d0\u10d3\u10e6\u10d8\u10e0\u10d4\u10d1\u10e3\u10da\u10d8 \u10e1\u10d0\u10db\u10d4\u10d3\u10d8\u10ea\u10d8\u10dc\u10dd \u10ec\u10d8\u10d2\u10dc\u10d4\u10d1\u10d8 \u10d3\u10d0 \u10d0.\u10e8.\n",
        "hackathon_id": "hacktbilisi2015",
        "winner": false
    },
    {
        "description": "\nInspiration\n\u10d0\u10da\u10d1\u10d0\u10d7 \u10d1\u10d4\u10d5\u10e0\u10e1 \u10e5\u10dd\u10dc\u10d8\u10d0 \u10e1\u10e3\u10e0\u10d5\u10d8\u10da\u10d8 \u10db\u10d4\u10d2\u10dd\u10d1\u10d0\u10e0\u10d7\u10d0\u10dc \u10d4\u10e0\u10d7\u10d0\u10d3 \u10e1\u10d0\u10e7\u10d5\u10d0\u10e0\u10d4\u10da\u10d8 \u10e4\u10d8\u10da\u10db\u10d8\u10e1\u10d7\u10d5\u10d8\u10e1 \u10d4\u10e7\u10e3\u10e0\u10d4\u10d1\u10d8\u10dc\u10d0, \u10db\u10d0\u10d2\u10e0\u10d0\u10db \u10d8\u10db\u10d8\u10e1 \u10d2\u10d0\u10db\u10dd \u10e0\u10dd\u10db \u10e4\u10d8\u10d6\u10d8\u10d9\u10e3\u10e0\u10d0\u10d3 \u10d8\u10e1\u10d8\u10dc\u10d8 \u10e1\u10ee\u10d5\u10d0\u10d3\u10d0\u10e1\u10ee\u10d5\u10d0 \u10d0\u10d3\u10d2\u10d8\u10da\u10d0\u10e1 \u10d8\u10e7\u10d5\u10dc\u10d4\u10dc, \u10d4\u10e1 \u10de\u10e0\u10dd\u10ea\u10d4\u10e1\u10d8 \u10d2\u10d0\u10e3\u10db\u10d0\u10e0\u10d7\u10d0\u10d5\u10d8, \u10d0\u10e0\u10d0\u10e1\u10d0\u10e1\u10d8\u10d0\u10db\u10dd\u10d5\u10dc\u10dd \u10d3\u10d0 \u10d7\u10d8\u10d7\u10e5\u10db\u10d8\u10e1 \u10e8\u10d4\u10e3\u10eb\u10da\u10d4\u10d1\u10d4\u10da\u10d8 \u10d8\u10e7\u10dd. \u10d2\u10d0\u10d3\u10d0\u10d5\u10ec\u10e7\u10d5\u10d8\u10e2\u10d4\u10d7 \u10e8\u10d4\u10d2\u10d5\u10d4\u10e5\u10db\u10dc\u10d0 \u10d5\u10d4\u10d1-\u10d2\u10d5\u10d4\u10e0\u10d3\u10d8, \u10e1\u10d0\u10d3\u10d0\u10ea \u10d0\u10d3\u10d0\u10db\u10d8\u10d0\u10dc\u10d4\u10d1\u10d8 \u10e8\u10d4\u10eb\u10da\u10d4\u10d1\u10d3\u10dc\u10d4\u10dc \u10d4\u10e0\u10d7\u10d0\u10d3 \u10d4\u10e7\u10e3\u10e0\u10d4\u10d1\u10d8\u10dc\u10d0\u10d7 \u10db\u10d0\u10d7\u10d8 \u10e1\u10d0\u10e7\u10d5\u10d0\u10e0\u10d4\u10da\u10d8 \u10e4\u10d8\u10da\u10db\u10d4\u10d1\u10d8\u10e1\u10d7\u10d5\u10d8\u10e1, \u10db\u10d8\u10e3\u10ee\u10d4\u10d3\u10d0\u10d5\u10d0\u10d3 \u10d8\u10db\u10d8\u10e1\u10d0 \u10d7\u10e3 \u10e1\u10d0\u10d3 \u10d8\u10e5\u10dc\u10d4\u10d1\u10dd\u10d3\u10dc\u10d4\u10dc \u10d8\u10e1\u10d8\u10dc\u10d8.\nWhat it does\n\u10d5\u10d4\u10d1-\u10d2\u10d5\u10d4\u10e0\u10d3\u10d6\u10d4 \u10d0\u10e0\u10d8\u10e1 \"public\" \u10d3\u10d0 \"private\" \u10dd\u10d7\u10d0\u10ee\u10d4\u10d1\u10d8, \u10e1\u10d0\u10d3\u10d0\u10ea \u10db\u10dd\u10db\u10ee\u10db\u10d0\u10e0\u10d4\u10d1\u10da\u10d4\u10d1\u10d8 \u10e8\u10d4\u10eb\u10da\u10d4\u10d1\u10d4\u10dc \u10e1\u10ee\u10d5\u10d0\u10d3\u10d0\u10e1\u10ee\u10d5\u10d0 \u10e4\u10d8\u10da\u10db\u10d8\u10e1, \u10e1\u10d4\u10e0\u10d8\u10d0\u10da\u10d8\u10e1, \u10d0\u10dc\u10d8\u10db\u10d4\u10e1 \u10d3\u10d0 \u10d0.\u10e8. \u10e7\u10e3\u10e0\u10d4\u10d1\u10d0\u10e1. \nPrivate \u10dd\u10d7\u10d0\u10ee\u10d4\u10d1\u10e1 \u10d0\u10e5\u10d5\u10d7 \u10e3\u10dc\u10d8\u10d9\u10d0\u10da\u10e3\u10e0\u10d8 \u10d9\u10dd\u10d3\u10d8, \u10e0\u10dd\u10db\u10da\u10d8\u10e1 \u10db\u10d4\u10e8\u10d5\u10d4\u10dd\u10d1\u10d8\u10d7\u10d0\u10ea \u10e7\u10d5\u10d4\u10da\u10d0\u10e1 \u10e8\u10d4\u10e3\u10eb\u10da\u10d8\u10d0 \u10db\u10d8\u10e1\u10d8 \u10db\u10d4\u10d2\u10dd\u10d1\u10d0\u10e0\u10d8 \u10db\u10dd\u10d8\u10ec\u10d5\u10d8\u10dd\u10e1 \u10d0\u10db \u10dd\u10d7\u10d0\u10ee\u10e8\u10d8. \u10d4\u10e1 \u10d8\u10e5\u10dc\u10d4\u10d1\u10d0 \u10d2\u10d0\u10e0\u10d7\u10dd\u10d1\u10d8\u10e1 \u10d4\u10e0\u10d7-\u10d4\u10e0\u10d7\u10d8 \u10d0\u10ee\u10d0\u10da\u10d8 \u10e1\u10d0\u10e8\u10e3\u10d0\u10da\u10d4\u10d1\u10d0, \u10e1\u10d0\u10d3\u10d0\u10ea \u10db\u10d4\u10d2\u10dd\u10d1\u10e0\u10d4\u10d1\u10d8 \u10d0\u10d6\u10e0\u10d4\u10d1\u10e1 \u10d3\u10d0 \u10e8\u10d7\u10d0\u10d1\u10d4\u10ed\u10d3\u10d8\u10da\u10d4\u10d1\u10d4\u10d1\u10e1 \u10d4\u10e0\u10d7\u10db\u10d0\u10dc\u10d4\u10d7\u10e1 \u10d2\u10d0\u10e3\u10d6\u10d8\u10d0\u10e0\u10d4\u10d1\u10d4\u10dc \u10d3\u10d0 \u10d9\u10d8\u10d3\u10d4\u10d5 \u10e3\u10e4\u10e0\u10dd \u10d9\u10d0\u10e0\u10d2\u10d0\u10d3 \u10d2\u10d0\u10d8\u10ea\u10dc\u10dd\u10d1\u10d4\u10dc \u10d4\u10e0\u10d7\u10db\u10d0\u10dc\u10d4\u10d7\u10e1.\nPublic \u10dd\u10d7\u10d0\u10ee\u10d4\u10d1\u10e1 \u10d0\u10e0 \u10e1\u10ed\u10d8\u10e0\u10d3\u10d4\u10d1\u10d0\u10d7 \u10d2\u10d0\u10e1\u10d0\u10ee\u10e1\u10dc\u10d4\u10da\u10d8 \u10d9\u10dd\u10d3\u10d8 \u10d3\u10d0 \u10dc\u10d4\u10d1\u10d8\u10e1\u10db\u10d8\u10d4\u10e0\u10e1 \u10e8\u10d4\u10e3\u10eb\u10da\u10d8\u10d0 \u10db\u10d0\u10d7\u10e8\u10d8 \u10e8\u10d4\u10e1\u10d5\u10da\u10d0. \u10d4\u10e1 \u10ee\u10d4\u10da\u10e1 \u10e3\u10ec\u10e7\u10dd\u10d1\u10e1 \u10e3\u10ea\u10dc\u10dd\u10d1\u10d8 \u10d0\u10d3\u10d0\u10db\u10d8\u10d0\u10dc\u10d4\u10d1\u10d8\u10e1 \u10d4\u10e0\u10d7\u10db\u10d0\u10dc\u10d4\u10d7\u10d7\u10d0\u10dc \u10d3\u10d0\u10d0\u10ee\u10da\u10dd\u10d4\u10d1\u10d0\u10e1 \u10e1\u10d0\u10d4\u10e0\u10d7\u10dd \u10d8\u10dc\u10e2\u10d4\u10e0\u10d4\u10e1\u10d4\u10d1\u10d8\u10e1 \u10e8\u10d4\u10e1\u10d0\u10d1\u10d0\u10db\u10d8\u10e1\u10d0\u10d3.\n\u10e0\u10dd\u10ea\u10d0 \u10db\u10dd\u10db\u10ee\u10db\u10d0\u10e0\u10d4\u10d1\u10da\u10d4\u10d1\u10d8 \u10d4\u10e0\u10d7\u10d8 \u10d3\u10d0 \u10d8\u10d2\u10d8\u10d5\u10d4 \u10dd\u10d7\u10d0\u10ee\u10e8\u10d8 \u10e1\u10ee\u10d5\u10d0\u10d3\u10d0\u10e1\u10ee\u10d5\u10d0 \u10d0\u10d3\u10d2\u10d8\u10da\u10d8\u10d3\u10d0\u10dc \u10e8\u10d4\u10d3\u10d8\u10d0\u10dc, \u10d5\u10d8\u10d3\u10d4\u10dd\u10e1 \u10de\u10e0\u10dd\u10d2\u10e0\u10d4\u10e1\u10d8 (\u10d3\u10e0\u10dd) \u10db\u10d0\u10d8\u10dc\u10ea \u10e7\u10d5\u10d4\u10da\u10d0\u10e1\u10d7\u10d5\u10d8\u10e1 \u10e3\u10ea\u10d5\u10da\u10d4\u10da\u10d8 \u10e0\u10e9\u10d4\u10d1\u10d0. \u10d0\u10db\u10d8\u10e2\u10dd\u10db, \u10e7\u10d5\u10d4\u10da\u10d0\u10e1 \u10e8\u10d4\u10e3\u10eb\u10da\u10d8\u10d0 \u10d3\u10d0\u10e0\u10ec\u10db\u10e3\u10dc\u10d4\u10d1\u10e3\u10da\u10d8 \u10d8\u10e7\u10dd\u10e1, \u10e0\u10dd\u10db \u10e0\u10d0\u10e1\u10d0\u10ea \u10d7\u10d5\u10d8\u10d7\u10dd\u10dc \u10ee\u10d4\u10d3\u10d0\u10d5\u10e1, \u10d6\u10e3\u10e1\u10e2\u10d0\u10d3 \u10d8\u10db\u10d0\u10d5\u10d4\u10e1 \u10ee\u10d4\u10d3\u10d0\u10d5\u10e1 \u10e7\u10d5\u10d4\u10da\u10d0 \u10e1\u10ee\u10d5\u10d0. \n\u10e4\u10d8\u10da\u10db\u10d8\u10e1 \u10e7\u10e3\u10e0\u10d4\u10d1\u10d8\u10e1 \u10d3\u10e0\u10dd\u10e1 \u10db\u10dd\u10db\u10ee\u10db\u10d0\u10e0\u10d4\u10d1\u10da\u10d4\u10d1\u10e1 \u10d0\u10e5\u10d5\u10d7 \u10e8\u10d4\u10e1\u10d0\u10eb\u10da\u10d4\u10d1\u10da\u10dd\u10d1\u10d0 \u10db\u10d8\u10ec\u10d4\u10e0\u10dd\u10dc \u10d4\u10e0\u10d7\u10db\u10d0\u10dc\u10d4\u10d7\u10e1 \u10e1\u10d0\u10d8\u10e2\u10d6\u10d4 \u10e9\u10d0\u10e8\u10d4\u10dc\u10d4\u10d1\u10e3\u10da\u10d8 \u10e9\u10d0\u10e2\u10d8\u10e1 \u10db\u10d4\u10e8\u10d5\u10d4\u10dd\u10d1\u10d8\u10d7. \u10d4\u10e1 \u10ee\u10e1\u10dc\u10d8\u10e1 \u10d1\u10d4\u10d5\u10e0 \u10d0\u10ee\u10d0\u10da \u10e8\u10d4\u10e1\u10d0\u10eb\u10da\u10d4\u10d1\u10da\u10dd\u10d1\u10d0\u10e1 - \u10d1\u10d4\u10d5\u10e0\u10d0\u10d3 \u10db\u10d0\u10e0\u10e2\u10d8\u10d5\u10d8 \u10ee\u10d3\u10d4\u10d1\u10d0 \u10e4\u10d8\u10da\u10db\u10d8\u10e1 \u10d2\u10d0\u10dc\u10ee\u10d8\u10da\u10d5\u10d0, \u10e8\u10d7\u10d0\u10d1\u10d4\u10ed\u10d3\u10d8\u10da\u10d4\u10d1\u10d4\u10d1\u10d8\u10e1 \u10d2\u10d0\u10d6\u10d8\u10d0\u10e0\u10d4\u10d1\u10d0, \u10d0\u10d3\u10d0\u10db\u10d8\u10d0\u10dc\u10d4\u10d1\u10d8\u10e1 \u10d2\u10d0\u10ea\u10dc\u10dd\u10d1\u10d0 \u10d3\u10d0 \u10d0.\u10e8.\nHow we built it\n\u10d0\u10db\u10ef\u10d4\u10e0\u10d0\u10d3 \u10d5\u10d8\u10d3\u10d4\u10dd\u10e1 \u10e1\u10d8\u10dc\u10e5\u10e0\u10dd\u10dc\u10d8\u10d6\u10d8\u10e0\u10d4\u10d1\u10d0 \u10d3\u10d0 \u10e9\u10d0\u10e2\u10d8 \u10d8\u10db\u10d0\u10e0\u10d7\u10d4\u10d1\u10d8\u10d0\u10dc \u10e1\u10d4\u10e0\u10d5\u10d4\u10e0\u10d8\u10d7, \u10e0\u10dd\u10db\u10d4\u10da\u10e1\u10d0\u10ea \u10e3\u10d9\u10d0\u10d5\u10e8\u10d8\u10e0\u10d3\u10d4\u10d1\u10d8\u10d0\u10dc \u10db\u10dd\u10db\u10ee\u10db\u10d0\u10e0\u10d4\u10d1\u10da\u10d4\u10d1\u10d8 \u10e0\u10dd\u10db\u10d4\u10da\u10d8\u10db\u10d4 room-\u10e8\u10d8 \u10e8\u10d4\u10e1\u10d5\u10da\u10d8\u10e1\u10d0\u10e1. \u10d0\u10db\u10ef\u10d4\u10e0\u10d0\u10d3, \u10d4\u10e0\u10d7\u10d8 \u10d9\u10da\u10d8\u10d4\u10dc\u10e2\u10d8\u10e1 \u10db\u10d8\u10d4\u10e0 \u10d2\u10d0\u10d2\u10d6\u10d0\u10d5\u10dc\u10d8\u10da\u10d8 \u10db\u10dd\u10d7\u10ee\u10dd\u10d5\u10dc\u10d0 \u10d4\u10d2\u10d6\u10d0\u10d5\u10dc\u10d4\u10d1\u10d0 \u10e1\u10d4\u10e0\u10d5\u10d4\u10e0\u10e1, \u10e1\u10d4\u10e0\u10d5\u10d4\u10e0\u10d8 \u10d9\u10d8 \u10d0\u10db \u10d8\u10dc\u10e4\u10dd\u10e0\u10db\u10d0\u10ea\u10d8\u10d0\u10e1 \u10e3\u10d2\u10d6\u10d0\u10d5\u10dc\u10d8\u10e1 \u10e7\u10d5\u10d4\u10da\u10d0 \u10db\u10d0\u10e1\u10d7\u10d0\u10dc \u10d3\u10d0\u10d9\u10d0\u10d5\u10e8\u10d8\u10e0\u10d4\u10d1\u10e3\u10da \u10d9\u10da\u10d8\u10d4\u10dc\u10e2\u10e1 \u10e0\u10d4\u10d0\u10da\u10e3\u10e0 \u10d3\u10e0\u10dd\u10e8\u10d8. \u10d4\u10e1 \u10dc\u10d8\u10e8\u10dc\u10d0\u10d5\u10e1 \u10d8\u10db\u10d0\u10e1, \u10e0\u10dd\u10db \u10d8\u10e5\u10dc\u10d4\u10d1\u10d0 \u10e1\u10d0\u10d9\u10db\u10d0\u10dd\u10d3 \u10e1\u10ec\u10e0\u10d0\u10e4\u10d8 \u10e9\u10d0\u10e2\u10d8 \u10d3\u10d0 \u10d5\u10d8\u10d3\u10d4\u10dd\u10e1 \u10d6\u10e3\u10e1\u10e2\u10d8 \u10e1\u10d8\u10dc\u10e5\u10e0\u10dd\u10dc\u10d8\u10d6\u10d8\u10e0\u10d4\u10d1\u10d0 \u10d9\u10da\u10d8\u10d4\u10dc\u10e2\u10d4\u10d1\u10e1 \u10e8\u10dd\u10e0\u10d8\u10e1.\n\u10db\u10dd\u10db\u10d0\u10d5\u10d0\u10da\u10e8\u10d8 \u10e0\u10d0\u10d7\u10e5\u10db\u10d0\u10e3\u10dc\u10d3\u10d0 \u10e8\u10d4\u10e1\u10d0\u10eb\u10da\u10d4\u10d1\u10d4\u10da\u10d8\u10d0 \u10d0\u10db \u10de\u10e0\u10d8\u10dc\u10ea\u10d8\u10de\u10d8\u10e1 \u10e8\u10d4\u10ea\u10d5\u10da\u10d0 \u10d0\u10dc/\u10d3\u10d0 \u10dd\u10de\u10e2\u10d8\u10db\u10d8\u10d6\u10d8\u10e0\u10d4\u10d1\u10d0, \u10db\u10d0\u10d2\u10e0\u10d0\u10db \u10d0\u10db \u10d3\u10e0\u10dd\u10d8\u10e1\u10d7\u10d5\u10d8\u10e1 \u10d4\u10e1 \u10db\u10d4\u10d7\u10dd\u10d3\u10d8 \u10e1\u10e0\u10e3\u10da\u10d8\u10d0\u10d3 \u10d2\u10d0\u10db\u10d0\u10e0\u10d7\u10e3\u10da\u10d0\u10d3 \u10db\u10e3\u10e8\u10d0\u10dd\u10d1\u10e1.\nChallenges we ran into\n\u10ee\u10e8\u10d8\u10e0\u10d8 \u10d8\u10e7\u10dd bug-\u10d4\u10d1\u10d8, crash-\u10d4\u10d1\u10d8, error-\u10d4\u10d1\u10d8 (\u10d5\u10d8\u10e1\u10d7\u10d0\u10dc \u10d0\u10e0\u10d0), \u10db\u10d0\u10d2\u10e0\u10d0\u10db \u10db\u10d0\u10d8\u10dc\u10ea \u10db\u10dd\u10d5\u10d0\u10e1\u10ec\u10d0\u10e0\u10d8\u10d7 \u10d3\u10d0 \u10e9\u10d5\u10d4\u10dc \u10de\u10e0\u10dd\u10d4\u10e5\u10e2\u10e1 \u10d3\u10d4\u10db\u10dd\u10e1 \u10e1\u10d0\u10ee\u10d4 \u10db\u10d8\u10d5\u10d4\u10ea\u10d8\u10d7. \u10d0\u10db\u10d8\u10e1 \u10e8\u10d4\u10e1\u10d0\u10ee\u10d4\u10d1 \u10ef\u10d4\u10e0 \u10d9\u10d8\u10d3\u10d4\u10d5 \u10d1\u10d4\u10d5\u10e0\u10d8 \u10d8\u10d3\u10d4\u10d0 \u10db\u10dd\u10d2\u10d5\u10d3\u10d8\u10e1, \u10d1\u10d4\u10d5\u10e0\u10d8 \u10e0\u10d0\u10db\u10d4 \u10e8\u10d4\u10d8\u10eb\u10da\u10d4\u10d1\u10d0 \u10e3\u10d9\u10d4\u10d7\u10d4\u10e1\u10d0\u10d3 \u10d2\u10d0\u10d9\u10d4\u10d7\u10d3\u10d4\u10e1, \u10d1\u10d4\u10d5\u10e0\u10d8 \u10e4\u10e3\u10dc\u10e5\u10ea\u10d8\u10d0 \u10d3\u10d0\u10d4\u10db\u10d0\u10e2\u10dd\u10e1, \u10d1\u10d4\u10d5\u10e0\u10d8\u10ea \u10d3\u10d0\u10d8\u10ee\u10d5\u10d4\u10ec\u10dd\u10e1, \u10db\u10d0\u10d2\u10e0\u10d0\u10db \u10d0\u10db\u10d0\u10e1 \u10e0\u10d0\u10d7\u10e5\u10db\u10d0\u10e3\u10dc\u10d3\u10d0 \u10e1\u10d0\u10db\u10dd\u10db\u10d0\u10d5\u10da\u10dd\u10d3 \u10d2\u10d0\u10d5\u10d8\u10d7\u10d5\u10d0\u10da\u10d8\u10e1\u10ec\u10d8\u10dc\u10d4\u10d1\u10d7.\nAccomplishments that we're proud of\n\u10db\u10dd\u10db\u10ee\u10db\u10d0\u10e0\u10d4\u10d1\u10da\u10d4\u10d1\u10e1 \u10e3\u10d9\u10d5\u10d4 \u10e8\u10d4\u10e3\u10eb\u10da\u10d8\u10d0\u10d7 \u10e1\u10d0\u10d4\u10e0\u10d7\u10dd \u10dd\u10d7\u10d0\u10ee\u10e8\u10d8 \u10e8\u10d4\u10d5\u10d8\u10d3\u10dc\u10d4\u10dc \u10d3\u10d0 \u10d4\u10e0\u10d7\u10d3\u10e0\u10dd\u10e3\u10da\u10d0\u10d3 \u10e3\u10e7\u10e3\u10e0\u10dd\u10dc \u10db\u10d0\u10d7\u10d7\u10d5\u10d8\u10e1 \u10e1\u10d0\u10e7\u10d5\u10d0\u10e0\u10d4\u10da \u10e4\u10d8\u10da\u10db\u10d4\u10d1\u10e1. \u10e9\u10d0\u10e0\u10d7\u10dd\u10dc, \u10d3\u10d0\u10d0\u10de\u10d0\u10e3\u10d6\u10dd\u10dc, \u10d2\u10d0\u10d3\u10d0\u10d0\u10ee\u10d5\u10d8\u10dd\u10dc \u10e4\u10da\u10d4\u10d8\u10d4\u10e0\u10d8 \u10d8\u10e1\u10d4, \u10e0\u10dd\u10db \u10e1\u10ee\u10d5\u10d4\u10d1\u10d7\u10d0\u10dc\u10d0\u10ea \u10d8\u10d2\u10d8\u10d5\u10d4 \u10db\u10dd\u10ee\u10d3\u10d4\u10e1.\n\u10e4\u10e3\u10dc\u10e5\u10ea\u10d8\u10dd\u10dc\u10d8\u10e0\u10d4\u10d1\u10e1 \u10e9\u10d0\u10e2\u10d8 - \u10d8\u10e3\u10d6\u10d4\u10e0\u10d4\u10d1\u10e1 \u10e3\u10d9\u10d5\u10d4 \u10e9\u10d4\u10e3\u10eb\u10da\u10d8\u10d0\u10d7 \u10d4\u10e0\u10d7\u10db\u10d0\u10dc\u10d4\u10d7\u10e8\u10d8 \u10da\u10d0\u10de\u10d0\u10e0\u10d0\u10d9\u10d8.\n\u10e3\u10d9\u10d5\u10d4 \u10d7\u10d8\u10d7\u10e5\u10db\u10d8\u10e1 \u10d3\u10d0\u10d5\u10d0\u10e1\u10e0\u10e3\u10da\u10d4\u10d7 room-\u10d8\u10e1 \u10e8\u10d4\u10e5\u10db\u10dc\u10d8\u10e1, \u10e0\u10d4\u10d2\u10d8\u10e1\u10e2\u10e0\u10d0\u10ea\u10d8\u10d8\u10e1, \u10db\u10dd\u10db\u10ee\u10db\u10d0\u10e0\u10d4\u10d1\u10da\u10d8\u10e1 \u10de\u10e0\u10dd\u10e4\u10d8\u10da\u10d8\u10e1 \u10dc\u10d0\u10ee\u10d5\u10d8\u10e1 \u10e4\u10dd\u10e0\u10db\u10d4\u10d1\u10d8.\n\u10e1\u10d0\u10d8\u10e2\u10d8\u10e1\u10d7\u10d5\u10d8\u10e1 \u10d3\u10d0\u10db\u10d0\u10e2\u10d4\u10d1\u10e3\u10da\u10d8 \u10d2\u10d5\u10d0\u10e5\u10d5\u10e1 \u10da\u10d0\u10db\u10d0\u10d6\u10d8 \u10d2\u10e0\u10d0\u10e4\u10d8\u10d9\u10e3\u10da\u10d8 \u10d4\u10da\u10d4\u10db\u10d4\u10dc\u10e2\u10d4\u10d1\u10d8. \u10d3\u10d8\u10d6\u10d0\u10d8\u10dc\u10d8 \u10d0\u10e0\u10d8\u10e1 \u10db\u10d0\u10e0\u10e2\u10d8\u10d5\u10d8.\nWhat we learned\n\u10d7\u10d8\u10d7\u10e5\u10db\u10d8\u10e1 \u10e7\u10d5\u10d4\u10da\u10d0\u10e4\u10d4\u10e0\u10d8, \u10e0\u10d0\u10ea \u10d2\u10d0\u10d5\u10d0\u10d9\u10d4\u10d7\u10d4\u10d7, \u10d5\u10d8\u10e1\u10ec\u10d0\u10d5\u10da\u10d4\u10d7 \u10d0\u10db \u10f0\u10d0\u10d9\u10d0\u10d7\u10dd\u10dc\u10d8\u10e1 \u10d2\u10d0\u10dc\u10db\u10d0\u10d5\u10da\u10dd\u10d1\u10d0\u10e8\u10d8. \u10db\u10d8\u10d5\u10d8\u10e6\u10d4\u10d7 \u10d3\u10d8\u10d3\u10d8 \u10d2\u10d0\u10db\u10dd\u10ea\u10d3\u10d8\u10da\u10d4\u10d1\u10d0, \u10d3\u10d0\u10d5\u10d8\u10ee\u10d5\u10d4\u10ec\u10d4\u10d7 \u10d2\u10e3\u10dc\u10d3\u10e3\u10e0 \u10db\u10e3\u10e8\u10d0\u10dd\u10d1\u10d0\u10e8\u10d8, \u10d2\u10d0\u10d5\u10d8\u10ea\u10d0\u10dc\u10d8\u10d7 \u10d0\u10ee\u10d0\u10da\u10d8 \u10d0\u10d3\u10d0\u10db\u10d8\u10d0\u10dc\u10d4\u10d1\u10d8, \u10d2\u10d0\u10d5\u10ea\u10d5\u10d0\u10da\u10d4\u10d7 \u10ea\u10dd\u10d3\u10dc\u10d0, \u10d5\u10d8\u10db\u10e3\u10e8\u10d0\u10d5\u10d4\u10d7 \u10d1\u10d4\u10d5\u10e0\u10d8\u10d1\u10d4\u10d5\u10e0\u10d8.\nWhat's next for Fdistance\n\u10d8\u10d3\u10d4\u10d0 \u10d8\u10db\u10d3\u10d4\u10dc\u10d0\u10d3 \u10e1\u10d0\u10d8\u10dc\u10e2\u10d4\u10e0\u10d4\u10e1\u10dd\u10d0, \u10e0\u10dd\u10db \u10d5\u10d2\u10d4\u10d2\u10db\u10d0\u10d5\u10d7 \u10e0\u10d4\u10d0\u10da\u10e3\u10e0\u10d0\u10d3 \u10d2\u10d0\u10dc\u10d5\u10d0\u10ee\u10dd\u10e0\u10ea\u10d8\u10d4\u10da\u10dd\u10d7 \u10d4\u10e1 \u10de\u10e0\u10dd\u10d4\u10e5\u10e2\u10d8 (\u10db\u10d8\u10d5\u10d8\u10e7\u10d5\u10d0\u10dc\u10dd\u10d7 \u10e1\u10d0\u10d1\u10dd\u10da\u10dd\u10dd \u10e1\u10d0\u10ee\u10d4\u10db\u10d3\u10d4) +\u10e0\u10d0\u10ea \u10e8\u10d4\u10d8\u10eb\u10da\u10d4\u10d1\u10d0 \u10db\u10d0\u10da\u10d4, \u10d9\u10dd\u10dc\u10d9\u10e3\u10e0\u10e1\u10d8\u10e1 \u10e8\u10d4\u10d3\u10d4\u10d2\u10d4\u10d1\u10d8\u10e1 \u10d3\u10d0 \u10d6\u10dd\u10d2\u10d0\u10d3\u10d0\u10d3, \u10e7\u10d5\u10d4\u10da\u10d0\u10e4\u10e0\u10d8\u10e1 \u10db\u10d8\u10e3\u10ee\u10d4\u10d3\u10d0\u10d5\u10d0\u10d3 \u0b67\u0295\u2022\u0300\u1d25\u2022\u0301\u0294\u0b68\n",
        "hackathon_id": "hacktbilisi2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nPeople are used to forget stuff. It's the easiest thing ever to forget that you were going to wish Dave a happy birthday or lend him your Raspberry PI. That's why we decided to create the app keeping all notes attached to dude's face \u2014 FaceKeeper.\nWhat it does\nOnce you open the app, just take a picture of person you want to pin note to: the app will recognise him/her from your Facebook friends list and show you currently available notes. Add the note by pressing \"+\" floating button and .\nHow we built it\nWe used Android Studio 1.5, Android SDK 23 to make an Android app, and OpenCV 3.0.0 for face recognition. Also we used Stack Overflow a lot since we had tons of questions :) \nChallenges we ran into\nSince all of us are Python devs and it was our first Android programming experience, we had to spend a lot of time on research. While Android community topics were really helpful, OpenCV community seemed to leave lots of questions without answers. Also we found out that some OpenCV bugs (mostly in Camera View) were transfered from version 2 to version 3. \nWe had several issues with Android RecycleView, but luckily we figured them out.\nAccomplishments that we're proud of\nWe're proud to say that in 36 hours 3 Python devs managed to create their first Android app (and it is working almost the way it is supposed to).\nAlso we've learned a lot about teamwork and had a lot of fun, which is fantastic!\nWhat we learned\n\nWe've figured out how do Android activities and layouts work\nAfter this hackathon we can say without any doubt that we know everything (I mean, everything) about OpenCV Camera View\nYou should definitely think twice before picking poorly supported library for hackathon :)\n\nWhat's next for FaceKeeper\nWe're got big plans for this app.\n\nImplement the design as seen on pics above\nBeat that OpenCV thing to make it work the way it is supposed to\nAdd Facebook Graph API app token to get the photos of friends straight from Facebook API\nUpload the app to Google Play\nLots of awesome stuff\n\n",
        "hackathon_id": "hacktbilisi2015",
        "winner": false
    },
    {
        "description": "\n\u10d8\u10d3\u10d4\u10d0\n\u10ee\u10e8\u10d8\u10e0\u10d0\u10d3 \u10d0\u10e6\u10db\u10dd\u10d5\u10e9\u10d4\u10dc\u10d8\u10da\u10d5\u10d0\u10e0\u10d7 \u10e1\u10d8\u10e2\u10e3\u10d0\u10ea\u10d8\u10d0\u10e8\u10d8, \u10e0\u10dd\u10ea\u10d0 \u10d3\u10d0\u10d2\u10d5\u10d8\u10d2\u10e0\u10dd\u10d5\u10d3\u10d0 \u10e9\u10d5\u10d4\u10dc\u10d7\u10d5\u10d8\u10e1 \u10e3\u10e1\u10d0\u10e0\u10d2\u10d4\u10d1\u10da\u10dd \u10dc\u10d8\u10d5\u10d7\u10d4\u10d1\u10d8 \u10d3\u10d0 \u10d2\u10d5\u10d8\u10ec\u10d4\u10d5\u10e1 \u10d2\u10d0\u10d3\u10d0\u10e7\u10e0\u10d0. \u10e9\u10d5\u10d4\u10dc \u10d2\u10d7\u10d0\u10d5\u10d0\u10d6\u10dd\u10d1\u10d7 \u10e3\u10d9\u10d4\u10d7\u10d4\u10e1 \u10d0\u10da\u10e2\u10d4\u10e0\u10dc\u10d0\u10e2\u10d8\u10d5\u10d0\u10e1. \u10e9\u10d5\u10d4\u10dc\u10d8 \u10d0\u10de\u10da\u10d8\u10d9\u10d0\u10ea\u10d8\u10d8\u10e1 \u10d3\u10d0\u10ee\u10db\u10d0\u10e0\u10d4\u10d1\u10d8\u10d7 \u10e8\u10d4\u10e1\u10d0\u10eb\u10da\u10d4\u10d1\u10d4\u10da\u10d8\u10d0 \u10db\u10dd\u10db\u10ee\u10db\u10d0\u10e0\u10d4\u10d1\u10da\u10d4\u10d1\u10db\u10d0 \u10d4\u10e0\u10d7\u10db\u10d0\u10dc\u10d4\u10d7\u10e8\u10d8 \u10d2\u10d0\u10ea\u10d5\u10d0\u10da\u10dd\u10dc  \u10dc\u10d8\u10d5\u10d7\u10d4\u10d1\u10d8.\n\u10e0\u10dd\u10d2\u10dd\u10e0 \u10db\u10e3\u10e8\u10d0\u10dd\u10d1\u10e1\n\u10d0\u10e3\u10ea\u10d8\u10da\u10d4\u10d1\u10d4\u10da\u10d8\u10d0 ,\u10e0\u10dd\u10db \u10db\u10dd\u10db\u10ee\u10d0\u10e0\u10d4\u10d1\u10d4\u10da\u10db\u10d0 \u10d2\u10d0\u10d8\u10e0\u10dd\u10e1 \u10e0\u10d4\u10d2\u10d8\u10e1\u10e2\u10e0\u10d0\u10ea\u10d8\u10d0, \u10e8\u10d4\u10db\u10d3\u10d4\u10d2 \u10db\u10d0\u10e1 \u10d0\u10e5\u10d5\u10e1 \u10e1\u10d0\u10e8\u10e3\u10d0\u10da\u10d4\u10d1\u10d0, \u10d0\u10e2\u10d5\u10d8\u10e0\u10d7\u10dd\u10e1 \u10d7\u10d0\u10d5\u10d8\u10e1\u10d8 \u10dc\u10d8\u10d5\u10d7\u10d8\u10e1 \u10e4\u10dd\u10e2\u10dd\u10d4\u10d1\u10d8 \u10e9\u10d5\u10d4\u10dc\u10e1 \u10de\u10dd\u10e0\u10e2\u10d0\u10da\u10d6\u10d4, \u10e8\u10d4\u10e1\u10d0\u10d1\u10d0\u10db\u10d8\u10e1 \u10d9\u10d0\u10e2\u10d4\u10d2\u10dd\u10e0\u10d8\u10d0\u10e8\u10d8, \u10d3\u10d0 \u10db\u10d8\u10e3\u10d7\u10d8\u10d7\u10dd\u10e1, \u10d7\u10e3 \u10e0\u10d0 \u10dc\u10d8\u10d5\u10d7\u10e8\u10d8 \u10e1\u10e3\u10e0\u10e1 \u10e0\u10dd\u10db \u10d2\u10d0\u10e3\u10ea\u10d5\u10d0\u10da\u10dd\u10dc (\u10e3\u10d9\u10d0\u10dc\u10d0\u10e1\u10d9\u10dc\u10d4\u10da\u10d8\u10e1 \u10d3\u10d0\u10d9\u10dd\u10dc\u10d9\u10e0\u10d4\u10e2\u10d4\u10d1\u10d0 \u10e1\u10d0\u10d5\u10d0\u10da\u10d3\u10d4\u10d1\u10e3\u10da\u10dd \u10d0\u10e0\u10d0\u10d0. \u10d0\u10db \u10e8\u10d4\u10db\u10d7\u10ee\u10d5\u10d4\u10d5\u10d0\u10e8\u10d8, \u10e1\u10ee\u10d5\u10d0 \u10db\u10dd\u10db\u10ee\u10db\u10d0\u10e0\u10d4\u10d1\u10da\u10d4\u10d1\u10e1 \u10e8\u10d4\u10e3\u10eb\u10da\u10d8\u10d0\u10d7 \u10e8\u10d4\u10d7\u10d0\u10d5\u10d0\u10d6\u10dd\u10dc \u10d2\u10d0\u10e1\u10d0\u10ea\u10d5\u10da\u10d4\u10da\u10d8 \u10dc\u10d8\u10d5\u10d7\u10d8). \u10d4\u10e1 \u10e7\u10d5\u10d4\u10da\u10d0\u10e4\u10d4\u10e0\u10d8 \u10d9\u10d8 \u10ee\u10d3\u10d4\u10d1\u10d0 \u10e9\u10d5\u10d4\u10dc\u10e1 \u10e1\u10d0\u10d8\u10e2\u10d6\u10d4 \u10dd\u10dc\u10da\u10d0\u10d8\u10dc \u10e0\u10d4\u10df\u10d8\u10db\u10e8\u10d8 \u10e0\u10d0\u10ea \u10e1\u10d0\u10d9\u10db\u10d0\u10dd\u10d3 \u10db\u10dd\u10e1\u10d0\u10ee\u10d4\u10e0\u10ee\u10d4\u10d1\u10d4\u10da\u10d8\u10d0\n\u10e0\u10dd\u10d2\u10dd\u10e0 \u10e8\u10d4\u10d8\u10e5\u10db\u10dc\u10d0\n\u10e9\u10d5\u10d4\u10dc\u10d8 \u10d5\u10d4\u10d1\u10e1\u10d0\u10d8\u10e2\u10d8\u10e1 front \u10d3\u10d0\u10ec\u10d4\u10e0\u10d8\u10da\u10d8\u10d0: html5, css3, bootstrap, jqeury, javascript \u10e2\u10d4\u10e5\u10dc\u10dd\u10da\u10dd\u10d2\u10d4\u10d1\u10d8\u10e1 \u10d2\u10d0\u10db\u10dd\u10e7\u10d4\u10dc\u10d4\u10d1\u10d8\u10d7 \u10ee\u10dd\u10da\u10dd back \u10d3\u10d0\u10ec\u10d4\u10e0\u10d8\u10da\u10d8\u10d0: php/mysql, PDO,  codeigniter 3.0.3  \u10e2\u10d4\u10e5\u10dc\u10dd\u10da\u10dd\u10d2\u10d8\u10d4\u10d1\u10d8\u10e1 \u10d2\u10d0\u10db\u10dd\u10e7\u10d4\u10dc\u10d4\u10d1\u10d8\u10d7, \u10ee\u10dd\u10da\u10dd \u10d0\u10dc\u10d3\u10e0\u10dd\u10d8\u10d3 \u10d0\u10de\u10da\u10d8\u10d9\u10d0\u10ea\u10d8\u10d0: java, android studio \u10e2\u10d4\u10e5\u10dc\u10dd\u10da\u10dd\u10d2\u10d8\u10d4\u10d1\u10d8\u10e1 \u10d2\u10d0\u10db\u10dd\u10e7\u10d4\u10dc\u10d4\u10d1\u10d8\u10d7\n\u10e1\u10d8\u10e0\u10d7\u10e3\u10da\u10d4\u10d4\u10d1\u10d8 \u10e0\u10d0\u10e1\u10d0\u10e9 \u10e8\u10d4\u10ee\u10d5\u10d3\u10d8\n\u10eb\u10d8\u10e0\u10d8\u10d7\u10d0\u10d3\u10d8 \u10e1\u10d8\u10e0\u10d7\u10e3\u10da\u10d4 \u10e0\u10d0\u10ea \u10d0\u10db \u10de\u10e0\u10d4\u10e5\u10e2\u10d6\u10d4 \u10db\u10e3\u10e8\u10d0\u10dd\u10d1\u10d8\u10e1\u10d0\u10e1 \u10d2\u10d5\u10e5\u10dd\u10dc\u10d3\u10d0 \u10d4\u10e1 \u10d8\u10e7\u10dd \u10d3\u10e0\u10dd \u10de\u10e0\u10d0\u10e5\u10e2\u10d8\u10d9\u10e3\u10da\u10d0\u10d3 36 \u10e1\u10d0\u10d0\u10d7\u10e8\u10d8 \u10d0\u10d5\u10d0\u10ec\u10e7\u10d4\u10d7 \u10e1\u10d0\u10e8\u10e3\u10d0\u10da\u10dd \u10e1\u10d8\u10e0\u10d7\u10e3\u10da\u10d8\u10e1 \u10db\u10e5\u10dd\u10dc\u10d3\u10d4 \u10d5\u10d4\u10d1\u10e1\u10d0\u10d8\u10e2\u10d8 \u10d3\u10d0 \u10d0\u10de\u10da\u10d8\u10d9\u10d0\u10ea\u10d8\u10d0, \u10d0\u10e1\u10d4\u10d5\u10d4 \u10e8\u10d4\u10d5\u10d4\u10e9\u10d4\u10ee\u10d4\u10d7 \u10d8\u10e1\u10d4\u10d7 \u10de\u10e0\u10dd\u10d1\u10da\u10d4\u10db\u10d4\u10d1\u10e1 \u10e0\u10d0\u10e1\u10d7\u10d0\u10dc\u10d0\u10ea \u10d0\u10e5\u10d0\u10db\u10d3\u10d4 \u10e8\u10d4\u10ee\u10d4\u10d1\u10d0 \u10d0\u10e0 \u10d2\u10d5\u10e5\u10dd\u10dc\u10d8\u10d0 \u10d3\u10d0 \u10dc\u10dd\u10e0\u10db\u10d0\u10da\u10e3\u10e0\u10d0\u10d3\u10d0\u10ea \u10d2\u10d0\u10d5\u10e3\u10db\u10d9\u10da\u10d0\u10d5\u10d3\u10d8\u10d7\n\u10db\u10d8\u10e6\u10ec\u10d4\u10d5\u10d4\u10d1\u10d8 \u10e0\u10dd\u10db\u10da\u10d8\u10d7\u10d0\u10ea \u10d5\u10d0\u10db\u10d0\u10e7\u10dd\u10d1\u10d7\n\u10e1\u10d0\u10d0\u10db\u10d0\u10e7\u10dd\u10d0 \u10d8\u10e1 \u10e4\u10d0\u10e5\u10e2\u10d8 \u10e0\u10dd\u10db \u10d4\u10e1\u10d4\u10d7 \u10de\u10d8\u10e0\u10dd\u10d1\u10d4\u10d1\u10e8\u10d8 (\u10d3\u10e0\u10dd\u10d8\u10e1 \u10e3\u10e5\u10dd\u10dc\u10da\u10dd\u10d1\u10d0) \u10e8\u10d4\u10d5\u10e5\u10db\u10d4\u10dc\u10d8\u10d7 \u10db\u10e1\u10d0\u10d5\u10e1\u10d8 \u10d0\u10de\u10da\u10d8\u10d9\u10d0\u10ea\u10d8\u10d0 \u10e8\u10d4\u10d5\u10d8\u10e1\u10ec\u10d0\u10d5\u10da\u10d4\u10d7 \u10e0\u10d0\u10db\u10dd\u10d3\u10d4\u10dc\u10d8\u10db\u10d4 \u10e2\u10d8\u10de\u10d8\u10e1 \u10d0\u10da\u10dd\u10d2\u10d8\u10e0\u10d8\u10d7\u10db\u10d8 \u10e0\u10d0\u10ea \u10e1\u10d0\u10db\u10dd\u10db\u10d5\u10da\u10dd\u10d3 \u10d9\u10d0\u10e0\u10d2\u10d8 \u10de\u10da\u10d8\u10e3\u10e1\u10d8\u10d0 \u10d3\u10d0 \u10db\u10e1\u10d2\u10d0\u10d5\u10e1 \u10d4\u10e5\u10e1\u10e2\u10e0\u10d4\u10db\u10d0\u10e3\u10e0 \u10de\u10d8\u10e0\u10dd\u10d1\u10d4\u10d1\u10e8\u10d8 \u10d2\u10d0\u10db\u10dd\u10d2\u10d5\u10d0\u10d3\u10d2\u10d4\u10d1\u10d0  \n\u10e0\u10d0 \u10d5\u10d8\u10e1\u10ec\u10d5\u10da\u10d4\u10d7\n\u10d5\u10d8\u10e1\u10ec\u10d0\u10d5\u10da\u10d4\u10d7 \u10d2\u10e3\u10dc\u10d3\u10e3\u10e0\u10d0\u10d3 \u10db\u10e3\u10e8\u10d0\u10dd\u10d1\u10d0 \u10d3\u10e0\u10dd\u10d8\u10e1 \u10d3\u10d0 \u10e1\u10d0\u10e5\u10db\u10d8\u10e1 \u10d2\u10d0\u10dc\u10d0\u10ec\u10d8\u10da\u10d4\u10d1\u10d0 \u10d0\u10dc\u10d3\u10e0\u10dd\u10d8\u10d3\u10d8\u10e1 \u10d3\u10d0 \u10d5\u10d4\u10d1 \u10e1\u10d4\u10e0\u10d5\u10d8\u10e1\u10d4\u10d1\u10d8\u10e1 \u10e3\u10e0\u10d7\u10d8\u10d4\u10e0\u10d7\u10dd\u10d1\u10d0\n\u10e1\u10d0\u10db\u10dd\u10db\u10d0\u10d5\u10da\u10dd \u10d2\u10d4\u10d2\u10db\u10d4\u10d1\u10d8\n\u10e1\u10d0\u10db\u10dd\u10db\u10d0\u10d5\u10da\u10dd\u10d3 \u10d5\u10d2\u10d4\u10d2\u10db\u10d0\u10d5\u10d7 \u10e1\u10d0\u10d8\u10e2\u10d8\u10e1 \u10d2\u10d0\u10e8\u10d5\u10d4\u10d1\u10d0\u10e1 \u10e1\u10d0\u10e5\u10d0\u10e0\u10d7\u10d5\u10d4\u10da\u10dd\u10e1 \u10e4\u10d0\u10e0\u10d2\u10da\u10d4\u10d1\u10e8\u10d8 \u10d3\u10d0 \u10d0\u10de\u10da\u10d8\u10d9\u10d0\u10ea\u10d8\u10d8\u10e1 play store_\u10d6\u10d4 \u10d0\u10e2\u10d5\u10d8\u10e0\u10d7\u10d5\u10d0\u10e1, \u10e1\u10d0\u10db\u10dd\u10db\u10d0\u10d5\u10da\u10dd\u10d3 \u10d5\u10d8\u10db\u10d3\u10d4\u10d5\u10dc\u10d4\u10d1\u10d7 \u10e0\u10dd\u10db \u10e1\u10d0\u10e5\u10d0\u10e0\u10d7\u10d5\u10d4\u10da\u10dd\u10e1 \u10d2\u10d0\u10e0\u10d4\u10d7\u10d0\u10ea \u10d2\u10d0\u10d5\u10d0\u10da\u10d7..\n",
        "hackathon_id": "hacktbilisi2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWhat it does\nOur program allows user to take a picture of , what is supposed to be an image text, and transforms it into an editable and searchable text. It currently recognizes over than 600 languages, but in this version, we are only using 2 - English and Georgian.\nHow we built it\nWe built it using an enormous and difficult library called tesseract along with leptonica within an android studio.\nChallenges we ran into\nThis library had no support for Georgian language and we had to implement it into it ourselves. This part took the most time of our Hackathon.\nAccomplishments that we're proud of\nIT WORKS! (with over 95 % accuracy of course)\nWhat we learned\nWe learned a lot about android and ndk, which enabled us to use c++ code. We also learned that there is a library which needs 30 minutes to compile...\nWhat's next for Kakliku\nKakliku won't be forgotten, There lies a great path of development in front of it. More functionalities, more languages, real time support.. etc.\n",
        "hackathon_id": "hacktbilisi2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nfor me inspiration is that, we can simplify people's  life.\nWhat it does\nIt reads text from a chosen or a taken picture and then extracts it. it can also read web-address and open it with browser.\nHow we built it\nit wasn't easy at all, we've used visual studio universal windows platform, c# and XAML.\nChallenges we ran into\nevery project for me is challenge.\nAccomplishments that we're proud of\nwe got knowledge about some new technologies and met new people.\nWhat we learned\nwe've learned how to work with ocr and built-in tasks.\nWhat's next for \"Help Me Read That\"\nnext for \"Help Me Read That\" is speech recognition, spell check and we wanted to add project oxford's emotion api too.\n",
        "hackathon_id": "hacktbilisi2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe want to help people with disabilities. \nWhat it does\nHelp blind people to make their moving more safe.\nHow we built it\nWe wrote code in Arduino, built hardware.\nChallenges we ran into\nTime, experience, stamina.\nAccomplishments that we're proud of\nIt works\nWhat we learned\nWorking with hardware. Time management. Team working. \nWhat's next for I Feel\nTo develop our idea ( visual and hardware) . We want to charge our stick with wireless charger. \n",
        "hackathon_id": "hacktbilisi2015",
        "winner": false
    },
    {
        "description": "\nInspiration\n\u10d3\u10e0\u10dd\u10d8\u10e1 \u10e1\u10d8\u10db\u10ea\u10d8\u10e0\u10d8\u10e1 \u10d3\u10d0 \u10e8\u10dd\u10e0\u10d8 \u10db\u10d0\u10dc\u10eb\u10d8\u10da\u10d8\u10e1 \u10d2\u10d0\u10db\u10dd \u10ee\u10e8\u10d8\u10e0\u10d0\u10d3 \u10d1\u10d4\u10dc\u10d3\u10d4\u10d1\u10d8 \u10d5\u10d4\u10e0 \u10d0\u10ee\u10d4\u10e0\u10ee\u10d4\u10d1\u10d4\u10dc \u10e1\u10d0\u10d7\u10d0\u10dc\u10d0\u10d3\u10dd\u10d3 \u10db\u10dd\u10db\u10d6\u10d0\u10d3\u10d4\u10d1\u10d0\u10e1, \u10d0\u10db\u10d8\u10e2\u10dd\u10db \u10d2\u10d0\u10d3\u10d0\u10d5\u10ec\u10e7\u10d5\u10d8\u10e2\u10d4\u10d7 \u10e8\u10d4\u10d2\u10d5\u10d4\u10e5\u10db\u10dc\u10d0 BANDer-\u10d8, \u10d5\u10d4\u10d1 \u10d0\u10de\u10da\u10d8\u10d9\u10d0\u10ea\u10d8\u10d0, \u10e0\u10dd\u10db\u10d4\u10da\u10d8\u10ea \u10e1\u10d0\u10e8\u10e3\u10d0\u10da\u10d4\u10d1\u10d0\u10e1 \u10db\u10d8\u10e1\u10ea\u10d4\u10db\u10e1 \u10d1\u10d4\u10dc\u10d3\u10d8\u10e1 \u10ec\u10d4\u10d5\u10e0\u10d4\u10d1\u10e1\u10d0 \u10d3\u10d0 \u10dc\u10d4\u10d1\u10d8\u10e1\u10db\u10d8\u10d4\u10e0 \u10db\u10d4\u10da\u10dd\u10db\u10d0\u10dc\u10e1 \u10d3\u10d0\u10e3\u10d9\u10d0\u10d5\u10e8\u10d8\u10e0\u10d3\u10dc\u10d4\u10dc \u10d3\u10d0 \u10d2\u10d0\u10e3\u10d6\u10d8\u10d0\u10e0\u10dd\u10dc \u10db\u10d4\u10da\u10dd\u10d3\u10d8\u10d4\u10d1\u10d8 \u10d4\u10e0\u10d7\u10db\u10d0\u10dc\u10d4\u10d7\u10e1 \u10de\u10d0\u10e0\u10d0\u10da\u10d4\u10da\u10e3\u10e0 \u10e0\u10d4\u10df\u10d8\u10db\u10e8\u10d8.\nWhat it does\nBANDer \u10e5\u10db\u10dc\u10d8\u10e1 \u10dd\u10dc\u10da\u10d0\u10d8\u10dc \u10e1\u10d0\u10e0\u10d4\u10de\u10d4\u10e2\u10d8\u10ea\u10d8\u10dd \u10e1\u10d8\u10d5\u10e0\u10ea\u10d4\u10e1, \u10e1\u10d0\u10d3\u10d0\u10ea \u10d2\u10d5\u10d0\u10e5\u10d5\u10e1 \u10d8\u10dc\u10e1\u10e2\u10e0\u10e3\u10db\u10d4\u10dc\u10e2\u10d4\u10d1\u10d8\u10e1 \u10db\u10e0\u10d0\u10d5\u10d0\u10da\u10e4\u10d4\u10e0\u10dd\u10d5\u10d0\u10dc\u10d8 \u10d0\u10e0\u10e9\u10d4\u10d5\u10d0\u10dc\u10d8. \u10de\u10e0\u10dd\u10d2\u10e0\u10d0\u10db\u10d0 \u10d2\u10d5\u10d0\u10eb\u10da\u10d4\u10d5\u10e1 \u10e1\u10d0\u10e8\u10e3\u10d0\u10da\u10d4\u10d1\u10d0\u10e1, \u10e0\u10dd\u10db \u10d3\u10d8\u10e1\u10e2\u10d0\u10dc\u10ea\u10d8\u10e3\u10e0\u10d0\u10d3 \u10d3\u10d0\u10d5\u10e3\u10d9\u10e0\u10d0\u10d7 \u10e1\u10d0\u10e1\u10e3\u10e0\u10d5\u10d4\u10da \u10d8\u10dc\u10e1\u10e2\u10e0\u10e3\u10db\u10d4\u10dc\u10e2\u10d6\u10d4 \u10e1\u10d0\u10e1\u10e3\u10e0\u10d5\u10d4\u10da \u10d3\u10e0\u10dd\u10e1\u10d0 \u10d3\u10d0 \u10ee\u10d0\u10da\u10ee\u10d7\u10d0\u10dc \u10d4\u10e0\u10d7\u10d0\u10d3. \nHow we built it\n\u10ef\u10d2\u10e3\u10e4\u10db\u10d0 \u10de\u10d8\u10e0\u10d5\u10d4\u10da\u10d8\u10d5\u10d4 \u10d3\u10e6\u10d8\u10d3\u10d0\u10dc \u10d3\u10d0\u10d8\u10ec\u10e7\u10dd \u10d2\u10e3\u10dc\u10d3\u10e3\u10e0\u10d8 \u10db\u10e3\u10e8\u10d0\u10dd\u10d1\u10d0. \u10de\u10d8\u10e0\u10d5\u10d4\u10da\u10d8\u10d5\u10d4 \u10e6\u10d0\u10db\u10d8\u10d3\u10d0\u10dc \u10d2\u10e3\u10dc\u10d3\u10d8\u10e1 \u10d4\u10e0\u10d7\u10d8 \u10dc\u10d0\u10ec\u10d8\u10da\u10d8 \u10d2\u10d0\u10d3\u10d0\u10d4\u10e0\u10d7\u10dd \u10d5\u10d8\u10d6\u10e3\u10d0\u10da\u10d8\u10e1 \u10e8\u10d4\u10e5\u10db\u10dc\u10d0\u10d6\u10d4, \u10db\u10d0\u10e8\u10d8\u10dc \u10e0\u10dd\u10ea\u10d0 \u10db\u10d4\u10dd\u10e0\u10d4 \u10dc\u10d0\u10ec\u10d8\u10da\u10d8 \u10de\u10e0\u10dd\u10d2\u10e0\u10d0\u10db\u10d8\u10e1 \u10d2\u10d0\u10db\u10d0\u10e0\u10d7\u10e3\u10da\u10d0\u10d3 \u10db\u10e3\u10e8\u10d0\u10dd\u10d1\u10d0\u10d6\u10d4 \u10d8\u10e7\u10dd \u10dd\u10e0\u10d8\u10d4\u10dc\u10e2\u10d8\u10e0\u10d4\u10d1\u10e3\u10da\u10d8. \u10ef\u10d0\u10db\u10e8\u10d8 \u10de\u10e0\u10dd\u10d4\u10e5\u10e2\u10d6\u10d4 \u10db\u10e3\u10e8\u10d0\u10dd\u10d1\u10d0 \u10e1\u10d0\u10d8\u10dc\u10e2\u10d4\u10e0\u10d4\u10e1\u10dd \u10d0\u10e6\u10db\u10dd\u10e9\u10dc\u10d3\u10d0 \u10db\u10d8\u10e1\u10d8 \u10dd\u10e0\u10d8\u10d2\u10d8\u10dc\u10d0\u10da\u10dd\u10d1\u10d8\u10e1 \u10d2\u10d0\u10db\u10dd.  \nChallenges we ran into\n\u10db\u10d7\u10d0\u10d5\u10d0\u10e0\u10d8 \u10de\u10e0\u10dd\u10d1\u10da\u10d4\u10db\u10d0 \u10d8\u10e7\u10dd \u10d3\u10e0\u10dd\u10d8\u10e1 \u10e1\u10d8\u10db\u10ea\u10d8\u10e0\u10d4, \u10e0\u10d8\u10e1 \u10d2\u10d0\u10db\u10dd\u10ea \u10e8\u10d4\u10d5\u10e5\u10db\u10d4\u10dc\u10d8\u10d7 \u10db\u10ee\u10dd\u10da\u10dd\u10d3 1.0 \u10db\u10dd\u10d3\u10d4\u10da\u10d8, \u10d7\u10e3\u10db\u10ea\u10d0 \u10db\u10d8\u10e1 \u10d2\u10d0\u10dc\u10d5\u10d8\u10d7\u10d0\u10e0\u10d4\u10d1\u10d0\u10e1 \u10db\u10dd\u10db\u10d0\u10d5\u10d0\u10da\u10e8\u10d8\u10ea \u10d5\u10d2\u10d4\u10d2\u10db\u10d0\u10d5\u10d7. \nAccomplishments that we're proud of\n\u10d5\u10d0\u10db\u10d0\u10e7\u10dd\u10d1\u10d7, \u10e0\u10dd\u10db \u10e8\u10d4\u10d5\u10e5\u10db\u10d4\u10dc\u10d8\u10d7 \u10d5\u10d4\u10d1 \u10d0\u10de\u10da\u10d8\u10d9\u10d0\u10ea\u10d8\u10d0 \u10e0\u10dd\u10db\u10da\u10d8\u10e1 \u10d0\u10dc\u10d0\u10da\u10dd\u10d2\u10d8\u10ea \u10d0\u10e0 \u10d0\u10e0\u10e1\u10d4\u10d1\u10dd\u10d1\u10e1 \u10d3\u10d0 \u10d0\u10db\u10d0\u10e1\u10d7\u10d0\u10dc \u10e0\u10d4\u10d0\u10da\u10e3\u10e0\u10d0\u10d3 \u10db\u10e3\u10e8\u10d0 \u10de\u10e0\u10dd\u10d3\u10e3\u10e5\u10e2\u10d8\u10d0.\nWhat's next for BANDer\n\u10db\u10dd\u10db\u10d0\u10d5\u10d0\u10da\u10e8\u10d8 \u10d5\u10d0\u10de\u10d8\u10e0\u10d4\u10d1\u10d7  \u10d2\u10d0\u10dc\u10d5\u10d0\u10d5\u10d8\u10d7\u10d0\u10e0\u10dd\u10d7  BANDer-\u10d8\u10e1 \u10d3\u10d8\u10d6\u10d0\u10d8\u10dc\u10d8. \u10db\u10d8\u10d5\u10ea\u10d4\u10d7 \u10db\u10dd\u10db\u10ee\u10db\u10d0\u10e0\u10d4\u10d1\u10da\u10d4\u10d1\u10e1 \u10e1\u10d0\u10e8\u10e3\u10d0\u10da\u10d4\u10d1\u10d0 \u10e8\u10d4\u10d8\u10dc\u10d0\u10ee\u10dd\u10e1 \u10d3\u10d0 \u10d2\u10d0\u10e3\u10d6\u10d8\u10d0\u10e0\u10dd\u10e1 \u10e1\u10ee\u10d5\u10d4\u10d1\u10e1 \u10db\u10d0\u10d7\u10d8 \u10d1\u10d4\u10dc\u10d3\u10d8\u10e1 \u10db\u10d8\u10d4\u10e0 \u10e9\u10d0\u10ec\u10d4\u10e0\u10d8\u10da\u10d8 \u10db\u10e3\u10e1\u10d8\u10d9\u10d0. \u10d0\u10e1\u10d4\u10d5\u10d4, \u10e8\u10d4\u10d4\u10eb\u10da\u10d4\u10d1\u10d0\u10d7 \u10d7\u10d0\u10d5\u10d8\u10d0\u10dc\u10d7\u10d8 \u10d8\u10dc\u10e1\u10e2\u10e0\u10e3\u10db\u10d4\u10dc\u10e2\u10d4\u10d1\u10d8\u10d7 \u10d3\u10d0\u10d9\u10d5\u10e0\u10d0. \u10de\u10e0\u10dd\u10d2\u10e0\u10d0\u10db\u10d0 \u10d8\u10e5\u10dc\u10d4\u10d1\u10d0 \u10de\u10d8\u10e0\u10d5\u10d0\u10dc\u10d3\u10d4\u10da \u10d5\u10d4\u10e0\u10e1\u10d8\u10d0\u10d6\u10d4 \u10d2\u10d0\u10ea\u10d8\u10da\u10d4\u10d1\u10d8\u10d7 \u10e1\u10ec\u10e0\u10d0\u10e4\u10d8. \u10d8\u10d2\u10d4\u10d2\u10db\u10d4\u10d1\u10d0 \u10d0\u10de\u10da\u10d8\u10d9\u10d0\u10ea\u10d8\u10d0\u10e8\u10d8 \u10d8\u10dc\u10e1\u10e2\u10e0\u10e3\u10db\u10d4\u10dc\u10e2\u10d4\u10d1\u10d8\u10e1 \u10e9\u10d0\u10db\u10d0\u10e2\u10d4\u10d1\u10d0, \u10e9\u10d0\u10e2\u10d8\u10e1 \u10e8\u10d4\u10e5\u10db\u10dc\u10d0, \u10e1\u10d0\u10d3\u10d0\u10ea \u10d2\u10d0\u10db\u10dd\u10ea\u10d3\u10d8\u10da \u10db\u10e3\u10e1\u10d8\u10d9\u10dd\u10e1\u10d4\u10d1\u10e1 \u10d3\u10d0\u10db\u10ec\u10e7\u10d4\u10d1\u10d8 \u10db\u10d4\u10da\u10dd\u10db\u10d0\u10dc\u10d4\u10d1\u10d8\u10e1\u10d0\u10d7\u10d5\u10d8\u10e1 \u10e1\u10d0\u10d9\u10e3\u10d7\u10d0\u10e0\u10d8 \u10d2\u10d0\u10db\u10dd\u10ea\u10d3\u10d8\u10da\u10d4\u10d1\u10d8\u10e1 \u10d2\u10d0\u10d6\u10d8\u10d0\u10e0\u10d4\u10d1\u10d8\u10e1 \u10e1\u10d0\u10e8\u10e3\u10d0\u10da\u10d4\u10d1\u10d0 \u10d4\u10e5\u10dc\u10d4\u10d1\u10d0\u10d7.\n",
        "hackathon_id": "hacktbilisi2015",
        "winner": false
    },
    {
        "description": "\n\u10e9\u10d5\u10d4\u10dc\u10d8 \u10de\u10e0\u10dd\u10d4\u10e5\u10e2\u10d8 \u10d4\u10e0\u10d7\u10d8 \u10db\u10ee\u10e0\u10d8\u10d5 \u10e1\u10d0\u10ee\u10d0\u10da\u10d8\u10e1\u10dd \u10d3\u10d0 \u10d2\u10d0\u10e1\u10d0\u10e0\u10d7\u10dd\u10d1\u10d8\u10d0, \u10ee\u10dd\u10da\u10dd \u10db\u10d4\u10dd\u10e0\u10d4 \u10db\u10ee\u10e0\u10d8\u10d5 \u10e7\u10e0\u10e3-\u10db\u10e3\u10dc\u10ef\u10d4\u10d1\u10e1 \u10d4\u10ee\u10db\u10d0\u10e0\u10d4\u10d1\u10d0, \u10d2\u10d0\u10ee\u10d3\u10dc\u10d4\u10dc \u10e3\u10e4\u10e0\u10dd \u10e1\u10dd\u10ea\u10d8\u10d0\u10da\u10e3\u10e0\u10d4\u10d1\u10d8. \u10d0\u10da\u10d1\u10d0\u10d7 \u10d7\u10d8\u10d7\u10dd\u10d4\u10e3\u10da\u10d8 \u10db\u10d0\u10d7\u10d2\u10d0\u10dc\u10d8\u10e1\u10d7\u10d5\u10d8\u10e1 \u10eb\u10d0\u10da\u10d8\u10d0\u10dc \u10db\u10dc\u10d8\u10e8\u10d5\u10dc\u10d4\u10da\u10dd\u10d5\u10d0\u10dc\u10d8\u10d0, \u10e8\u10d4\u10d4\u10eb\u10da\u10dd\u10e1 \u10e9\u10d5\u10d4\u10dc\u10d7\u10d0\u10dc \u10d4\u10db\u10dd\u10ea\u10d8\u10d4\u10d1\u10d8\u10e1, \u10e4\u10d8\u10e5\u10e0\u10d4\u10d1\u10d8\u10e1 \u10d2\u10d0\u10db\u10dd\u10ee\u10d0\u10e2\u10d5\u10d0  \u10d3\u10d0 \u10e3\u10d1\u10e0\u10d0\u10da\u10dd\u10d3  \u10ea\u10ee\u10dd\u10d5\u10e0\u10d4\u10d1\u10d8\u10e1 \u10d2\u10d0\u10d6\u10d8\u10d0\u10e0\u10d4\u10d1\u10d0. \u10e8\u10d4\u10e1\u10d0\u10eb\u10da\u10dd\u10d0, \u10d4\u10e1 \u10d1\u10d4\u10d5\u10e0\u10d8 \u10db\u10d0\u10d7\u10d2\u10d0\u10dc\u10d8\u10e1 \u10de\u10d0\u10e2\u10d0\u10e0\u10d0 \u10dd\u10ea\u10dc\u10d4\u10d1\u10d0\u10ea \u10d8\u10e7\u10dd\u10e1. \n\u10e9\u10d5\u10d4\u10dc\u10d8 \u10d0\u10de\u10da\u10d8\u10d9\u10d0\u10ea\u10d8\u10d0 \u10db\u10dd\u10db\u10ee\u10db\u10d0\u10e0\u10d4\u10d1\u10d4\u10da\u10e1 \u10d0\u10eb\u10da\u10d4\u10d5\u10e1 \u10e1\u10d0\u10e8\u10e3\u10d0\u10da\u10d4\u10d1\u10d0\u10e1, \u10e8\u10d4\u10e5\u10db\u10dc\u10d0\u10e1 \u10d7\u10d0\u10d5\u10d8\u10e1\u10d8 \u10df\u10d4\u10e1\u10e2\u10d4\u10d1\u10d8\u10e1 \u10d4\u10dc\u10d0. \u10d0\u10de\u10da\u10d8\u10d9\u10d0\u10ea\u10d8\u10d8\u10e1 \u10d3\u10d0\u10ee\u10db\u10d0\u10e0\u10d4\u10d1\u10d8\u10d7, \u10df\u10d4\u10e1\u10e2\u10d4\u10d1\u10d8 \u10ee\u10db\u10dd\u10d5\u10d0\u10dc \u10e1\u10d0\u10e3\u10d1\u10e0\u10d0\u10d3 \u10d2\u10d0\u10d3\u10d0\u10d8\u10e5\u10ea\u10d4\u10d5\u10d0 \u10d3\u10d0 \u10e7\u10d5\u10d4\u10da\u10d0\u10e1\u10d7\u10d5\u10d8\u10e1 \u10d2\u10d0\u10e1\u10d0\u10d2\u10d4\u10d1\u10d8 \u10d2\u10d0\u10ee\u10d3\u10d4\u10d1\u10d0. \u10db\u10dd\u10db\u10ee\u10d0\u10e0\u10d4\u10d1\u10d4\u10da\u10d8 \u10e8\u10d4\u10eb\u10da\u10d4\u10d1\u10e1, \u10ee\u10d4\u10da\u10d8\u10e1 \u10db\u10dd\u10eb\u10e0\u10d0\u10dd\u10d1\u10d8\u10e1 \u10e1\u10ee\u10d5\u10d0\u10d3\u10d0\u10e1\u10ee\u10d5\u10d0 \u10d9\u10dd\u10db\u10d1\u10d8\u10dc\u10d0\u10ea\u10d8\u10d8\u10d7, \u10e8\u10d4\u10e5\u10db\u10dc\u10d0\u10e1 \u10e1\u10d0\u10d9\u10e3\u10d7\u10d0\u10e0\u10d8 \u10d4\u10dc\u10d0 \u10d3\u10d0 \u10e8\u10d4\u10e3\u10e1\u10d0\u10d1\u10d0\u10db\u10dd\u10e1 \u10e8\u10d4\u10e1\u10d0\u10d1\u10d0\u10db\u10d8\u10e1\u10d8 \u10e2\u10d4\u10e5\u10e1\u10e2\u10e3\u10e0\u10d8 \u10db\u10dc\u10d8\u10e8\u10d5\u10dc\u10d4\u10da\u10dd\u10d1\u10d0. Myo-\u10e1 \u10db\u10d4\u10e8\u10d5\u10d4\u10dd\u10d1\u10d8\u10d7 \u10e8\u10d4\u10e1\u10e0\u10e3\u10da\u10d4\u10d1\u10e3\u10da \u10db\u10dd\u10eb\u10e0\u10d0\u10dd\u10d1\u10d4\u10d1\u10e1 \u10d0\u10de\u10da\u10d8\u10d9\u10d0\u10ea\u10d8\u10d0 \u10d2\u10d0\u10d8\u10db\u10d4\u10dd\u10e0\u10d4\u10d1\u10e1 \u10ee\u10db\u10dd\u10d5\u10d0\u10dc\u10d8 \u10ec\u10d8\u10dc\u10d0\u10d3\u10d0\u10d3\u10d4\u10d1\u10d4\u10d1\u10d8\u10e1\u10d0 \u10d3\u10d0 \u10e1\u10d8\u10e2\u10e7\u10d5\u10d4\u10d1\u10d8\u10e1 \u10e1\u10d0\u10ee\u10d8\u10d7. \u10d0\u10e1\u10d4\u10d5\u10d4  \u10db\u10dd\u10db\u10ee\u10db\u10d0\u10e0\u10d4\u10d1\u10d4\u10da\u10d8 \u10e8\u10d4\u10eb\u10da\u10d4\u10d1\u10e1 \u10d3\u10d0\u10db\u10d0\u10e2\u10d4\u10d1\u10e3\u10da\u10d8 \u10e9\u10d0\u10dc\u10d0\u10ec\u10d4\u10e0\u10d4\u10d1\u10d8\u10e1 \u10e0\u10d4\u10d3\u10d0\u10e5\u10e2\u10d8\u10e0\u10d4\u10d1\u10d0\u10e1\u10d0 \u10d3\u10d0 \u10ec\u10d0\u10e8\u10da\u10d0\u10e1.\n\u10e9\u10d5\u10d4\u10dc\u10d8 \u10d0\u10de\u10da\u10d8\u10d9\u10d0\u10ea\u10d8\u10d0 \u10ee\u10d4\u10da\u10db\u10d8\u10e1\u10d0\u10ec\u10d5\u10d3\u10dd\u10db\u10d8\u10d0 \u10e0\u10dd\u10d2\u10dd\u10e0\u10ea Android \u10d0\u10e1\u10d4\u10d5\u10d4 iOS \u10db\u10dd\u10db\u10ee\u10db\u10d0\u10e0\u10d4\u10d1\u10da\u10d4\u10d1\u10d8\u10e1\u10d7\u10d5\u10d8\u10e1 \u10d3\u10d0 \u10d2\u10d0\u10e0\u10d3\u10d0 \u10d0\u10db\u10d8\u10e1\u10d0 \u10d2\u10d5\u10d7\u10d0\u10d5\u10d0\u10d6\u10dd\u10d1\u10e1 \u10d8\u10dc\u10e4\u10dd\u10e0\u10db\u10d0\u10ea\u10d8\u10d8\u10e1 \u10d2\u10d0\u10d3\u10d0\u10ea\u10d4\u10db\u10d8\u10e1 \u10dd\u10e0 \u10ee\u10d4\u10e0\u10ee\u10e1. \u10e8\u10d4\u10d2\u10d5\u10d8\u10eb\u10da\u10d8\u10d0, \u10d0\u10d5\u10d8\u10e0\u10e9\u10d8\u10dd\u10d7 \u10d7\u10e3 \u10e0\u10dd\u10db\u10d4\u10da \u10db\u10dd\u10ec\u10e7\u10dd\u10d1\u10d8\u10da\u10dd\u10d1\u10d0\u10d6\u10d4 \u10d2\u10d5\u10e1\u10e3\u10e0\u10e1 \u10df\u10d4\u10e1\u10e2\u10d4\u10d1\u10d8\u10e1 \u201c\u10d2\u10d0\u10d3\u10d0\u10d7\u10d0\u10e0\u10d2\u10db\u10dc\u10d0\u201d smart phone-\u10d6\u10d4 \u10d7\u10e3 smart watch-\u10d6\u10d4. smart watch-\u10d8\u10d7 \u10d0\u10e1\u10d4\u10d5\u10d4 \u10e8\u10d4\u10e1\u10d0\u10eb\u10da\u10d4\u10d1\u10d4\u10da\u10d8\u10d0 \u10ee\u10db\u10dd\u10d5\u10d0\u10dc\u10d8 \u10de\u10d0\u10e1\u10e3\u10ee\u10d8\u10e1 \u10d3\u10d0\u10d1\u10e0\u10e3\u10dc\u10d4\u10d1\u10d0 \u10d3\u10d0 \u10db\u10d4\u10dd\u10e0\u10d4 \u10db\u10ee\u10d0\u10e0\u10d8\u10e1\u10d7\u10d5\u10d8\u10e1 \u10e2\u10d4\u10e5\u10e1\u10e2\u10e3\u10e0\u10d8 \u10e1\u10d0\u10ee\u10d8\u10d7 \u10d2\u10d0\u10d2\u10d6\u10d0\u10d5\u10dc\u10d0. \u10ef\u10d4\u10e0-\u10ef\u10d4\u10e0\u10dd\u10d1\u10d8\u10d7 \u10d0\u10de\u10da\u10d8\u10d9\u10d0\u10ea\u10d8\u10d8\u10e1 \u10d1\u10d4\u10e2\u10d0 \u10d5\u10d4\u10e0\u10e1\u10d8\u10e8\u10d8\u10d0, \u10e0\u10dd\u10db\u10d4\u10da\u10d8\u10ea \u10d0\u10db \u10d4\u10e2\u10d0\u10de\u10d6\u10d4 \u10d8\u10eb\u10da\u10d4\u10d5\u10d0 \u10e1\u10d0\u10e8\u10e3\u10d0\u10da\u10d4\u10d1\u10d0\u10e1, \u10d9\u10d0\u10e0\u10d2\u10d0\u10d3 \u10d2\u10d0\u10d5\u10d4\u10ea\u10dc\u10dd\u10d7 \u10db\u10d8\u10e1 \u10e8\u10d4\u10e1\u10d0\u10eb\u10da\u10d4\u10d1\u10da\u10dd\u10d1\u10d4\u10d1\u10e1.\n\u10d5\u10e4\u10d8\u10e5\u10e0\u10dd\u10d1\u10d7, \u10e9\u10d5\u10d4\u10e3\u10da\u10d4\u10d1\u10e0\u10d8\u10d5\u10d8 \u10d0\u10d3\u10d0\u10db\u10d8\u10d0\u10dc\u10d4\u10d1\u10d8\u10e1\u10d7\u10d5\u10d8\u10e1\u10d0\u10ea \u10e1\u10d0\u10d8\u10dc\u10e2\u10d4\u10e0\u10d4\u10e1\u10dd \u10d8\u10e5\u10dc\u10d4\u10d1\u10d0 \u10e1\u10d0\u10d9\u10e3\u10d7\u10d0\u10e0\u10d8 \u10d4\u10dc\u10d8\u10e1 \u10e8\u10d4\u10e5\u10db\u10dc\u10d0 \u10d3\u10d0 \u10e3\u10e0\u10d7\u10d8\u10d4\u10e0\u10d7\u10dd\u10d1\u10d8\u10e1 \u10d2\u10d0\u10ee\u10d0\u10da\u10d8\u10e1\u10d4\u10d1\u10d0 \u10e1\u10ee\u10d5\u10d0\u10d3\u10d0\u10e1\u10ee\u10d5\u10d0 \u10e1\u10d0\u10d8\u10dc\u10e2\u10d4\u10e0\u10d4\u10e1\u10dd \u10d7\u10d0\u10db\u10d0\u10e8\u10d4\u10d1\u10d8\u10d7.\n\u10e9\u10d5\u10d4\u10dc\u10d8 \u10db\u10d8\u10d6\u10d0\u10dc\u10d8\u10d0, \u10e0\u10dd\u10db \u10d8\u10db \u10d0\u10d3\u10d0\u10db\u10d8\u10d0\u10dc\u10d4\u10d1\u10e1, \u10d5\u10d8\u10e1\u10d0\u10ea \u10e8\u10d4\u10d6\u10e6\u10e3\u10d3\u10e3\u10da\u10d8 \u10e1\u10db\u10d4\u10dc\u10d0 \u10d3\u10d0 \u10db\u10d4\u10e2\u10e7\u10d5\u10d4\u10da\u10d4\u10d1\u10d0 \u10d0\u10e5\u10d5\u10d7 \u10e1\u10e3\u10da \u10dd\u10d3\u10dc\u10d0\u10d5 \u10db\u10d0\u10d8\u10dc\u10ea \u10d2\u10d0\u10d5\u10e3\u10db\u10d0\u10e0\u10e2\u10d8\u10d5\u10dd\u10d7 \u10ea\u10ee\u10dd\u10d5\u10e0\u10d4\u10d1\u10d0 \u10d3\u10d0 \u10e1\u10d0\u10e4\u10e3\u10eb\u10d5\u10d4\u10da\u10d8 \u10e9\u10d0\u10d5\u10e3\u10e7\u10d0\u10e0\u10dd\u10d7 \u10e9\u10d5\u10d4\u10dc\u10e1\u10d0 \u10d3\u10d0 \u10db\u10d0\u10d7 \u10e8\u10dd\u10e0\u10d8\u10e1 \u10d0\u10e0\u10e1\u10d4\u10d1\u10e3\u10da\u10d8 \u10d1\u10d0\u10e0\u10d8\u10d4\u10e0\u10d8\u10e1 \u10e8\u10d4\u10eb\u10da\u10d4\u10d1\u10d8\u10e1\u10d3\u10d0\u10d2\u10d5\u10d0\u10e0\u10d0\u10d3 \u10d2\u10d0\u10d3\u10d0\u10da\u10d0\u10ee\u10d5\u10d0\u10e1. \u10d0\u10db \u10de\u10e0\u10dd\u10d1\u10da\u10d4\u10db\u10d8\u10e1 \u10d2\u10d0\u10d3\u10d0\u10e1\u10d0\u10ed\u10e0\u10d4\u10da\u10d0\u10d3 \u10d9\u10d8 \u10e9\u10d5\u10d4\u10dc\u10d7\u10d5\u10d8\u10e1 \u10e1\u10d0\u10d8\u10dc\u10e2\u10d4\u10e0\u10d4\u10e1\u10dd \u10e2\u10d4\u10e5\u10dc\u10dd\u10da\u10dd\u10d2\u10d8\u10d4\u10d1\u10d8 \u10d3\u10d0\u10d5\u10d0\u10d9\u10d0\u10d5\u10e8\u10d8\u10e0\u10d4\u10d7.\n",
        "hackathon_id": "hacktbilisi2015",
        "winner": false
    },
    {
        "description": "\nInspiration-it was an idea of desginer, then we planed everything and did this.\nWhat it does-think it's just for having fun.\nHow I built it- desginer did his job-created map and heroes. and programmer wrote scripts to move and jump.\nChallenges I ran into\nAccomplishments that I'm proud of- i'm proud of that i didn't know that programming languages before i came here, and now in 48 hours i made a great game.\nWhat I learned- how to make some basic type of games in unity with c#'s scripts.\nWhat's next for Mind Over Elements-there will be some levels just like that, but with another chemical elements and enemies.\n",
        "hackathon_id": "hacktbilisi2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nnode.jsexpress.jsesp8266ws2812bhtmlcssjavascriptc++arduino-libssocket.iomqtthandlebars.js\n",
        "hackathon_id": "hacktheholidays",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascriptmongodbtwittergoogle-mapsamazon-web-services\n",
        "hackathon_id": "hacktheholidays",
        "winner": true
    },
    {
        "description": "\nInspiration\n-> Wanted to make something, anything with webgl \n-> Originally based around old games such as Doom\nWhat it does\n-> Renders a map in the style of an old ray-casted game but with hardware acceleration in the browser\n-> Allows for movement around the game world using two mobile devices\nHow we built it\n-> With the webgl graphics rendering pipeline\n-> twgl.js to wrap tedious functionality (compiling shader programs, creating a context, managing some uniforms)\n-> javascript to script the game\nChallenges we ran into\n-> webgl is frustrating (especially for us 'gl noobs)\n-> \nAccomplishments that we're proud of\n-> getting anything rendered in the first place \n-> \nWhat we learned\n-> Don't use webgl for 24hr hackathons?\n-> Don't be too ambitious!\nWhat's next for deranged penguins?\n-> Perhaps not the penguins but we may build further on the level rendering technique\n",
        "hackathon_id": "hacktheholidays",
        "winner": true
    },
    {
        "description": "\nBuilt With\nunity-c#\n",
        "hackathon_id": "hacktheholidays",
        "winner": false
    },
    {
        "description": "\nBuilt With\nthoughtsideasdreamsjavascriptnode.jssails.js\n",
        "hackathon_id": "hacktheholidays",
        "winner": false
    },
    {
        "description": "\nInspiration\nCreating a game in a short amount of time ideas from somes games as super mario or speedrunners\nWhat it does\nit's a 2 players platform games where the goal is to escape the dragon and to go to the flag before the other player \nHow I built it\nbuild in XNA (C#)\nChallenges I ran into\nphysics and gravity managment \nAccomplishments that I'm proud of\nphysics and gravity managment and side scrolling \nWhat I learned\nphysics gravity and side scrolling \nWhat's next for Plateform Game\ndifficulties (sidescrolling speed change and other mode as split screen or infinite mode)\n",
        "hackathon_id": "hacktheholidays",
        "winner": false
    },
    {
        "description": "\npeterdrop\nAirDrop that does work. Transfer photos wirelessly from your mobile to your Computer as easy as possible.\nThe main problem was that when we try to transfer a photo from our mobile phone to our mac, it's so frustrating. That's because AirDrop 1 out of 5 times works great and the other 4 does not detect the other device (the one you want to send the files).\nSo then we built our own, one that within an app you choose your photos from your mobile phone and then the device itself detects the computers you have at the same network and then you choose where you want to send it and it saves directly into the folder you have set.\n",
        "hackathon_id": "hacktheholidays",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonpygamevisual-studio-code\n",
        "hackathon_id": "hacktheholidays",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtml5css3php5javascriptjqueryajax\n",
        "hackathon_id": "hacktheholidays",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonflaskhtmlcssbootstrap\n",
        "hackathon_id": "hacktheholidays",
        "winner": false
    },
    {
        "description": "\nBuilt With\nphpjavaandroidblood\n",
        "hackathon_id": "hacktheholidays",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonflaskpostgresqljavaandroidandroid-studionode.jsexpress.jsgitgithubheroku\n",
        "hackathon_id": "hacktheholidays",
        "winner": false
    },
    {
        "description": "\nMy Inspiration came from gardening , where I realise , plants are not connected to the Internet of things.\nThis Prototype, is able to provide user with soil moisture reading, Temperate / Humidity sensor reading .At the current time am working on so the device is connected to the Internet via Azure mobile services, hence allowing user to see how well their plant is doing, in addition the plant pot can send push notification to your device alerting user if it requires attention.\nThis Prototype was build using Arduino Uno , DHT22 Humidity sensor , OLED Display and Soil moisture sensor.\nThe challenges I ran into , being dyslexic meant I had to re-read three or four times a same webpage with additional information. so it was slow process , still not able to fix the Arduino Ethernet shield IP address issue. but I do have another 3 hours to go so anything can happen.\nAccomplishments that I'm proud of\nThe accomplishment I am proud of is that I learnt how to use the sensor with Arduino , and in doing so I also learnt how to use Microsoft Azure mobile services. \nWhat's next for iPot (The Intelligence Plant Pot)\nThe future is full of unlimited possibilities for this type of device , plan is to add a basic A.I ability, if the IP issue is not fix within the next three hours , then to find a fix for this and make it easier for other user to be able to fix this bug with Arduino. \n",
        "hackathon_id": "hacktheholidays",
        "winner": false
    },
    {
        "description": "\nBuilt With\nunitymonodevelop\n",
        "hackathon_id": "losaltoshacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe were bored. Originally we intended to make a 2d game, but we eventually scrapped this project.\nWhat it does\nA cute rock controlled by arrow keys bounces around.\nHow we built it\nMostly java-script. We drew the rock ourselves.\nChallenges we ran into\nThe fact that none of us had any real experience in HTML, JavaScript, and CSS made this very challenging, though we did have help from some great mentors (especially Sam Escapa!!!!!).\nAccomplishments that we're proud of\nWhat we learned\nWe learned a great deal of JavaScript.\nWhat's next for Cute Rock Game\nAdding actual platforms, a destination goal to get to, and maybe a background and background music?\n",
        "hackathon_id": "losaltoshacks",
        "winner": false
    },
    {
        "description": "\ninspiration\ninspired by hair\nwhat it does\nshares your haircuts\nhow I built it\ntyped characters via computer\nchallenges I ran into\nsometimes worked so fast i couldn't read my code\naccomplishments that I'm proud of\ncollabed on github with only one major mistake\nwhat I learned\nall you have to do is type the correct characters in the correct order\nwhat's next for cuts\nworldwide\n",
        "hackathon_id": "losaltoshacks",
        "winner": false
    },
    {
        "description": "\nInspiration\n\nWe were frustrated by the amount of real-world problems that were being done by hand, yet could be automated with genetic algorithms.\nWhat it does\n\nWe set out to create an experimental genetic algorithm that solves mazes. This example algorithm can be applied to a variety of different applications, including urban design, economy dynamics, bioinformatics, and many more optimization problems. \nHow we built it\n\nWe started with a broken skeleton of a grid-based maze system. We developed the logic behind the genetic algorithm to make it work not only for our purposes, but for a variety of other applications.\nChallenges we ran into\n\n\nTime management: Partitioning sleep and work. We ended up sacrificing efficiency by not sleeping. \nOverambition: Overestimating our abilities given the time provided. We originally planned to incorporate more complex applications, but did not have enough time to finish them with a high standard of quality.\nGit: Was a nightmare.\n\nAccomplishments that we're proud of\n\n\nInteractivity of the maze application\nCoordinating this group effort cohesively\nCommitting to writing the genetic algorithm from scratch\n\nWhat we learned\n\n\nBetter understanding of version control (Git)\nA thorough understanding of the genetic algorithm\nTaking breaks as a healthy way to relieve stress\nAgile development in minimal time\n\nWhat's next for Evolutionary Code\n\nA better question is: \"What isn't next for Evolutionary Code?\"\nLarger scale applications building upon the existing framework\nExpanding to a broader scope of industries\n\n",
        "hackathon_id": "losaltoshacks",
        "winner": false
    },
    {
        "description": "\nCrowdsourcing emergency response to bring you the help that you need, faster.\nInspiration\nAverage 911 emergency response time in the United States is 10 minutes and 17 seconds.\nSerious allergies or asthma attacks can cause permanent damage or death in 5.\nWe decided to build this app because we know multiple people who have serious allergies and we know that such an application would make them feel infinitely safer and could potentially save their lives.\nWhat it does\nSwiftAssist crowdsources emergency response so that people who carry allergy medication, EpiPens, are CPR certified, or are a doctor can immediately respond to emergencies close to them, faster than 911.\nPeople in dire need of help can send for help through a Pebble or iOS app with an easily accessible button. This request will then be processed, and every person in the area who is certified to help and can reach the location faster than 911 will be notified instantly.\nThe Web app is a control center where anybody can view all the emergencies that have been reported and view all activity that is going on, which would be useful to somebody at an emergency response system. In addition to this, it uses the Linkedin API to find concentrations of doctors in each area.\nHow we built it\nWe used Firebase to store user data and for instant notifications. We use Pebble.js for the Pebble app. We use iOS and MapKit for the iOS application. We used Azure and the Photon board for a project to monitor weather data and relate it to emergency frequency.\nChallenges we ran into\n\niOS Push Notifications. We ran into a lot of problems implementing Azure Notifications Hub for iOS.\nGetting Photon to work with Azure.\n\nAccomplishments that we're proud of\n\nGetting Photon to work with Azure. None of us had very much C++ experience, but we were very proud when we finally interfaced and transferred weather data that could be analyzed by Azure.\nGetting the app to work fully. We're very proud of this accomplishment and really believe that our app will save lives.\n\nThings that we learned\nWe did not have any previous experience with Pebble, and were able to build a fully functional and styled app use Pebble.js. Every member of our team can now confidently say that they know their way around Pebble. In addition to this, using Microsoft Technologies took quite a learning curve, but now much of our team has a greater understanding of how Azure functions.\nWhat's next for SwiftAssist\nAndroid app, working more with Photon, emergency response directions from Pebble.\nDemo login and pass\nUsername: sohan@account.com\nPassword: vichare\n",
        "hackathon_id": "losaltoshacks",
        "winner": false
    },
    {
        "description": "\nMyFarm\nMyFarm is an application for farmers in Myanmar that helps them manage their plots and farms of land. In response to the KPCB Social Good challenge at the Los Altos Hacks Hackathon, we built this.\nFeatures\n\n Water Management - Taking into account evaportranspiration and the crop factors, we calculate the liters necessary per day to farm a plot\n Nitrogen Enrichment - Based off crop and fertilizer type, exact amount of fertilizer needed is returned\n Plot Management - Farmers can delineate and manage plots, focusing on crop rotation\n Scheduling - How long and when to harvest a certain plot and crop\n Simple UI - Farmers can easily manage their land by walking around a plot, and designating its contents\n Managing Poor Network Connectivity - Because network connection in rural areas in Myanmar are not very reliable, all data is stored locally on the device, then synced with a cloud when network connection becomes available.\n\nTo-do features\n\n Sharing Plot Information - Farmers can export their plots and plot information in an easy-to-access format, so farmers can share plot and farming information.\n\nContributors\nJake Glass, Mihir Trivedi, Louie McConnell, Peter Boennighausen\n",
        "hackathon_id": "losaltoshacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nWhile in statistics class we realized inputting data into calculators can be quite menial, and a task that can be easily automated. Further more, students of lower socioeconomic backgrounds sometimes do not have access to tools like the TI84 calculator, which allow them to utilize statistical procedures, whereas they might have access to computers in their schools. We used the synergy of these two principles to inspire the statisticians of tomorrow. \nWhat it does\nOur Java application has the user specify URL with a search term, or something desired to be found on the web page.\nA java web crawler using Jsoup then finds urls, with that search term, and returns any relevant quantitative data to a statistics engine. The statistics engine performs user requested calculations and presents that calculated data in an appropriate format. It can perform basic statistical analysis of one or two links, Z-Test Confidence Intervals and Hypotheses tests, along with the corresponding T-Test Procedures. It can also calculate various forms or regression and upon choosing the optimal equation, display it graphically. \nHow we built it\nJsoup- With the help of Jsoup we created a java web crawler that finds the first instance of the inputted search term.\n The program then parses the page the search term is located on, and gets relevant quantitative data with regard to the search term. \n Statistical Engine- Using  the Jsoup web crawler and integrating bing search query, we quickly found functions to use to perform calculations like normal distributions, student's distributions, as well as various regressions.                                        \nChallenges we ran into\nBecause we only found out about JSoup halfway through the hackathon, our original web-crawler tried checking the content using a rudimentary HTML Parser we wrote ourselves, which was susceptible to code that did not follow standard formatting conventions. To solve this, we researched, and replaced our method with a methods from JSoup that reversed our process and therefore received the same result without compromising memory.\nAccomplishments that we're proud of\n We are quite proud of the integration with Bing, because we had to study HTTP request protocols to integrate Bing search query with Java, such that our algorithm can get results that are fine-tuned to what the user requests. We are also quite proud of our dysfunctional, self-built HTML parser, but it needs to be refined before we can implement it in an algorithm such as this.\n\nWhat we learned\nWe learned search engine query integration, as well as the complexity of many, many statistic formulas we often took for granted, as well as, of course, the importance of teamwork!\nWhat's next for Stats Engine\nWe hope to improve the GUI, and include more statistical analysis options. We are also looking into refining the web-crawler such that results are loaded more efficiently and presented in an easy to view and understand fashion.\n",
        "hackathon_id": "losaltoshacks",
        "winner": false
    },
    {
        "description": "\nPacking tends to be a scramble at the last minute\u2013clothes scattered around the floor, toiletries strewn across the counter, phone chargers left unnoticed by the outlet. With I'll Pack A, we wanted to provide an easier way for people to create a comprehensive packing list and make sure they are prepared for the journey that awaits them. To present a clean, user-friendly experience, I'll Pack A's packing list is entirely visual. Tapping on a \"Shirts\" icon five times, for example, would add five shirts to your packing list. Repacking at the end of your trip is similarly convenient, and ensures that you are not leaving behind any personal items. \nI'll Pack A was created using Swift during the 24-hour Los Altos Hacks hackathon.\n",
        "hackathon_id": "losaltoshacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\nrubyhtmljavascriptpythoncssjqueryruby-on-railsgithubgitredbullmemesdankdank-memes\n",
        "hackathon_id": "losaltoshacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nIn my high school there are always hyperlinks scattered on the wall containing important information. The annoying part is these links are always extremely incoherent and extremely long. I always type a 30 character link only to find out I have made three typos along the way. I'm solving the problem I face almost on a daily basis.\nWhat it does\nCadence uses optical character recognition to recognize text and sort only the links inside said text. The browser will then open the link automatically so you don't have to waste type manually typing it up.\nHow I built it\nI used the Google Tesseract API for OCR and made an algorithm the parses through all the text and only leaves out the text that is useful.\nChallenges I ran into\nThe hard part was finding a way to sort through the text in order to leave out unnecessary information for all cases. This took me a while to figure out but eventually I came up with a solution\nWhat I learned\nI learned how extremely capable the devices in our pockets are. They are able to accurately recognize images, process them and send out information in a matter of seconds. This would never be convenient 5 years ago which shows how much the rate of technological progress is increasing\nWhat's next for Cadence\nEventually I hope for Cadence to recognize text in real time with little to no input delay. This would drastically improve the ease of use and would also be a challenge worthwhile to solve. The design also needs a bit of touch up but overall I am happy what I created in a day\n",
        "hackathon_id": "losaltoshacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe were inspired by the food truck outside the Microsoft building during Los Altos Hacks. We were kind of sad that our previous project didn't work out very well, but we realized that the food truck had food readily available for us, because they were called. We then thought of how our high school campuses are open, allowing students during lunch and free periods to go get food and such outside of campus. We thought it would be a good idea to have instead of a giant mass of people swarming the nearest restaurant, we could have people take orders for each other. It was a win-win situation in our eyes.\nWhat it does\nOur web application allows students to request food and view orders from their classmates. We used the Twilio API to send text messages to the students who order and to notify them of their order status, as well as to the \"Dashers\".\nChallenges we ran into\nBefore we started CampusDash, we tried a project with the Edison board. We ran it to several issues while connecting the board to the command line.\nAccomplishments that we're proud of\nWe are proud of our password and email address verification, our Twilio API integration, and the CSS design.\nWhat's next for CampusDash\nThe next step for CampusDash would be to create a chat room with the orderee and the student picking up the order. We would also like to format with different orders and delete the orders after a while.\n",
        "hackathon_id": "losaltoshacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nOn the first day of my Government class, someone asked why Trump was a communist... Clearly, politics wasn't that big of an issue for students in my high school. \nWhat it does\nThis bucket-ball game of political trivia increases political awareness among younger generations by \"gamifying\" politics just in time for the 2016 elections. Candidates' faces, represented as balls, fall from the top of the screen as the user tries to catch them in buckets labeled with political statements. If the candidate would agree with the labeled statement on the bucket, the user gets a point! Woohoo! And the user learns more about that certain candidate!\nHow we built it\nWe developed our iOS app on XCode using Swift 2.0. We relied heavily on the Sprite-Kit framework to create our game scene and animate the dropping balls and sliding bucket.\nChallenges we ran into\nOne of our biggest challenges was accurately positioning the sprites on the screen where we wanted them to be and to get the candidate heads to fall faster the longer they were falling. In addition, we wanted to get the heads to drop in a random order and random spacing\u2014we enlisted Make School for help with this.\nAccomplishments that we're proud of\nWe are proud of the idea behind our app and its goal\u2014namely, that we are trying to increase political awareness among high schoolers. Many high school seniors and even some juniors will be able to vote this year, and so it was really important for us to create a game that would be educational as well as fun enough to keep them coming back to the app. We are also proud of what we could accomplish using Sprite-Kit, as it is the first time we used the framework.\nWhat we learned\nWe learned how to use Sprite-Kit to develop games and make our apps more interesting. We also went through a series of iterations on our original idea, after which we realized a great app needed to be simple, educational, and overall mindlessly fun!\nWhat's next for CandidateCatch\nWe want to include local and state election candidates as well, which typically have even lower voter turnouts. We also want to generate candidates based on geographic location.\n",
        "hackathon_id": "losaltoshacks",
        "winner": false
    },
    {
        "description": "\njarate\nFor 2016 los altos hacks: http://jarate.co\nJarate is an intelligently designed web and mobile application that can track the user's urine input and output the user's dehydration rate, amount of water needed to drink, and more (such as sleeping time and accessibility for other applications based on color. Coming soon.).\nWith use of machine learning algorithms in order to optimize the difference between the RGB indices of the reference datapoints, we were able to develop an application that was both applicable in purpose and simple to use. These reference points were acquired from several credible sources we found online. We used the Microsoft Azure platform to perform much of the coding in this project.\nIn addition, we incorporated the IBM Watson Language Identification API in order to allow user functionality for other native languages, such as Spanish and Chinese (however, this is still a work in progress).\nOverall, Jarate is an application that can bring both great social help to those who want to watch their health as well as maintain a simple and interactive interface with great expansive and helpful possibilities.\n\nSources\nPrevention,. 2014. \"What The Color Of Your Pee Says About Your Health\". Accessed January 31 2016. http://www.prevention.com/health/what-color-your-pee-says-about-your-health.\nImages.sampletemplates.com,. 2016. Accessed January 31 2016. http://images.sampletemplates.com/wp-content/uploads/2015/06/Urine-Color-Chart-Dehydration.jpg.\nCs229.stanford.edu,. 2016. Accessed January 31 2016. http://cs229.stanford.edu/proj2014/David%20Frankl,Machine%20Learning%20In%20JavaScript.pdf.\nSciencedirect.com,. 2016. \" A Region Growing And Merging Algorithm To Color Segmentation \". Accessed January 31 2016. http://www.sciencedirect.com/science/article/pii/S0031320396001471.\nCcs.neu.edu,. 2016. Accessed January 31 2016. http://www.ccs.neu.edu/home/ekanou/ISU535.09X2/Handouts/Review_Material/zipfslaw.pdf.\nDomain.com: http://urinedanger.com \n",
        "hackathon_id": "losaltoshacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe were inspired by our old and hard to use school website and how hard it was to navigate and access data from it.\nWhat it does\nIt takes all the information on the website and condenses it to make it easier to find. \nHow we built it\nWe used Swift and Java\nChallenges we ran into\nFinding information from our school's website. Also, adding all that data to the app.\nAccomplishments that we're proud of\nGathering all the data we needed for the application and making the map that is scrollable and able to pan.\nWhat we learned\nHow to make images scrollable and able to pan. Navigation side bar.\nWhat's next for LAHS App\nTalk with the school to see if any additional information could be added.\n",
        "hackathon_id": "losaltoshacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nMost people are motivated by loss instead of gain - when someone knows that they can gain a reward, no matter how big it is, they'll still have the chance to put it off. But by showing them their losses, they are instantly motivated, because they are devastated with regret instead, and have no choice but to immediately change to make sure that they don't do the same mistake again. Lazy uses this philosophy to enhance the productivity experience and make a unique app unlike the thousands of other productivity apps out there.\nThis psychology has also been proven with through a topic in economics and decision theory, called loss aversion. Loss aversion studies also suggest  that losses can be twice as powerful as gains psychologically.\nWhat it does\nLazy is a simple one touch app. There are 2 modes to it - Work and Slack mode. All you need to do is tap the screen to switch modes, and Lazy will start recording the exact amount of time you are working or slacking off, and then presents it visually in a unique pie chart to show how much of the day you spent working or wasting time. There's also a motivation button at the button that will present fun quotes when tapped. Unlike normal productivity apps, these quotes will scold the user for not working in order to ensure the philosophy of motivation by loss.\nHow I built it\nI used Xcode and Firebase to build the iOS app, and also built a mini web version companion as well.\nChallenges I ran into\nCertain animations were tricky to figure out such as the way the graph animates to fill up based on the different time values. Firebase was also tricky to get it working cross-platform.\nAccomplishments that I'm proud of\nWhat I learned\nWhat's next for Lazy\n",
        "hackathon_id": "losaltoshacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\nswift\n",
        "hackathon_id": "losaltoshacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nAs high\u2013schoolers, we haven't had the opportunity to work with many companies or startups; however, with Mercari we are trying to connect people with ideas to those that can create the idea in exchange for equity in the company. Instead of working for no salary, anyone can bid on projects; if the seller \u2013 the person with the idea \u2013 agrees, they exchange contact information and can work together.\n",
        "hackathon_id": "losaltoshacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe reason as to how we got the idea for this app is from us having too much stress during our school's finals. We wanted to make a really simple app, which would let the user use two different methods to reduce their anxiety. \nWhat it does\nReal-Lief is a stress reliever app, that features two unique stress relieving techniques. The first method, \"color generator\", produces random hex color values using \"math.random\". To use it, the user has to simply tap the blue circular button. As a result, the background will change to a randomly generated color. The process is simple, and easy to use. Moreover, the second method, \"tremble\" is another available option to relieve stress. When the triangular button is clicked, the mobile device vibrates for three seconds. A simple tap, can stop the vibration, and after the three seconds are over, the timer is re-set, and the user can feel free to start again. All of the options provide a back button, to the start screen of the application, allowing a simple transition between each method.\nHow we built it\nReal-Lief is built through the use of Android Studio, using the language Java.\nChallenges we ran into\nWe encountered some obstacles when designing the buttons, and implementing the color generator.\nAccomplishments that we're proud of\nWe're satisfied to know, that we successfully built an app, that any person can use to fight through a stressful experience.\nWhat we learned\nWe learned how to generate random colors, and control the vibration settings in a phone.\nWhat's next for Real Lief\nWe're in the process of adding more options a costumer can use to relive their stress. Another possible extension, could be a statistics screen which logs how many times a user clicks in each of the different  modes, displaying the options in usage from greatest to least.\n",
        "hackathon_id": "losaltoshacks",
        "winner": false
    },
    {
        "description": "\nThe Name\nReizoko means fridge in Japanese.\nInspiration\nEveryone has food in their fridge, but not everyone knows how to cook. So, in typical millennial fashion, we decided that we never wanted to have to look in a cookbook again.\nWhat it does\nReizoko allows users to take pictures of the items in their fridge, compiles them into a list of ingredients, and returns the optimal recipe as well as relevant information and suggestions.\nHow we built it\nStep 1: The Front End \nWe began our design with the mantra of simplicity. We built an easy to use interface which ultimately leads users to take pictures of food items they would use to cook. The entirety of the front end was written from scratch in Swift in Xcode, which offered us flexibility in coding style.\nStep 2: Image to Text\nAfter the user took a picture, we used the CloudSight API, an image processing API, to identify which food product was represented in the image and then return raw data representing that product. The next step was to use natural language processing in order to convert that raw data into a form usable by our next API, Spoonacular.\nStep 3: Text to Recipe\nThe final step in our project, we used the spoonacular API in order to find the optimal recipe based on the list of ingredients, returning the recipe for which we had the most ingredients. The API returned a json object which we then used to extract raw information including the number of ingredients in the recipe that the user owned, the rating of the recipe, and a URL that we could display locally in the app with all relevant instructions.\nChallenges we ran into\nThe first challenge we ran into was that two of the people on our team did not know Swift for an iOS project. Then, we realized that one member of our team couldn't even run Swift because he has a PC, which we overcame by setting up a connection to a fellow teammate's Swift server, a function developed by one of the mentors (Gautam Mittal) in a previous project. Moreover, many of the API's we planned on using ended up requiring payment or lacked proper documentation, prompting us to email certain companies requesting full access for a Hackathon, a strategy that proved effective in most instances. Even after receiving access to the API's, we had never worked with REST API's, which posed a new challenge and many hours of seemingly pointless debugging, as is common with learning new subject matter. Finally, the quintessential Hackathon challenge of of time forced our team to really come together and outline ambitious but still reachable (through a combination of sleep deprivation and one too many red bulls) goals.\nAccomplishments that we're proud of\nFirst and foremost, we as a team had a cool idea and in less than twenty-four hours, we created a fully functional app from scratch. Moreover, we overcame differences in individual visions of the app to create a complete product which combines our passions and viewpoints.\nWhat we learned\nOne of the most important things we learned at this Hackathon as the value of having a unified vision. We realized a few hours in that if we were all freelancing different parts of the app, we would end up with five different parts for five different apps. Thus, we had to periodically appoint a new person as the \"head\" of the team, who would put forward their vision for the app and point everyone else in the right direction to reach that end goal. Moreover, we solidified our knowledge of swift and the nuts and bolts of iOS app making. Finally, we learned that the technical aspect of any app is only one part of the user experience. Contrary to our expectations coming into the Hackathon, we spent the most time developing a sleek, elegant, but easy to use design for a product.\nWhat's next for Reizoko\nThe core of Reizoko is not the product, but rather the people, and we as a group are highly motivated and prepared only for further growth. Our ideas for expansion include but are not limited to:\n    1) Take one picture of fridge and separate contents automatically.\n2) Make the image identification process faster.\n3) Maybe build our own classifier for food.\n4) Add filters allowing users to specify cuisine, diet type, and nutritional restrictions among other fields.\n",
        "hackathon_id": "losaltoshacks",
        "winner": false
    },
    {
        "description": "\nVELOCITY\nA simple android lock screen replacement/overlay\nFeatures a todo list, digital clock, random inspirational quote and background\ninspired by Momentum Chrome extension\n",
        "hackathon_id": "losaltoshacks",
        "winner": false
    },
    {
        "description": "\nThis project was created for Krizia Araracap, Sam Joffe, and Yann Sartori to learn JavaScript. Darryl Yeo served as their mentor, guiding the three young apprentices through the mystical land as they embarked on their first JavaScript experience. He also used this as an opportunity to practice his slick CSS design skills.\nKrizia, Sam, and Yann brainstormed ideas to add to the game and implemented them using their newfound JavaScript knowledge. Whenever they ran into an issue or had a question, Darryl was there to aid.\nInspiration\nWanted to apply newly learned JavaScript skills in a fun and interactive way.\nWhat it does\nprompt()s a question to the player and awards EXP points for correct answers. Questions vary from arithmetic problems to geography trivia.\nHow we built it\nThree of us (Krizia, Sam, and Yann) took a crash course in JavaScript on Codecademy. We used JSFiddle to collaborate on the project and bounced ideas off each other as we worked. We tried to incorporate as many features of JavaScript as possible in order to demonstrate our newfound skills.\nChallenges we ran into\nWe had a lot of choices to make in terms of how to incorporate each language feature into our quiz game. We had a very wide range of experience levels and had to help each other get up to speed, but in the end, we worked very well together.\nAccomplishments that we're proud of\nLearning JavaScript in 3 hours and being able to incorporate it into a full-fledged game right away. The flexibility of our team and how well our jumble of ideas were put together so coherently.\nWhat we learned\nJavaScript, and how to incorporate it into an HTML webpage in order to make it interactive.\nWhat's next for The Wackiest Adventure Game You'll Ever Play.\nOne idea we would like to have implemented is a battle system, where the player's attack power was directly related to how many points he/she has earned from the challenges. Of course, most of us have just started with JavaScript and wouldn't mind refactoring and rewriting the code as we gain more skills.\n",
        "hackathon_id": "losaltoshacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\nswiftsprite-kitxcode\n",
        "hackathon_id": "losaltoshacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\nunityoculuscsharpvrkinect\n",
        "hackathon_id": "losaltoshacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nAfter brainstorming social problems in society, we found out that human trafficking and kidnapping are one of the biggest problems. With movies such as Taken and Eden, we realized that were are a multitude of situations in which one may require emergency services but be unable to speak. We decided to make an app which could have the potential to save lives by translating text to speech to an emergency service operator, and thus Emergency Contactor was created.\nWhat it does\nEmergency Contactor allows users to submit text into a web form that asks for information such as location, name, phone number, and description of the situation.  The web form then uses Twilio to convert the text to speech, which will then be relayed to the operator.   The operator can then report the status of the situation by pressing a button on the phone. . \nChallenges we ran into\nFiguring out how to use Twilio, Twiml and node.js, how to retrieve the information of a button being pressed on the phone (ie. how to tell the program to do something after a number on the phone keypad, such as 1, is pressed) and how to use GeoLocation to collect location information about the caller.\nAccomplishments\nFinally figuring out how to use Twilio, using global variables in node.js and retrieving digits pressed on the phone.\nWhat we learned\nHow to use Twilio, how to use global variables, how to create servers, how to retrieve digits pressed on the phone \nWhat's next for Emergency Contactor\nFigure out how to automatically provide location info about the caller, how to get the 911 operator to be able to communicate more extensively with the caller, maybe using Voice to Text services\n",
        "hackathon_id": "losaltoshacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\nwebsitebuilder.com\n",
        "hackathon_id": "aycnyc3",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe all realized that we're sometimes indecisive on what we should wear to certain occasions, and thought it would be nice if we could get opinions from strangers or friends on what look they liked better.\nWhat it does\nOur app allows people to post two or more images of their outfits and receive votes from others, picking which outfit they prefer. The person posting the outfits would write where they're going so the voters could have a better idea on which outfit suits the occasion.\nHow we built it\nFirst we had to decide on the layout for all the screens of our app. Then we took photos of ourselves in different outfits to use as examples for the voting pages. We realized that for each picture we took, we needed to have two additional versions (slay/green and nay/red) which we edited in Google Slides. We also designed our logo and homepage buttons with picmonkey. Finally, we built our app using mit app inventor 2.\nChallenges we ran into\nIt was difficult to assign roles because there was a limit on how many people could be logged in to the same project. We were new to app inventor so we had to learn how to use the site and manage the blocks/coding.\nAccomplishments that we're proud of\nWe believe our app in general, and the strategy we came up with in order to make it, was a big accomplishment. We had decided to start off with a sketch of our design and layout before we actually did anything on the app inventor site. This allowed us to be better prepared to create our app. We also found that it was easy for us to edit the photos we were using for the application.\nWhat we learned\nWe learned event handling, like how to code something happening when someone clicked a button.\nWhat's next for Slay or Nay\nWe need to add a login page, create posts so users can post their own photos, as well as manage previous posts (My Looks), connect with stores to earn money through advertising based on specific themes of outfits (ex. prom dresses for prom theme), connect with social media and other fashion sites like The Hunt and Polyvore.\n",
        "hackathon_id": "aycnyc3",
        "winner": false
    },
    {
        "description": "\nBuilt With\ncsshtml\n",
        "hackathon_id": "aycnyc3",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascript\n",
        "hackathon_id": "aycnyc3",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtmlcss\n",
        "hackathon_id": "aycnyc3",
        "winner": false
    },
    {
        "description": "\nBuilt With\nweebly\n",
        "hackathon_id": "aycnyc3",
        "winner": false
    },
    {
        "description": "\nInspiration\nFinding friends\nWhat it does\nMatches people together\nHow we built it\nProcessing\nChallenges we ran into\nEverything\nAccomplishments that we're proud of\nStuff\nWhat we learned\nTeamwork\nWhat's next for Over Coffee\nFixing bugs. Make it work.\nArrayList users = new ArrayList();\nimport controlP5.*;\nControlP5 controlP5;\nTextfield userTextField;\nTextfield passTextField;\nboolean searchDone;\nPFont f;\nint index;\nboolean loggedIn;\nString myName;\nint myAge;\nString[] myInterest = new String[6];\nint myZip;\nString myPlace;\nString myUserName;\nString myPassword;\nboolean[] compatible = new boolean[100];\nvoid setup () {\n  size(1024, 600);\n  background(#7AF4A1);\n  frameRate(30);\n  controlP5 = new ControlP5(this);\n  f = createFont(\"Arial\", 30, true);\n  textFont(f);\n  userTextField = controlP5.addTextfield(\"user\", (int) width/20, (int) (height/1.4), (int)(width*530/600), 60);\n  passTextField = controlP5.addTextfield(\"pass\", (int) width/20, (int) (height/1.2), (int)(width*530/600), 60);\n}\n/*\ntop\n top left 30,730\n bottom left 30, 790\n top right 560, 730\n bottom left 560, 790\nbottom\n top left 30, 850\n bottom left 30, 920\n top right 560, 850\n bottom right 560, 920\n /\nvoid menu () {\n  PImage menu = loadImage(\"ScreenDesign.jpg\");\n  background(#7AF4A1);\n  image(menu, width/2 - (int) height/3.4, 0, (int) height/1.7, height);\n  controlP5.addButton(\"enter\").setPosition(width/2 - 40, height - 30).setSize(80, 20);\n  /\n   if (mousePressed && mouseX >= width/20 && mouseX <= (int) width/1.07 && mouseY >= (int) height/1.4 && mouseY <= (int) height/1.3) {\n   onUser = true;\n   onPass = false;\n   }\n   if (mousePressed && mouseX >= width/20 && mouseX <= (int) width/1.07 && mouseY >= (int) height/1.2&& mouseY <= (int) height/1.11) {\n   onPass = true;\n   onUser = false;\n   }\nif (onUser) {\n   if (keyPressed && keyCode >='a' && keyCode <='z') {\n   user = user + key;\n   userLength++;\n   }\n   }\n   if (onPass) {\n   if (keyPressed && keyCode >='a' && keyCode <='z') {\n   passLength++;\n   pass = pass+ key;\n   passLength++;\n   }\n   }\n//textSize(height*0.06);\n   if (user != null)\n   text(user, (int) width/20, (int) height/1.4);\n   if (pass != null)\n   text(pass, (int) width/20, (int) height/1.2);\n   */\n}\nvoid draw () {\n  String[] usernames = loadStrings(\"usernames.txt\");\n  String[] passwords = loadStrings(\"passwords.txt\");\n  String[] ages = loadStrings(\"ages.txt\");\n  String[] zips = loadStrings(\"zips.txt\");\n  String[] interests1 = loadStrings(\"interests1.txt\");\n  String[] interests2 = loadStrings(\"interests2.txt\");\n  String[] interests3 = loadStrings(\"interests3.txt\");\n  String[] interests4 = loadStrings(\"interests4.txt\");\n  String[] interests5 = loadStrings(\"interests5.txt\");\n  String[] interests6 = loadStrings(\"interests6.txt\");\n  String[] names = loadStrings(\"names.txt\");\nif(loggedIn){\n    if(!searchDone){\n      search();\n      searchDone = true;\n    }\n    background(#7AF4A1);\n    for(int i = 0; i < 100; i++){\n      if(compatible[i]){\n        textFont(f);\n        text(names[i]+ \" \" + interests1[i] + \" \" + interests2[i] + \" \" + interests3[i]+ \" \"  + interests4[i]+ \" \"  + interests5[i]+ \" \"  + interests6[i] + \" \" + zips[i]); \n      }\n  }\n  menu();\n}\nclass User {\n  String[] usernames = loadStrings(\"usernames.txt\");\n  String[] passwords = loadStrings(\"passwords.txt\");\n  String[] ages = loadStrings(\"ages.txt\");\n  String[] zips = loadStrings(\"zips.txt\");\n  String[] interests1 = loadStrings(\"interests1.txt\");\n  String[] interests2 = loadStrings(\"interests2.txt\");\n  String[] interests3 = loadStrings(\"interests3.txt\");\n  String[] interests4 = loadStrings(\"interests4.txt\");\n  String[] interests5 = loadStrings(\"interests5.txt\");\n  String[] interests6 = loadStrings(\"interests6.txt\");\n  String[] names = loadStrings(\"names.txt\");\nString name;\n  int age;\n  String[] interest = new String[6];\n  int zip;\n  String place;\n  String userName;\n  String password;\nUser (int ind) {\n    age = int(ages[ind]);\n    zip = int(zips[ind]);\n    name = names[ind];\n    age = int(ages[ind]);\n    for (int j = 0; j < 6; j++) {\n      myInterest[j] = interests1[ind];\n      myInterest[j] = interests1[ind];\n      myInterest[j] = interests1[ind];\n      myInterest[j] = interests1[ind];\n      myInterest[j] = interests1[ind];\n      myInterest[j] = interests1[ind];\n    }\n  }\nint checkComp (User a, User b) {\n    int compatability = 0;\n    for (int c = 0; c < a.interest.length; c++) {\n      for (int d = 0; d < b.interest.length; d++) {\n        if (a.interest[c] == b.interest[d])\n          compatability++;\n      }\n    }\nif (a.age <= b.age + 3 && a.age >= b.age - 3)\n  compatability += 3;\nreturn compatability;\n\n}\n}\nvoid enter(float theValue) {\n  String[] usernames = loadStrings(\"usernames.txt\");\n  String[] passwords = loadStrings(\"passwords.txt\");\n  String[] ages = loadStrings(\"ages.txt\");\n  String[] zips = loadStrings(\"zips.txt\");\n  String[] interests1 = loadStrings(\"interests1.txt\");\n  String[] interests2 = loadStrings(\"interests2.txt\");\n  String[] interests3 = loadStrings(\"interests3.txt\");\n  String[] interests4 = loadStrings(\"interests4.txt\");\n  String[] interests5 = loadStrings(\"interests5.txt\");\n  String[] interests6 = loadStrings(\"interests6.txt\");\n  String[] names = loadStrings(\"names.txt\");\nString user = userTextField.getText();\n  String pass = passTextField.getText();\nfor (int i = 0; i < usernames.length; i++) {\n    if (user == usernames[i] && pass == passwords[i]) {\n      loggedIn = true;\n      myName = names[i];\n      int myAge;\n      String[] myInterest = new String[6];\n      for (int j = 0; j < 6; j++) {\n        myInterest[j] = interests1[i];\n        myInterest[j] = interests1[i];\n        myInterest[j] = interests1[i];\n        myInterest[j] = interests1[i];\n        myInterest[j] = interests1[i];\n        myInterest[j] = interests1[i];\n      }\n      int myZip = int(zips[i]);\n      String myUserName = usernames[i];\n      String myPassword = passwords[i];\n  index = i;\n}\n\n}\n}\nboolean checkComp (User a, User b) {\n  String[] usernames = loadStrings(\"usernames.txt\");\n  String[] passwords = loadStrings(\"passwords.txt\");\n  String[] ages = loadStrings(\"ages.txt\");\n  String[] zips = loadStrings(\"zips.txt\");\n  String[] interests1 = loadStrings(\"interests1.txt\");\n  String[] interests2 = loadStrings(\"interests2.txt\");\n  String[] interests3 = loadStrings(\"interests3.txt\");\n  String[] interests4 = loadStrings(\"interests4.txt\");\n  String[] interests5 = loadStrings(\"interests5.txt\");\n  String[] interests6 = loadStrings(\"interests6.txt\");\n  String[] names = loadStrings(\"names.txt\");\nint compatability = 0;\n  for (int c = 0; c < a.interest.length; c++) {\n    for (int d = 0; d < b.interest.length; d++) {\n      if (a.interest[c] == b.interest[d])\n        compatability++;\n    }\n  }\nif (a.age <= b.age + 3 && a.age >= b.age - 3)\n    compatability += 3;\n  if (compatability > 5)\n    return true;\n  else\n    return false;\n}\nvoid search () {\n  String[] usernames = loadStrings(\"usernames.txt\");\n  String[] passwords = loadStrings(\"passwords.txt\");\n  String[] ages = loadStrings(\"ages.txt\");\n  String[] zips = loadStrings(\"zips.txt\");\n  String[] interests1 = loadStrings(\"interests1.txt\");\n  String[] interests2 = loadStrings(\"interests2.txt\");\n  String[] interests3 = loadStrings(\"interests3.txt\");\n  String[] interests4 = loadStrings(\"interests4.txt\");\n  String[] interests5 = loadStrings(\"interests5.txt\");\n  String[] interests6 = loadStrings(\"interests6.txt\");\n  String[] names = loadStrings(\"names.txt\");\nfor (int i = 0; i < names.length; i++)\n    users.add(new User(i));\n  for (int i = 0; i < names.length; i++) {\n    if (checkComp(users.get(index), users.get(i)))\n      compatible[i] = true;\n  }\n}\nvoid display () {\n}\n",
        "hackathon_id": "aycnyc3",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaprocessing\n",
        "hackathon_id": "aycnyc3",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtml5javascriptcssgoogle-oauthphpgoogle-slides\n",
        "hackathon_id": "aycnyc3",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtmlcsstwilio\n",
        "hackathon_id": "aycnyc3",
        "winner": false
    },
    {
        "description": "\nBuilt With\ninvisionphotoshopgamemaker\n",
        "hackathon_id": "aycnyc3",
        "winner": false
    },
    {
        "description": "\nBuilt With\nwebsitebuilder.com\n",
        "hackathon_id": "aycnyc3",
        "winner": false
    },
    {
        "description": "\nOur inspiration\nOut inspiration arose from our struggles with organization and wanted to be able to create an agenda that will organize our work for an entire week. This will eliminate the need to have a physical planner for a week, that will increase bag space decreasing weight on your shoulders. This allows for student organization to not be placed at stake for comfort.\nWhat this program does\nThis program allows for users to be able to input their daily assignments in each class for an entire week, as well as upcoming tests and/ or quizzes. The program will feature a GPA Table at the bottom, allowing users to have a table readily available in order for them to focus on a specified grade goal.\nThis program was built using\nThis program was built using html and css in order to create a table and a reference table that will allow user input. The program features a logo of our school and the title of the program which is Weekly Agenda.\nChallenges we ran into\nSome challenges that we ran into was creating a table that had user input as well, replacing the already existing button that asked the question. There were some issues that were confronted while centering the words, and creating a space between the image and the first table.\nAccomplishments that we're proud of\nWe are very proud about having a table that received user input from a button and replaced the button with the user input. We are glad that we were able to create a second table and have it below the first as a reference tool.\nWhat we learned\nWe learned html, as well as java script in order to create tables and incorporate user input into the table.\nWhat's next for School Weekly Agenda\nWe want to create a more attractive image to student audiences, allowing them to be able to have a visually appealing table to fill out their information in. We want to include a GPA Table that will ask the user to follow a certain formula in order to calculate their GPA.\n",
        "hackathon_id": "aycnyc3",
        "winner": false
    },
    {
        "description": "\nBuilt With\nin-scratchand-wix\n",
        "hackathon_id": "aycnyc3",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavahtmlcss\n",
        "hackathon_id": "aycnyc3",
        "winner": false
    },
    {
        "description": "\nBuilt With\nwebsitebuilder\n",
        "hackathon_id": "aycnyc3",
        "winner": false
    },
    {
        "description": "\nInspiration\nConcurrency is hard. Context switches, cache inconsistencies and deadlocks can happen in unintuitive ways. When you write your code, you think about the happy path. When your OS runs it, it does everything it can to defy your assumptions.\nWe built a game that lets you play out how bad concurrency fails by playing the scheduler.\nWhat it does\nWe have a campaign of 16 concurrency challenges. You can run it challenge by challenge, or play in any order you want. There is a story :)\n\nEach challenge has several threads, each running their own C# code. Your objective is to make the code perform something forbidden - entering a critical section twice, entering a deadlock, etc. Our first challenge has a tutorial.\n\nYou execute individual threads command by command. You can expand non-atomic instructions into smaller operations (e.g., a nonatomic assignment has a separate load and store). You can also undo your actions.\n\n\n\nYour progress is saved in HTML5 Local Storage.\n\nIt works well on mobile devices.\nHow we built it\nDeadlock Empire is a single-page JavaScript application. The UI is mostly Bootstrap and jQuery. We also used Bootbox for confirmation dialogs and Intro.js for a tutorial.\nChallenges we ran into\nWe had to brainstorm for a new project after our primary idea (which was a robot for Facebook Messenger) was obstructed by bad internet. We had to properly implement some tricky synchronization primitives.\nAccomplishments that we're proud of\nDespite having a 24-hour deadline, we finished the most important synchronization primitives. Overall, the app is rather polished (e.g. Back/Forward buttons work, it renders well on mobile phones, and we don't know about any bugs). We built many levels. We think we also did a pretty good job on the UI. \nFinally, The Deadlock Empire is almost ready for publication and has the potential to help many students with understanding the intricacies of parallel programming.\nWhat we learned\nWe learned Intro.js and exercised our JavaScript muscles.\nWhat's next for The Deadlock Empire\nWe'll add some levels and more primitives (both high-level and low-level), additional memory models and instruction reordering. We will publish it very soon.\nThe code\nThe repository's on GitHub: https://github.com/deadlockempire/deadlockempire.github.io\n",
        "hackathon_id": "hackcambridge",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe were looking at creative ways to advertise my startup. I was utilizing Google Adverts, Facebook Ads etc. One day I was sat in a take-a-way and I noticed a poster. This caught my attention and got me thinking whether having my advert placed in public places would help me reach my target audience.\nThis is where the idea for Bill is smart came from.\nWhat it does\nThis platform allows businesses to bid for advertisement in the local area. In addition businesses can signup to display our adverts from our network. The platform is based on the cloud and has clients built on top of Rasberry-Pi. This means the startup costs are not huge.\nThe platform will allow for interacting with the adverts. One issue that we came across was tracking the people that see these adverts. This is where we utilized Haven's Face Detection APIs. We have a proof of concept which detects the number of impressions an advertisement has had.\nHow I built it\nIt was built with love, utilizing Node.js & the chromium engine.\nChallenges I ran into\nThe ports on the WiFi effected the speed we could work at. Their were no other main issues.\nAccomplishments that I'm proud of\nWe believe that companies would love to use. Our startup Eat Homely would really gain attraction from utilizing this new innovative platform. \nWhat I learned\nWhat's next for Bill is smart\nTo build the platform at an enterprise grade\n",
        "hackathon_id": "hackcambridge",
        "winner": false
    },
    {
        "description": "\nProblem\nThousands of firefighters die unnecessarily every year from fires\nSolution\nA firefighter's favourite toy! - The Firebot is a life-saving autonomous robot detects fires throughout a building using IoT sensors\nhttps://twitter.com/ARMUniProgram/status/693503628292800512\nWhat its made of\n3 Parts: 1. ARM Nucleo STM42 Chip 2. Blutooth Connector 3. Lego Robot\nChallenges I ran into\nBluetooth Protocol\nAccomplishments that I'm proud of\nBluetooth Protocol\nWhat I learned\nHow to integrate multiple IoT devices\nWhat's next for Firebot\nFirebot for Drones\n",
        "hackathon_id": "hackcambridge",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe migrant crisis is a worldwide issue and is especially more pressing in the Greek coasts. Every day, there are hundreds of shipwrecked boats filled with refugees that wash up on the shore - dramatic scenarios. While discussing with reporters covering the story in Lesbos, I asked what could the tech community be doing? Their answer was that the camp organizers over there are overwhelmed: \"There are so many boats that we can\u2019t keep track of which ones need help. We would need a way to get alerts for passengers that are in distress.\"\nThey assured me that due to the small strip of sea separating Turkey and Lesbos migrants travelling have access to cellular network and often a smartphone along the journey and roam all the way through.\nSo came the idea for Lighthouse!\nWhat it does\nLighthouse is a combination of a mobile app for migrants navigating and a cloud dashboard for the rescue teams on shore.\nWhen a boat is in distress, anyone with the application downloaded on their phone can launch it a press an alert button that will send their coordinates to the closest shore station.\nThis station has access to a Lighthouse dashboard that monitors alerts in the filtered area. When rescue teams receive that alert, they can choose to acknowledge it - which will send a message to the migrant's mobile phone letting them know someone's coming (so they don't lose hope).\n\nHow I built it\n\nThe mobile app is developed with Ionic and AngularJS to provide a universal app for iOS, Android, Windows phone, and web access.\nThe dashboard is an AngularJS application that uses the Google Maps API to place the alerts on the map along with a filter zone (to avoid spamming)\nAll the alerts and rescue messages are sent and received using Firebase to provide a real-time communication system.\nBuilt with lots of love\n\nChallenges I ran into\nThough the original idea was fairly simple to execute, getting more and more features for ideas made the development process more complex than expected. I had never used Ionic or Firebase before (though I had some previous knowledge of AngularJS), fortunately the documentation was perfect!\nAccomplishments that I'm proud of\nThis is the first time that I build an end-to-end realtime communication system from an app to a dashboard and also the first time I've worked with some of the technologies. I am very proud that I've been able to build a working prototype for a cause that I care about - which could have massive impact on the conditions of the migrants through their tough journey.\nWhat I learned\nOther than the actual technologies that I've played with, I learned that you don't need to be a top notch programmer to make an impact on the world. All you need is some creativity and be determined to fix things.\nWhat's next for Lighthouse App\nLighthouse is bound to evolve and get other features that will make its use truly impactful. Here are some of them:\n\nAllow rescue teams to chat through to the migrant's app when acknowledging an alert. This way they can relay some important safety and first aid instructions.\nIntegrate an SMS mechanism to send the coordinates this way instead of IP to alleviate the roaming charges.\nIntegrate Natural Language Processing and recording to detect distinct words and send back pertinent instructions to the app.\nInvestigating the integration with Firechat which will allow for a decentralized way of conveying these alerts in the case that migrant does not have cellular network.\nImplementation and testing: now it's time to travel over there and implement and test the solution\n\nLighthouse will become part of a bigger project called \"Coders On The Road\" - codersontheroad.org which is our team of hackers travelling around the world and building tech solutions for people in need.\nWe heard that 500Startups was looking for ideas that would alleviate the migrant crisis and hope to be considered for helping out in this mission!\n",
        "hackathon_id": "hackcambridge",
        "winner": false
    },
    {
        "description": "\nThis is the story of how one man taught three how to node.js.\nPenpals were a big thing before the internet, and we wanted to revitalise it. Google translate would automatically translate to the reader's language, meaning that two people speaking completely different languages can understand each other.\nProject status\nThe Google Translate API kinda didn't work for us so it's just a simple chat app made in socket.io.\noh, and we used handlebars for the templating!\nAlso the domain name is lingualmingle.net\n",
        "hackathon_id": "hackcambridge",
        "winner": false
    },
    {
        "description": "\nBuilt With\nmailjetcapitalonepythonnode.js\n",
        "hackathon_id": "hackcambridge",
        "winner": false
    },
    {
        "description": "\nInspiration\nThis project was inspired by the paper ``Competing spreading processes on multiplex networks: awareness and epidemics'' by Granell et al. It attempts to model epidemics spreading by considering a multiplex network model; in this model, people are connected in two separate layers. The first layer is the physical layer, where people are connected if they come into physical contact (friends, family, coworkers, etc.); within this layer, the disease can spread across links. The second layer is the information layer, where people are connected if they regularly exchange information (it might well include most of the edges from the physical layer, as well as connections on Facebook/Twitter/etc.).\nWithin the physical layer, an individual may be either susceptible to the disease or infected with it. Within the information layer, an individual may be either aware or unaware of the epidemic. A person who is aware may then take protective measures against the disease (vaccination, protective masks, etc.) thus reducing his/her probability of being infected. The model has been shown as very powerful for accurately modelling the dynamics of the disease, but thus far it was only tested on randomly generated synthetic networks. With this project, we intend to make real-life simulations possible, in a form that is both engaging for the users and useful for the research community.\nWhat it does\nThe project is modelled as a distributed Android application, where each phone maintains minimal state. Each phone represents a person in the physical layer (and as such is either susceptible, vaccinated or infected). It periodically updates its GPS coordinates to the central server. The server may then use mutual proximities between the phones to determine the probabilities of contracting the disease along the links of the network. The state is consistently logged and combined with LaTeX and TikZ to produce useful visualisations of the network. The game is made more engaging for the users by the introduction of roles; namely, people may either be assigned a role of a human, where their goal is to avoid being infected, or a role of an infector, where their goal is to infect as many nodes as possible.\nThe information layer is not directly modelled; a small subset of the nodes will gain access to a secret code with which they may get vaccinated. The people in possession of those phones may then share the code via social networks, conversation, etc. thus indirectly modelling the information layer.\nHow we built it\nAs an Android project, we built it primarily using Java. C++, LaTeX and shell scripts were used for auxiliary tasks, mostly to do with generating the visualisations.\nChallenges we ran into\nExtracting GPS coordinates within a building proved to be extremely unreliable. Furthermore, the relative slow network performance has made it harder to move data around sufficiently quickly.\nAccomplishments that we're proud of\nWe're most proud of being able to accomplish all of the primary goals we have thought of prior to arriving to Hack Cambridge. We have advanced our Java and Android skills even further, and we have shown a very high level of teamwork in resolving issues quickly. Furthermore, we were extremely pleased to notice that the results we were able to obtain in the given testing timeframe seem rather realistic.\nWhat's next for Viral\nWe are hoping to pitch this as a massively distributed Android application that is both useful to researchers in the field of complex networks, and engaging for its users. A potential further result of this could well be a journal publication, as a first ``real-world'' modelling of such a scenario.\n",
        "hackathon_id": "hackcambridge",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonjavabeaker\n",
        "hackathon_id": "hackcambridge",
        "winner": false
    },
    {
        "description": "\nOur team decided to take on the Thales security challenge. We came up with an innovative and highly secure way to authenticate a user. \nUsing a simple fingerprint recognition sensor on your phone we generate a unique biomarker that can then be used to authenticate you on any device that is equipped with a simple webcam.\nCompanies can implement our solution by including a javascript plugin into their websites. After a user uses a device (any with biometrics) to have their qr code scanned. These companies check with our server which then confirms users authenticity.\nWe also check users heartrate to provide additional security layer.\nWe use time-based hash passwords, secure connections.\nBackend: Google Cloud and Google App Engine\n",
        "hackathon_id": "hackcambridge",
        "winner": false
    },
    {
        "description": "\nhackCambridge\nA Small Research Hack: Clustering and Visualisation of Protein Interaction Networks (and other cool networks)\nProtein interaction networks are an incredible bed for hypothesis generation for potential studies into interactions of specific proteins whose interactions are unknown by looking at the way they are clustered, as this can hint towards protein complexes or functional interactions. The challenging part of this hack was implementing clustering methods that are not typically taught at the undergraduate level, ie. topographical/graphical clustering methods (unlike the usual k-means which has a notion of distance), so I am essentially clustering binary interaction networks. \nThis small research hack implements five modern topographical clustering methods applied onto a protein interaction network extracted from high throughput studies performed on Sacchoromyces Cerevisiae and other datasets like a friendship interaction network from social networks like Facebook.\n\nK Clique Percolation\nMCode\nDPClus\nIPCA\nCoAch\n\nThe clustering algorithms can be applied to many more different datasets such as interaction graphs in transportation, literature, social networks, etc. \nInspiration\nI like machine learning and unsupervised methods. Moreover its part of an ongoing quest to become better at maths and graph theory in particular\nWhat it does\nThe clustering algorithms create clusterings of interaction networks. In short each of the algorithms attempt to find dense subgraphs within the datasets.\nHow I built it\nClustering algorithms were created on the descriptions made in academic papers, the clustering algorithms output a format which can be used to graph with my own implementation, but for the sake of speed (cause the networks are large) was offloaded to a GPU cluster in Ontario, and in Edinburgh\nChallenges I ran into\nReading and Understanding the papers and dealing with mathematical understanding of the clustering algorithms used.\nAccomplishments that I'm proud of\nGetting it finished on time despite having lost 10 hours due to the wifi situation.\nWhat I learned\nImmeasurable amounts in coding design and mathematical notation, latex.\nWhat's next for Cluster Punk: A Little Exploratory Research\nMore datasets and attaching weights to edges of the graphs. \n",
        "hackathon_id": "hackcambridge",
        "winner": false
    },
    {
        "description": "\nBuilt With\nc++cpythoncmakeshellbatchfile\n",
        "hackathon_id": "hackcambridge",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe amazing MLH EU Team and no sleep at a hackathon\nWhat it does\n;)\nHow I built it\nI made JavaScript do things\nWhat I learned\nUsed S3 for the first time, that was fun\nWhat's next for MLH.sexy\nMore sass\n",
        "hackathon_id": "hackcambridge",
        "winner": false
    },
    {
        "description": "\nBuilt With\nswiftc++javajavascripthtmlpythongoogle-app-enginearduinobleobjective-c\n",
        "hackathon_id": "hackcambridge",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroid\n",
        "hackathon_id": "hackcambridge",
        "winner": false
    },
    {
        "description": "\nBuilt With\ngojava\n",
        "hackathon_id": "hackcambridge",
        "winner": false
    },
    {
        "description": "\nInspiration\nAt the Hack Cambridge there were 400 of us in the same boat \u2013 we're constantly worrying about getting internships, handing out CVs, juggling our social lives with university studies and other adult responsibilities. It's amazing to see everybody playing the \"internship hunting\" game in real life, and we decided to translate that into an actual game and bring in a bit of fun into it!\nWhat it does\nTwo comrades pinned against each other in a race for the best opportunities and again common student temptation. Yes, we are talking about the beer.\nHow we built it\nWithout Wi-Fi. Huge part of the journey of building the game was doing this without working internet access, scavenging Wi-Fi in Starbucks and McDonalds outlets just to download those few stacks of offline documentation to get us off the ground, and from there it was just the plain old-fashioned hacking. But we enjoyed every minute of it!\nAccomplishments that we're proud of\nIn the past we've fallen into a mundane repetition of always making some cool (albeit boring to make) mobile apps. Now we've decided to go way out of our comfort zone and we made a game! Spent last few hours of the hackathon challenging each other.\nWhat we learned\nWe've learned that making games is fun, and the unexpected is not as scary as you would expect.\nWhat's next for Internship Hunter (The Game)\nGo mobile, cross-platform, get into young internship hunters' pockets!\n",
        "hackathon_id": "hackcambridge",
        "winner": false
    },
    {
        "description": "\nInspiration\nI have an interest in maths and ciphering\nWhat it does\nSnapChat is great for sending pictures however it is really bad for sending any text messages and the data protection isn't too great either. So this app allows you to send encrypted messages to your contacts, messages may only be read once and are deleted forever after being read. \nHow I built it\nI used a trigonometric function for generating random numbers that could be mapped to many numbers. All the numbers would represent a letter. There was no collision due to the trig function\nChallenges I ran into\nIt took some time to decrypt the ciphered code\nAccomplishments that I'm proud of\nBuilding my first cipher\nWhat I learned\nSome basic encryption\nWhat's next for SnapMessage\nFinish implementing the functionality and brush up on its user interface\nImportant Notice\nPlease note, the app is for demonstrative purposes only. It has not yet had all its UI functionality implemented so it may seem to feel or look weird when using the app\n",
        "hackathon_id": "hackcambridge",
        "winner": false
    },
    {
        "description": "\nBuilt With\nbitcoinpythonxmlrpcxml-rpcbootstrapjquery\n",
        "hackathon_id": "hackcambridge",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe inspiration come one dat when we realized that international students tend to be very shy and it is more difficult for them to make new friends and interact.\nWhat it does\nYou have to register with full name, age, university, email and a photo. There will be one person to be \"hunt\", meaning that all the other users have to find him and upload a photo with him. If the photo is confirmed, the user earns points. The person to be hunt will change after that, randomly.\nHow we built it\nWith Android Studio. PHP for the server and mysql.\nChallenges we ran into\nAll the project was challenging. But most important the lack of the internet was the biggest problem.\nAccomplishments that we're proud of\nMaking the app to work.\nWhat we learned\nWe have developed our programming skills.\nWhat's next for Bounty Hunter\nIncreasing in popularity and help students to make friends.\n",
        "hackathon_id": "hackcambridge",
        "winner": false
    },
    {
        "description": "\ndocuflow\nEver wondered what goes on in people's minds when they read your writing? \ndocuflow is a document viewer that reads your mind, providing insights on what their thinking. How does it do that?\n\nEyeball tracking\n\n\nDetects which parts of the text the user is actually reading.\n\nMind reading\n\n\nLogs focus with the Muse headband.\nDetects which parts of the text require more effort to read.\n\nReport building\n\n\nView your document as a heatmap of thought intensity.\nDiscover new interesting things about your writing.\nActionable insights into how to improve your work!\n\n\nWe used the Muse headband to measure focus when reading the documents and xlabs gaze to detect what parts of the document the user is reading. Frontend in React and backend in Flask.\n",
        "hackathon_id": "hackcambridge",
        "winner": false
    },
    {
        "description": "\nInspiration\nThere is a lot of times that you go to a party with a bunch of friends, but at some point you may lose them.\nWhat it does\nLocate your friends inside the event's building. \nHow we built it\nUsing magnetic positioning to map the event's building and track all your friends positions. An Android app to easily see where your friends are in real time.\nChallenges we ran into\nConnecting to the Wi-Fi. Also getting an accurate positioning.\nAccomplishments that we're proud of\nMapping the Corn Exchange building and showing all your friends positions in real time.\n",
        "hackathon_id": "hackcambridge",
        "winner": false
    },
    {
        "description": "\nGordon \u00af\\(\u30c4)/\u00af\nGordon simply plans your weekly meals for you, guaranteed to change your kitchen nightmares into kitchen nirvana.\nGordon utilizes advanced data analytics to match millions of recipes to your personal preferences.\n",
        "hackathon_id": "hackcambridge",
        "winner": false
    },
    {
        "description": "\nInspiration\nEvery day, 3 million people commute into London. Of these, over 1 millions are alone in a car. This means that London has become Europe's most congested city. We believe that the solution is a peer-to-peer car sharing platform where people can plan their daily commute together with their neighbors. \nWhat it does\nThe app enables a user to offer or request a ride, as well as detailing the time when they commute. It is similar to Blablacar, but adds a dimension around daily commute and community building that is focused on London specifically. \nHow we built it\nThe app was built in java to be an android app, and the website is HTML/javascript. The Mailjet API was input to the website and will be added to the app as the messaging system between users.  \nChallenges we ran into\nCalculating optimal distances for the driver took some time, which was exacerbated due to missing wifi. \nAccomplishments that we're proud of\nWe built a functional app that enables a user to request and offer a ride, as well as optimize the users route by either money he can earn or time it takes to fulfill the journey. We are proud of the intuitive user experience and integration with the Google Maps API. Of course also about the fact that we did so great during our very first hackathon. \nWhat we learned\n24 hours can be very short if you don't get your things together early. However, we learned to work as a team, and we all learned that time is a very relative concept. Apart from that, we improved our skills in java, app design, wire-framing, website design etc. We will definitely come back to the next hackathon in Cambridge and apply everything we learned. \nWhat's next for LondonPool.co.uk\nWe are going to brush up the app a bit more, and then start running email campaigns using Mailjet. The website is live and we will do a full launch in March. Follow us on Twitter, Facebook and LinkedIn to find out more, links are below. You can also see our website, and the APK for the app is in the second link from the top. \n",
        "hackathon_id": "hackcambridge",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroid-studionode.js\n",
        "hackathon_id": "hackcambridge",
        "winner": false
    },
    {
        "description": "\nInspiration\nReally like rouge like games in general, was inspired to try my hand at it.\nWhat it does\nIts a game where you need to survive as long as possible against increasingly difficult odds.\nHow I built it\nC++ in a team of two using SDL and glew as the most noteworthy libraries\nChallenges I ran into\nBuilding an engine from scratch in C++ is hard, took us both 8 hours to just get the engine to a point where we could draw things to the screen, plus 24 hours with no sleep is no easy task!\nAlso, it is surprising hard to balance a game (even one as small as this one) to be both fun and challenging.\nAccomplishments that I'm proud of\nWe did it, got a working prototype in 24 hours that ticks most of our initial goals we set when we first started working!\nMaking it through the night was a big achievement, sleep will be welcome tonight for sure.\nWhat I learned\nTime management is key when handling projects like these, especially when working in a team.\nTools wise, we both learnt how to use git, a new experience for us both.\nWhat's next for Ram-Fro\nClearly: 'Ram-Fro, return of the killer vampires!'\n",
        "hackathon_id": "hacknotts",
        "winner": true
    },
    {
        "description": "\nBuilt With\ncjavaandroid-studio\n",
        "hackathon_id": "hacknotts",
        "winner": true
    },
    {
        "description": "\nIn order to avoid procrastination and save a little money, we have come up with PiggyJar. Like a Swear jar, the moment a user visits a site they have listed as futile, our chrome extension will register a count, as well as registering a count after every minute the user is on the site. Each count is equivalent to a unit amount, which is totaled weekly and an invoice is sent to the user. The funds are then transferred (based on a threshold) to the user\u2019s savings account.\n",
        "hackathon_id": "hacknotts",
        "winner": true
    },
    {
        "description": "\nInspiration\nWhat it does\nHackNotts investment fund allows investors to invest in projects being built at HackNotts for percentage of equity. It prevents investors making decisions when they are drunk.\nHow we built it\nIts built using Node.js for backend, handlebars.js, HTML, JS and obviously CSS.\nChallenges we ran into\nLearning Node and callback hell.\nAccomplishments that we are proud of\nOur investment fund helps users by declining transactions when investors are non sober.\nWhat we learned\nAlikhan: I have started learning Meteor.js and Handlebar.js.\nS\nWhat's next for HackNotts bank\n",
        "hackathon_id": "hacknotts",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavajacksonswingawt\n",
        "hackathon_id": "hacknotts",
        "winner": true
    },
    {
        "description": "\nBuilt With\nmaxmsp\n",
        "hackathon_id": "hacknotts",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe had the chance to use the Oculus Rift and the Leapmotion during a Hackathon. We first had ideas of sci-fi inspired UI systems navigated with the Leapmotion, but as we had support for the Braintree api, the idea quickly evolved into a digital Storefront in VR, navigated with the Leapmotion\nWhat it does\nIt shows a list 3D models of products that the user can scroll through, to then further inspect in the VR space. It lets the user manipulate the model through gestures, and buy the product right from within the VR app.\nHow we built it\nThe project uses Unity for the VR application, and a Heroku server to handle the interfacing with Braintree. In the Unity app, there are a few scripts which first filter down the Leapmotion gestures to the ones we are interested in, which are then passed on to the main product display to handle manipulation of the 3D objects. The code in Unity and all the Assets were done by me. The Braintree interaction and signup, as well as the interfacing between the Unity app and Braintree, was done with a Heroku server which would take web requests sent from Unity and handle the correct Api requrests to Braintree. This part was done by Marti.\nChallenges I ran into\nThe main problem under our time constraints was that Leapmotion gestures are fairly unreliable and not as intuitive as one might like them to be. While we were able to make the gestures work fine with a bit of practise, they are still hard to instantly pick up when using the app the first time.\nAccomplishments that I'm proud of\nMaking this project in the 24 hours we had during the Hackathon.\nWhat I learned\nOculus and Leapmotion have a lot of potential, but you have to invest time to get everything out of them.\nWhat's next for VR Storefront\nAs this was a quick Hackathon project, the project's current state will likely be its finished state.\n",
        "hackathon_id": "hacknotts",
        "winner": true
    },
    {
        "description": "\nInspiration\nMy daily \"Where are people working\" facebook message spam\nWhat it does\nThe back end crawls the lab computers, interrogating them using who and finger, then collects the data in Redis.\nThe front end allows students to see where machines are free, and where users they're friends with are working. \nPeople to pay to reserve a computer, marking it as 'Unavailable' on the map. (Using Braintree's sandbox)\nChallenges we ran into\nLDAP authentication, and running a ton of SSH sessions at the same time.\nAlso JANET fell over...\nWhat I learned\nCONCURRENCY!\nWhat's next for The Marauder's App\n... student disciplinary council meeting? Harry doesn't even go here!\n(Unfortunately we're keeping this behind a firewall, because data protection and stuff.)\n",
        "hackathon_id": "hacknotts",
        "winner": true
    },
    {
        "description": "\nBuilt With\nphp5justgivingcapital-onepebbleapibootstrappostman\n",
        "hackathon_id": "hacknotts",
        "winner": true
    },
    {
        "description": "\nInspiration\nMost students struggle at the beginning of the course trying to find out where is their next lecture or even what is their next lecture. Not only this, but once you're in the middle of the term and you spent many nights studying (and not partying of course!) sometimes you just lose track of what you have next.\nWhat it does\nThis project helps you to organise your daily schedule while in Uni. An student can subscribe to him/her course, and the app, using the data supplied by IT services, will update them of any oncoming lectures or laboratories showing the start time and room and offering them directions to the building they need to go using google maps.\nHow I built it\nThe backend is hosted in AWS and written in PHP where the info from IT services is downloaded, processed and served through a web api. Then an android app consumes this api and extracts the student's module info (name, time, building room) and shows an notification about it in the smartphone and a smartwatch.\nChallenges I ran into\nJSON data processing in PHP. There were some inconsistencies in the data from IT services after being read in PHP.\nRecent changes in Android API for notifications.\nAccomplishments that I'm proud of\nProcessing and indexing of data in PHP.\nWhat I learned\nInteresting functionality of notifications in Android API\nWhat's next for CoursifyMe\nA collaboration with Nottingham Uni maybe? We will be very happy to make this a useful tool for new students.\n",
        "hackathon_id": "hacknotts",
        "winner": true
    },
    {
        "description": "\nBuilt With\nflaskscrapymongodbpython\n",
        "hackathon_id": "hacknotts",
        "winner": false
    },
    {
        "description": "\nBuilt With\njava\n",
        "hackathon_id": "hacknotts",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaandroidpythonflask\n",
        "hackathon_id": "hacknotts",
        "winner": false
    },
    {
        "description": "\nIt's snake on a smart watch, what's not to like ?\n",
        "hackathon_id": "hacknotts",
        "winner": false
    },
    {
        "description": "\nBuilt With\nnode.jsjavascriptjqueryhtml5css3ajaxjsonbraintreepaypal\n",
        "hackathon_id": "hacknotts",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe have inspired by a revolution into the banking system.\nWhat it does\nIt plots a 3D interactive globe which shows you the transactions made by Capital One's customers at worldwide level.\nHow I built it\nI used and adapted an free source project offered by Google.\nChallenges I ran into\nTo be honest ... a lot.\nAccomplishments that I'm proud of\nA very cool data visualization\nWhat I learned\nThree.js\nWhat's next for TransactionsVisualisations and SplitBills\nwe have a lot of new features which we will implement in the closest time.\n",
        "hackathon_id": "hacknotts",
        "winner": false
    },
    {
        "description": "\nBuilt With\nleap-motionoculusc++\n",
        "hackathon_id": "hacknotts",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe know our hack can be the winner of HackNotts. How can we prove it?\nWhat it does\nHackProphecy scrapes 35,000+ hacks metadata from DevPost (sorry!), and feeds these to a machine learning algorithm. It predicts whether any given hack could be winner or not based on some natural language processing and support vector machine algorithm.\nAccomplishments that I'm proud of\nWe can boast an ~94% accuracy.\n",
        "hackathon_id": "hacknotts",
        "winner": false
    },
    {
        "description": "\nInspiration\nThere's not enough fun incentives to donate to charities. It is also sometimes quite difficult to decide which charity needs the most support. If only there was a fun and rewarding way to donate...\nWhat Charace does\nCharace provides a unique and entertaining way to support your favourite charities as well as seeing which one needs more support. \nHow we built it\nMost of the website's functionality is seen in frontend and was made with HTML, Javascript (using jQuery) and CSS (using Bootstrap)\nWe used Just Giving as a donations payment processor.\nBackend is running on Python on Flask framework.\n",
        "hackathon_id": "hacknotts",
        "winner": false
    },
    {
        "description": "\nInspiration\nInterested in doing something with the Last.fm API and integrating into a platform we love (the Linux command line)\nWhat it does\nThe game imports your scrobbled albums from Last.fm and shows their pixelated album covers in the terminal. The aim of the game is to guess the name of the album, with the help of a track from the album played while the album art flies across the screen.\nHow I built it\nUsing Python3 and ANSI escape codes for the terminal to achieve efficient rendering methods and fancy graphics (like the explosions!).\n",
        "hackathon_id": "hacknotts",
        "winner": false
    },
    {
        "description": "\nBuilt With\nphpjavascriptmysqljquerybootstrap\n",
        "hackathon_id": "hacknotts",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe spent the whole night trying to locate an parrot drone in 3D space. We couldn't make it lift a wiimote. So, get got tired. And drunk. And on drugs. And so created a psychedelic finger painting program using leapmotion.\nWhat it does\nIt let's you paint using your fingers and hands like a child, and create LSD-based effects like the adult you think you are.\nHow I built it\nUsing haskell.\nChallenges I ran into\nWe only had 8 hours.\nAccomplishments that I'm proud of\nIt worked.\nWhat I learned\nI should have tried to make the parrot drone lift the wiimote much sooner.\nWhat's next for The psycheledic leap-motion Haskell paint\n3D using Oculus VR\n",
        "hackathon_id": "hacknotts",
        "winner": false
    },
    {
        "description": "\nBuilt With\nd3.jshtmlcss\n",
        "hackathon_id": "hackgov",
        "winner": true
    },
    {
        "description": "\nPermasalahan\nAir, sebuah unsur Bumi yang membentuk kehidupan. Seluruh makhluk hidup yang ada di muka Bumi memerlukan air untuk melangsungkan kehidupannya tidak terkecuali manusia. 2/3 Permukaan Bumi diisi oleh air dan hanya 1/3 adalah tanah, tempat tinggal para manusia.\nKetergantungan manusia tidak dapat dipisahkan mulai sejak zaman purba hingga saat ini. Namun, dewasa ini Bumi mulai menangis karena airnya teraniaya oleh keserakahan manusia. Mereka menggunakan air seperti budak dan menganggapnya seakan tak berarti. Manusia lupa menjaga air, manusia perlahan menuju liang kuburnya sendiri.\nKarena ulah manusia, air mulai tidak bersahabat. Ketersediaan air mulai menipis dan terjadi pencemaran air di mana-mana. Tercatat beberapa fakta data yang termuat dalam halaman www.wikipedia,com sebagai berikut :\n\n14.000 Orang meninggal setiap hari karena kasus pencemaran air\n500.000.000 Orang tidak memiliki akses air minum bersih karena pencemaran air\n90% Kota di China mengalami pencemaran air\n45% Sungai di Amerika mengalami pencemaran air\n47% Danau di Amerika mengalami pencemaran air\n32% Teluk dan muara di Amerika mengalami pencemaran air\n\nEnam fakta data di atas hanya merupakan bagian kecil dari seluruh kasus pencemaran air yang ada di seluruh dunia. Jika kita menyempitkan luasan permasalahan ke Indonesia, banyak juga hal yang ditemui berkaitan dengan ketersediaan air dan pencemaran air. Dalam beberapa media disebutkan bahwa indeks pencemaran air di Indonesia tiap tahunnya kian bertambah, beberapa kasus tersebut adalah sebagai berikut :\n\nhttp://www.republika.co.id/berita/nasional/umum/14/03/24/n2xa7z-75-persen-sungai-di-indonesia-tercemar-berat\nhttp://nasional.tempo.co/read/news/2015/08/09/058690336/sumber-air-warga-3-kecamatan-di-blora-mengandung-logam-berat\nhttp://ekuatorial.com/forests/indonesian-pencemaran-sungai-kian-memburuk#!/story=post-6804\nhttp://nasional.kompas.com/read/2012/04/05/23313147/Pencemaran.Sungai.di.Indonesia.Meningkat.30.Persen\n\nMasih banyak sekali media yang memberitakan tentang pencemaran air yang terjadi di Indonesia. Hal ini dikarenakan oleh beberapa sebab, banyak diantaranya memang disebabkan oleh masyarakat itu sendiri, seperti contoh budaya membuang sampah yang masih sembarangan, pihak swasta yang membuang limbah sembarangan, dan lain sebagainya.\nDi lain sisi, banyak orang yang tergabung dalam komunitas pecinta lingkungan atau bahkan individu yang tergerak untuk melestarikan lingkungan merasa dirugikan dan ingin segera diadakan perubahan dalam hal ini bersifat tindakan langsung pemerintah dalam mengambil kebijakan khususnya tentang pencemaran air. Namun, dari sisi pemerintah sendiri terkadang data dan kondisi lapangan tidak sama karena ada sebuah \"missing link\" yang terjadi di antara lapangan dan data tersebut. Data dalam beberapa kasus diambil melalui survey tim pemerintah yang cenderung dalam jangka waktu tertentu saja, tidak real time. Terlebih, saat ini belum ada sebuah platform yang dapat menghubungkan antara keluhan (aspirasi) masyarakat tentang pencemaran air dengan pemerintah langsung untuk menentukan langkah kebijakan strategis ke depan.\nAir pada awalnya memang sumber kehidupan, namun saat air menjadi sumber kematian, akankah kita terus berpangku tangan melihat kondisi yang semakin memburuk?\nSolusi\nHal pertama yang perlu menjadi dasar pemikiran adalah UUD RI 1945 Pasal 33 ayat 3 yang pada intinya adalah air merupakan unsur/komoditas yang dikuasai oleh negara. Dengan logika ini, jika terjadi masalah tentang air seyogyanya masalah ini juga menjadi masalah pemerintah.\nHal yang kami tawarkan untuk menyelesaikan beberapa permasalahan yang terjadi di Indonesia berkaitan dengan pencemaran air adalah kami menciptakan sebuah aplikasi yang dapat digunakan oleh masyarakat dengan smartphone android untuk memantau dan menyalurkan aspirasi dengan teknologi GPS mapping. Harapannya platform teknologi ini dapat menjadi jembatan penyelesaian antara masyarakat dan pemerintah. Dari segi masyarakat dapat menyampaikan keluhan dan langsung ditujukan pada pemerintah secara real time dan dari segi pemerintah dapat menerima laporan dari masyarakat dan melakukan pemetaan data (Big Data) sehingga harapannya dapat membuahkan sebuah kebijakan yang tepat di kemudian harinya.\nCara Kerja\n\nPengguna melihat atau mengalami permasalahan pencemaran air yang terjadi pada daerah tertentu dimana lokasi pengguna berada. Pengguna juga dapat membagikan data kasus ketersediaan air atau pencemaran air yang terjadi pada daerah tersebut ke sosial media yang dimiliki oleh pengguna agar pengguna lain menjadi lebih mengetahui dan bersama dapat lebih melestarikan lingkungan hidup khususnya air.\nPengguna melakukan validasi data pelapor dengan memasukkan nama lengkap, nomor KTP, nomor handphone, dan email. Hal ini dilakukan untuk menghindari hal-hal yang mengarah pada pemalsuan laporan.\nPengguna menentukan tipe air yang akan dilaporkan kondisinya, air permukaan mencakup laut, sungai, dan danau atau air tanah (air sumur).\nPengguna menentukan klasifikasi awal laporan berupa permasalahan pencemaran air atau air tidak mengalir/kering\nPengguna memasukkan detil aspirasi berupa text. Di sini, pengguna dapat lebih leluasa menyampaikan apa yang terjadi pada lapangan.\nPengguna dapat mengambil gambar lokasi pencemaran air/kekeringan air untuk menambah keabsahan data yang akan dikirimkan langsung pada pemerintah.\nPengguna mengirim aspirasi dan ditujukan langsung pada pemerintah. Setelahnya pemerintah akan membalas laporan tersebut melalui nomor handphone atau email yang sebelumnya telah digunakan sebagai alat validasi pelapor/pengguna.\n\nDari segi pemerintah, data-data laporan yang masuk dari pengguna ini dapat dikumpulkan dan diamati untuk membuat kebijakan yang tepat dengan tindakan yang cepat sehingga ke depannya permasalahan ketersediaan air dan pencemaran air dapat diselesaikan.\n",
        "hackathon_id": "hackgov",
        "winner": true
    },
    {
        "description": "\nProblem:\nTingkat perceraian di Indonesia yang semakin meningkat seiring berjalannya waktu, ternyata didominasi oleh istri yang menggugat dan 70% disebabkan oleh faktor ekonomi (keuangan keluarga yang berantakan). (Sumber: Kementerian Agama RI, dikutip dari Republika.co.id).\nSolution:\nIstriBijak.com membantu para ibu rumah tangga dalam mengelola perencanaan keuangan keluarga mereka untuk membangun kehidupan rumah tangga yang harmonis. Disini ibu rumah tangga dapat mengelola keuangan keluarga dengan lebih mudah, mengatur pola konsumsi keluarga yang bertanggung jawab, hingga merencanakan kehidupan keluarga dengan masa depan yang lebih cerah.\nHow it Works:\n\nAlokasikan Penghasilan\nAnda dapat mengetahui penghasilan yang diperoleh secara terkini dan belajar bagaimana memanfaatkannya,\nRekam riwayat belanja dan tagihan\nIstriBijak.com menyediakan sistem yang memudahkan Anda memasukkan riwayat transaksi dan tagihan setiap saat, melakukan pemeriksaan, dan mendapat masukan untuk tinjauan kesehatan keuangan keluarga.\nMengulas rangkuman alokasi penghasilan, belanja dan tagihan secara terintegrasi\nAnda memperoleh ringkasan alokasi penghasilan dan pengeluaran untuk dijadikan pertimbangan dalam merencanakan kebutuhan keluarga di masa depan.\nTanggapi sistem peringatan dini\nIstriBijak.com memiliki fitur peringatan dini untuk memberi tanda tagihan yang sebentar lagi jatuh tempo, rasio utang yang berlebihan, atau kurangnya dana darurat atau tabungan yang harus dipersiapkan.\nManfaatkan panduan pengelolaan keuangan keluarga yang ideal\nSebagai tambahan, IstriBijak.com menyediakan panduan untuk mengedukasi ibu rumah tangga agar mengelola keuangan dengan bijak demi kesejahteraan keluarga yang lebih baik.\n\n",
        "hackathon_id": "hackgov",
        "winner": true
    },
    {
        "description": "\nInspiration\nEMAK adalah portal yang mewadahi ide kreatif perempuan dalam membuat produk kerajinan yang akan menarik investor untuk berinvestasi/berdonasi terhadap\nWhat it does\nEMAK akan mewadahi kalangan kreatif maupun non kreatif perempuan yang membuat hasta karya dan menampilkannya di dalam EMAK baik dalam bahan yang diperlukan, alat, dan tahapan-tahapan di dalam membuat hasta karya atau disini kami menyebutnya proyek/project yang di unggah ke dalam EMAK. User yang disini sebagai watcher maupun donatur akan melihat hasta karya yang ditampilkan dan apabila user/donatur yang tertarik dapat mendonasikan sejumlah uang dengan jumlah tertentu yang telah disediakan dengan spesifikasi apabila mendonasi sekian akan menerima apa, dan seterusnya begiru juga terdapat donasi VIP yang nantinya dapat mengakuisi produk hasta karya yang dibuat dengan catatan investor akan mendanai seluruh produksi yang akan dilakukan dengan kesepakatan yang telah ditentukan.\nHow I built it\nKami menggunakan web aplication based dengan memanfaatkan teknologi framework Laravel dan CSS 3 untuk tampilan yang interaktif dengan responsive design dengan memanfaatkan framework laravel.\nChallenges I ran into\n\nSaat HackGov dimulai tema yang kami miliki baru 30% \nKami menyelesaikan setidaknya 35% dari total aplikasi full stack, namun sudah 90% untuk prototype\n\nAccomplishments that I'm proud of\nBest team work that i ever had\nWhat I learned\n\nManage fast code\nBuild fast app\n\nWhat's next for EMAK\n\nEMAK for mobile App (IOS and Android)\nEMAK Challenge\nEMAK Seminar\nEMAK goes to school\n\n",
        "hackathon_id": "hackgov",
        "winner": true
    },
    {
        "description": "\nPROBLEM\nKomisi Nasional Anti-Kekerasan terhadap Perempuan mencatat adanya peningkatan korban kekerasan pada perempuan setiap tahunnya. Komnas merekam 279.760 kasus kekerasan terhadap perempuan terjadi sepanjang 2013, yang lebih besar dari tahun sebelumnya. Di era globalisasi ini, banyak kaum wanita angkat bicara mengenai peran dan hak wanita di sosial masyarakat. Majunya teknologi dan derasnya arus globalisasi ini beriringan dengan gerakan feminism yang marak di seluruh dunia, dimana wanita memiliki hak dan peran yang sama seperti laki-laki, serta kesetaraan posisi di setiap ranah publik. \n    Saat ini, sudah banyak wanita yang menjadi kaum terpelajar dan keberanian untuk berperan diranah publik pun sudah semakin besar. Sekalipun perempuan telah mendapatkan kesempatan diranah publik, namun pada kenyataannya sekarang ini perempuan berada dibawah himpitan globalisasi, kapitalisme dan modernisasi. Tuntutan akan perubahan gaya hidup, tingginya kebutuhan, dan perilaku konsumtif inilah yang memunculkan berbagai tekanan-tekanan bagi perempuan, yang berakhir dengan munculnya bermacam bentuk kekerasan yang dialami oleh perempuan. Banyak perempuan yang mengalami tindak kekerasan namun tidak berani untuk melaporkan hal ini ke LSM atau pun Komnas Perempuan dikarenakan berbagai alasan,  seperti yang dikemukakan dalam meganslaw.ca.gov di majalah Tempo.\nSOLUTION\nSayang  nya, kemajuan teknologi belum dimanfaatkan dengan maksimal pada permasalahan perempuan di Indonesia. Maraknya tindak kekerasan yang beriringan dengan majunya teknologi, serta para korban yang memilih untuk diam merupakan salah satu alasan mengapa aplikasi ini dapat merepresentasikan bahwa teknologi mampu memfasilitasi dan me-mediatori permasalahan tindak kekerasan yang dialami oleh korban. Masukan dari aplikasi ini yaitu berupa diary yang dilengkapi dengan kuesioner LSM Rifka Annisa Yogyakarta yang telah diadaptasi. Aplikasi ini akan mengukur tingkat kekerasan yang dialami oleh korban berdasarkan diary yang ditulis dan kuesioner yang telah di isi oleh korban. Hasil dari pengukuran ini berupa Persentase dan level tindak kekerasan yang telah di alami oleh korban.\n    Dalam beberapa kali akses aplikasi oleh user/korban, apabila hasil persentase melebih 50% kekerasan, maka aplikasi akan secara otomatis memunculkan Pop-Up konfirmasi pelaporan kekerasan pada LSM di daerah setempat dan korban juga diberi hak untuk memilih pilihan \u201cYa, Laporkan\u201d atau \u201cTidak dilaporkan\u201d. Aplikasi ini tidak hanya dapat digunakan oleh wanita yang telah mengalami tindak kekerasan, namun aplikasi ini juga dapat digunakan pada wanita yang belum menyadari adanya perlakuan kekerasan pada dirinya atau di lingkungan sekitarnya, oleh karena itu aplikasi ini dapat menjadi tindak preventif untuk mengurangi terjadinya kekerasan dalam hubungan. Aplikasi ini juga dapat menjadi solusi untuk meningkatkan pengetahuan dan penanganan yang tepat pada isu kekerasan terhadap perempuan Indonesia melalui kemajuan teknologi.\nHOW IT WORKS\nMetode yang digunakan aplikasi ini adalah dengan menggunakan diary dan kuesioner. User (wanita) mengisi diary ke aplikasi, kemudian aplikasi akan mendeteksi keyword yang telah ditentutakan berdasarkan beberapa aspek dan indikator kekerasan pada perempuan, yakni kekerasan seksual, kekerasan ekonomi, kekerasan emosional, intimidasi, isolasi, dan kekerasan dengan cara menggunakan keistimewaan gender (laki-laki). \n    Selanjutnya, aplikasi akan mengeluarkan kuesioner yang sesuai dengan keyword yang telah terdeteksi oleh aplikasi. Setelah user mengisi diary dan kuesioner, aplikasi akan menilai tingkat kekerasan dan akan ditampilkan di \u201chasil\u201d. Setiap kali user mengisi diary dan kuesioner (personal journal), maka aplikasi akan menyesuaikan dengan penilaian hasil tingkat kekerasan dan persentase sebelumnya. Ketika tingkat kekerasan dan persentase telah melewati batas, aplikasi akan secara otomatis menampilkan pop-up konfirmasi pelaporan pada LSM se-tempat.\n",
        "hackathon_id": "hackgov",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavaandroidandroid-studio\n",
        "hackathon_id": "hackgov",
        "winner": false
    },
    {
        "description": "\nBuilt With\nasp.netc#mvc\n",
        "hackathon_id": "hackgov",
        "winner": false
    },
    {
        "description": "\nBuilt With\nlaravelphphtml5css3javascriptmysql\n",
        "hackathon_id": "hackgov",
        "winner": false
    },
    {
        "description": "\nRice the main consumption of Indonesian in daily basis, but there are some time when the rice price climb drastically. Rice price hike, could affects on the inflation rate. When the inflation due to rice price hike happens, the government will regulating some policies to stabilize the economic state in every region, such as rice import policy. Up until now the government policy is still in overcoming the problem, not in the level of prediction yet. In the other hand, prediction using could minimize the government's effort on preparing the fiscal policies and non fiscal policies to face all the risk that might occurs and maintaining the economic stability long before.\n",
        "hackathon_id": "hackgov",
        "winner": false
    },
    {
        "description": "\nPROBLEM\nInfrastructure problems in a developing country is unavoidable. The massive amount of infrastructure problem leads to priority issues. The people and the government needs a medium that can channel their thoughts in hope of resolving the most important infrastructure problem first.\nSOLUTION\nWe created an app that can convey the people\u2019s complaint about the infrastructure problems regionally and rate it so the government of that particular region can decide which problem should be tackled first.\nHOW IT WORKS\n\u2022User sees a real-time problem of an infrastructure\n\u2022User then takes a photo as proof and post it through Lalin\n\u2022Other users seeing that post can upvote if they agree, comment, favourite to keep track, and report the post if found bogus\n\u2022Lalin has two ends, one for the people and one for the government\n\u2022Lalin then sorts the post based on the most upvoted and notifies the government end of the app\n\u2022Seeing this notification, the government can decide whether to resolve it or not\n\u2022If the government choose to resolve it, the government will open a thread in the forum section of our app that will be sorted regionally\n\u2022Users can then check the forum section to verify the policy the government chose to go with and give feedback on the process or result.\n",
        "hackathon_id": "hackgov",
        "winner": false
    },
    {
        "description": "\nProblem : \nSampah merupakan masalah lingkungan yang belum dapat teratasi dengan baik di Indonesia. Berdasarkan data dari Kementrian Lingkungan Hidup, volume sampah di Indonesia tahun 2010 sebesar 200.000 ton/ hari dan mengalami kenaikan cukup drastis pada  tahun 2012 sebesar 490.000 ton/hari. Dari total sampah tersebut, sekitar 50 % merupakan sampah rumah tangga dan baru 24,5 % yang ditangani dengan benar, yaitu dengan diangkut dan dikomposkan. Jumlah sampah tersebut  diperkirakan akan terus naik seiring dengan meningkatnya jumlah penduduk di Indonesia. Sampah yang tidak terangkut di beberapa titik daerah itu telah menyebabkan berbagai masalah lingkungan, seperti pencemaran air dan tersumbatnya aliran air yang menyebabkan banjir. Oleh sebab itu, diperlukan suatu solusi untuk mengurangi jumlah tumpukan sampah yang belum diangkut dan diolah oleh Dinas Kebersihan.\nSolution : \nBerangkat dari permasalahan tersebut, kami membuat sebuah aplikasi, yaitu \u201cSi Bersih\u201d untuk membantu  pemerintah mewujudkan  rencana dasar infrastruktur pengelolaan sampah yang ada dalam Rencana Jangka Menengah 2015-2019. Aplikasi ini akan memudahkan masyarakat untuk melaporkan lokasi sampah yang belum ditangani oleh pemerintah. Dengan demikian,  pemerintah dapat menentukan urgensi daerah yang  perlu segera ditangani berdasarkan banyaknya laporan dari masyarakat terkait lokasi tersebut. Aspirasi dari masyarakat tersebut juga akan memudahkan pemerintah dalam membangun sistem pengelolaan sampah mulai dari sumber sampah hingga ke residu akhir, memfasilitasi pemerintah daerah dan stakeholder terkait manajemen pengolahan, serta melakukan pemberdayaan masyarakat terkait dengan sampah. \nMetoda penyelesaian :\nAspirasi masyarakat tentang tumpukan sampah di lingkungan sekitar mereka dapat disampaikan melalui aplikasi \u201cSi Bersih\u201d dengan memasukkan data berupa foto, lokasi, serta deskripsi masalah berkaitan dengan foto yang diunggah. Kemudian, data tersebut akan dikirimkan dan disimpan dalam database. Database tersebut dapat diakses oleh pemerintah, sehingga memudahkan pemerintah untuk mengetahui lokasi sampah yang belum terkelola dengan baik, tanpa perlu melakukan inspeksi lapangan. \n",
        "hackathon_id": "hackgov",
        "winner": false
    },
    {
        "description": "\nProblem\n    Peningkatan PDB setiap tahunnya tidak dibarengi dengan turunnya Angka Kematian Bayi, sehingga memberikan dampak pada peningkatan kemiskinan di Indonesia. \nHow it is work\nTujuan utama visualisasi ini adalah agar setelah pemerintah melihat data gabungan yang saling berkorelasi (chart dan persebaran wilayah), kemudian membandingkan keadaan antara wilayah yang satu dengan wilayah yang lain, dimana visualisasi data ini dapat digunakan sebagai Support dalam pemerintah mengambil keputusan untuk menentukan daerah mana yang di dahulukan untuk diatasi permasalahannya.  \nSolution\n\n Pemerintah mendapatkan suatu gambaran tentang tingkat Pendapatan Domestik Bruto, baik buruknya tingkat angka kematian bayi serta parahnya kemiskinan di desa dan di kota pada provinsi tertentu.\n Pemerintah dapat segera mengambil tindakan tentang apa yang harus dilakukan terkait daerah yang tertandai dalam kondisi buruk berdasarkan kriteria data yang digunakan.\n Dengan peningkatan PDB per tahunnya yang berarti pendapatan nasional negara meningkat pemerintah dapat mengalokasikan dana untuk pencegahan kematian bayi, sehingga indeks kemiskinan menurun pula. \n Membantu pemerintah menggalakkan sosialisasi dalam memberdayakan peran perempuan sebagai ibu, mengenai pentingnya menjaga kesehatan  dalam masa kehamilan. \n Membantu pemerintah menggalakkan sosialisasi dalam kegiatan penyuluhan untuk memberdayakan penduduk miskin sehingga mereka memiliki penghasilan dan taraf hidup mereka naik.\n\n",
        "hackathon_id": "hackgov",
        "winner": false
    },
    {
        "description": "\nBuilt With\nbootstrapjavascriptphpmysqljquery\n",
        "hackathon_id": "hackgov",
        "winner": false
    },
    {
        "description": "\nBuilt With\napis\n",
        "hackathon_id": "hackgov",
        "winner": false
    },
    {
        "description": "\nProblem\nMasyarakat ,khususnya kota Yogyakarta, membutuhkan wadah untuk menampung aspirasi. Aspirasi tersebut lebih kepada keluhan yang warga alami mengenai masalah infrastruktur dan lingkungan. Dimana keluhan tersebut membutuhkan tindak lanjut langsung dari pemerintah Yogyakarta dengan cepat. Wadah aspirasi masyarakat tersebut merupakan salah satu aspek untuk mewujudkan Yogya Smart City.\nSolution\nFast Forward membuat sebuah platform berbasis aplikasi android untuk menampung keluhan warga Yogyakarta dan membantu keluhan tersebut agar dapat ditanggapi langsung oleh pemerintah Yogyakarta. Aplikasi ini dibuat dengan tampilan yang dibuat user-friendly dan simple. Dibuat secara spesifik menggunakan tab prioritas, dimana isinya merupakan kategori dari aspek masalah lingkungan dan infrastruktur, yang akan ditanggapi langsung oleh pemerintah yang menaungi tiap-tiap kategori aspek masalah. Dengan begini, warga Yogyakarta menjadi lebih mudah dalam menyampaikan keluhan mengenai masalah lingkungan dan infrastruktur. \nHow it Works\n*flowchart ada di lampiran\n",
        "hackathon_id": "hackgov",
        "winner": false
    },
    {
        "description": "\nPROBLEM STATEMENT\nWomen (Style - Entrepreneurship - Human Employment)\nPROBLEM\nWomen and career is being classic problem to have in Indonesia, because family-oriented person become majority in Indonesia. Time management for job and family is always the hardest part when the wife works in a company with work-time, so that entrepreneur, especially online shop owner, are the best choice for many house-wifes in Indonesia. The most bought in online shop is fashion and style, it is a great chance for the womanpreneur because this field always grow. There's no a system that help woman to improve their capacitance in online shop, especially fashion, they're need it the most because if it all come in one system, they'll gonna be helped so much. We're also wanna improve the productivity of many tailor in Indonesia in effective ways, because tailor is the second option after being farmer at the most.\nSOLUTION\n\nMake a system about fashion social media, social media is chosen because it's always a fun way to make and know a trend happened in a real time and also nowadays everytime we're never get off from social media. Why we should make it specific fashion? Because the growth of fashion development is very great, Instagram is used for many online shop owner to make their bussiness happen, but the system made there still annoying for some reason.\nMake a network where user, designer, and tailor met, this connection need to be made because when this community happen, everything in fashion industry trend and productivity will accelerate and develop quicker. This also help each other in every part of Indonesia so that an effective ways to improve fashion industry will made.\nMake a better system in design production, some issues that come in design production is copyright, because design is published everywhere and easily. Design, especially fashion, usually used to get inspiration or steal the idea, by drawed and published in this community, between each other will protect and care, and also by system will have the documentation. Another issues in design production is subjectivity, that people freely make their own design, but their design actually can be used in better or even productive ways, so that feedback system will make each other give feedback and make them better.\n\nHOW IT WORKS\nSHARE : share your fashion story, favorite style, and unique design today, by this system the fashion trend will be quickly updated in real time and fashion industry will improve accelerately.\nDESIGN : make it easy to make clothes from draw till create, so that make it more productive and make profit, creating your design will be given to the tailor based on time need, and also documentation for your design.\nCOMMUNITY : make a economic community, which is productive and make profit, with great development and amazing improve, this community also save the copyright of design each other.\nFEEDBACK : by giving feedback, each other will always develop and improve, so that the fashion industry growth will always be in positive ways and amazing profit to make.\n",
        "hackathon_id": "hackgov",
        "winner": false
    },
    {
        "description": "\nBuilt With\nphp5javascript\n",
        "hackathon_id": "hackgov",
        "winner": false
    },
    {
        "description": "\nPROBLEM\n\u2022 Kondisi lingkungan di Indonesia sudah memprihatinkan terutama sumber daya air.\n\u2022 Hall tersebut dikarenakan kurangnya kesadaran masyarakat terhadap lingkungannya.\n\u2022 Masukan serta kritik dari aktivis dan pemerhati lingkungan selama ini sulit terdengar oleh pemerintah karena kurangnya dukungan masyarakat untuk menekan pemerintah.\n\u2022 Tidak adanya media pelaporan keadaan lingkungan independen juga menjadi faktor penghambat proses konservasi lingkungan seihngga sangat perlu adanya platform khusus pengawasan dan pelestarian lingkungan yang melibatkan seluruh elemen masyarakat.\nSOLUTION\nMenyediakan sebuh layanan yang dapat memudahkan dalam menggalang dukungan masyarakat. Layanan tersebut digunakan oleh masyarakat luas dan untuk melaporkan keadaan lingkungan yang disertai dengan rating keadaan lingkungan. Layanan tersebut dimonitor secara langsung oleh pemerintah, dan menawarkan fitur-fitur yang memudahkan dalam mengambil kesimpulan dari aspirasi masyarakat. Dengan demikian, pemerintah dalam merumuskan kebijakannya dengan mempertimbangkan aspirasi masyarakat tersebut.\nHOW IT WORKS\n\nMasyarakat mempunyai opini tentang masalah-masalah lingkungan.\nMasyarakat dapat memilih mengapresiasi atau melaporkan masalah, dengan memberi rating kualitas lingkungan.\nKualitas lingkungan yang buruk dapat memicu suatu peringatan (alert), yang akan diinformasikan ke pemerintah.\nSelain memberi rating, masyarakat mem-posting usulan solusi dan alasan mereka mengapresiasi atau memberi laporan.\nPlatform akan menyajikan demografi hasil dari pengumpulan rating dan usulan masyarakat. Platform akan memberi informasi tentang komposisi pemberi rating, seperti kelompok usia, pendidikan, dan lain-lain.\nKetika platform menganggap data-data kritikal telah cukup, laporan kepada pemerintah akan dibuat dan selanjutnya akan membantu dalam perumusan kebijakan.\nSelain memberi rating, masyarakat mem-posting usulan solusi dan alasan mereka mengapresiasi atau memberi laporan.\nPlatform akan mendukung proses administrasi dan penyusunan kebijakan pemerintah yang lebih efektif dan efisien, dan mengurangi ketidakpercayaan masyarakat terhadap pemerintah.\nPemerintah dapat juga mengobservasi aktivitas masyarakat dalam platform, dan memantau tren yang menjadi public interest pada suatu waktu tertentu.\n\n",
        "hackathon_id": "hackgov",
        "winner": false
    },
    {
        "description": "\nInspiration\nkekurangan fasilitas kesehatan di Indonesia\nWhat it does\nmengolah data dengan formulasi tertentu yang mengacu pada IPKM 2014, sehingga menghasikan Indeks Urgensi Fasilitas Kesehatan (IUFK)\nHow I built it\nmenggunakan beberapa data yang kemudian data - data tersebut di formulasikan sehingga menghasilkan analisa Indeks Urgensi Fasilitas Kesehatan (IUFK) \nChallenges I ran into\nHACKGOV\nAccomplishments that I'm proud of\nBerkontribusi untuk membangun bangsa indonesia\nWhat I learned\nSemua yang berhubungan dengan kesehatan\nWhat's next for PADA SEHAT\npada sehat 2.0\n",
        "hackathon_id": "hackgov",
        "winner": false
    },
    {
        "description": "\nBuilt With\nphplaravelhighchartsangular.jsjquerysemantic\n",
        "hackathon_id": "hackgov",
        "winner": false
    },
    {
        "description": "\nProblem:\n\u2022 Tingkat kekerasan terhadap perempuan semakin meningkat, berdasarkan data Komnas Perempuan di Indonesia setiap harinya sekitar 35 perempuan yang menjadi korban kekerasan.\n\u2022 Perempuan menjadi korban kekerasan tidak hanya dalam kekerasan fisik, tetapi juga kekerasan verbal dan psikis\n\u2022 Kekerasan yang terjadi secara verbal dan psikis seringkali membuat korban ragu, enggan, serta malu untuk mengungkapkannya, kepada pihak yang berwajib sekalipun\n\u2022 Sikap ragu, enggan, dan malu untuk mengungkapkan kekerasan verbal, dan psikis membuat permasalahan kekerasan terhadap wanita tidak kunjung dapat teratasi dan justru semakin pelik.\nSolution: Memutus rantai permasalahan kekerasan terhadap perempuan melalui portal SahabatPerempuan. Platform SahabatPerempuan memungkinkan korban atau pelapor untuk berkonsultasi seputar ada tidaknya kekerasan yang dia alami kepada psikolog profesional secara Real-time. Walaupun platform tersebut bersifat caring and sharing tetapi privasi tetap menjadi prioritas yang utama. Dengan tersedianya dua macam fitur yaitu konsultasi dan pendampingan menyeluruh yang meliputi proses konseling, pelaporan serta tindakan lain, maka ini dapat menjadi solusi untuk membantu penyelesaian masalah kekerasan terhadap perempuan di Indonesia.\nHow It works: Permasalahan angka kekerasan terhadap perempuan yang tinggi dan tanpa suatu penyelesaian yang benar-benar mengakomodir keinginan perempuan pada akhirnya hanya membuat penyelesaian kekerasan terhadap perempuan sia-sia. Dalam menyelesaian masalah tersebut tentunya perempuan ingin apabila keinginan mereka  diakomodir dan untuk hasil yang lebih efektif dilibatkan pihak yang tepat seperti psikolog. Keinginan perempuan diantaranya yaitu bahwa kerahasiaan terkait yang mereka alami terjaga dengan baik. Platform ini merupakan platform dimana user, dalam hal ini terbagi menjadi pelapor dan korban, bisa menggunakan fasilitas konseling dengan psikolog profesional dan menggunakan fasilitas pendampingan penuh untuk permasalahan yang membutuhkan perhatian yang lebih.\nUser bisa menggunakan fitur konseling dalam platform ini sehingga terhadap segala keraguan, ketidaktauan, ataupun pertanyaan. Konseling dapat semakin mendalam dengan  chat secara real time dan memungkinkannya user berstatus anonim. Anonimitas ini penting karena dapat membuat user bisa mengungkapkan segala keluh-kesahnya secara lugas dan bebas tanpa rasa khawatir. Akan tetapi ingin datanya diketahui secara menyeluruh oleh psikolog, user tetap bisa memanfaatkan fitur \u201cTerindentifikasi\u201d.\nSahabatPerempuan juga memiliki fitur pendampingan. Jadi apabila setelah proses konseling berlangsung dirasa perlu untuk mengambil tindakan yang lebih tegas atas permasalahan kekerasan yang dialami, disini SahabatPerempuan membantu user di dalam proses  pelaporan kepada pihak berwajib sekaligus pendampingan selama proses hukum tersebut berlangsung. Proses pendampingan ini akan memastikan bahwa korban mendapatkan dukungan secara mental dalam proses hukum yang berlangsung dan mendapatkan bukti penguat yaitu dari psikolog yang dalam hal ini akan berguna dalam kasus kekerasan secara psikis.\n",
        "hackathon_id": "hackgov",
        "winner": false
    },
    {
        "description": "\nBuilt With\niphone-sdkxcodeangular.jsjavascriptvuforiacloudinaryamazon-web-servicesionichtml5jsonajaxobjective-cjquery\n",
        "hackathon_id": "hackwestern2",
        "winner": true
    },
    {
        "description": "\ncirkvito\nEver wanna quickly check your Intro to CS Logic course homework without firin' up the ol' Quartus-Beast? Love circuits, but hate Java applets? Or maybe you're dying to make yourself a shiny half-adder but don't have the time (or dexterity) to fashion one out of physical components?\nInspo\nEnter cirkvito (serk-vee-toh)! Circuits are awesome but finding good software to simulate them is hard. We chose to build a tool to provide ourselves with an alternative to clunky and overly-complex Flash or Java applets. (Appropriately, its name is a translation of the word \"circuits\" in Esperanto.) Ableson's The Structure and Interpretation of Computer Programs mentioned this idea, too. \nWhat it Does\ncirkvito is a drag and drop single-page-app that simulates simple circuits. You click and drag components on the page and connect them in whatever way you want and end up with something cool. Click buttons to zoom in and out, hold the space bar to pan around, and shift-click to select or delete multiple components. \nSome Challenges\nWe built cirkvito with a lot of JavaScript by taking advantage of canvas and jQuery. We learned that UI is really hard to get right by rolling our own buttons and zoom/recenter system. \nWhat We're Proud of\nWe're proud that cirkvito successfully simulates not only combinational circuits like adders, but also sequential circuits with flip flops made from elementary logic gates (albeit with a manual \"clock\"). Also, we designed the data structures to represent circuit components and the way they're connected on our own.\nWhat's Next?\nA fully-responsive app that's able to resize components depending on the window size would have been nice to have. Also, being able to support custom circuits (allowing builders to \"bundle\" custom configurations of logic gates into black boxes) would make it easier to build more complex circuits.\n",
        "hackathon_id": "hackwestern2",
        "winner": true
    },
    {
        "description": "\nThe Problem\nGift giving plays a significant role in society. From busy seasons like the winter holidays, to birthdays, individuals are always asked: what can I get you? Communicating these wants clearly and simply is not easy. There are lists across multiple online retailers, but beyond that there was no simple, secure, and well designed system to share wish lists with friends and family. \nWhat it does\nOur platform fills this gap affording users a clean, well designed system on which they can collect their desired items and securely invite friends to view them. \nHow We built it\nThe platform is built upon a PHP and mySQL backend and driven by a responsive jQuery and AJAX front end, which we designed and coded ourselves from scratch. We took great care in crafting the design of the site to maximize its usability for our users. \nChallenges We ran into\nWe had some difficulties getting started with an AJAX driven frontend, but by the end of the project we had significantly improve our abilities. \nAccomplishments that We're proud of\nWhen creating this project we aimed to deploy an easy account system that was also very secure. We decided to use a passwordless system that uses uniquely generated and expiring login links to securely sign users into our system without the need of a password. This session is then maintain using browser cookies. We also were able to use live AJAX calls to smartly populate our item entry form as the user entered its name as well as pull a photo for each item.\nWhat We learned\nThis hackthon our team learned a lot about web security, we had the opportunity work with a few industry professionals who gave us some great information and support.\nWhat's next for WishFor (wishfor.xyz)\nThe platform will be expanded to allow further collaboration between friends in claiming and splitting the costs of items. \nFunctionality Demo\n(dev post GIF images not displaying properly)\nhttps://gyazo.com/18ed9bd881265342853d59692fa00e4d\nhttps://gyazo.com/75f904f287b6780dd90c6976e4ede9e8\n",
        "hackathon_id": "hackwestern2",
        "winner": true
    },
    {
        "description": "\nBet for Bit is a premium, high-security Bitcoin betting service for dedicated sports fans.\nIt is built with Python, Django, and the CoinBase api.\nOur platform scrapes live sports stats, and allows users to place bitcoin bets on their sports teams.\n",
        "hackathon_id": "hackwestern2",
        "winner": true
    },
    {
        "description": "\n## Inspiration\nAccording to the United Nations in 2013\u2013 Global forced displacements tops over fifty million for the first time since the second world war . The largest groups are from Afghanistan, Syria, and Somalia. A large percentage of the people leaving these war-torn countries apply to be refugees but sadly only a small percentage are accepted, this is because of the amount of people that can be accepted and the extensive time to get accepted to be refugee for. The processing time for refugees to come to Canada can take up to fifty-two months and multiple trips to the visa office that can be stationed countries away, interviews, and background checks. \nAs hackers it is our moral obligation to extend our hand to provide solutions for those in need. Therefore, investing our time and resources into making RefyouFree come to reality would substantially help the lives of individuals looking to refuge or asylum. With so many individuals that are experiencing the hardship of leaving everything behind in hopes for a better future they need all the assistance they can get. Children that are brought up in war-torn countries only know of war and believe that their reason for being alive is to either run away or join the war. There is so much more to life than just war and hardships and RefYouFree will support refugees while finding a better reason for being alive. With this mobile application, there is a way for individuals to message their families, call them, find refuge, and have real-time updates of what is happen around them. \n## What it does\nThe purpose of RefyouFree \u2013 is to provide a faster, and a more convenient resource to allow those in need to apply to countries as refugee\u2019s to start a better life. It would be end up to be a web + mobile application for iOS. \n## How we built it\nThe iOS app was built using xCode, using Objective-C, and Swift. API's used for iOS were Sinch. For the Web app, AWS servers were used to run Ruby on Rails thats front end was written in HTML and CSS.\n## Challenges we ran into\nChallenges that the team and I ran into was how many refugee's had access to smart phones, a computer or the internet. After a bit of research we learned that in Syria, they have 87 phones to 100 people. We are hoping that if people do not have access to these resources that they go to the immigration offices, airports, or seaports where they could apply and hopefully get to use the app.\n## Accomplishments that I'm proud of\nGetting the code to run without an error is always an accomplishment. \n## What I learned\nTeam work is key. Without such an amazing and dedicated team I do not believe we could have gotten so far. We come from different places, did not know each other until the hackathon but were able to put our heads together and got it to work! For the iOS developers we learned a ton about API intergration, as well as Swift. For Web Developers, they had learned a lot about server side, backend, frontend, and ruby of rails.  \n## What's next for RefyouFree\nWorking on this project is happening right after we get out of the hackathon. We have messaged various United Nation Members along with members part of the Canadian Immigration Office to see if we would be allowed to do this idea. Although the team met this weekend, it has a high compatibility and a great work ethic to get stuff done.\n",
        "hackathon_id": "hackwestern2",
        "winner": true
    },
    {
        "description": "\nOff The Grid\nSuper awesome offline, peer-to-peer, real-time canvas collaboration iOS app\nInspiration\nMost people around the world will experience limited or no Internet access at times during their daily lives. We could be underground (on the subway), flying on an airplane, or simply be living in areas where Internet access is scarce and expensive. However, so much of our work and regular lives depend on being connected to the Internet. I believe that working with others should not be affected by Internet access, especially knowing that most of our smart devices are peer-to-peer Wifi and Bluetooth capable. This inspired me to come up with Off The Grid, which allows up to 7 people to collaborate on a single canvas in real-time to share work and discuss ideas without needing to connect to Internet. I believe that it would inspire more future innovations to help the vast offline population and make their lives better.\nTechnology Used\nOff The Grid is a Swift-based iOS application that uses Apple's Multi-Peer Connectivity Framework to allow nearby iOS devices to communicate securely with each other without requiring Internet access.\nChallenges\nIntegrating the Multi-Peer Connectivity Framework into our application was definitely challenging, along with managing memory of the bit-maps and designing an easy-to-use and beautiful canvas\nTeam Members\nThanks to Sharon Lee, ShuangShuang Zhao and David Rusu for helping out with the project!\n",
        "hackathon_id": "hackwestern2",
        "winner": true
    },
    {
        "description": "\nHack Western 2015 - BitFor.me\nProcess\n\nUser loads Bitcoin into webapp\nUser creates simple task that others can easily do, such as purchasing coffee.\nAnother user finds the task based on location, and accepts it.\nThat user then completes the task by, for instance, purchasing coffee and delivering it to the first user.\nAfter the task has been completed, the purchaser marks the transaction as complete and the Bitcoin is sent from the first user to the second.\nBoth users can give either positive or negative feedback, based on how the transaction went. Coming soon.\n\n",
        "hackathon_id": "hackwestern2",
        "winner": true
    },
    {
        "description": "\nInspiration\nAs university students, it is often difficult for us to visualize abstract concepts. In order to appreciate various theoretical concepts, it is pivotal that an individual can visualize it. We created Open Channels as a cloud-based augmented reality solution that enables individuals and corporations alike to create rich and immersive user experiences. \nWhat it does\nOpen Channels allows users to interact with 3D models in context of their real life situation. Users can interact with the models using hand-based gestures through the Myo Arm Band, resulting in an enhanced user experience.\nHow I built it\nOpen Channels was built with various tools, ranging from Unity to the Vuforia SDK and Android Studio. In addition, our team used the Myo Arm Band and its accompanying SDK to incorporate hand gestures into our application. Amazon AWS was integrated in order for users to upload their own 3D models and view them on the application. \n",
        "hackathon_id": "hackwestern2",
        "winner": true
    },
    {
        "description": "\nInspiration\nThe inspiration for this design is the fact that there are many very dangerous contagious diseases that can be easily spread from person to person through the hospital's staff.\nWhat it does\nThe MaloManus works by using a blacklight and a webcam to detect the percent of germs and bacteria in hospital employees hands for better hygiene and to ensure a safer environment for everyone. \nHow I built it\nThe MaloManus was built by using a blacklight to highlight only the bacteria and germs while the webcam was used to pick the levels up. Python was the language of choice because it was easy to start and troubleshoot with it. OpenCV was the visual library used for the taking in the image of hands under blacklight, separating clean, and dirty materials and calculating its area to be used to get the percentage of how clean the hand is.\nChallenges I ran into\nWith every member of the team nver having any experience with coding with camera and visualization software, it was quite troublesome and took some time to get accustomed to. \nAnother challenge was getting a material that could make it easier for us to use computational analysis with Python and openCV. This was solved after a few hours of testing random items from around our room. Data is stored in a database and is used to show people their hands hegenic track record.\nAccomplishments that I'm proud of\nI was proud that we could finish our project in 36 hours, while also being able to provide an actually useful invention tha could be used to help society.\nWhat I learned\nWe have discovered through trial and error, that chalk is one of the best substances for the job. Not only that but an accomplishment that we are proud of is learning how to use openCV and visual analysis for this project. \nWhat's next for MaloManus\nThe future of MaloManus includes, better GUI that will be presented to the user. It would also have an online database with their average scores after it signs them in to their account. It would also warn managers of anyone who constantly get bad scores by sending them a message. \n",
        "hackathon_id": "hackwestern2",
        "winner": true
    },
    {
        "description": "\nInspiration\nAs a tutor of several finance and statistics courses, one barrier to my tutees' learning was 1) the wasted time it took defining new terms and 2) explaining mathematical concepts online. Wolfram's technology gave us the perfect database we needed to solve these two issues.\nWhat it does\nChatGenius is a messenger app geared towards educators. When in the chat, tutees can simply click on words or formulas that they do not understand in order to learn more about it without leaving the app.\nHow I built it\nWe used meteor.js to design the backend of our application - this was important so that changes on the host and client server would synchronize at the same time. We also used Wolfram so that when a tutee had a word they wanted to learn more about, it would pull information from Wolfram. On the front end, we used Materialize CSS to design our interfaces. \nChallenges I ran into\nWe ran into challenges because API spits out XML but Javascript parses JSON.\nAccomplishments that I'm proud of\n3 of our members were competing in their first hackathon with little to no coding experience. For all of us, Hack Western was a great learning experience and introduction to the hackathon scene. We are excited to do it again sometime!\n",
        "hackathon_id": "hackwestern2",
        "winner": true
    },
    {
        "description": "\nInspiration\nOn the trip to HackWestern, we were looking for ideas for the hackathon. We were looking for things in life that can be improved and also existing products which are not so convenient to use. \nJim was using Benjamin's phone and got the inspiration to make a dedicated two factor authentication device, since it takes a long time for someone to unlock their phone, go through the long list of applications, find the right app that gives them the two-factor auth code, which they have to type into the login page in a short period of time, as it expires in less than 30 seconds. The initial idea was rather primitive, but it got hugely improved and a lot more detailed than the initial one through the discussion. \nWhat it does\nIt is a dedicated device with a touch screen, that provides users with their two-factor authentication keys. It uses RFID to authenticate the user, which is very simple and fast - it takes less than 2 seconds for a user to log in, and can automatically type the authentication code into your computer when you click it. \nHow We built it\nThe system is majorly Raspberry Pi-based. The R-Pi drives a 7 inch touch screen, which acts as the primary interface with the user. \nThe software for the user interface and generation of authentication keys are written in Java, using the Swing GUI framework. The clients run Linux, which is easy to debug and customize. \nSome lower level components such as the RFID reader is handled by an arduino, and the information is passed to the R-Pi through serial communication. \nSince we lost our Wifi dongle, we used 2 RF modules to communicate between the R-Pi and the computer. It is not an ideal solution as there could be interference and is not easily expandable. \nChallenges I ran into\nWe have ran into some huge problems and challenges throughout the development of the project. There are hardware challenges, as well as software ones. \nFor example, the 7 inch display that we are using does not have an official driver for touch, so we had to go through the data sheets, and write a C program where it gets the location of the touch, and turns that into movement of the mouse pointers. \nAnother challenge is the development of the user interface. We had to integrate all the components of the product into one single program, including the detection of RFID (especially hard since we had to use JNI for lower level access), the generation of codes, and the communication with other devices. \nAccomplishments that I'm proud of\nWe are proud of ourselves for being able to write programs that can interface with the hardware. Many of the hardware pieces have very complex documentation, but we managed to read them, and understand them, and write programs that can interface with them reliably. As well, the software has many different parts, with some in C and some in Java. We were able to make everything synergize well, and work as a whole.\nWhat We learned\nTo make this project, we needed to use a multitude of skills, ranging from HOTP and TOTP, to using JNI to gain control over lower levels of the system. \nBut most importantly, we learnt the practical skills of software and hardware development, and have gained valuable experience on the development of projects. \nWhat's next for AuthFID\n",
        "hackathon_id": "hackwestern2",
        "winner": true
    },
    {
        "description": "\nBuilt With\nc++myoarduinogrovebluetoothlcdhardware\n",
        "hackathon_id": "hackwestern2",
        "winner": true
    },
    {
        "description": "\nInspiration\nInspired by expensive and bulky machinery, we sought out to find a way for individuals suffering from Parkinsons disease and other hand tremor conditions to have an affordable and easy to use therapy to manage their conditions.\nWe built a game that gives user the task of drawing a straight line on their computer or television. Their hand movements are tracked using a LeapMotion and a Pebble smart watch. While playing the game, we track statistics and display easy to read graphs to track progress over time.\nThe user can then see their progress over time and see how they improve, providing both encouragement and motivation to continue their treatment.\nBuilt using a wide variety of technologies, we believe that we have created a fun, easy access method of treatment for those who need it.\n",
        "hackathon_id": "hackwestern2",
        "winner": true
    },
    {
        "description": "\nOverview\nTransport yourself to a whole new world of virtual reality by upgrading your standard cardio bike workout into an adrenaline-inducing mountain biking experience. Pedal faster on the stationary bike to travel faster on the trail.\nHow It Works\nThe project utilizes an encoder, an Arduino Uno, a computer fan, a stationary bike, and an Oculus Rift. The encoder is used to measure the angular velocity of the stationary bike's wheel. In turn, this controls the speed of the 360-degree video played on the Oculus Rift, making it seem as if you are riding the trail faster. The encoder also controls the speed of the computer fan placed in front of your seat, so the faster you bike, the more wind you feel - just like in real life. \nWhat's next for Just Out For a Rift\nThe next step for this project is to make it compatible with other exercising machines, such as rowing machines. In addition, a dedicated library of 360 degree videos optimized for the Rift would be built to allow users to personalize their exercising experience. Lastly, optional user profiles would be added so users can keep track of what trails they have finished and basic statistics such as calories burned, maximum speed reached, distance covered, etc.\n",
        "hackathon_id": "hackwestern2",
        "winner": true
    },
    {
        "description": "\nInspiration\nFollowing the recent tragic attacks in Paris, Beirut, and other places, the world has seen the chaos that followed during and after the events. We saw how difficult it was for people to find everything they wanted to know as they searched through dozens of articles and sites to get a full perspective on these trending topics. We wanted to make learning everything there is to know about trending topics effortless.\nWhat it does\nOur app provides varied information on trending topics aggregated from multiple news sources. Each article is automatically generated and is an aggregation of excerpts from many sources in such a way that there is as much unique information as possible. Each article also includes insights on the attitude of the writer and the political leaning of the excerpts and overall article.\nProcedure\n\nTrending topics are found on twitter (in accordance to pre-chosen location settings).\nFind top 30 hits in each topic's Bing results.\nParse each article to find important name entities, keywords, etc. to be included in the article.\nUse machine learning and our scripts to select unique excerpts and images from all articles to create a final briefing of each topic.\nUse machine learning to collect data on political sentiment and positivity.\n\nAll of this is displayed in a user-friendly web app which features the articles on trending topics and associated data visualizations.\nHow we built it\nWe began with the idea of aggregating news together in order to create nice-looking efficient briefings, but we quickly became aware of the additional benefits that could be included into our project. \nNotably, data visualization became a core focus of ours when we realized that the Indico API was able to provide statistics on emotion and political stance. Using Charts.JS and EmojiOne, we created emoticons to indicate the general attitude towards a topic and displayed the political scattermap of each and every topic. These allow us to make very interesting finds, such as the observation that Sports articles tend to be more positive than breaking news. Indico was also able to provide us with mentioned locations, and these was subsequently plugged into the Google Places API to be verified and ultimately sent to the Wolfram API for additional insight.\nA recurring object of difficulty within our project was ranking, where we had to figure out what was \"better\" and what was not. Ultimately, we came to the conclusion that keywords and points were scatted across all paragraphs within a news story. A challenge in itself, a solution came to our minds. If we matched each and every paragraph to each and every keyword, a graph was formed and all we needed was maximal matching! Google gods were consulted, programming rituals were done, and we finally implemented Kuhn's Max Matching algorithm to provide a concise and optimized matching of paragraphs to key points. \nThis recurring difficulty presented itself once again in terms of image matching, where we initially had large pools (up to 50%) of our images being logos, advertisements, and general unpleasantness. While a filtering of specific key words and image sizes eliminated the bulk of our issues, the final solution came from an important observation made by one of our team members: Unrelated images generally have either empty of poorly constructed alt tags. With this in mind, we simply sorted our images and the sky cleared up for another day. \nThe list of technicalities:\n\nImplemented Kuhn's Max Matching\nUsed Python Lambda expressions for quick and easy sorting\nAdvanced angular techniques and security filters were used to provide optimal experiences\nExtensive use of CSS3 transforms allowed for faster and smoother animations (CSS Transforms and notably 3D transforms 1. utilize the GPU and 2. do not cause page content rerendering)\nResponsive design with Bootstrap made our lives easier\nIonic Framework was used to quickly and easily build our mobile applications\nOur Python backend script had 17 imports. Seven-teen\nUsed BeautifulSoup to parse images within articles, and newspaper to scrape pages\n\nChallenges we ran into\n\nNot running out of API keys\nGetting our script to run at a speed faster than O(N!!) time\nSmoothly incorporating so many APIs\nFiguring out how to prioritize \"better\" content\n\nAccomplishments that we're proud of\n\nFinishing our project 50% ahead of schedule\nUsing over 7 APIs with a script that would send 2K+ API requests per 5 minutes\nHaving Mac and PC users work harmoniously in Github\nSuccessful implementation of Kuhn's Max Matching algorithm \n\nWhat's next for In The Loop\n\nSupporting all languages\n\n",
        "hackathon_id": "hackwestern2",
        "winner": true
    },
    {
        "description": "\nBuilt With\nandroidphpapachemysqlpebblecjava\n",
        "hackathon_id": "hackwestern2",
        "winner": true
    },
    {
        "description": "\nInspiration\nThis was inspired from an article we read about the impact mobile devices were making in third world countries, such as Africa. Mobile development in these countries are increasing by the second and we wanted to take part in that development.\nWhat it does\nThis app allows users to get answers to a large variety of questions at almost any time. This is achieved through the use of the Twilio and Wolfram API. A user can text the application a question such as; integrate x^2, 2+4, plot(logx), what time is it, etc. Users can also ask for some dictionary definitions such as economics, ball, and H2O for example. This is all done by making a request to Wolfram and parsing the data into a readable sms or mms message. \nHow I built it\nThis was built by running a server with node.js/express and having it listen for a POST request done by Twilio. The server will use the query given in the body of the text to make a request to the Wolfram API and it will then parse the data and send it back as a sms message. Depending on if there is an image it may send a mms message instead.\nChallenges I ran into\nTwilio was a little difficult to get running, although the initial messaging was not too hard it was difficult to have a message sent back with authentication because it required many things to be setup. Parsing the data and displaying it in a proper format for the response also took some time because Wolfram can send back a lot of data that may not be relevant.\nAccomplishments that I'm proud of\nI am pretty proud that we were able to get this application running because offline services is something that I've never worked with before and I always thought was pretty cool. In fact just getting Twilio to work with the server and being able to have it send pictures was pretty amazing. \nWhat I learned\nWolfram actually knows everything. The wolfram request can be amazingly broad, initially we thought we would need to tap into multiple APIs to get a broader range of data, but after further investigation we realized that Wolfram actually covers a pretty large variety of topics. I also learned a lot about the Twilio API and how to connect Twilio services with server.\nWhat's next for AnswerMeThis\nIncrease the amount of data that is being sent and further improve the response speed, as well as improving visualization of the data. We also want tap into other APIs to give users a broader range of topics to choose from.\n",
        "hackathon_id": "hackwestern2",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe want to create an efficient, seamless method of transferring files from android to PC and Mac. \n\nWhat it does\nUsing an NFC chip or Pebble smartwatch, we can **bblip** (transfer/send) the file that was on your phone, to your computer, in one fluid step.\n\nHow We built it\nUsing NFC or Pebble technology, an event is triggered on an android device, this shares the open file to our ownCloud server, which is then pushed to your desktop.\n\nChallenges We ran into\nFrom struggling with sleep deprivation, to having an NFC tag suck the life out of the team, we worked together to provide a solution for every obstacle we encountered.\nThe list of challenges is much too long to fit into this text area, but a couple of them include database optimization in Amazon Web Service, ridiculous naming schemes from downloaded files, and having our security certificates break as we write this post.\n\nAccomplishments that We're proud of\nWe are pleased things work at all. We're also proud of our technology, learning how to integrate so many services and platforms together was tough, but we successfully created one unified product. \n\nWhat We learned\n Our team learned how to integrate ownCloud with Amazon Web Service. We also learned that Visual Basic Script is actually garbage. _ Visual Basic will **never** be a tool that you will need or use. _ Pebble technology is surprisingly easy, not to mention extremely spiffy, to use and integrate into android development.\n\nWhat's next for bblip\nOptimizing transfer speeds and adding more accepted file formats is definitely the current priority, following that we would like to work on a subscription model, in order to better the web service.\n\n",
        "hackathon_id": "hackwestern2",
        "winner": true
    },
    {
        "description": "\nInspiration\nThe bitalino system is a great new advance in affordable, do-it-yourself biosignals technology. Using this technology, we want to make an application that provides an educational tool to exploring how the human body works.\nWhat it does\nCurrently, it uses the ServerBIT architecture to get ECG signals from a connected bitalino and draw them in an HTML file real time using javascript. In this hack, the smoothie.js library was used instead of the jQuery flot to provide smoother plotting.\nHow I built it\nI built the Lubdub Club using Hugo Silva's ServerBIT architecture. From that, the ECG data was drawn using smoothie.js. A lot of work was put in to make a good and accurate ECG display, which is why smoothie was used instead of flot. Other work involved adjusting for the correct ECG units, and optimizing the scroll speed and scale of the plot.\nChallenges I ran into\nThe biggest challenge we ran into was getting the Python API to work. There are a lot more dependencies for it than is written in the documentation, but that may be because I was using a regular Python installation on Windows. I installed WinPython to make sure most of the math libraries (pylab. numpy) were installed, and installed everything else afterwards. In addition, there is a problem with server where the TCP listening will not close properly, which caused a lot of trouble in testing.\nApart from that, getting a good ECG signal was very challenging, as testing was done using electrode leads on the hands, which admittedly would give a signal that is quite susceptible to interference (both from surrounding electronics and movements). ALthough we never got an ECG signal close to the ones in the demos online, we did end up with a signal that was definitely an ECG, and had recognizable PQRS phases.\nAccomplishments that I'm proud of\nI am proud that we were able to get the Python API working with the bitalino, as it seems that many others at Hack Western 2 were unable to. In addition, I am happy with the way the smoothie.js plot came out, and I think it is a great improvement over the original flot plot.\nAlthough we did not have time to set up a demo site, I am quite proud of the name our team came up with (lubdub.club).\nWhat I learned\nI learned a lot of Javascript, jQuery, Python, and getting ECG signals from less than optimal electrode configurations.\nWhat's next for Lubdub Club\nWhat's next is to implement some form of wave-signal analysis to clean up the ECG waveform, and to perform calculations to find values like heart rate. Also, I would like to make the Python API / ServerBIT easier to use (maybe rewrite from scratch or at least collect all dependencies in an installer). Other things include adding more features to the HTML site, like changing colour to match heartrate, music, and more educational content. I would like to set up lubdub.club, and maybe find a way to have the data from the bitalino sent to the cloud and then displayed on the webpage. \n",
        "hackathon_id": "hackwestern2",
        "winner": true
    },
    {
        "description": "\nInspiration:\n Sound is a precious thing. Unfortunately, some people are unable to experience as a result of hearing loss or of being hearing impaired. Although, we firmly believe that communication should be as simple as a flick of the wrist and we aim to bring simplicity and ease to those affected by hearing loss and impairment.  \n\nWhat it does:\nThe HYO utilizes hand gesture input and relays it to an Android powered mobile device/ or PC. The unique set of gestures allow a user to select a desired phrase or sentence to communicate with someone using voice over.\nHow we built it:\nHYO = Hello + Myo \nWe used the C++ programming language to write the code for the PC to connect to the MYO and recognize the gestures in a multilevel menu and output instructions. We developed the idea to create and deploy an Android app for portability and ease of use. \nChallenges we ran into:\nWe encountered several challenges along the way while building our project. We spent large amounts of time troubleshooting code issues. The HYO was programmed using the C++ language which is complex in its concepts. \nAfter long hours of continuous programming and troubleshooting, we were able to run the code and connect the MYO to the computer. \nAccomplishments that we're proud of:\n1) Not sleeping and working productively.\n2) Working with in diverse group of four who are four complete strangers and being able to collaborate with them and work towards a single goal of success despite belonging to different programs and having completely different skill sets. \nWhat we learned:\n1) Github is an extremely valuable tool.\n2) Learnt new concepts in C++\n3) Experience working with the MYO armband and Arduino and Edison micro-controllers.\n4) How to build an Android app\n5) How to host a website\nWhat's next for HYO WORLD\nHYO should be optimized to fit criteria for the average technology consumer. Hand gestures can be implemented to control apps via the MYO armband, a useful and complex piece of technology that can be programmed to recognize various gestures and convert them into instructions to be executed.\n",
        "hackathon_id": "hackwestern2",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe were frustrated with downloading the Hack Western Android app every time it updates. We figured it would be nice if there has an open-source library so that developer can change content in real-time; therefore, users don't have to re-download the app everytime it updates. \nWhat it does\nDynamoUI is an Open-Source Android developer library for changing a published app at Real-time. After logging in and authenticating, the client can use our simple UI to make real time changes to various app components such as the text, images, buttons, and theme at real-time. This app has immense potential for extensibility and uses such as a/b testing, data conglomeration and visualization.\nHow we built it\nWe use Firebase for synchronizing data between Android and the Web platform, and AngularJs to make use of 3 way binding between the markup, js, and database. The mobile client constantly listens for changes on the database and makes changes accordingly through the use of our extended UI Classes.\nChallenges we ran into\nSynchronizing data between AngularJS and Firebase was not always straightforward and well documented for special cases. \nAccomplishments that we are proud of\nPublished an Open-Source library for the use of other Android apps in real-time.\nWhat I learned\nMaking Android library, AngularJS and Firebase\nWhat's next for DynamoUI\nImplement A/B testing so marketers can determine which versions perform better in real time. \n",
        "hackathon_id": "hackwestern2",
        "winner": true
    },
    {
        "description": "\nInspiration\nEvents with crappy music no one wants to listen to.\nWhat it does\nPiedPipr is a way to anonymously cue music to a public playlist with ultimate oversight by the creator of the playlist. Sharing and creating playlists is an extremely simple procedure that doesn't require any logins.\nHow we built it\nWe built this platform using a variety of different web technologies to create a modern and platform agnostic. Meteor.js was at the heart of the application that handled all of the desktop browsing, mobile browsing and the API we built for secure REST communication. The app was built using IONIC, which creates native apps with JavaScript. IONIC communicates through the aforementioned REST API.\nChallenges we ran into\nThere were too many challenges to count and they were too heartbreaking to recall. ~\nThese ranged from dealing with Angular's dependency-injection bugs, to harrowing problems with the reactivity and asynchronity present in Meteor's client (Blaze.js + other tools).\nOther issues included working with some poorly documented areas of the Google data API (for youtube) and attempting to integrate neat animations (ex. subtle strobe light animations in the background, pertaining to the sound in the video being played) while ensuring efficiency and not overworking the browser/CPU.\nAccomplishments that we're proud of\nHelping people ultimately helps us, so by helping other people with their problems - such as AWS troubles, setting up Databases, figuring out LEAP APIs, etc. - we in turn a lot about AWS in the process.\nWhat we learned\nWe learned valuable troubleshooting and debugging skills. We also learnt that the Google API should not be underestimated as it wasn't built for its ease of use. \nWhat's next for PiedPipr\nIntegrating a vast array of sound APIs into our platform to provide the richest and most seamless experience for our users.\nUpdating the UI to support large-scale events.\n",
        "hackathon_id": "hackwestern2",
        "winner": false
    },
    {
        "description": "\nBuilt With\nc#unity\n",
        "hackathon_id": "hackwestern2",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaandroid-studioeclipseestimotecameralove\n",
        "hackathon_id": "hackwestern2",
        "winner": false
    },
    {
        "description": "\nInspiration\nInspired by classic iPhone and Andriod games, our team set out to create a game that our younger selves would have love to play. This idea turned into our game, Dividr. Games like Doodle Jump, Temple Run, Subway Surfers, Duet, and many others took up most of our time during our younger years. Using modern, up-to-date technology, we were able to create a game that was both fun and functional. We hope you enjoy Dividr as much as we do.\nWhat it does\nThe goal of Dividr is to get the highest score possible by surviving for as long as you can, and picking up coins along the way. To help you reach your goal, you can break your character into two separate parts that you can control sanctimoniously. We wanted to optimize Dividr for the best possible game-play on each device, so we created fluid controls custom to each device. For the iPhone 6s, we use 3D touch to break apart the player, since this would offer the most fluid and responsive movement. On the other hand, using the Apple TV, we collectively decided as a team to use the swipe feature of the remote. This offered the most user friendly experience on that device.\nHow we built it\nDividr is a native iPhone app that is built in Swift using XCode. We use the Sprite-Kit framework to do most of the image displaying, but for the most part, everything is made completely from scratch. The graphics were made in Illustrator using a good amount of strokes and glow effects.\nChallenges we ran into\nAt first, we wanted to create our own custom controller for the Apple TV that would allow 3D touch to work on the screen. As we began working on this project, we realized that with the current Bluetooth technology, it would not be as effective as we would have hoped for. We also decided that this would not be the best way for people to play Dividr on the Apple TV. So we moved on, and made a great game using the swipe feature.\nAccomplishments that we're proud of\nWe\u2019re very proud of our use of the 3D touch capability on the new iPhone 6S\u2019s. This is an extremely new technology that we feel hasn\u2019t been heavily utilized in current apps and that our game uses to the feature\u2019s fullest. In making Dividr multi-platform we felt that the app shouldn't just be wholly replicated but instead enhanced for each of the device\u2019s unique characteristics which why our port of the game to tvOS is another accomplishment we take pride in. In the iOS version we rely entirely on 3D touch input whereas on the Apple TV remote with no pressure sensitivity, we use gesture controls to accomplish the same interaction with the app.\nWhat we learned\nWith only one of our three members having any experience in Swift (very minor) prior to this Hackathon, we feel as though a comfort in coding with Swift and using Sprite Kit was something we learned. We also learned that though Swift is very cross compatible, designing an app for two different platforms such as tvOS and iOS requires a large amount of object and controller tweaking. Core game functions and dynamics of objects were carried over very easily, however images and text proved to require a large amount of modification.\nWhat's next for Dividr\nAs a team, we want to see Dividr grow into a top tier iPhone and Apple TV app. As of now, we currently have plans for adding features that will increase the overall Dividr experience greatly. We hope that you can join us on this journey as we publish our app to the Apple Store on both devices, and continue to develop a great game.\n",
        "hackathon_id": "ritios2016",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe wanted to make something that we would use often.\nWhat it does\nIt allows you as the host of a party to create a collaborative play queue for your guests to connect to, suggest and vote on songs.\nHow we built it\nComputers\n",
        "hackathon_id": "ritios2016",
        "winner": true
    },
    {
        "description": "\nPaper Kites\nYing-Kai Huang - multi - platform connection and programming\nDana Adylova - animation and programming\nAyana Adylova - design and programming\nWe created a game using SpriteKit called Paper Kites. The game can support up to two players, with single player and multiplayer game modes. The goal of the game is to stay alive as long as possible (in single player mode) or to outlive your opponent (in multiplayer mode). A user has to download both the OSX application and the iOS application. The iOS application acts as a joystick controller for the game, whereas the OSX application is the main display for the game itself. Upon running the iOS application, a user has to connect to a host OSX app and then use the joystick to control a kite in the game. The tail of the kite represents its life, and there are different obstacles like snow, rain, birds, and opponent\u2019s kite can damage it. Popping air balloons has a chance of in acquiring additional lives.\n\n",
        "hackathon_id": "ritios2016",
        "winner": true
    },
    {
        "description": "\nWhat is Dripp?\nDripp is a social challenge app that encourages individuals to reduce their water waste by listening to music. To use Dripp, simply start a shower, select a playlist, and go - Dripp takes care of the rest! Dripp analyzes the length of your shower and intuitively suggests playlists of shorter length to help minimize water usage while integrating seamlessly into your everyday routine.\nChallenging Friends\nDripp is fun to use alone or with friends - simply add your friends and go! Using Dripp, you can challenge your friends to complete a shower using one of your own playlists or top playlists available on Spotify. Once your friends accept a challenge, they have 48 hours to complete it.\nAll About The Savings\nAs you continue to take shorter and shorter showers, Dripp calculates your water savings in gallons, raising your user level and sharing your results with friends. After completing a shower, you can share your progress to Facebook, Twitter, and Instagram, letting all your friends know how much of a difference you\u2019re making!\nFeatures\n\nListen to your playlists on iPhone and Apple Watch\nSave water by selecting Dripp\u2019s recommended playlist\nChallenge friends to take a shower with your playlists\nShare your results with friends on Dripp, as well as Facebook, Twitter, and Instagram\n\nTeam Members\n\nHenry Saniuk (github.com/speakerbug)\nBrandon Hudson (github.com/brandonhudson)\nJackie McGraw (github.com/JacquelineDMcGraw)\n\n",
        "hackathon_id": "ritios2016",
        "winner": true
    },
    {
        "description": "\nBuilt With\niphone-sdk\n",
        "hackathon_id": "ritios2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe've noticed that sometimes friends go out to events and can't keep track of when they come and leave. This app will help take care of that by geofencing event areas, and making sure everyone gets home safe.\nWhat it does\nThis application creates user groups with a geofenced event which will make sure that people don't leave unnoticed.\nHow we built it\nBuilt it with xCode and Swift.\nChallenges we ran into\nNever programming in Swift before.\nAccomplishments that we're proud of\nLearning iOS development.\nWhat we learned\nSwift Development.\nWhat's next for Bubble\nWe're going to continue working on the app and making sure everything works perfectly. Going to submit to store.\n",
        "hackathon_id": "ritios2016",
        "winner": false
    },
    {
        "description": "\nShare class notes with your friends with Notera!\nCertain assets are licensed under Creative Commons BY 3.0, provided by Designmodo, Freepik, and Flaticon\n",
        "hackathon_id": "ritios2016",
        "winner": false
    },
    {
        "description": "\n\nBefore we start...\nFor this presentation we're going to need two iPhone 6S phones, an Apple Watch, and a computer with a browser (preferably Chrome, but Safari should work) pointing to http://192.241.181.25:3000\nOnly one of the iPhones needs to be displayed.\nUnfortunately, none of our team member's schedules matched with practice times, so we will have to practice to ourselves before hand and hope everything works out.\nInspiration\nWe were pitching ideas back and forth to each other - most of them jokes, some of them sort of good ideas.  Our friend gabe_k came up with the idea of a new type of game, based on the social dynamics of trying to take a picture of someone without them knowing.\nSound creepy?  Well yeah, it can be.  But only if you want it to be.  \nWhat it does\nTo start a match, two users with the app happen to walk into the same area.  For instance - If I walk by a person with our app, and I would get a notification.  I also get a random, self described fact about that person, and they also get one about me.  However, we don't get to see a picture of that person, or their name.  \nIf I think I've found the person I'm looking for, I'll take a picture of them, and send it.  My opponent will then either approve or deny that the photo is actually of them.  If it is, I win a point and the game is over!  If not, I get another fact about my opponent, and the match continues.\nThis game is great for parties!  You get to break the ice with some awkward photos, and you also get to learn about the person.\nBUT WAIT, there's more!  We have an Apple Watch meter that could give you an advantage.  Based on how far away you are from your opponent, your watch will change colors and vibrate to indicate if you are getting warmer or colder.\nWe also have a web client where you can view the awkward pictures people have taken of you!\nApple Watch Views\nFar Away\n\nCloser...\n\nVery Close...\n\nRight next to you!\n\nHow we built it\nWe used iBeacons to tell if two users were near each other.  If they were, we get the ID of the user through the beacon and start the match.  The rest of the game is mostly handled through the web API built with Ruby, unless the user is using an Apple Watch to help them find their opponent. \nChallenges we ran into\nWatchOS would not build  for a while - it took several hours to get it to compile on our Apple watch.  We got it working within 5 minutes of entering, but it's less developed that we would have liked.\nAccomplishments that we're proud of\nGetting WatchOS to work, setting up the API, successfully initiating games and using iBeacons!  We never built a game before, so it was fun to work on such a weird and unique idea.\nWhat we learned\nTime management!  Last year, we weren't that great with dealing with tasks and getting things done.  This year was more streamlined, although we still did run into problems.\nOur designer also learned more about designing for iOS, and we all learned more about Swift and WatchOS.\nWhat's next for via\nMaking it fully functional.  The app is still kind of buggy (but I think we're all in the same boat here), and it'd be nice to polish and develop it further.  Also, please note that the iPhone images above are designs, not screenshots - it is mostly done, but we still need to add a bit of buttons here and there.\nTeam\nWe all contributed in various ways, but our team members did have some key roles.\n\nAlexander \"doomy\" Lozada - Expert Designer / Web Developer / Web Developer?\nSquiffy - Swift Artisan, Purveyor of Good Music, Future Apple CTO\nIan Gilbert - Cinematographer Extraordinaire, Got the Highest Quality Food from Five Guys, Weathered Windows User\n\nMore Stuff\nIf you want to see our backend, head over to https://github.com/piedoom/2pic-web\n",
        "hackathon_id": "ritios2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\nswiftxcodecocoa-touch\n",
        "hackathon_id": "ritios2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\nxcodeswiftjavagithubtowerphotoshop\n",
        "hackathon_id": "ritios2016",
        "winner": false
    },
    {
        "description": "\nWhat it does\nYour iPhone becomes your game controller as multiplayer drawing madness ensues on your Apple TV.\nHow we built it\nNative iOS and tvOS apps interface with our server (written with the Java Spring framework). The TV renders the game screen, and each iOS device acts as a controller with a joystick to control your movements on the TV.\nNotes\n\nRequires concurrent use of both iPhone and Apple TV.\nOne or more iPhones required.\nTheoretically infinite players supported; a maximum of 4 will have proper colors.\nNetwork connection quality directly affects performance. Slow/spotty connections may impede play.\n\nAttributions\nSee app's settings bundle for full license information.\n\nSwiftyJSON: Copyright (c) 2014 Ruoyu Fu (MIT License)\n\n",
        "hackathon_id": "ritios2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\nxcodeiphone-sdkjade\n",
        "hackathon_id": "ritios2016",
        "winner": false
    },
    {
        "description": "\nHow we built it\nWe used Xcode to build two apps that allow users to create records of their trips, which are then uploaded to their iCloud storage so that they can view the trips, and a slideshow of the photos from the trip, along with their stories about the photo, on their Apple TV. We did this with CloudKit, enabling users to share with \nChallenges we ran into\nWorking with CloudKit was a completely new experience for us, so learning how to use the Cloud while we were learning CloudKit made for an interesting struggle. We even had a problem with the cloud pop up just hours before our presentation, though we managed to get the app working properly before presenting on stage.\nIn addition, this was Adam's first project using Swift and Xcode altogether, and Sean's first experience with many aspects of iOS, such as collection Views, Visual Effect Views, ImageView animations, and all of tvOS\nAccomplishments that we're proud of\nNot only did we manage to make a functional app, we made TWO functional apps that work well together. We also made a good looking iOS app, and a really attractive photo gallery on the TV\n",
        "hackathon_id": "ritios2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nIt's always hard to find a place when you're going out with friends.  Especially when everyone likes different foods.  That's where Arcuisine comes in.  We use machine learning to tackle the difficult problem of finding the best possible place for everyone based on your individual likes, ratings, and past experiences with other friends.\nWhat it does\nArcuisine finds local restaurants for your group of friends to go to based on all of your likes.  You create a profile and specify what cuisine types you personally like or dislike. It then allows you to connect with friends in a group, and once all of your friends are partied up, it will use your profile information to suggest some of the optimal results in the area for where you should eat!\nHow we built it\nWe built Arcuisine in three main components. Firstly, there is a server backend that uses node.js and MongoDB that provide for user information storage to the other components. Next, there's a web-based UI written using Jade which provides a more detailed view of each user's profile and the groups that they are a part of. The final component is an iOS app created using Swift which allows mobile users to connect in the same ways as the desktop users. Additionally, this provides an environment for better localization in the future.\nChallenges we ran into\nSome large challenges included learning Swift and building our first app without reliable access to compatible hardware.\nWe also found initial resistance interfacing between our server and the device as well as setting up and managing the database.\nAccomplishments that we're proud of\nThe communication works quite reliability between all three of our components when we only had a short time period to configure it.\nWhat we learned\nWe learned quite a bit from this project ranging from familiarization with database management, Swift/XCode, and numerous helpful libraries. This was both of our first experience building an iOS app.\nWhat's next for Arcuisine\nWe want to add machine learning techniques to produce the optimal list of restaurants and maps to show these places, which we weren't able to do due to time constraints.  With more time, we would add the ability to actually like/dislike cuisine types and rate past restaurant visits.\n",
        "hackathon_id": "ritios2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nEverybody loves pizza, but nobody likes being unhealthy. We created PizzaCrunch so that you could indulge safely. \nWhat it does\nPizzaCrunch tracks your calories and tells you how many slices of pizza you can eat accordingly. Actually, even cooler PizzaCrunch waits until you burn more calories than there are in a slice of pizza before allowing you to eat a slice.\nHow we built it\nWe built the app natively for the iPhone and Apple Watch using Swift. We gather data using the HealthKit framework.\nChallenges we ran into\nWe faced challenges when we were trying to make cool animations. For example, we had to make it so that a pizza image would fill up periodically as the user went about there day and burnt more calories. Other challenges included Apple Watch integration, which were fairly simple to get around. Also, at the end Git failed on us and messed up some code in the interface builder while merging the project from a branch to master. Fortunately all the good code was saved in the branch and we managed to submit that. \nAccomplishments that we're proud of\nWe worked hard throughout the challenge and built an app that works. \nWhat we learned\nWe practiced and refined our knowledge of the swift programming language and built an awesome and practical application. \nWhat's next for PizzaCrunch\nCooler animations, push notifications, more robust Apple Watch integration, more data\n",
        "hackathon_id": "ritios2016",
        "winner": false
    },
    {
        "description": "\nInspiration Always wanted to start iOS development. Apple workshop and hackathon made it possible.\nWhat it does multiplayer single device game\nHow I built it basic tab view and view controllers. Apple workshop and some online tutorials helped us a lot.\nChallenges I ran into Embedding collection view controllers inside table view controller\nAccomplishments that I'm proud of Within single day, we could build this simple game. Three days before, we didn't have any idea how to develop iOS apps, now we can explore on our own.\nWhat I learned swift and iPhone app development basics\nWhat's next for Connect4 planning to use game center and play it on different devices and make it multiplatform\n",
        "hackathon_id": "ritios2016",
        "winner": false
    },
    {
        "description": "\nBuilt With\nswiftios\n",
        "hackathon_id": "ritios2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nCreated for RIT's 2016 iOS App Challenge\nOriginal inspiration was a gif of a girl chopping bamboo with a samurai sword ( http://i.imgur.com/X3DKg.jpg ). We wanted to create a game based around using attacks at strategic angles to deal damage to enemies. We thought this was a fitting idea and would play in nicely with the multiplatform theme.\nWhat it does\nThis was a game built for a hackathon. It's intended to be a quick and simple 20 second interactive game.\nHow we built it\nBy coding with Swift\nChallenges we ran into\nLots!! We ran into a lot of challenges with our game logic and we happily worked through them.\nAccomplishments that we're proud of\nImpressive user interaction, art assets and a compelling final game\nWhat we learned\nTeamwork, swift and developing for iOS\nWhat's next for Woodland Warrior\nPossibly continuing to develop and utilizing motion controls for the \"slash\" effect\n",
        "hackathon_id": "ritios2016",
        "winner": false
    },
    {
        "description": "\nRIT iOS App Challenge 2016\nRIT iOS App Challenge 2016 Competition Submission\nMembers:\n\nIsaiah Smith\nArthur Burgin\nJade Evans\n\nAbout:\nBoard Games is a fun and interactive educational focused system that can be ran and operated across multiple platforms. Our goal is to allow groups of people to come together and easily join each other in fun and educational experiences with minimal setup. Simplly choose a game you want to play, scan yourself in as a player (iOS device) or spectator (web) and you can join in on the fun right then and there.\nOur first game is a fun historical events game that you can play solo or with friends. Given a series of historican events, you must place them, one-by-one, on a timeline in the correct order.\nExternal Resources Used:\nGuides / Online Tutorials / Help\n\nGenerating QR Codes\n\nFrameworks / Materials\n\nSocket.io\nSwiftyJSON\nAssets\nSound\n\nSee Also:\n\nWeb Link\nGitHub\nServer GitHub\n\n",
        "hackathon_id": "ritios2016",
        "winner": false
    },
    {
        "description": "\nPick Their Poison\nPick Their Poison is a new age party game where you get to control what the opposing team has to do. One team selects a word that a member of the opposing team has to act out. However, they also select a rule that the opponent has to abide by while acting out their word. Want to make your friends act out football while doing jazz hands? How about your family member doing their best impression of an elephant while thumb wrestling their teammate? Pick Their Poison is appropriate for all ages.\nLibraries Used\n\nCocoa Async Sockets\nDSMultilineLabelNode\n\n",
        "hackathon_id": "ritios2016",
        "winner": false
    },
    {
        "description": "\nGraph It\nThe mobile device has been known for its versatility but its hard to imagine using it to produce some quality infographics. \"Graph it\" tries to solve that problem. \nGraph it allows users to create beautiful looking Pie charts using their iPhones. These Pie charts are pushed into iCloud and viewable through an OSX application. The OSX application fetches iCloud documents upon launch and showcases them along with a legend table at the bottom.\nAdding pie values is a breeze and so is editing and deleting them . And to view pie values ,simply touch and hold the pie chart and the respective pie value will be displayed.\n",
        "hackathon_id": "ritios2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe originally were thinking of an app for providing advice for any topic. Almost like stack exchange. We then decided to focus it more towards study groups. The idea then became MeetUp. \nWhat it does\nA way to meet up with people in your area who are doing similar activities like coding in python or studying calculus.\nHow we built it\nWe had one designer design both the iOS app and website, one full stack web developer working on the front end and back end of the web server, and one front end iOS developer. We used Express to handle the API on the backend for both the website and iOS app.\nChallenges we ran into\nAuthentication and how to make requests to the server.\nAccomplishments that we're proud of\nThe front end of the website and all of the new skills we've picked up.\nWhat we learned\n\nDesigners are awesome. \nCoding iOS apps by sight.\nSearching for documentation. \nShortcut notations.\nMaking complex API calls.\nGoogle Maps Web API\n\nWhat's next for MeetMe\nOur web developer plans on continuing work on the front and backend of the site as well as making it more mobile friendly.\n",
        "hackathon_id": "ritios2016",
        "winner": false
    },
    {
        "description": "\nInspiration\nIan\nWhat it does\nTinder but for bricks\nHow I built it\nwith swift\nChallenges I ran into\nthe previous apps blowing up\nAccomplishments that I'm proud of\nmaking an app\nWhat I learned\nhow to survive having to restart 8 hours before it is handed in\nWhat's next for Brickr\nthe cloud, where bad apps go to die.\n",
        "hackathon_id": "ritios2016",
        "winner": false
    },
    {
        "description": "\nInspiration is improving the levels of health in the community through medium of sports and exercise\nWhat it does is allows users to create there unique ID and profile, which will allow them to then select the different sports they want to learn and develop skills for specific sports,  through progression levels and rewards. The app also allows users to find a specific location where they will be able to play their sports through mapping. This allows groups of users to easily organise different events where they can meet and play with others\n",
        "hackathon_id": "acornhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptnode.jsexpress.js\n",
        "hackathon_id": "acornhack",
        "winner": false
    },
    {
        "description": "\nInspiration: An inspiration which motivated us to put forward our idea was Malala Yousafzai. Through her courageous stand up for education to the start of the Malala foundation, we were truly inspired by her moving actions. As we currently live in the heart of technology, we thought we\u2019d use every opportunity we could get to provide an educational platform for everyone. \nWhat it does: The app itself will incorporate key GCSE subjects, in which there will be substantial information regarding each subject. It offers features such as quizzes, revision content, video links and progress logs. \nHow we built it: With the generous support of developers and mentors, we were able to produce a beneficial and extraordinary app to support those developing a wider understanding of essential subjects. \nChallenges we ran into: One concern we endured was the method of which we would obtain income to sustain the app. We easily solved this by brainstorming as a team, possible solutions. \nAccomplishments we are proud of: A major accomplishment we have achieved is being able to meet inspirational individuals of all ages, who are all passionate about technology and helping others. We have made links with many which we hope to maintain even after this event. \nWhat we learnt: We now know much more about technology and entrepreneurship and are aware of the fact that age is simple a number and doesn\u2019t restrict what we are able to achieve. \nWhats next for Study+? We hope to become an established environment which students find beneficial and support them into achieving to their maximum potential. \n",
        "hackathon_id": "acornhack",
        "winner": false
    },
    {
        "description": "\nThe inspiration for Musinex derived from the lack of use of the social opportunities music brings. We at Musinex, aim to connect teenagers (and in the future all age groups) through music by them registering onto our platform and having them input their musical interests and from there on we match them with other teenagers who have the same music interests so their is common ground for them to start conversing and developing relationships. We had two really great programmers who helped develop our website and the languages that were used were: HTML, CSS and Javascript, there was also use of the MeteorJS framework for faster web development and the Spotify API for user login so we can get their music data and lastly we used data scraping of the website SongKick for concert information. For future development, we will also have an app and due to the Ionic App Framework, we can use most of the code that we used for the website to create an app for both Android and iOS because it uses the same languages and frameworks.\nProblems we ran into were caused by bad research at the beginning, because after development on the idea and prototype, we had found out there was another platform called tastebuds.fm which had a really similar idea and they had a fairly good active user base. To overcome this, we decided to make our platform open to ages 13+ because they only allow users over the age of 18.This is due to there site focusing on dating whereas ours is more for socialising and expanding our users social circles. We also have the group event gathering on our platform where people can join a group about a musical event and then can socialise within the group and then possibly meet up to attend the event together. This leads to a online social circle becoming a offline friendship between people of similar interests. We are proud of our ability to overcome the issues of finding a competitor to our service and staying confident in our idea and finding ways to be better which we believe we have done.\n** We have learnt a lot during this hackathon, more than we where truly able to process. **\nIn the future, we hope to expand Musinex and make our platform much vaster and reach a global audience. We also want to make a mobile app which will run on all platforms make our platform more accessible to any user on any device\n",
        "hackathon_id": "acornhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroid\n",
        "hackathon_id": "acornhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroidapi\n",
        "hackathon_id": "acornhack",
        "winner": false
    },
    {
        "description": "\nInspiration\nBeing students, we spend an excessive amount of time on our phones wasting valuable hours, we could be spending productively, on social media living our lives vicariously through others. We recognised the power of time and the potential doors it can open if it is utilised effectively. \nWhat it does\nOur app can give you the power to restrict your chosen mobile apps to manage your time meaningfully and create that healthy balance between virtual and real life\nHow I built it\nWe were able to build a mock up prototype which shows how our app would function. The prototype shows the features which show a users experience and user interface.\nChallenges I ran into\nOur biggest challenge is that our app had some technical flaws which due to some mechnaisems not being available i  the market. \nAccomplishments that I'm proud of\nHow far we've come in a short space of time watching our idea go from paper to prototype and the fact that we are able to tackle a very important problem\nWhat I learned\nwe learnt that team work makes the dream work.\nWhat's next for Restrict\nhopefully we will be able to overcome the technical difficulties and see our app on app store.\n",
        "hackathon_id": "acornhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtmlcss\n",
        "hackathon_id": "acornhack",
        "winner": false
    },
    {
        "description": "\nInspiration\nSeeing young children dying from overexposure to toxic elements which their own parents fought over and we threw away.\nWhat it does\nThe app guides you to your nearest electronic recycling container.\nHow I built it\nHTML, CSS, Javascript, Ruby\nAccomplishments that I'm proud of\nActually getting the thing to work.\nWhat I learned\nNever use Esri (mapping software) because it is over complicated.\nWhat's next for WEEE Drop\nWorld Domination (collating data about the recycling containers, building connections with organizations in the industry)\n",
        "hackathon_id": "acornhack",
        "winner": false
    },
    {
        "description": "\nInspiration\nIn an increasingly distrusting world, we are turning to technology as an objective source of information. We are trying to make our robot overlords more human.\nWhat it does\nIt engages users with back and forth conversation to determine accurate risk values based on probability and statistical sources.\nHow we built it\nWe built an Android app that is hooked into open data sources and Watson cognitive services\nChallenges we ran into\nTime.\nAccomplishments that we're proud of\nUtilizing multiple Watson services and integrating it with real data.\nWhat we learned\nA good mix of team members types helps the process move more efficiently.\nWhat's next for Project YYZ\nFlying back to Toronto!\n",
        "hackathon_id": "swiss-re-hackathon-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\npython\n",
        "hackathon_id": "swiss-re-hackathon-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nflaskd3.jshtmlcss3jquerybluemixibm-watson\n",
        "hackathon_id": "swiss-re-hackathon-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nThere are 1.5 million nonprofits in the US alone who don\u2019t have enough time or money to understand how insurance works, let alone find the right coverage.  USA nonprofits account for 9% of all wages and salaries  but most fail because they struggle to pay for simple yet required operating costs such as insurance.  \nAs a consumer, I don't often donate money because I feel it goes into a black hole. Think of the Red Cross and Haiti housing project.  If I could donate to a specific need such as insurance and receive validation from a third party (insurance company), I would first research the needed product (consumer education), donate and feel good about my contribution. \nWhat it does\nInsure Patch supports this underserved market in minutes with a web application that allows nonprofits to understand risks and a mobile application that entices the middle market to support charities by buying insurance for nonprofits.\nHow we built it\nWe built our application in angular.js, cordova, ionic, bluemix, IBM alchemy and trade off analytics and host on Blumix\nChallenges we ran into?\nNot having proper data from insurance companies to recommend actual products and services. \nAccomplishments that we're proud of?\nOur application will allow nonprofits to become more sustainable by having stability.  We entice hesitant donors to donate with confidence.  Donors will research about the insurance product to ensure their money is going to a good cause.  At this point,  we have educated the consumer about insurance products from an array of use cases.  This is very expensive for companies to do directly.  If and after they donate, we direct the consumer to our web/mobile app for individuals and provide them insurance offerings from partner insurance companies. \nWhat's next for Insure Patch?\n1) We need to partner with insurance companies to fetch actual product data (www.swissre.com, www.insurancefornonprofits.org, etc)\n2) Provide service to non-profits to start testing and find market validation. \n3) 40% of Swissre's business by 2020 is targeted in high growth markets.  If SwissRe partnered with Insure Patch, our application could expedite their growth plans in high growth markets, increase policies in developed markets (Western Donors), and use nonprofits as a catalyst for market expansion. \n",
        "hackathon_id": "swiss-re-hackathon-2015",
        "winner": false
    },
    {
        "description": "\nWe were inspired by the difficulties people have to assess their risk.\nIt creates personality assessments and provides viable life insurance options.\nWe used Eclipse, IBM Bluemix and Watson to develop the site.\nWe had some issues with the boilerplates and the server.\nWe're glad we have an idea that was unique.\nWe learned about Bluemix and Watson's functionality.\nWe hope the judges and the other teams enjoy our demo.\n",
        "hackathon_id": "swiss-re-hackathon-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\niphone-sdkibm-watson\n",
        "hackathon_id": "swiss-re-hackathon-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nbluemixjava\n",
        "hackathon_id": "swiss-re-hackathon-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nFinding the right policy to cover you against life\u2019s unexpected challenges      to protect your financial future can be a daunting process.  What if we could use technology to make finding insurance policy a frictionless experience?\nWhat it does\nSara is your personal insurance advisor who works with you to understand your current life situation and potential risks by comparing you against your peers to ensure you are properly covered for life's unfortunate events.  Sara makes this process simple by avoiding those annoying forms with the ability to scan your license and have a real conversation.  Sara then presents your risk profile and can even start the process of getting a quote all from the power of your iPhone.\nHow we built it\nSara was built with the power of IBM Bluemix & Watson integrated into a native iOS application written in Objective C + Swift on an iPhone 6S or 6S plus running iOS 9.0+.  Sara's ability to speak is powered by Watson's natural language processing including Text to Speech & Speech to Text.  Her ability to understand data and build a risk profile uses IBM's Bluemix components base in Java Liberty including \nChallenges we ran into\nData loading on IBM Bluemix using DB2.  Data loader would not continue to load.  Voice to text stability issues (solved) and Facebook authentication provided by IBM was nonfunctional and had to drop the feature.\nAccomplishments that we're proud of\nIntegration between front end dev, back end dev and design teams to rapidly design, build the prototype using agile, product lifecycle based approaches.  Ability to use natural language processing to capture information and get rid of that annoying process of filling out forms.\nWhat we learned\nLearned new ways to use Watson and integrate into the mobile app advisor.\nWhat's next for Sara-Personal Risk Advisor\nWe would love to see Sara grow into a commercially viable product and be a game changer in the insurance industry!\n",
        "hackathon_id": "swiss-re-hackathon-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nalchemyapibluemixtypeform\n",
        "hackathon_id": "swiss-re-hackathon-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nsalesforce\n",
        "hackathon_id": "techfugees-australia",
        "winner": true
    },
    {
        "description": "\nDownload PitchDeck:\nhttps://www.dropbox.com/s/hcy252eochizat5/FinalPitch2%20copy.key?dl=0\nInspiration\nWhat it does\nHow I built it\nChallenges I ran into\nAccomplishments that I'm proud of\nWhat I learned\nWhat's next for OurTable\n",
        "hackathon_id": "techfugees-australia",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavahtml5\n",
        "hackathon_id": "techfugees-australia",
        "winner": true
    },
    {
        "description": "\nBuilt With\nruby-on-railsbootstrap\n",
        "hackathon_id": "techfugees-australia",
        "winner": false
    },
    {
        "description": "\nInspiration\nSolving the needs for refugees and migrants, 91% from Middle East and Africa are illiterate in English when they arrive.\nInspired by the Universal translator in Star Trek\nNamed after Hoshi Sato, who is the fictional character who developed it.\nhttps://en.wikipedia.org/wiki/Hoshi_Sato\nWhat it does\n1) Instantly translates documents by taking photos\n2) Use the mic and translate conversations in real-time - and get recommended responses\nTry it: https://sato.learncube.com/ (Demo currently only works in Chrome for PC and Android Devices)\nHow I built it\ngoogle translate api, webrtc, jquery mobile, canvas, ocr\nChallenges I ran into\nOCR recognition of documents - needs backend ocr to optimise image and translate full pages accurately. Currently only works by highlighting text\nAccomplishments that I'm proud of\nFunctional proof of concept in less than 48 hrs\nWhat's next for Personal Interpreter for instant translations\n\nNative app\nImproved OCR\nSuggested responses with option for text to speech in conversation mode\n\nWorking proof of concept\nDemo currently only works in Chrome for PC and Android Devices\nhttps://sato.learncube.com/\n",
        "hackathon_id": "techfugees-australia",
        "winner": false
    },
    {
        "description": "\nInspiration\nI am a professional, working in Sydney.  What can I do to tangibly help refugees?\nWhat it does\nThe solution is to create events which help local professionals connect with incoming refugees who have been professionals in the home country.\nHow I built it\nUsing Nationbuilder.\nChallenges I ran into\nNarrowing down the idea!\nWhat's next for Bust the Bubble\nLet's get one of these events up and running!\n",
        "hackathon_id": "techfugees-australia",
        "winner": false
    },
    {
        "description": "\nBuilt With\nleaflet.jsfullpage.jsjquery\n",
        "hackathon_id": "techfugees-australia",
        "winner": false
    },
    {
        "description": "\ntechfugeesconnex\nAccessible social networking for English Language Learners\n",
        "hackathon_id": "techfugees-australia",
        "winner": false
    },
    {
        "description": "\nInspiration\nBased on the datasets \"out-door fun\", I planned a small web app to allow users to select the desired party location\nWhat it does\nUsers can select location and invite friends\nUsers can select map type\nUser can zoom in/out map\nUser can find location by input address/name\nUser can select locations from dropdown list or use the button\nHow I built it\nI used JavaScript, .asp and google map api to develop.\nMS Access is used for the database support.\nChallenges I ran into\nLimit time to design and develop this application.\nJavaScript is hard to debug.\nStill need to learn new techniques\nAccomplishments that I'm proud of\nLocation selection is successfully developed\nWhat I learned\nPolished my skills in coding\nHow to debug JavaScript efficiently\nWhat's next for Let's Party (web application)\nContinue to debug, add more flexible functions, fulfill databases(not all of the datasets are used in this project)\nIf it is possible, I would like to use other database rather than MS Access, such as QGIS, MySQL, postgreSQL, or ArcGIS. If I have spare time, I would like to add path finding/travel plan (travel time estimation). Formmail  is a copyright protected script. If I can find a replacement or code it myself, I will change it.\n",
        "hackathon_id": "startup-algonquin",
        "winner": false
    },
    {
        "description": "\nAlmost There!\nAn app to notify you when you're almost at your bus stop, just in case you weren't paying attention.\nC'mon, we've all done it - in this bustling day and age, it's hard to peel our eyes away from our screens. \nFor the Algonquin College Inaugural Hackathon, I decided to solve one of my own problems - on multiple occasions, I've missed my bus stop after becoming too engrossed with my device. Almost There! allows the user to pick their Ottawa bus stop and schedule a notification that triggers as the bus approaches your final destination. \nUsing proximity alerts, the application will notify the user once they penetrate a 75 metre radius around the bus stop. The phone will vibrate for 5 seconds and trigger toast notifications to ensure that you're on the ball and off the bus. \nOnce the user's bus destination is selected and confirmed, the app minimizes and runs in the background until the minimum radius is breached. That way, you can continue your second run-through of Buffy the Vampire Slayer without interruption.\n",
        "hackathon_id": "startup-algonquin",
        "winner": false
    },
    {
        "description": "\nInspiration\nOur inspiration for this project was to somehow find a way to  convey as much from the data set provided by the Hackathon organizers into something presentable to a general audience. The team felt there was a very common theme among the data provided was a lot of recreational areas the city had, and hence the name for One-Stop-Ottawa was coined.\nWhat it does\nOneStopOttawa is basically a website and an app which enables tourists manly or people new to Ottawa to find resources they might need. There is everything they might need from outdoor fun to transportation to food. OneStopOttawa serves as a central point for information pertaining to Ottawa to save people from going to a lot of websites for information pertaining to Ottawa. This is a base application which has basic functionality. We intend to add more features and options to it to make it more useful to everyone.\nHow I built it\nOneStopOttawa first started off as a mobile app which enabled you to find outdoor activities. After a few hours into development we realized the potential of OneStopOttawa and decided to expand it into a complete central information hub for Ottawa. We developed the website using HTML and attached the developed website to an Android web page project to make it an app.\nChallenges I ran into\n\nThe first major challenge the group came across was first attempting to read the data provided. The formats of CSV, XML, JSON, KML were all extremely foreign to us. Our initial aim for building the android app from the ground up depended on our ability to parse the data which we unfortunately failed to do. We did find one solution with CSV using MySQL\nUtilizing MYSQL Workbench we managed to parse the data into an SQL database, however, since the final product needed to be uploaded to an online service to run, we had to utilize Cloud9. Unfortunately Cloud9 had its own unique ways that demanded many trial and errors to figure out. \nAgain with cloud9, our inital pHp script to connect to an SQL database via Cloud9 was also unconvential which led to the point where everyone had to abandon the database and deal with pre-made data to have something done for submission.\nWorking on the website itself that needed to be very appealing to the eye left our minds extremely boggled at the diverse CSS scripting demanded.\nThe final challenge was uploading the project itself onto the cloud with heroku which was especially unfriendly with our project. Thankfully, the stars aligned with Algonquin College themselves providing a server that students can upload projects to that was a safe last resort to get the website up and running. \nAnd lastly, miscommunication among group members who aren't physically present did lead to even further hiccups. \n\nAccomplishments that I'm proud of\n\nThe first and biggest accomplishment is the fact that a whole project managed to be submitted. Although the core functionality didn't pan out, the vision is still visible that was completed within the time frame allotted while simultaneously tackling all the other life responsibilities the group must deal with. The team understood what we were capable of and scaled the final project down to something that can finally be presented.\nWhen the initially planned methodology for solving the problem doesn't work out, the group still managed to use a wildly different method to achieve it like when the JSON parsing within Android studio wasn't working out with our current skillset, we managed to figure it out using CSV and MySQL shifting development to a pHp web site.\nAnd mostly, our favorite accomplishment has to be our experience in exploring so many different languages pHp, mySQL, Java and IDE's ranging from AndroidStudio, Cloud9, and others simultaneously to gauge ways to make ends meet.\n\nWhat I learned\n\nWe gained a lot of experience and knowledge in applying MySQL to a legitimate application and the extra care that comes with dealing with its challenges. \nWe learned the powerful tool that is Cloud9 and the ability to upload such projects directly onto a free server that can come in very handy in the future for quick prototypes and business pitches.\nWe learned how imperative it is to plan ahead with formatting web pages to know how the CSS pages will pan out and will prevent conflicts later into the program that potentially destroy the entire formatting.\nAnd since there was so much miscommunication, proper task delegation among group members that involves the least amount of coupling between us as possible will be very beneficial for future projects. \n\nWhat's next for OneStopOttawa\nWe plan to expand on OneStopOttawa by adding more features and options. We want to expand the information set in OneStopOttawa and not make it dependent on other applications and websites. Our main focus is on building a website that is also very easy to navigate and fast with information access for everyone. We plan on expanding to other cities like Toronto and Montreal to create central information hubs for them to prevent people from looking too far for information pertaining to the city. This would enable us to change OneStopOttawa to OneStopCanada.\n",
        "hackathon_id": "startup-algonquin",
        "winner": false
    },
    {
        "description": "\nInspiration:\nRonald Ekambi and Start Up Club were my Inspiration. \nThese are the factors that pushed me to understand the fact that I can do it. \nThe Inspiration for this application was the basic fact \" I don't know what festivals take place in Ottawa, when and where? I miss out so much\" \nWhat it does :\nThe Business model we created is to build an application that serves a lot of purposes. \nWe used the data file \"http://data.ottawa.ca/data set/street-food-vendors\" - A listing of the successful applicants to the City\u2019s new Street Food Vending program. \nHow I built it:\nWe presented out our idea through a Business model. \nEvery team member was given a specific part to do. \nWe got connected with each other through Facebook, created a group, worked on our parts, forwarded/shared the files and talked out the changes we can make. \nIt was FUN !!! \nChallenges I ran into:\nTime-Limit, Team Members have work- assignments etc. still everybody took out time to be a part of this Project. \nHow to earn money with this app?, setting up meeting time etc. \nAccomplishments that I'm proud of:\nLearn new things, Discover inner-selves/ talents, what we could actual do in a limited period of time.\nWhat I learned:\nBrainstorming is an awesome thing. \nPeople realize your potential and you learn what ideas others have. \nCommunication & Networking always helps!   \nWhat's next for Food A' Fest:          A future! :)\nWhen Implemented it will be a great success. \nIt will help people to try awesome things, this idea can exceed it's boundaries of success if implemented . \nIt can be a new social media of people visiting places-sharing their pictures, vendors getting good business.\nPeople posting their private and public events. \nIt's a great tool to connect.  \n",
        "hackathon_id": "startup-algonquin",
        "winner": false
    },
    {
        "description": "\nInspiration\nAfter looking at all categories that the Hackathon is providing, we got inspired to create a mobile solution that would help people be more active in the community.\nWhat it does\n\nDiscover events happening in Ottawa and nearby you! \nExplore events by your interest including sorts, parties, meetups, concertns, festivals, workshops and others.\nNo need to sign up.\nView events by your location, city sector.\nFilter event by date, name or category.\nAdd a reminder for your event.\nShare the event in social media\nGet directions to the location.\nThe app supports both English and French.\n\nHow I built it\n\nWe analyzed all available data and decided the data we want to manipulate in our app. After that we created a prototype demonstrating the information flow.\nWe chose Objective C as development language as we are good at iOS Development and we can add complex functionality in short period of time.\nWe used core data to store all available data to local storage so application will not need to interact with internet each time we open it.\nApplication data will be updated once in day as described in the document.\nWe aimed to provide best user experience.\n\nChallenges I ran into\n\nAs the flow of data was complex we had hard time manipulating it.\nTimeframe for development was short.\n\nAccomplishments that I'm proud of\n\nWe were successfully able to parse xml data and store it locally.\nWe managed to convert unstructured data into core data entities and make relationship between entities.\nWe designed information architecture that successfully accomplishes the goals of the application.\n\nWhat I learned\n\nData manipulation\nWork under strict deadline\nChallenging ourselves to achieve better results\nProductive team work\nLearn to divide work equally between group members.\nConsider alternative and think out of box.\n\nWhat's next for Spotlight Ottawa\n\nThe development process is still ongoing because of the complex requirements of the app.\nThe project is uploaded to github for reference.\nThe development process will continue regardless of competition results.\n\n",
        "hackathon_id": "startup-algonquin",
        "winner": false
    },
    {
        "description": "\nBuilt With\nwixhtml\n",
        "hackathon_id": "startup-algonquin",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtmlcssjavascriptangular.jsbootstrapamazon-web-services\n",
        "hackathon_id": "startup-algonquin",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtmljavascriptcssjson\n",
        "hackathon_id": "startup-algonquin",
        "winner": false
    },
    {
        "description": "\nBuilt With\nunityoculus\n",
        "hackathon_id": "hackuci2015",
        "winner": false
    },
    {
        "description": "\nHom.io\nA smarter home concept that takes in human and environment inputs, then outputs an energy conscious home.\nPeople want to have their houses at their preferred temperatures, humidity, etc, but often ties, there is a large excess in energy waste!\nHom.io provides a user interface to change your home's settings for when lights should be on/off, temperature, humidity. \nBased on your settings, Hom.io will automatically ...\n\nopen/close your curtains to bring in natural sunlight to warm your home\nopen/close the windows to cool/warm your home and bring in fresh air\nopen/close doors to regulate temperatures/humidity between rooms\nautomatic lighting based on activity in the room and time of day\n\nOur team learned a vast amount using a PaaS (Platform as a Service) with Bluemix for the first time. We also learned about Full Stack Web Development and the Intel Edison.\n",
        "hackathon_id": "hackuci2015",
        "winner": false
    },
    {
        "description": "\nlooking-for-group\nIt's becomingly increasing difficult to meet people nowadays. Looking for group helps you find groups of new people around your area scheduling events and activities! Begin with logging in and verifying with Facebook. Select from a list of categories such as lunch, games, and food. See the number of people attending local events and the recommended age range. Signing up for events is anonymous until a defined time before the event is reached. An event finalizes once a certain time before the event is reached and the minimum number of people is met. You will be able to view the location of the event, to enter a group chat with the other participants, and to view others' ratings and reviews once the event becomes finalized. If the specified minimum number of people isn't reached before the event becomes finalized, the event gets cancelled. After successful events, give reviews and ratings for other users.\nPowered by IBM Bluemix's MongoDB by Compose service and IBM's SDK for Node.js Runtime\n",
        "hackathon_id": "hackuci2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nunity\n",
        "hackathon_id": "hackuci2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nThere aren't enough great virtual reality multiplayer games around. Our goal was to make a smooth, quick to pick up, and fun game employing the use of virtual reality through Google Cardboard.\nHow we built it\nWe started with the simple idea of 3D Pong using Google Cardboard. From there it morphed into Pong Around. Our team of three is perfectly balanced between two coders and an amazing artist/designer/UX/UI extraordinaire. This allowed us to divide tasks up rather quickly. There was a lot of unknowns going into this project. We had to get networking going from a rather new system. So naturally one of the programmers went right into learning about and making the network work and the other delved into the game. This allowed the game to be developed mechanics and all before bringing in player two. This simplified the production as well as created a better user experience. While this was going on, our artist teammate created sprites and some general ideas about look and flow.\nChallenges we ran into\nDuring development of the multiplayer network we kept running into timeout issues. After significant research we narrowed it down to running out of bandwidth. But we weren't sending very much data! We realized that the type of data we were sending was what was causing the issue. We were sending the location of object stored in a vector. In sending that vector the system didn't just send the X,Y and Z, but it also serialized the getters and setters and creating an extremely bloated piece of data!\nAccomplishments that we're proud of\nWe are proud of the whole system. The game is easy to pick up. We can hand it to someone with very little explanation and they know exactly what to do. The networking was the most challenging part. We worked with Unity's new UNET system which is still lacking full documentation. But we got it working and it plays great. To top it of, we polished the game including in cute little sprites and music! We even added music we created at the hackathon!\nWhat's next for Pong Around\nWe need to make a lobby system for multiplayer as well as allowing users to choose the match to enter so as to play with friends. With those two things we have a game ready to hit the play store and the app store!\n",
        "hackathon_id": "hackuci2015",
        "winner": false
    },
    {
        "description": "\nPedestrians, drivers and workers alike are exposed to risks of being involved in dangers due to unforeseen circumstances. The idea is to provide an extra safety device on the road that will decrease the likelihood of accidents. Our original idea In order to build the device we used 2 LEDs, a breadboard, an Arduino Uno,  an ultra-sonic sensor, two resistors, a buzzer, and Microsoft virtual shield.\nIn order to build it, we used several wires to connect the breadboard onto the Uno. We then hooked up the ultrasonic sensor and we used the serial monitor in order to display changes in distance. This will prompt the buzzer and LEDs to activate if reach a certain threshold. Later we hooked up a Microsoft smartphone and used the Windows 10 virtual shield feature for Azure Blob in order to connect to Microsoft azure and upload the info onto the cloud. \nAbout 75% of the things we wanted to implement during the hackathon malfunctioned or had hardware issues. We wanted to use a Lilypad arduino and sew it into a safety vest as an indicator and use a a traffic as motion sensor that would go off when it sensed a car coming toward it at dangerous speed. It would also send info to the cloud through a particle photon for legal purposes. We had to improvise because the processor for the lilypad was malfunctioning and the WiFi for the Esports arena had a lot of downtime.\nI was very fascinated by a lot of the stuff I learned about electrical engineering and it was very satisfying getting the arduiono working.\nWe hope our idea can be a template for road safety devices and save lives.\n",
        "hackathon_id": "hackuci2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nkinectunityc#visual-studio\n",
        "hackathon_id": "hackuci2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nSolitude is an attempt to reflect on a potential relationship between artificial intelligence and humanity. We wanted to fully capture the feeling behind being entirely alone with just a computer, but also suggest that maybe Artificial Intelligence is a close ally. We used Virtual Reality to provide the immersive aspect of the game, and we especially wished to convey the sense of isolation and loneliness that comes with being trapped in outer space. In our experience, we sought to answer fundamental questions and cover important topics, toying with ideas such as \"Is A.I. a replacement for humanity? Is A.I. better than humans? Can it provide the same sense of comfort as a human\"? We wanted to make a profound experience, and we did exactly that.\nWhat it does\nYou are a captain aboard a ship in space, starting after a major battle in which your crew was wiped out and your ship is left badly damaged and far from home. The game begins with ANNA, your computer, reading battle reports and informing the player that they are the only remaining beings on the ship. After a brief tour around interface, voice commands, and your ship, ANNA informs that there are several hostile ships approaching and you will have to fight them, thus ending exposition.\nYou are forced into combat, and using the Razer Hydras as an input mechanism to select targets for ANNA, you can destroy attacking ships. ANNA then explains that destroying ships helps you gather resources from the ships to boost your own stats and obtain upgrades. You will be forced, at each stage, to choose between Individual or AI upgrades. In this sense, you can either improve your own ability, or improve your computer's power. Eventually, you will have enough parts and upgrades to go home, but you will have to make a fundamental choice: Humanity or Artificial Intelligence. \nYou are informed that Earth has stopped supporting Artificial Intelligence and is mandating that you disable ANNA. You must then choose whether to \"Kill\" Anna and return home, or fight against humanity and their violent punishment for disobedience.\nIf you kept ANNA, you leave Earth and are denounced by humanity. You must fend them off in an attack, but ANNA easily protects you if you upgraded her.  You place ANNA in charge of the ship, and she proceeds to install on other Earth ships, creating an army of Artificially Intelligent ANNA ships.\nIf you deactivated ANNA, you will have a final battle with invaders, this time without ANNA aiding you. Earth will be in communications saying they\u2019ll send reinforcements. But you have to keep them away until then, relying only on your individual commands. Waves of reinforcements could enter and die fighting the invaders, while you know full well that if ANNA was there the battle would quickly be over.\nHow I built it\nWe built Solitude using the Unity Game Engine as our main interface. The models were made using Maya software, and the hardware we used included the Oculus Rift and the Sixense Razer Hydras. The language we used was C#. \nInitially, the work was split simply into three categories: Razer Hydra control, modeling, and plot. We focused a lot on plot to ensure that we could convey our message about artificial intelligence clearly. However, as more tasks came up, more work was needed to be done. Tasks consisted of creating the space environment, importing assets like asteroids and planets, finding a way to implement ANNA's speech, managing the queue for ANNA's attack, modeling the user and enemies ship, animating the flight and movement of the ships, and the upgrade system for both the user and ANNA. \nThe upgrade system was carefully thought out so that ANNA's updates were more likable because, as a computer, her's were more advanced than a human. \nPlayer upgrades include laser cannons for continuous lasers, shields to absorb damage, homing missiles, and full manual control.\nANNA upgrades include more RAM for bigger queues, targeting for multiple attacks, control of enemy ships, and full autonomy of the ship.\nChallenges I ran into\nSolitude was an incredibly ambitious project, for we started with a goal of making a beautiful, deep, and profound game. The size of the project alone was a major challenge, and even though we remained optimistic, we were forced to drop some crucial features in order to finish on time. One of those features included voice control, a mechanism we wanted to use to help the player communicate with ANNA.\nAccomplishments that I'm proud of\nIn the end, we still accomplished more than we could've dreamed of. We were able to make a game that could force critical thinking and deep analysis of artificial intelligence and humanity as a species. In this sense, we created a VR experience that transcends itself and serves a greater purpose in the community. \nWhat I learned\nWe learned a lot about importing Audio into scenes and using it in order to create ANNA's voice. We also discovered a fair amount about multithreading and race conditions as we dealt with multiple ships being targeted at the same time. Above all else, we discovered how difficult it is to truly implement a meaningful plot. In the end, we were fighting as hard as possible to keep Solitude from being just another \"Space Game\".\nWhat's next for Solitude\nSolitude has an incredible amount of potential, and we want to make that happen. First and foremost, we want to finish adding upgrades to the game, such that they're fully fleshed out and functional. We then want to make sure our message is communicated clearly to audiences that care. Of course, we also want to implement voice control and beautify what we already believe to be an incredible experience. The possibilities are endless, and we hope to continue working to create something that has meaning to us and hopefully to others.\nWe would like to get the voice control working in Virtual Reality because that would improve user interaction with the 'AI' ANNA. Furthermore, we would like to implement more upgrades for the player and ANNA so there can be a larger variety of options for user choices. One of those is the control. While we ran out of time to implement it, we believe that it is a good idea and would like to follow through with it. There's even a turrent we were suppose to attach to the sides of the user's ship but again also ran out of time. But I feel we made such good progress that we are still excited at the outcome!\n",
        "hackathon_id": "hackuci2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nxamlcsazureraspberry-piwindows-10windows-phonecssraspberry-pi2\n",
        "hackathon_id": "hackuci2015",
        "winner": false
    },
    {
        "description": "\nOUR DEV POST WITH WHICH API PRIZES WE ARE GOING FOR:\n\nShoutpoint (used for SMS)\nIBM BlueMix (used for DB)\n\nOur Inspiration\nWe were tired of seeing the wasted food stashes, the abandoned televisions, and the neglected appliances left out in the wind to brave the elements.\nWe sought to tackle the issue of excess - giving it to people who were in need.\nWe took our initial idea from UCI's one and only \"Free & for Sale\" group on Facebook - connecting those who were giving away items to those who were searching for said items, and making that process more efficient, fast, and dare we say - fun.\nWhat it does\nFree for Everyone allows for users to post items they'd like to give away, which is broadcast to a live feed.\nOther users are able to view detailed information, and indicate interest for items they'd be interested in.\nThey will receive notifications (SMS) about the objects they subscribe to, and will also be notified when the object has been claimed!\nThere are two distinct users:\nSupplier: The person who is providing an item. This person will create a post that provides her/his location, as well as vital information about the item.\nRecipient: The person who plans to receive the item. This person will subscribe to the post of an item, and be able to receive information about the whereabouts of the person/item, as well as be notified if the item is claimed in advance.\nHow we built it\nWe broke our development time into 3 distinct segments.\nThe first night, we didn't touch any code, APIs, or keyboards. \nWe broke out pens and paper, and determined our specs, requirements, user stories, and wireframed the app.\nOnce we were set on the same idea and goal, we spent time researching the APIs available to us, namely ShoutPoint, IBM Bluemix, and Microsoft Azure. \nWe decided to pursue all 3.\nThe second day was devoted to setting up the core functionality of the app.\nRoutes, server, database, and the majority of the application's features (posting, basic auth, basic sms, populating our views with dummy data).\nOur final day was the most difficult - we had to cut a lot of the features we'd have liked due to the various walls we had hit the previous day. We saved a couple hours near the end to tidy up the application, ensure that we had a reasonably good UI / polish, and ensured that our app was at the demo-able stage.\nChallenges we ran into\nWe fell into the trap of authentication, which we falsely assumed we needed as a core feature.\nWe could have saved 8-9 hours of time had we skipped the step altogether and made do with cookies we made ourselves, and integrated authentication at a later step (which ended up being a massive bottleneck)\nWe could have also researched the API's available to us in more depth, and asked more questions before spending hours testing before hitting a dead wall. We tried numerous times to deploy our server / DB onto one of the many platforms available, but would hit walls that were ultimately large sink holes!\nAnd last, but not least - CORS. \nAccomplishments that we're proud of\nIt's a full stack application, built in under 36 hours!\nWe created a simplistic, easy to use UI that didn't get in our way.\nWe made something that everyone on the team was eager to use and see on the app store.\nWe failed a lot, but we didn't break down or give up and go home!\nWe held stand-ups with the team every 2-3 hours to sync up on progress away from the computers. Stepping away helped us take a breather, check in with the rest of the team, and resolve issues that would normally not be possible if everyone was typing away.\nWhat we learned\nWe learned a lot about dealing with various cloud solutions that we didn't know were available to us.\nCORS is quite unfriendly, but now we learned the importance of using the right headers.\nStandups can be only 5 minutes long, but can save you 4-5 hours of pain.\nToo many features causes confusion and more work for the team. \nKeep the features well defined, and low in number.\nSudo saves lives.\nrm -rf / is NOT a good idea to send to somebody at 3 AM in the morning. \nWhat's next?\nWe want to finish this up, and get it into the app store.\nWe want to get geolocation in here, and test it out at UCI!\nWe're going to let the community police it. Possible an upvote/downvote system like Reddit/Yikyak.\nAllow for more concurrent users, get it up on AWS.\nUse various production grade libraries to minify the overall size and payload of the application to support many users!\nDo a live test and see what happens. \nAnd never stop improving!\nInstructions on usage (dev):\nClone both repositories.\nFFA is the client, FFE_API is the backend.\nRun npm -install on both projects.\nRun mongod.\nIn the FFE_API root directory, run app.js (nodemon / grunt work as well)\nIn FFA root directory, run ionic serve\n",
        "hackathon_id": "hackuci2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe enjoy having wacky conversations over the phone with our friends, and there's times when they something so hilarious that we want to capture it for posterity. We decided it would also be something that people of all ages can have fun with. This is how we came up with the idea for Friendboard.\nWhat it does\nFriendboard records a phone conversation of you and your friend(s) and splits the conversation into smaller .wav files that represent sentences in the conversation. With those individual .wav files, we assign them to individual buttons (with the text of speech labeled) to create a soundboard which can be replayed an infinite amount of times!\nHow we built it\nWe developed it using Android Studio for smartphones with Android OS. We created a simple UI where the user will input a phone number and press the \"Call\" button, which will initiate the call using Android's default call application. In the background, we record the conversation into one big .wav file, which is then split into individual .wav files containing sentences from the call. With the help of Microsoft's Oxford Project Speech API, we were able to convert those .wav files to text which would then be used as labels for the soundboard buttons. \nChallenges we ran into\nOne challenged we faced was attempting to find an API that would take an audio file/sound clip and convert it to text. Two members of our team spent the majority of Friday night trying to find a suitable speech to text API to use. Eventually we stumbled across Microsoft's Oxford Project Speech API that was able to convert a sound clip to text.\nAnother challenge was finding a way to split the recorded conversation into individual sound clips. The Oxford Project Speech API only converts sound clips into text, and it enforces an maximum limit of 2 minutes for sound clips. As we needed to also store individual sound clips to play back to the user, we needed to determine a way to mark activity in the conversation and split it into separate .wav files. 1-2 members researched into analyzing sound clips and, with the help of the Java musicg library, implemented a custom function to analyze a recorded conversation and output the spliced conversations.\nThere was also a bug where the label of the buttons for our soundboard, although they played the appropriate sound clip, had generic labels (#1, #2, #3, etc.) instead of the text generated form the Project Oxford Speech API.\nAccomplishments that we're proud of\n\nWe were able to record a phone conversation between friends into a .wav file.\nWe were also able to splice it into individual sound clips containing mostly complete sentences by analyzing and marking the activity in the conversation using Fast Fourier Transform libraries (musicg).\nWe were able to send individual sound clips to Microsoft's Project Oxford Speech to Text API.\n\nWhat we learned\n\nWe learned a lot on Android Studio and would like to continue to develop apps on the IDE.\nWe also learned how to manipulate .wav files using external libraries and cut it into smaller .wav files, each carrying a sentence or phrase of the phone conversation.\nWe learned how to learn and implement complex APIs such as Microsoft's Project Oxford Speech to Text API and navigate how to implement its results into our app.\n\nWhat's next for Friendboard\nFriendboard is still trying to work around some bugs that prevent it from its full potential. 36 full hours is not enough for the complexities that Friendboard possesses, but we will continue to work on Friendboard after HackUCI.\n",
        "hackathon_id": "hackuci2015",
        "winner": false
    },
    {
        "description": "\nPRJT\nInspiration\nYou know how to code and have cool idea, but your app looks really bad. Turns out you should have a designer's help, but you are a student, so you can't afford one. You go find your friend's friend's friend's friend's who is artist. You lost her contact somehow so you have to do this all over again.......\nSTOP THIS MESS\nThis is not just one example of college students with skills, idea, and motivation. There are a lot of SNS these days, but ultimately they are for socializing. \nWhat it does\nPRJT is a tool that helps finding people in professional manner.\n\nYou can sign up with your skillset, and create a project. Add the talents you need to get your project going. PRJT will broadcast your project to people who have the talents you need. \nWhile people sign up, add some ideas to TODO list and add some due dates to the calendar.\nWhen people join, say hi to them using embedded chat * system.\nUpload files and share them with your group *.\n\nNo idea, but you have some urge to do something awesome? No problem.\nPRJT also lets you find projects.\nJust browse DISCOVER tab to:\n\nView recently added projects \nAll projects\nHot projects\nProjects that matches your skill\n\nHow I built it\nThis prototype webapp was built at HackUCI alone using Twitter Bootstrap, Google Material Design, MAMP (Mac OSX, Apache2, MySQL DB, PHP) Stack, CODA2 IDE. \nChallenges I ran into\nSleep Deprived Some fundamental challenges like designing table schema, technical challenges like javascript syntax, and maybe hunger..?\nWhat's next for PRJT\nWithin timeframe, only fundamental functionalities such as \"login\", \"signup\", \"create a project\", \"join project\" have been implemented. It may sound simple (as they only count 4), but they are indeed more than a thousand lines of code with some serious schematic designs for optimized and scalable application.\nI'm planning on taking this further to finish up all the functionalities I have mentioned above, and polish business idea with mentors. I've been asking this idea to random students around my beautiful campus UCSD, and I'm almost certain that students would enjoy this. (Still need some real data like survey, etc)\n",
        "hackathon_id": "hackuci2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe wanted to make an application that allows users to learn new words in different languages from pictures. \nWhat it does\nThis application takes a photo from your camera or library and determines the one word description using AlchemyVision API. Then using the IBM Translator, we translate the single word, such as \"Dog\", into Arabic, French, Spanish, and Portuguese from English.\nChallenges I ran into\nChallenges that we ran into was figuring out how callback functions work in javascript\nAccomplishments that I'm proud of\nWe are proud of being able to complete the program that we initially conceptuallized\nWhat I learned\nWe have learn how to use javascript, parse, and the IBM's API.\n",
        "hackathon_id": "hackuci2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWhat it does\nlog in, check in , registration \nHow I built it\nChallenges I ran into\nAccomplishments that I'm proud of\nWhat I learned\nWhat's next for eSport Arena ios app\n",
        "hackathon_id": "hackuci2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nTyler and Paul from the eSports Arena are looking for a new all-in-one front counter application for their venue. According to them, the current way of tracking inventories and recurring memberships is not working well in the eSports Arena. It isn't intuitive for both their employees and their customers. Their current system involved just asking incoming customers for their last name and ID, and searching them up in the database to validate their information. Because of this, they are looking for a new gym membership style application that's simple, clean, and easy for employees to use.\nWhat it does\nDesigned specifically with the eSports Arena in mind, the eSports App is an all-in-one recurring membership application to satisfy all their needs. Taking inspiration from gym membership-style entry methods, the app allows employees to easily add, remove, and check-in customers to the eSports Arena by phone number and manual facial comparison by the employee at the front counter.\nOnce a customer is checked into the venue, they can then rent out peripherals such as mice, keyboards, controllers, etc. The application will keep track of who has what check out at all times, discouraging members from stealing the eSports Arena equipment.\nNew customers are quick and simple to add to the database - they'll have to get their picture taken by the front-desk employee and enter their credit card details for monthly billing purposes.\nWe ultimately decided that manual facial comparison - comparing the face of the customer with a picture taken of them previously - would be a simple and efficient method of checking people into the venue. Other considerations include a phone-based QR code system.\nChallenges we ran into\nMore than half of the team members had school work and didn't know the language we were working with.  The learning curve was really high, and many team mates were not able to complete tasks. Internet connections were particularly iffy at the hacking venue, preventing progress at many points.  \nThere were many features that was needed to be implemented into the app, we have every feature ready but in separate implementations. There was a great deal of lack of communication - many teammates did not express their need for help until the very last minute when it was really too late. In addition, many of us did not understand what our tasks were and were unwilling to speak up.  We also over-estimated many member's skills. Many team members had to not only fulfill their own roles, but also the roles of other team members.\nAccomplishments that we're proud of\nWriting the website in Angular Material, keeping track of new and existing members, hosting the site on a web server, the check-in system, pulling off an all-nighter.  We got every feature we wanted working even though we have not connected everything together.  We implemented a search bar that will filter based on phonetic typing, so the employee could type the customer's name incorrectly, but still find the customer.  We also implemented the ability to adding customers, where you can quickly fill out information needed to create a membership for them.  There is easy access and maintenance of membership for eSports Arena.\nWhat we learned\nAngular. We also learned the important of organization, time management, and communication\nWhat's next for eSports App\nIf our app is selected for use by the eSports Arena, then we will gladly continue further development and polish on the application, ironing out any problems that arise and adding new features as time goes on.\nBuilt With\nHTML, CSS, Javascript, Angular Material, and energy drinks...tons of energy drinks\n",
        "hackathon_id": "hackuci2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\npython\n",
        "hackathon_id": "hackuci2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\npython\n",
        "hackathon_id": "hackuci2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nflaskpythonazurejavascript\n",
        "hackathon_id": "hackuci2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nc#shaders\n",
        "hackathon_id": "hackuci2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nAs technology advances, social media is the first thing that grabs our attention. Twitter is used my millions of users a day and some Tweets even have more than 3 million shares and 2 million likes. Sharing and Liking a Tweet is one thing, but how about putting that popular Tweet on a shirt? You can use any Tweets that are publicly available! How about one of Kanye West's Tweets? Go ahead! Put a celebrity Tweet on a shirt. You know you want to. Wear your Twee Shirt with pride! \nWhat it does\nOur application streamlines the process from Tweet to Shirt. You give us the Tweet URL or Tweet ID and we'll generate the shirt for you.  We created a simple application for the user to purchase Twee Shirts. \nHow we built it\nLeveraging Twitter, Scalable Press, and PayPal APIs, we automated the process of creating and ordering the Twee Shirt for you. The application itself is built with Node.JS, Express, and MongoDB.\nWhat's next for Twee Shirt\nOur next steps would be to focus on handling marketing research and advertisement before the holiday season. We also would like to make use of an email API to send users an email confirmation for their orders. \n",
        "hackathon_id": "hackuci2015",
        "winner": false
    },
    {
        "description": "\n2015HackUCI\nInspiration\nThere are too few faculty members in CS department that it is impossible to take classes nowadays.\nWhat it does\nThis app communicates with UCI web server every minute to check the availability of the class and lets you know when it becomes available! This app is free to use and you can use it with as many classes as you want! \nAlternative solutions cost money because of their project's weight. We focused on building a lightweight project which can more efficiently and effectively meet the goals of the users.\nHow We built it\nWe started from sample programs such as sample project using Flask which allowed us to start building and getting feedback right away.\nThen, we customized the sample project by adding additional functions, building our own database for our class, user, follow activities, implementing other web development features.\nChallenges I ran into\nWe had to struggle so much trying to remind ourselves of the programming languages we barely used.  Also, we did not have enough time to be able to expand our program to something much greater with only two group members.\nAccomplishments that I'm proud of\nJP: This is my first ever web app ever deployed!\nYang: This is the app I hope I could use to enroll in FULL UCI classes. After talking to friends with our app, all of us like this app. It has a specific targeted user groups and the feedback we got after talking to the user group is great! \nEvery quarter, popular classes are quickly filled with students. The rest of students needs to refresh web pages over and over again to monitor the availability of the classes. When it comes the situation that the fulled classes are major-required or department-required classes (which is highly likely the reason why students compete to enroll), our app could be a life saver for UCI students who eagerly needs instant update for the availability of classes. All in all, I love our app!\nWhat I learned\nWe learned: \n\nimplementation of Python sqlite3 database\nweb application in Python, flask environment \nprocessing of HTML website\ndeployment our web app on Bluemix\nBesides, we refreshed our memory on programming languages and database.\n\nWhat's next for My UCI Class is Full\nWe want to provide help for students who don't end up taking the classes they want to take, since the number of people who actually take the occasional empty spots is very small.\nWe aim to write additional program to plan out their future course work that helps them graduate by the time they want, by providing the best possible set of classes they can take during the current quarter, with remainder of classes.\n",
        "hackathon_id": "hackuci2015",
        "winner": false
    },
    {
        "description": "\nBackground\nLooking for a specific item or an information online sometimes required users going through too many steps to get to the final search result that they want. Eventually, users end up opening numerous web browser tab without finding the satisfying result. Also, seniors often need to spend a tremendous amount of time on their computers trying to find their way to the result that they want to search for. We want to shorten all that process and ensure that users will have exactly what they look for in just a keyword or a command away.\nWhat it does\nMyBot.io provides a very human way to get assistance through a chat interface. We combine many useful APIs to give MyBot.Io these amazing features:\n\nRespond like a person\nUnderstand command for certain tasks including but not limited to: \n\n. video & music search through tthe bot without going through search engines to find the right website\n. item search without looking for the best online store to buy\n. translate with normal texting\n. simple weather checking using current location\n. play piano\nWhat I learned\nNodejs, AngularJs, underscore, socket.io, various APIs usage: walmart, youtube, cleverbot.\nWhat's next for MyBot.io\nExtend it so that MyBot.io can be specified for specific use such as filling out forms while collecting user's profile with instant assistance. This feature could be extremely useful for mobile users.\n",
        "hackathon_id": "hackuci2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe were comparing our classes and trying to figure out which classes we can take together.\nWe realized there was no tool that made this easy and visual.\nWhat it does\nIt takes Antplanner which allows a single individual to plan his/her schedule and turns it into an API that we consume in order to allow a group of students to use this data visually together to understand their collective schedules.\nHow we built it\nWe used Azure virtual machine with Ubuntu, Node.js, and the Azure MSSQL Database Logic App.\nChallenges I ran into\nSergey decided to use Backbone and Require.js which was a little annoying, but he still delivered despite that.\nWe decided to use MSSQL, and had to fix Sequelize's implementation of Tedious.\nWe tried to use Hapi but the new versions docs were out of sync, so we switched to express.\nWe assumed cookies could work cross-origin but they didn't, so we served the app from the same origin so we don't have to reimplement that.\nAccomplishments that I'm proud of\nWe designed, planned, and completed a full fledged app that is functional and iterates on the usefulness of Antplanner -- in less than 2 days.\nWhat I learned\nSee challenges I ran into. XD\nWhat's next for AntGroup\nWe'll await user feedback and improve it accordingly.\nWarning we did not have time or money to deploy with SSL, don't use an old password when creating an account!!\n",
        "hackathon_id": "hackuci2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroidjava\n",
        "hackathon_id": "wehackus",
        "winner": false
    },
    {
        "description": "\nBuilt With\nruby-on-rails\n",
        "hackathon_id": "wehackus",
        "winner": false
    },
    {
        "description": "\nBuilt With\nc#cssjavascripthtmlasp.netweb-apit-sqlmvcazurevisual-studiosqlrazorjqueryangular.jstwitterbootstrapgitgithub\n",
        "hackathon_id": "wehackus",
        "winner": false
    },
    {
        "description": "\nBuilt With\nvisual-studiohtmljavascripthtml5\n",
        "hackathon_id": "wehackus",
        "winner": false
    },
    {
        "description": "\nInspiration\nDo you have a fruit tree or vegetable garden in your backyard? Are you always looking for\npeople to barter with or gift your harvest to? Does your produce end up going to waste because \nyour tia has had it with the bags of guayabas you keep sending through your cousin Freddy? \nYour tia will be happy to know that My Canasta is now here to help you share your guayabas \nwith the rest of the community! We are a group of programmers, gardeners, designers, and \ncommunity organizers who created My Canasta to help reduce food waste, improve water \nconservation efforts, and increase community awareness in Southeast Los Angeles.\nWhat it does\nMy Canasta is a service that helps community members trade, sell, or give away fruits and\nvegetables growing in their own backyard in an effort to promote access to fresh and local food\nand support community engagement and sustainable growing practices.\nHow we built it\nBackend : Mysql DB on Azure, PHP RESTful API using Laravel\nFronend: Build Hybrid mobile app using Ionic Material Framework\nChallenges we ran into\nImplementing a usable app between a group of diverse backgrounds meeting for the first time.\nAccomplishments that we're proud of\nFamiliarizing ourselves and deploying on Azure. Fully developing a feasible concept in 2 days.   \nWhat we learned\nHow to address problems faced in our community using technology.\nWhat's next for MyCanasta\nPlenty of new features that need implementing.\n",
        "hackathon_id": "wehackus",
        "winner": false
    },
    {
        "description": "\nInspiration\nThere is an inherent inadequacy in most site maps:  they exclude critical information such as bench locations, and distances, that could be used by the disabled, elderly, and even families with small children to navigate our parks.  People with Multiple Sclerosis, as an example, might not explore a park because they are unaware of places to rest.   We realized that the technology used to solve the mapping problem can be used to enhance the park mobile device experience for everyone.\nWhat it does\nDrawn maps of regional resources like parks and gardens are distorted and rotated from their real-world location.  However they contain the information that people want, like facilities, resources, labels, and spaces.  The app translates real-world location information into the graphic representation through non-linear transforms and geo-spatial trigonometry to derive pixel-accurate locations.  The app can locate your position on the graphic map.  You can also annotate the map with additional resources like water fountains and park benches.  You can also add located reports concerning park issues, as well as points of interest that others may find useful.  As the app understands real-world positions, it also shows real distances between yourself and locations on the graphic map.\nHow we built it\nWe derived a lot of math to perform the translation for a point from latitude and longitude to the accurate location in pixel x,y space.  We built an iOS app for browsing through local parks on a Bing map, and allowing you to zoom that park into the graphical version of the park.  The app provides all of the features mentioned in \"What it does\", and serves as a mobile resource for park visitors.  We utilized Azure services to provide the backend for the app - including data storage for user generated annotations to the map information.\nChallenges we ran into\nThe math to translate geolocation to a drawn map location is very difficult.  Drawn maps are distorted and rotated views of the real world.  Deriving the pixel-accurate math was very challenging.\nAccomplishments that we're proud of\nMapping geo-coordinates from a smart phone onto a brochure-style map is a very challenging problem.  We have developed an approach, using some fairly complicated trigonometry and coordinate transformations, that can be used not only for the map we tested, but for any generic map.\nWhat we learned\nIn studying the issues with parks, we found that parks are underutilized, yet many people want to improve their local parks.  We also found several studies that described the many benefits that parks bring to their community.\nWhat's next for MyParks\nWith the base technology working, we will look at adding additional parks.  We will also look at different types of locations - theme parks, gardens, etc.  Mapping outdoor exhibits is a natural extension.\n",
        "hackathon_id": "wehackus",
        "winner": false
    },
    {
        "description": "\nInspiration\nAffordable child care\n",
        "hackathon_id": "wehackus",
        "winner": false
    },
    {
        "description": "\nAgua\nA multilingual personalized hydration tracker\nPeople often do not know how much water they should be drinking, or they drink much more than they should be. \nThis is where Agua comes in. Agua takes in factors like height, age, gender, and daily activity\ninto account when creating a personalized water intake track for the user. With this application, available\nfor iOS, anybody may enjoy a healthier and more satisfying life.\n",
        "hackathon_id": "wehackus",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptionic-frameworkhtml5css3bootstrapangular.js\n",
        "hackathon_id": "wehackus",
        "winner": false
    },
    {
        "description": "\nInspiration\nA team member recently went to jury duty and it was just a pain. We wanted to remedy some of the things that suck\nWhat it does\nGives users ability to check in onsite through the app and get sms notifications on when to report in\nHow we built it\nBuilt it on the asp.net mvc framework and integrated google maps geospating, twilio sms api, and sendgrid email api\nChallenges we ran into\nGetting the mass email system to work initially as well as some version control with github\nAccomplishments that we're proud of\nWe're proud that we accomplished everything we set out to do\nWhat we learned\nPitching the idea as profitable was trickier then we thought\nWhat's next for Call of Jury Duty\nRefining some of the processes and see if there is actual interest in the app\n",
        "hackathon_id": "wehackus",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe wanted to provide jobs for students and give affordable babysitting\nWhat it does\nEasySitter connects local babysitters with parents at any time. Babysitters can simply check a box saying that they're ready to provide service(like uber). This site runs on a credit based system, so that parents don't have to immediately pay if they don't have the money at the moment or are willing to babysit themselves at another time to make up the credits. Basically, you can babysit or pay for credits. You can cash out or use the credits to buy babysitting service.\nHow we built it\nWe used HTML5, CSS3, and Javascript for the website. Most of the pictures are made through photoshop. \nChallenges we ran into\nThe hardest part was implementing the GPS system. There were additional features from the google API that we did not need, and deleting them required us to understand the javascript better.\nAccomplishments that we're proud of\nAll of the code aside from the GPS was written from scratch. I used guides from online and the helpers walking around to learn. This was my first time coding in HTML, CSS and Javascript. I'm proud that I was able to pick up the different syntax, and understand the code at the end. \nWhat we learned\nAside from learning the syntax and work-ability of html css and javascript, we learned that in 48 hours a lot can be done. \nWhat's next for EasySitter\nEasySitter hopes to expand beyond LA when it gets bigger. We hope to have an efficient network of both babysitters and parents needing their services.\n",
        "hackathon_id": "wehackus",
        "winner": false
    },
    {
        "description": "\nInspiration\nIn Los Angeles, Latinos are under represented in the tech industry as many never even get a chance to learn about the kinds of opportunities that are out there. The Meetup website offers a list of free Tech events that provide a great setting for learning about various tech fields. The goal of this project is to encourage young Latinos to attend these events as an introduction to the tech industry.\nWhat it does\nThe website allows users to pick out some tech related topics and run a search, in which they are presented with a list of jobs that relate to the selected topics and nearby meetups to attend to get started. All content is automatically translated into the language specified by the browser.\nHow I built it\nThis is an asp.net website hosted on Azure and built using the Meetup, Indeed, Microsoft, and Google Maps APIs.\nChallenges I ran into\nRetrieving and reverse geocoding the users location was a bit lengthier than I expected.\nAccomplishments that I'm proud of\nThe site is live and fully functional and ready for people to use.\nWhat I learned\nI learned about the workings of the asp.net framework which I had never worked with previously.\nWhat's next for Latin Tech Hub\nAdd a section for listing educational opportunities that relate to the selected topics. Expand the site's functionality as the features are somewhat limited at the moment.\n",
        "hackathon_id": "wehackus",
        "winner": false
    },
    {
        "description": "\nBuilt With\nmeteor.js\n",
        "hackathon_id": "wehackus",
        "winner": false
    },
    {
        "description": "\nInspiration\nOften times it can be very difficult and time consuming to choose where to go out to eat with family, friends, or coworkers. Team 3 set out to simplify this process and generate excellent restaurant recommendations by using the nearest neighbor algorithm.\nWhat it does\nAfter taking a short survey and evaluating 40 Philadelphia restaurants on a scale from 1 and 5, user input their name and the number of recommendations and similar users they would like to receive. Meal Magic looks the user up in the system and then outputs a list of restaurant recommendations and similar users personalized to the preferences of the current user.\nHow we built it\nBoth the algorithm and user interface for Meal Magic are written and executed in Matlab. \nChallenges from first semester\nFinding the perfect framework and language in which to write Meal Magic's nearest neighbor algorithm proved to be a very difficult task. Team 3 pivoted between Python, Matlab, and Apache Mahout over a 3-month period, and ended up deciding to move forward with Matlab to build the product for the Fall Demo Day. \nWhat's next for Meal Magic\nNext semester, Team 3 will turn Meal Magic into a dynamic web-app written in Python. Existing users will be able to dynamically and remotely edit their preferences, and new users will be able to create accounts to receive their own recommendations.\n",
        "hackathon_id": "ese450f15",
        "winner": false
    },
    {
        "description": "\nInspiration\nOur video for ESE 450, Senior Design, First Semester\nWhat it does\nHow we built it\nChallenges we ran into\nAccomplishments that we're proud of\nWhat we learned\nWhat's next for Senior Design Team 9\n",
        "hackathon_id": "ese450f15",
        "winner": false
    },
    {
        "description": "\nInspiration\nToday, with 116 members, the University of Pennsylvania Police Department (UPPD) is the largest private police department in the Commonwealth of Pennsylvania. The main responsibilities of the UPPD include crime protection, abatement, and investigation. Our project is focused on improving the 10-hour shift schedule for the UPPD.\nWhat it does\nOur project generates schedules for six groupings of officers across a four week period. \nHow we built it\nOur project is built on Python. Our current code first generates schedules for one officer across four weeks. Our second code filters these schedules down given certain constraints. Our next set of codes generates schedules for two, three, and four officers. Finally, our last code combines the four officer and two officer codes to generate schedules across six officers in a four week period. In every round of code, the schedules are filtered based on a series of constraints. \nChallenges\nOur largest challenge was with the Python software. Specifically, the way we originally designed our code generated schedules across all six officer groups before filtering. We did not anticipate that Python would have memory issues and long \"run times.\" Changing the way we wrote our code helped our team overcome this challenge.\nAccomplishments\nAt this stage in the process, we currently have 16,700 potential schedules for the afternoon shift, and we are continuing to filter these schedules down further.\nWhat's next\nNext semester, our team will focus on continuing to filter our schedules, expand our project to both the morning and overnight shifts, and potentially run a trial with the UPPD. We look forward to continuing working with the UPPD administration.\n",
        "hackathon_id": "ese450f15",
        "winner": false
    },
    {
        "description": "\nESE Senior Design 2015-2016\n",
        "hackathon_id": "ese450f15",
        "winner": false
    },
    {
        "description": "\nInspiration\nWhat it does\nHow we built it\nChallenges we ran into\nAccomplishments that we're proud of\nWhat we learned\nWhat's next for What The Tell?\n",
        "hackathon_id": "ese450f15",
        "winner": false
    },
    {
        "description": "\nIn a world more interconnected than ever, we have never been catered to on a more individual level. Everything we encounter on social media, in-store, and in the mail, is customized to interest our existing self.  By recommending movies you should watch, clothing you should buy, or the types of ads you should see based on your location, data footprint, and personal likes and dislikes, most \u201csmart\u201d recommendation technologies simply further develop the person you already are. Personalization, customization, and individualization are only a few buzzwords that companies, organizations, and schools today (among others) are feverishly working to incorporate into their daily processes. These groups recognize that there is a market for personalization. There is proven economic value to market to an individual by exposing them to the very things they already like. This data-driven engagement approach is more predictable, and thus more likely to lead to consumer buying (a product) or buying-in (to an idea, news article, or desired behavior). \nHowever, such customization does not come without a societal cost. Technology that filters content based on similarity also results in polarization, homogeneity within groups, polarization between groups, and decreased creativity and efficiency overall. Because social media content is filtered to the individual and \u201cbirds of the same feather flock together\u201d, in-group culture is likely to intensify, while understanding of other groups is likely to diminish. Such polarity can to lead to close-minded individuals, inflated egos, and organizational inefficiencies. \nSuch unfortunate trade-offs between personalization and societal communication heighten the need of a product or tool to \u201cpop\u201d the so-called \u201cbubble\u201d that has been created around (and is separating) each of us. This is where AlterEgo comes in. AlterEgo hopes to combat the increasing homogeneity and lack of creativity that has resulted from modern technology, by creating a tool to introduce individuals to their counterparts in a shared environment that are most different from them, in terms of personality and interests.\nAlterEgo seeks to break the negative effects of such strong personalization filters, by using unique qualities to encourage diversity, as opposed to intensity, of thought. AlterEgo does not literally expose a user to the very ads she has blocked, or political media sources she has consciously chosen to ignore. Rather, AlterEgo seeks to simply introduce the user to an individual that is likely to inadvertently expose her to ideas of this nature. Through interaction with this different individual, one can generate richer conversations, diverse perspectives, and increase creativity in a natural manner. AlterEgo does not only introduce the user to diverse perspectives, but also does so in a meaningful way \u2013 both in terms of personal network growth and outcomes of interaction.\nAlterEgo is not just about introducing opposites; it is about increasing creativity through connection. It is about realizing the possibilities that can come from fostering relationships that one may not otherwise have. Personal, professional, and organizational growth, are closer than one might think. With AlterEgo\u2019s introduction recommendation based on trusted personality questionnaire and interest preference input, a simple conversation may be all that it takes.\n",
        "hackathon_id": "ese450f15",
        "winner": false
    },
    {
        "description": "\nWe aim to implement a conic geometric program to control a susceptible-infected-susceptible viral spreading process taking place in a directed network of major U.S. cities. We have built our model using disease spread data from Google Flu Trends and the Center for Disease Control and corresponding contagion parameters. Under a fixed budget, we aim to optimally distribute resources to the cities in the network to achieve the highest level of disease containment. Our ultimate goal of the project is to create a policy tool that can be used by both researchers and health organizations to maximize the containment of diseases. \n",
        "hackathon_id": "ese450f15",
        "winner": false
    },
    {
        "description": "\nInspiration\nMost online investment tools today only hedge against financial capital risk but fail to account for human capital risk, which is even more significant early on in one\u2019s life. \nWhat it does\nOptimata creates an optimally hedged portfolio that takes into account both types of risk.\nHow we built it\nTo construct the optimally hedged portfolio we chose 15 different exchange-traded funds, known as ETFs. These ETFs mimic the performance of different industries, as well as, companies of a particular size or potential for growth. \nWe first calculate the historical returns for an individual\u2019s existing stock portfolio. These returns are then regressed against our 15 chosen ETFs. \nThe regression gives a beta value for each ETF. The beta represents the sensitivity of the individual\u2019s stock portfolio with the particular ETF. A positive beta value suggests a positive correlation between the two, which means we should sell the ETF. Whereas a negative beta value means we should buy the ETF.\nChallenges we ran into\nRealizing that correlation did not account for volatility of stocks, and finding an appropriate metric that did.\nMinimizing transaction costs\nDealing with multicollinearity in our regression model.\nAccomplishments that we're proud of\nDeveloping a fully functional web application that meaningfully hedges financial risk.\nWhat we learned\nHow to hedge against financial capital risk embedded in an investor's stock portfolio.\nDifferent types of regression models.\nPrincipal Component Analysis.\nSetting up a web application from start to finish.\nWhat's next for Optimata\nHedging against human capital risk embedded in an investor's current stock portfolio\n",
        "hackathon_id": "ese450f15",
        "winner": false
    },
    {
        "description": "\nESE Senior Design 2015-2016 Team 6\n",
        "hackathon_id": "ese450f15",
        "winner": false
    },
    {
        "description": "\nInspiration\nWhen people are travelling, they are usually looking at their phone for directions. In the process, the whole journey of getting to a destination is often missed. We want to build a drone that can help people navigate to their end destination without detracting from the experience of journeying through new lands.  \nWhat it does\nThe drone prompts the user for a destination or request for local attractions, and upon the verbal request will guide the user to an end destination\nHow we built it\nWe used Google's API to build the brains of the drone; we pull in local data to make recommendation and convert the address of any place and convert them into a GPS location. Then we built drone with a Pixhawk, a 3DR UBlox GPS, compass, and 3DR Radio Set to allow the drone to be controlled using a phone. \nChallenges we ran into\nGetting the Google API working with our app was very challenging for us, especially since we didn't have much experience with any APIs at all.\nAccomplishments that we're proud of\nWe are proud of being able to process a user's request, and, based on geographical tags, suggest places for users to go. \nWhat we learned\nTeam dynamics are very important and are best cultivated by meeting in person. Initially we thought that splitting up and coding individually would be the best tactic to handle the project, but we found out that this is not the best approach. Additionally the need to continuously reach out to our advisor is something we plan on doing next semester. We were stuck on a lot of programming issues that were solved relatively quickly after we reached out to our advisor for help.\nWhat's next for Droid that Can Autonomously Navigate (D.A.N.)\nWe need to integrate the software with the hardware components.\n",
        "hackathon_id": "ese450f15",
        "winner": false
    },
    {
        "description": "\nAs weather patterns become less predictable and residential areas become more densely populated, responding to natural disasters and harsh weather conditions remains a dynamic challenge in our modern world. The increased reliability and  accessibility of unmanned aerial vehicles (UAVs) that has occurred in recent years presents a compelling opportunity to utilize this emerging technology to improve disaster relief methods. Efforts that would otherwise be stymied by limited accessibility can be rectified using modern UAV systems.\n",
        "hackathon_id": "ese450f15",
        "winner": false
    },
    {
        "description": "\nHelping providers at Penn Medicine respond swiftly to real-time patient data\n",
        "hackathon_id": "ese450f15",
        "winner": false
    },
    {
        "description": "\nDataball is a predictive sports model for the NFL.  It is built with JSON data from an API, PHP scripting, MySQL Database, and analysis from R.\n",
        "hackathon_id": "ese450f15",
        "winner": false
    },
    {
        "description": "\nProviding Gashora, Rwanda with a sustainable, low cost water purification solution\n",
        "hackathon_id": "ese450f15",
        "winner": false
    },
    {
        "description": "\nBuilt With\nasp.net-web-apicignium-lmazure\n",
        "hackathon_id": "cignium",
        "winner": true
    },
    {
        "description": "\nBuilt With\nlmjavascriptbootstrapknockout.js\n",
        "hackathon_id": "cignium",
        "winner": true
    },
    {
        "description": "\nBuilt With\nlm\n",
        "hackathon_id": "cignium",
        "winner": true
    },
    {
        "description": "\nBuilt With\nlm\n",
        "hackathon_id": "cignium",
        "winner": true
    },
    {
        "description": "\nBuilt With\nlm\n",
        "hackathon_id": "cignium",
        "winner": false
    },
    {
        "description": "\nBuilt With\nlmc#\n",
        "hackathon_id": "cignium",
        "winner": false
    },
    {
        "description": "\nMe and some friends are in Team of FIFA 16 Pro leagues, and we have \"oficial\" games on Sunday. We were looking for an easy, uncompromising way to share ideas and information that is not as loose as IM, and not as rigid as a forum. We didn't really like the idea of comiting (creating an account) into a service that is overpowered for what we need. We just want simple discussions!\nYou start here: https://lm.cignium.com/run/hackathon/thanatos/dev/\nEnter your topic, and a list of emails (separated by ;) of the people you'll be sharing this space with. Thats it! You'll then receive a link to the place where you can discuss. You can add a general response to the topic or response directly to other messages. Its easy!!\nBuilding this with LM certanly facilitated a lot of the work, but also created some challenges, specially on how to deal with the forms I created as parts of a single page (which is what i wanted).\nNext for this project: Improve UI!\n",
        "hackathon_id": "cignium",
        "winner": false
    },
    {
        "description": "\nBuilt With\nlm\n",
        "hackathon_id": "cignium",
        "winner": false
    },
    {
        "description": "\nBuilt With\ncignium-lm\n",
        "hackathon_id": "cignium",
        "winner": false
    },
    {
        "description": "\nBuilt With\nlmhyml\n",
        "hackathon_id": "cignium",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe 80% of the low income population who are unable to secure much needed civil legal assistance.\nWhat it does\nDelivers legal services to under served individuals by bringing a mobile law office into the hard-to-reach communities.\nHow I built it\nWith the help of a passionate group of legal aid staff\nChallenges I ran into\nHow to fund it\nAccomplishments that I'm proud of\nThe concept is workable, the team was willing to collaborate\nWhat I learned\nThis concept will excite and delight but it needs to be seen.\nWhat's next for Justice Bus\nFundraising!\n",
        "hackathon_id": "floridalegalaid",
        "winner": false
    },
    {
        "description": "\nInspiration\nOur team set out to view the problems of retention and leadership development from the perspective of a staff attorney.  Why do they leave?  What would make them want to stay?  How to we nurture their leadership potential?  \nIt turns out that typical young staff attorney has a lot on her mind:  student loans, career development, thoughts of starting a family, etc.  The typical young staff attorney found her way to legal services due to a strong sense of social justice and a desire to do good.  She wants to stomp out inequality and poverty.  She wants to do this work...but she also has to look out for herself.\nWe want to know where our organizations are headed.\nWe have ideas and would like to be heard.\nWe need to know that what matters to us, matters to the leadership.\nWe want to share in the vision of this organization.\nIf you want to know how to make this a great place to work, just ask us.\nThe Shared Leadership Concept\nThe idea is that staff need to have more participation in leadership in order to have a sense of ownership of the direction of the organization. We propose that staff would participate in committees that would send elected representatives to a quarterly Advisory Committee meeting with the Executive Director.  Participation would be completely voluntary.  Staff attorneys, supervising attorneys, support staff and administrative staff would meet in their own respective subcommittees to brainstorm and suggest ideas to take the E.D. regarding issues small and large that arise within the organization.  \nThe purpose of the subcommittees is to create a space where staff feel comfortable to sharing ideas and speaking their minds, without supervisors present.  Each type of staff member has the opportunity to take on a leadership role as a representative to the Advisory Committee.  We suggest at least two representatives from each committee, and a term of at least one year for each representative.  The one year term allows for development of leadership skills and ownership.  The representative would run the subcommittee meetings,  gather input from staff, and facilitate the staff in reaching a consensus of concerns and ideas.  The identities of those speaking up at the subcommittee meetings would be kept confidential, so that staff may speak their minds without fear of reprisal or retaliation.  The hope is that natural leaders will emerge from the process and from all different levels of the organization.  \nThe Advisory Committee meetings are to be a \"two-way street\" between the E.D. and the staff.  The E.D. informs the staff of leadership issue and concerns in an effort to create transparency within the organization.  The staff provides the E.D. with honest feedback and ideas.  \nDesired outcomes:\nIncreased transparency\nOwnership if ideas and difficult decisions\nBetter information for the E.D. for decision making\nLeadership opportunities for staff\nEmployees share in a vision of the future of the organization.\nCost = $0.00!!!!!\nHow we did it...\nPure brain power and teamwork...and lots of multi-color post-its!\nChallenges I ran into\nIn testing there were some concerns about whether employees would really feel comfortable being honest and sharing their thought, and would not fear retaliation.  We believe we have created a safe environment for brainstorming and speaking honestly, where staff can have some anonymity.  \nAccomplishments that I'm proud of\nWe created a concept that is feasible and could be implemented in any legal services organization within a short period of time...at little to no cost.  We tackled some difficult issues, and were honest with each other about our fears and wants.  We already had one E.D., and some others in leadership roles, tell us that they would be excited to implement this in their organization!\nWhat I learned\nEven though our team members come from different parts of the state, practice different types of law, work in offices small and large, we have a common set of concerns about our futures as legal services attorneys.  \nWhat's next for Ask Me: A Shared Leadership Concept\nWe plan to share this idea with our Executive Directors and we hope to see legal services organizations begin to implement it within the next year.  \n",
        "hackathon_id": "floridalegalaid",
        "winner": false
    },
    {
        "description": "\nInspiration\nEvery city in the nation is covered by organizations that provide legal help to our communities, but few people know that these organizations exist. Legal service organizations advocate for families and individuals facing economic hardship to increase or maintain the stability of their family, their income, their education, their health, and their housing.\n\"... It's Good for Everyone\" is a public awareness campaign geared towards the education of the public about those services in your community.  This campaign will strive to collaborate with like minded community partners and educate all about the impact legal services has on the community.\nWhat it does\n\"... It's Good for Everyone\" has three parts to the campaign: 1) Create a Buzz, 2) Unite the Voices, 3) Snag a Celebrity Champion.\nCreate a Buzz\nCreation of a color based campaign as a basis of visual cues to our target audience within the Unite the Voice portion of our campaign tied to the catchphrase \"... It's Good for Everyone\".  Using Gold as an example color, the vision includes gold ribbons, gold bracelets, gold stickers, gold buttons as examples.  The month of November would be branded as Legal Service Awareness Month, with professional athletes wearing gold shoes, headbands, and socks.  Potential long term opportunities in that month include collaborations with companies like Macy's with an awareness campaign during their Thanksgiving Day parade.\nThe initial roll is viewed as a statewide campaign, but can scale to a nationwide campaign as noted above.\nUnite the Voices\nCreation of a toolkit based events package to drive that buzz into a tangible series of events.  With details of the events available online, both small and large organizations can create these events.  The goal is to bring in our target audience, young professionals, entrepreneurs, current donors and their friends, members of the media, like-minded organizations, and anyone who wants to support their local community.\nEvent examples include Award Ceremonies, Challenge/Competition Events, Networking Socials, and Sporting Events.\nSnag a Celebrity Champion\nGreat causes deserve great celebrity champions.  They drive awareness with their brand and broaden its reach, which empowers the communities that legal service organizations serve.  Our goal is to work with celebrities with a large reach like Oprah, or with background in driving social change into the public consciousness, like Jon Stewart or John Oliver.\nOnce this stage is complete, start the process over again to create more buzz, since \"Promoting Legal Services... It's Good for Everyone.\"\nHow I built it\nBuilt by a project team at the 2015 Legal Aid Summit in Orlando, Florida.\nWhat's next for ... it's good for everyone.\nOprah, the ball is in your court.\n",
        "hackathon_id": "floridalegalaid",
        "winner": false
    },
    {
        "description": "\nInspiration\nOur inspiration for this project comes from Patty Pro Se - a fictional potential client who has experienced domestic violence and has been in and out of jail for years due to drug abuse. She has three minor children, an unstable home life and is a minimum wage worker who works two jobs. This client cannot afford an attorney for a divorce that would give her independence from her abusive spouse, and a chance to stabilize her home life. Patty Pro Se is a \"do-it-herself\" character who is very resourceful when it comes to community services and somewhat tech-savvy. If she wants to do something, she will Google it or find the right person to talk to.\nOur project \"Lawyer In A Bus\" comes from our desire to help clients like Patty Pro Se who are incapable of affording a private attorney, are financially ineligible for legal aid, and are willing to figure out how to use self-help materials.\nWhat It Does\nLawyer in A Bus can be found at your local courthouse, legal aid organization, library, food bank, school or community center. A mobile app can help you determine where the bus is on any given day, or where you can pick up resources (such as \"Lawyer in A Box, explained below). \nAn attorney and volunteers drive along a scheduled route in the community and set up shop to give out information, legal advice and help clients complete pro se forms with legal matters such as dissolution of marriage, wills, bankruptcies, landlord/tenant, modifications, etc. On the bus there are lap tops available for tech-savvy clients to fill out their forms via the website. \nOn the bus, clients may also pick up \"Lawyer In A Box;\" a resource toolkit that contains legal documents/forms, step-by-step instructions on how to file the forms, timelines on court proceedings, and related resources/materials. Each Lawyer In A Box covers just one legal issue (e.g. one box for a simple dissolution of marriage, another box for a wills matter, etc.). \nHow We Built It\nThe bus route is determined through collaboration with social service agencies as well as based on requests from the app, and feedback provided by other testers.\nFor the proposed Lawyer In A Box phone app, there is possibility for development of this app on both Androids and iPhones using Google Maps. However, on the whole, this project would need to raise funds in order to acquire a state-of-the-art bus with lap tops for client intake and internet use. \nChallenges We Ran Into\nOur team had to discuss and decide whether or not this project would be potentially funded using Legal Services Corporation (LSC) funds, and we came to the conclusion that we would not be able to do that. Due to the LSC income restrictions needed to qualify to services, we knew we would not be able to help most people by using LSC funds. Not everyone can meet LSC requirements in order to receive the legal help they need. We wanted to help the working poor, and knew that unrestricted funds would be the best way to do this. Seeing as our project focuses on pro se methods, we knew we would be able to help clients who are Do-It-Yourself types, regardless of income.\nAccomplishments That We're Proud Of\nLawyer-In-A-Box has the potential to improve the document completion rate of pro se litigants. It can make a complicated and daunting process more manageable, user-friendly and accessible.\nLawyer-In-A-Bus is a community-oriented and client-centered approach that can build stronger community partnerships amongst service organizations. It reaches out to clients in the places that they frequent, instead of them going out of their way and out of their schedules to receive legal help. \nWhat We Learned\nThere is a desire for mobile units to do community outreach and provide legal services. This can help clients experience less dependency on outside factors such as transportation, child care and work schedules; all of which are obstacles for the low-income community.\nWe also learned that it's great to talk to testers who gave us valuable feedback and insight on honing our ideas. \nWhat's Next for Lawyer In A Bus?\nLAWYER ON A PLANE - just kidding :) \nAnything can happen next - a full-fledged website with our own personal interactive documents, a YouTube Channel for the website with virtual instructions on everything from documents to your own legal rights, helpful phone applications related to the project (for locations, times, etc.), and building even stronger community partnerships.\nProject by: Nancy Lugo Esq., Randall Berg Esq., Abigail Adkins, Cynthia Woodward Esq., Ichi Vazquez and Mark Brown Esq.\n",
        "hackathon_id": "floridalegalaid",
        "winner": false
    },
    {
        "description": "\nSchool-Legal Partnership: Stronger Youth Build Stronger Communities\nJustice, a Fourth Grader, is a student at her local school-legal partnership.  One day she arrives to school in a terrible mood.  In the middle of math class, she screams at her teacher and throws a pair of scissors across the room, barely missing the teacher and another student.  Her well-trained teacher immediately calls her counselor and her legal advocate, and she is taken into a meeting with them.  After a lot of tears and an hour of talking, she reveals that her mom, who is disabled, got fired from one of her jobs.  They also have been notified they are in danger of losing their public housing voucher because her mom's boyfriend, a convicted felon, moved into the unit.  Her father has not paid his child support for the past six months.  Her mom's boyfriend is supposed to be helping her family, but he is actually abusing both Justice and her mom.\nThe School-Legal Partnership model is uniquely designed to bring legal advocates into schools in impoverished communities and is designed to assist at-risk youth and their families with a variety of legal issues. The belief is that stronger youth build stronger communities. Many families in these communities are living in poverty and facing a number of legal issues in areas such as Housing, Family Law, Consumer, and Public Benefits.  This model would house legal advocates in schools who would conduct initial intake with youth and their families and match them with a staff or pro bono attorney that practices in the area of law in which they need help.  In addition to assisting the families, the model is also designed to ensure that these youth are receiving appropriate services necessary to ensure that they are successful in both the educational and community settings.  Teachers and staff are trained to identify at-risk behavior and coordinate with students' assigned counselors and legal advocates to ensure at-risk youth are provided with the services they need in a timely fashion while at school.  \nFor instance, in Justice's case, her assigned staff attorney will assist her mother in various legal issues including family law, housing, and benefits.  Specifically, the attorney will help her mother enforce her child support order, obtain an injunction against domestic violence, keep her public housing voucher, and obtain disability benefits. \nThrough discussions with the mother and Justice's legal advocate, it is discovered that Justice has a learning disability and once she is connected with the right health care provider, she is diagnosed with Attention Deficit Hyperactivity Disorder and Oppositional Defiant Disorder. Justice was not receiving any services because her mother did not know how to access the services. Through working with the school, the legal advocate was able to secure educational testing which lead to Justice receiving an IEP and the necessary supports to assist her in becoming successful. Justice now receives Applied Behavioral Analysis and Play Therapy in school, in addition to being placed in a smaller class setting and having extra time to complete assignments and exams. In the community, Justice receives Medication Management and participates in equine therapy.  \nThe bigger vision for the School-Legal Partnership model is a true community school which would encompass full wrap-around services for the youth and families they serve, truly transforming the youth and in turn transforming communities and overcoming generational poverty.  Concepts that could be incorporated include curriculum reform, teaching love, life skills training, exercise/physical activity, using games and innovative tools and technology in the classroom, a school/community garden, healthy food trucks, a kids voting program, year-round schooling/services, after-school services, 1-1 mentoring, etc.   \n",
        "hackathon_id": "floridalegalaid",
        "winner": false
    },
    {
        "description": "\nInspiration:   Making sure we are addressing the most important needs of low income members of the community.\nWhat it does:  It makes it easy for legal providers and grantors to assess the needs of the community by making it easy for community partners and clients to provide the needs assessment information.\nHow I built it:  By app designers so it can be used on multiple devices.\nChallenges I ran into:  Making it short enough that people will be willing to participate but still provide the necessary information.\nAccomplishments that I'm proud of:  The teamwork in coming up with the idea.\nWhat I learned:  It is important to be open to other peoples ideas.\nWhat's next for HelpusHelpyou\nIf other people like the idea we hope it is developed further.  We think needs assessment is very important with our limited resources because we need to assist with the most pressing needs in the community.  Each legal services provider does their own needs assessment development and distribution and this can be inefficient.  \n",
        "hackathon_id": "floridalegalaid",
        "winner": false
    },
    {
        "description": "\n\"Leaders at all Levels\" was built to solve Bobbi's lack of leadership opportunities. Bobbi is a 28 year old health law attorney who is passionate about her work, but worries about getting bored or burnt out. She doesn't fully understand how her organization is structured, nor is she encouraged to lead in her current role. As a result, it's hard for her to envision how to stay challenged in her job, especially as a traditional leadership positions are occupied by the same people for decades.\nWith \"Leaders at all Levels\" implemented in her organization, Bobbi will hear examples from others who have instituted an innovation in their position at staff meetings.  Discussion will include how that person came to legal services, what motivates him to stay, what they do every day, and how their idea benefits the organization and their clients.  The goal of these meetings is to highlight success stories and to motivate others to see the leadership potential in themselves.  They should continue throughout the year.\nOnce motivated, Bobbi request to meet with her supervisor to develop an \"Individualized Leadership Plan\" (ILP).  The supervisor will have some guiding questions, but ultimately the ILP will be developed based upon Bobbi's goals, strengths, and initiatives.  Bobbi and her supervisor will also set a time for regular check-ins on the ILP, understanding that there will also be opportunities for more informal discussions.  \nAfter Bobbi implements her ILP, she will present at the next staff meeting to share how she achieved her goal.  Bobbie then will be an inspiration to others to develop their own ILP.\n",
        "hackathon_id": "floridalegalaid",
        "winner": false
    },
    {
        "description": "\nInspiration - New attorneys working with legal aid, legal services, or other public interest organizations.\nWhat it does - This box provides the user with the tools and information to find a mentor, receive training, and partner with other organizations in the network to obtain the skills and knowledge needed to become a better leader.\nHow we built it - We used resources provided by the conference organizers and our imagination.\nChallenges we ran into - Our test users did not feel there were proper incentives for the mentors and the end users.  They also felt the program was too long.\nAccomplishments that we are proud of - Our illustration of our problem and goal.\nWhat we learned - Many legal aid organizations are dealing with this issue.\nWhat's next for Leadership in a Box - Our team members will continue to implement leadership in the box by reaching out to others who are interested in our idea.\n",
        "hackathon_id": "floridalegalaid",
        "winner": false
    },
    {
        "description": "\nInspiration\nHIstorically, legal service providers have assisted low-income clients using an in-person service delivery model.  To focus on the problem of access to the courts for low-income and moderate income Floridians, Chief Justice LaBarga formed the Access to Justice Commission becoming the 37th Commission in the United States.  In order to expand capacity and create more opportunities for access to justice, legal aid organizations must better utilize the power of existing and affordable technology platforms.   \nWhat it does\nLegal Anywhere connects people to legal and social services throughout the State using an online program that is interactive, user-friendly, and individually tailored.  Components of Legal Anywhere include a website and phone application.   Although the website and phone app are available around the clock, individuals will also have the opportunity to access the website at designated community locations (campuses, libraries, medical clinics) and kiosks in high traffic areas.   Locations may be staffed at published hours for user assistance.\nHow I built it\nLegal Anywhere was designed during the three-day design process at the Legal Aid Summit offered by the Florida Bar Foundation in November, 2015.  Six designers collaborated and created the concept.  At this stage of design, elements of the phone application have been outlined.  Positive feedback has been given by voluntary reviewers and criticisms have been incorporated in the existing design.  A more comprehensive design will be created which will include more depth in all legal substantive areas.\nChallenges I ran into\nUnderstanding that electronic interviewing can be a barrier, defining a specific and understandable progression of questions is a major hurdle to overcome.  Designing a product that provides meaningful assistance across diverse (bilingual, older, disabled, under-educated) populations is difficult and time-consuming, but possible.  Another challenge is to establish a network of community partners who are also committed to a holistic approach to assisting the underserved. \nAccomplishments that I'm proud of\nLegal Anywhere has tremendous potential to expand the reach of existing legal services organizations and structures by tapping into the accessiblity of the internet.  This combined with consistent case monitoring by staff and pro bono professionals and follow-up will efficiently route persons who can be effective pro se litigants, those who need full legal representation, and those who can benefit from a broad field of social service providers.\nWhat I learned\nDesigning a project with team members from diverse backgrounds and work experiences produces a more creative and useful result.  The prototype testing phase caused us to re-evaluate the design to make it more effective and encouraged the team to consider the design from a different perspective.  \nWhat's next for Legal Anywhere\nThe design team proposes that product continue to be perfected with flow chart questioning, additional legal substantive areas, and routing to appropriate agencies.  Testing of Legal Anywhere components should continue as sites are identified and community partners are engaged.  \n",
        "hackathon_id": "floridalegalaid",
        "winner": false
    },
    {
        "description": "\nInspiration - busy legal aid staff needing time for meaningful work and making an impact\nWhat it does it give clients a single source for legal information and access to their legal aid attorney and files\nHow I built it. team ideas, collaboration\nChallenges I ran into making a system that is easy for the user but saves time for staff to do meaningful work\nAccomplishments that I'm proud of place where clients learn about the law; enter a client portal to get all their \"legal information\" and save legal aid staff...time and\nWhat I learned what we can create together with common goal\nWhat's next for Legal Beagle - Take a bite out of Injustice- we need and developer to help us take a bite out of injustice\n",
        "hackathon_id": "floridalegalaid",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe thought it would be a good idea to engage a student who had no interest in doing public interest work and no background with underserved populations to complete pro bono assignments with a legal services organization.\nWhat it does\nOur idea would motivate this student by first establishing a 3 tier approach to her pro bono projects.  The first tier would allow Penelope, as a first year student, to interact with juvenile populations in a relatively non-legal setting -- intake, form development, interviewing.   As a second year student, Penelope would engage in more intermediate work which would be on par with her progressing education and training. As a third year student, Penelope would have the ability to work on more complex legal issues more related to her future career goals. \nAs Penelope completes her tiers and assignments, her site supervisor would send out an email to Penelope, her law school, her client, the client's employer, and her state legislator to announce the good work she's done.  The email would read as follows --\"Today, Penelope Jones helped an employee of Walmart save her home, \" etc....\nHow I built it\nThe idea came from initial conversations with our frustrations on how to get students to complete their pro bono work and how to help legal aid agencies fill their needs.  Then we brainstormed ideas on ways to help both of these parties with the focus being on the student experience.  We then developed a profile of what this student would look like and her particular needs, interests, and goals.  We had to address the engagement between the law school, the student, legal aid, the legal aid clients, and how this would impact the community.  \nChallenges I ran into\nBecause of the impact on all the parties involved, we had to refocus on just one - the student going through the process.  In the end we were able to address the impact on all the parties, but needed to be mindful of the power of the one student to create this change. In so doing, the student would develop a more meaningful connection with legal services work as she progressed within the tiers and her education, and ultimately, her community.  \nAccomplishments that I'm proud of\nWe are proud that we were able to create a program that moved one student from being self-interested to being interested in public service work.\nWhat I learned\nThat we all could work together to meet the needs of our individual populations -- law students, the law schools, legal aid clients, and the legal aid employees.  We learned how one person could impact and be impacted by legal work and the community.\nWhat's next for Penelope Gets Engaged\nNot only has Penelope become engaged enough to complete her pro bono requirements, she is now engaged enough in the community and public interest to incorporate this kind of work into her legal life following law school. \n",
        "hackathon_id": "floridalegalaid",
        "winner": false
    },
    {
        "description": "\nInspiration\nWhat it does\ngives users an easier way to access already available legal resources\nHow I built it\nsimple construction using drop down menus and links to external sources\nChallenges I ran into\nreboot\nAccomplishments that I'm proud of\nwe did this entire project in less than four hours\nWhat I learned\napp development is difficult\nWhat's next for The Legal Assistant\nprototype\n",
        "hackathon_id": "floridalegalaid",
        "winner": false
    },
    {
        "description": "\nInspiration\nBecause Florida has refused to accept the Medicaid expansion, a health care \"coverage gap\" has emerged: There are 600,000 people in Florida who cannot get health care because they do not qualify for Medicaid, and there are no other options for them under the Affordable Care Act plan. The lack of health care affects your everyday life, including your ability to work, to keep healthy, get treated for chronic health problems and avoid premature death.   \nWhat it does\nRising Out of the Gap proposes a short term and long term solution to the coverage gap problem.  It involves training existing community organizations on 1) how to access basic health care services through \"safety net\" health care providers (like community health care centers providing free and low-cost services), if available and 2) how to contribute to a long term political campaign to influence state legislators to accept Medicaid expansion. This would involve training community members to identify individuals in the coverage gap and capture their stories in the form of short videos.  That will leverage the existing resources of the organizations who already have contact with the target populations, or can more easily make contact with them, so when clients contact the organizations, they can be told where to go to get health care, and also be asked to create a video.  This may be the only opportunity for people caught in the coverage gap to communicate directly to legislators about their personal difficulties. Then the videos can be packaged and edited, and used in political advocacy to convince target \"hold out\" legislators to accept the Medicaid Expansion.  Other political efforts have thus far failed; the next step should be a public shaming campaign that focuses on how the legislators' action have affected real people. \nHow I built it\nWe spent two days pitching and developing ideas on how to provide access to health care for the lowest income  Floridians who need it.  \nChallenges I ran into\nWe need to find ways to reach the clients, so collaborating with community organizations will be crucial. Contacting individuals who do not have reliable internet access will be difficult.  We'll also have to enlist the help of PR firms to edit and package the videos into a convincing campaign.  We will need to find an organization that can work on the lobbying aspect as many of our programs have restrictions on lobbying and political work. Some people are too embarrassed to share their stories. Many are unaware of this political issue.\nAccomplishments that I'm proud of\nWe're proud of the discussions we've had and providing an idea of how to bring this disparity in coverage that affects so many Floridians to light. Hopefully something can be done to provide a long term solution to this serious issue. \nWhat I learned\nNot all of the team members were fully aware of the coverage gaps, so some team members learned more about the lack of health care. The more we are able to educate, the more we can help this issue get a resolution. \nWhat's next for Rising Out of the Gap\nIdentifying resources to help us provide more visibility for this campaign such as production of a documentary and provide support to empower coverage gap individuals to work collectively to fix this life threatening situation resulting from political choices made by Florida leadership.\n",
        "hackathon_id": "floridalegalaid",
        "winner": false
    },
    {
        "description": "\n\nDo you have a legal problem?  You don\u2019t know where to turn, or even how to find a lawyer? \n2.Jennifer Newton found herself in that position.  She had been married for 17 years.  She had 3 kids, was living the everyday life. But, one day, she was faced with reality. She separated from her husband, she didn\u2019t know how she was going to pay the bills, and she was headed for divorce. \n3.Not knowing how she was going to keep life as normal as possible for her kids, keep the mortgage current AND pay for an attorney, she was desperate. While getting ready for bed, she saw the commercial for iJustice, the web application that helps you find a low-cost attorney in your area. \n4.How does it work?  iJustice is a legal resource connecting you with low-cost legal services provided by local attorneys.  By using the application, you, the consumer, can choose from a menu of options with different price points depending on your legal needs, budget and availability. \n5.To get started, all you need is to provide your basic information, and a nominal application fee ($3.00), and then you can choose if you just want a packet of forms to complete on your own, or you want the personalized service of an attorney coming to your house or place of business.\n6.The attorneys on this list have agreed to provide legal services at a lower cost to make it more affordable for you in your time of need. \n7.Warnings, waivers, conditions, etc. 1.  This does not constitute legal advice 2.  iJustice does not guarantee a successful result. 3. Terms and conditions may apply.\n\nHow this works. . .\nLegal Aid/FBF enters into MOU with private attorneys to enter a \u201c fleet\u201d  of attorneys to agree to low cost billable rate (lower than market rate) for certain kinds of issues such as family law, consumer, business creation, bankruptcy, etc.  For example $100.00, small or no retainers, etc.), attorneys will use a uniform retainer agreement so that every attorney in the \u201c fleet\u201d  will be using the same agreement.  The \u201c fleet\u201d  will be covered by malpractice provided by Legal Aid/FBF as an incentive to do this work.  The types of cases accepted will be limited to a specific and well defined menu that is established at the beginning of each year based on priorities\u2014for example\u2014Dissolution of Marriage, Paternity, Contract Dispute (small claims), Landlord and Tenant, foreclosure, consumer protection, etc.  When the consumer enters in demographic information, they will initially be screened for legal aid, if they are eligible for legal aid, they will be scheduled for a free legal consultation at the legal aid office closest to their residence.  If they do not qualify for legal aid, they will be directed to the next screen where they will be given choices as to how much or how little they wish to receive and pay for in terms of legal services.  Then, they will be directed to schedule their consultation.  The app will then utilize a logarithm that places the consumer on the attorney\u2019s calendar that matches the consumer\u2019s requested date.  The consumer is then scheduled for an appointment, confirms, adds to iCalendar, requests an email confirmation and then hits \u201c ok\u201d  and gets a receipt. What makes this different from Legal Zoom or Ask Gary?  It isn\u2019t a referral service and it is more than just a form service and the client gets a local attorney for LOW COST. It is financially sustainable Private/public partnership Doesn\u2019t rely on government Doesn\u2019t rely on politics Doesn\u2019t rely on grants Doesn\u2019t rely on taxes The person that gets the service pays for the service\u2014at a reasonable rate\u2014so there is an emotional and personal connection to the \u201c product.\u201d The middle class gets representation.  Lawyers get business.If you are legal aid eligible, you get sent there too.\nWhat it does\n",
        "hackathon_id": "floridalegalaid",
        "winner": false
    },
    {
        "description": "\nInspiration\nWhat it does\nHow I built it\nChallenges I ran into\nAccomplishments that I'm proud of\nWhat I learned\nWhat's next for Fly High\nSlowly slaving away to make the best idea in the legal world. \n",
        "hackathon_id": "floridalegalaid",
        "winner": false
    },
    {
        "description": "\nhelping clients get linked with legal and social services by answering a few questions using a phone or web based app.\n",
        "hackathon_id": "floridalegalaid",
        "winner": false
    },
    {
        "description": "\nHOLA - Hello Legal Aid is a collaboration among Florida Legal Aid organizations meant to bring awareness and support for the work of Legal Aid through humanizing justice. HOLA shares stories of legal aid collaborators, such as clients, staff and volunteers through online platforms, allowing these stakeholders to share their experiences in their own words and in their own environment. HOLA would be housed at the Florida Justice Technology Center. Interested stakeholders from Legal Aid organizations throughout the state could share the stories through FJTC. The information is disseminated through a variety of platforms, including Twitter, Facebook and Instagram and is intended to bring awareness to a larger group within the state of Florida. The purpose of HOLA is primarily to bring awareness to the human stories behind those who use and work within Legal Aid in Florida. The awareness brings visibility, which is then intended to bring donations, volunteers and social change. Users who visit HOLA to view the stories can click on the title to learn more about the history of Legal Aid, the state organizations, how to find a legal aid organization and how to help the cause. There are opportunities for corporate sponsors who may contribute for each \"like\" gained. In addition, the use of social media allows state Legal Aid organizations to capture metrics that can be used to improve services and gain valuable information. There is also growth opportunity as capturing enough stories could result in creation of a book. Any donations that come into HOLA will be collected and disseminated to state Legal Aid organizations through the Florida Bar Foundation.\n",
        "hackathon_id": "floridalegalaid",
        "winner": false
    },
    {
        "description": "\nInspiration\nClients often come to Legal Aid with multiple problems. It's not just a housing issue, its childcare, custody, putting food on the table , employment and insurance. Our attorneys spend 30% of their time acting as social workers or  kicking the can down the road on a problem rather than solving the root causes. We also turn away those in need because they don't meet funding criteria or fall within very strict guidelines. \nWhat it Does\nA CRC (Compassionate Resources Collaboration)  will be based in Legal Aid Office to assist with clients other issues. The CRC is available in person or through all digital platform outlets. Most Legal id Clients have limited access to technology however. \nHow it will be Funded\nImportant o acquire key stake holder buy-in from other area agencies such as United Way, Food Banks etc. If all ante up a small investment, they will reap a significant ROI in reducing redundant clients.\nOr - there is untapped corporate and foundation money that is available to assist nonprofits to work collaboratively and more efficiently with each other.\nOr - crowdfunding - lets see if this can work with a prototype.\nWhat's next for Holistic Approach to Legal Clients Needs \nExpansion using social worker interns from local Universities and volunteers to perform as intake specialists\n",
        "hackathon_id": "floridalegalaid",
        "winner": false
    },
    {
        "description": "\nInspiration\nThere is a large population of Florida's community that is low income and ineligible for legal aid services due to status, income, etc. These individuals are in need of legal help but we are unable to provide them with the necessary information. This product is a means of bridging the gap between providing legal services and funding restrictions.\nWhat it does\nThe app provides easy to understand videos of the legal issues they are having. It does not require any reading from the user and is easily accessible via the website or the app. \nHow I built it\nBrainstorming. A collaboration of legal aid attorneys and staff from different parts of Florida.\nChallenges I ran into\nAdvertisement. The one issue we have encountered is how to reach these targeted individuals.\nAccomplishments that I'm proud of\nWhat I learned\nWhat's next for Portable Justice\nCoding. App design. Introducing a prototype to a sample community.\n",
        "hackathon_id": "floridalegalaid",
        "winner": false
    },
    {
        "description": "\nInspiration\nTo change the appearance of the legal aid organizations by becoming highly respected leaders and partners within the communities we serve.\nWhat it does\nAs a result of shifting perspectives, legal aid will be viewed as an integral part of the community.  Through the new relationships we build, collaborations and partnerships that benefit clients, staff and the community.\nHow I built it\nWith the help of a design process that encourages nonjudgmental thought, ideas and solutions to address critically important issues facing our organizations and communities.\nChallenges I ran into\nFunding. Encouraging participants to \"let go,\" open their minds, and make time.\nAccomplishments that I'm proud of\nMaking our leaders, organizations, and communities a better place.\nWhat I learned\nThat it is essential to break out, break away, and break through to find new solutions and possibilities, change the appearance and profile of legal aid, and diversify our resource base.\nWhat's next for Breaking Free To Build...\nFind funding, partnerships, and participants to create the design of the experience.\n",
        "hackathon_id": "floridalegalaid",
        "winner": false
    },
    {
        "description": "\nInspiration: We were concerned about the large number of low income folks who are unable to gain access to legal services because they couldn't travel to the local office or they were not eligible for pro se family law assistance because they didn't have a safety issue.\nWhat it does: Our bus travels to various locations (neighborhoods in urban areas or towns in rural areas) to provide a variety of family law legal services.  The bus is staffed with a bi-lingual social worker who \"triages\" the clients, which includes intake, referral to community resources, and referral to the local legal aid office for non-family law legal matters.  The social worker will determine whether the client needs assistance with pro se forms or needs to meet with the attorney.  The second step of the process is for the client to meet with a paralegal in the \"Computer Lab\" if he/she needs assistance with preparing pro se forms. If the client does not need to complete forms, then he/she will be sent directly to the attorney.  In the Computer Lab, the bi-lingual paralegal will assist the client in filling out the applicable family law forms,  by accessing the FloridaLawHelp website or the Florida Supreme Court website.  If the client is non-English speaking, then the bus will have access to interpreter services.  Once the forms are completed and printed, the client will meet with the attorney, who will review the documents and answer any questions.  The attorney could be a staff attorney or a pro bono volunteer attorney, who is experienced with family law. Once the forms have been reviewed by the attorney, then the paralegal will notarize, scan and copy the forms so the client will have the original packet for filing and a copy for his or her records.  All clients will be advised regarding the timeline for the family law matter and encouraged to return to the bus or contact the paralegal in the future if additional assistance is needed.  For cases identified as meeting program priorities for full representation, the client will be referred to the legal aid office for extended service.\nDetails of the bus: The bus will be ADA compliant.  Inside, there will be a restroom, at least five laptops, a printer, scanner and copier, wi-fi enabled, and a private interview area for confidentiality.  Outside, the bus will have an awning that will shade the \"waiting area.\"  The waiting area will have a table with a display board and brochures along with chairs for waiting clients.\nChallenges we ran into: We originally planned on using the bus for domestic violence victims, however, our testers raised the concern of safety issues for these clients and that they would not come to a bus that was advertised as serving domestic violence victims.  The testers suggested that the name and logo of the legal aid organization be prominently displayed on the bus along with the website and phone number so the public would know the bus is a legitimate legal aid service.\n",
        "hackathon_id": "floridalegalaid",
        "winner": false
    },
    {
        "description": "\nInspiration\nPenny, underskilled support staff.\nHow I built it\nEstablishing a new position called Training Development Coordinator\nChallenges I ran into\nFunding, resistance to creating a new position\nAccomplishments that I'm proud of\nThe poster, the team will take ideas shared and implement them in their offices even if the entire idea does not get implemented.\nWhat I learned\nLack of training is a problem across all organizations/offices for all staff members, attorneys, paralegals, administrative support, etc.\nWhat's next for Training Development Coordinator\nTo meet with all the employees in an organization to assess their skill level and to develop a plan to assist them in becoming the best employee they can be.\nTDC: Investing in professional development will create the next generation of leaders across all positions in our organization so that everyone is practicing to the top of their ability and or license working smarter not harder.\n",
        "hackathon_id": "floridalegalaid",
        "winner": false
    },
    {
        "description": "\nInspiration\nNow days, people stare at their phones too much.  We wanted a way to decrease phone usage.\nWhat it does\nThe Smart Lite can read messages from various mediums.  It will then process the text with sentiment analysis to generate a positivity coefficient.  Then, it uses an algorithm to process the coefficient into a color of light.\nHow I built it\nWe used various languages, api's, and hardware to build the Smart Lite.\nTwitter -> Python -> Indico -> Serial -> Arduino -> Neopixel\nChallenges I ran into\nUse python to make arduino read serial data.  Use twitter api.\nAccomplishments that I'm proud of\nCross language integration.  \nWhat I learned\nWe learned every language, api, and hardware from scratch.\nWhat's next for Smart Lite\nTurning the Smart Lite into a real product that can be used by consumers.\n",
        "hackathon_id": "codestellation-fall2015",
        "winner": true
    },
    {
        "description": "\nRecall3d\nMemory can be a fickle thing, especially when we want to remember a great experience. At the same time, small things can often trigger huge flashbacks. That's where Recall3d comes in:\nRecall3d is a service to which a user can upload a set of images from an experience they want to remember. We generate a physical, spatial representation of this experience, along with an embedded QR code linking to a hosted version of their images. \nOur Site\nImplementation\nDuring this hackathon, we managed to generate all of our component pieces, and string some of the stack together, but did not have enough time to fully automate the process. At this point, we have workable demos, but it is not ready for full scale deployment. These demos include:\nStripping of GPS coordinates from EXIF data,\nSizing area around all uploaded pictures,\nExtracting STL Map from USGS API,\nGenerating 3D QR codes from arbitrary string input,\nConcatenating STL, QR code and Marker Pins,\n and Hosting our demo data on a website reachable by QR.\n",
        "hackathon_id": "codestellation-fall2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nOur main inspiration was science fiction movies. The technology in these movies had a lot of potential to be used in common place day-to-day situations.\nWhat it does\nOur product allows users to observe and manipulate 3D objects in space using only their hands. This creates a deeper level of interaction and understanding with the virtual environment.\nHow I built it\nWe used an Oculus Rift, Leap Motion, and the Unreal Engine 4 to create an interactive 3D space.\nChallenges I ran into\nThe upfront hardware requirements for Oculus and the lack of fidelity with wearable technology. (Myo and Leap.)\nAccomplishments that I'm proud of\nWe are proud that we were able to get Oculus and Leap to work together in the Unreal engine. \nWhat I learned\nWe learned how to create an environment in this engine.\nWhat's next for ThoughtSpace\nHigher fidelity controls and the ability to add different add-ons to interact with different 3D objects.\nTry it out\n",
        "hackathon_id": "codestellation-fall2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nGitHub. Except Not.\nWhat it does\nHow I built it\nChallenges I ran into\nAccomplishments that I'm proud of\nWhat I learned\nWhat's next for GoatHub\nScaling to the world.\n",
        "hackathon_id": "codestellation-fall2015",
        "winner": true
    },
    {
        "description": "\nSir Gregory Williams, Baron of Love, Archduke of the Cosmos, has selected a unique few to take on life-threatening missions in a valiant effort to better their communities. Unfortunately, when he and his friends joined together, they were stumped. They didn't know where to start. So Sir Gregory Williams and his friends created Zenith, an easy access app that'll quickly enable those like-minded to start on their journeys. Join Sir Williams in his quest for a better tomorrow.\n",
        "hackathon_id": "codestellation-fall2015",
        "winner": true
    },
    {
        "description": "\nWhy the Muse?\nWe saw the Muse in the available hardware section, and thought that its advertised application - meditation - couldn't be the only thing that it could do. When we started to look at the raw data that we were getting from it, we realized that we could use it to identify when a person had moved their eyes! One of the many possible applications we saw was rudimentary eye-tracking: which could be used for the control of a computer by a quadriplegic, or otherwise motor-impaired individual.\nWhere did we go from there?\nWe decided to build a basic game that could be controlled by moving your eyes, as a possible hands-free entertainment option, as well as proof of concept. The Muse SDK didn't contain anything that would track eye movement (it mostly allowed access to the data from the Muse), so we knew that we would need to build eye-tracking code ourselves, using the raw data from the Muse. We also settled on creating a simple game that would generate a maze, and just allow the inputs left, right, up, and down, to move a ball through the maze one square at a time.\nHow did we build it?\nWe used python, and the Muse SDK to gather data and interpret signals - either the four basic signals listed above, or a blink (which we used to close our testing window.) The maze is generated by Wilson's algorithm, and rendered by PyGame. \nBiggest Challenges\nThe Muse is, in many ways, a finicky piece of hardware. The nature of the data we were reading meant that we needed all of the sensors on the Muse to consistently make contact. Furthermore, the Muse had to be calibrated for each individual - and sometimes, we found differences each time the same person put it on. Most of our testing was done by the same person, whose most reliable calibration values we discovered early on in our testing. After creating a module that allowed us to get basic inputs from the muse, and integrating it with the maze, we created a calibration module that allowed a second member of our team to put on the headset, calibrate, and solve a maze in under 5 minutes.\nWhat do we think about what we've made?\nIt worked! It worked! It worked!\nWe like it. Our calibration worked, ability to input commands was fairly reliable, and we even had a game to play with what we developed. In the image gallery, you can see the stages of solving a maze, as well as a window that shows the controls that were input (the green square moves around in the box). We're excited, and proud of it.\nWhat we learned\nWorking with hardware is hard. Very hard. Every piece of code has to be bigger, and more unwieldy, to account for the possibility of input errors, which can throw off control of our maze, or any other application that we might attach to the headset.\nWhat's next?\nOverall, to continue this, we would love to improve the reliability of calibration and control. We would also like to be able to detect absolute position, which should be possible on a large enough surface. That would be a wonderful thing to add to our module. We would also like to integrate it with other games, or even more useful programs (speech synthesizer, other entertainment, finer computer control). \n",
        "hackathon_id": "codestellation-fall2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nnode.jshtml5\n",
        "hackathon_id": "codestellation-fall2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe thought combining multiple next-generation input and output devices for a useful purpose and making 3D printing more accessible to everyone in the world would be really cool.\nWhat it does\nIt allows you to hand-sculpt a 3D model in free space using a Leap Motion and an Oculus, process it automatically, and send it to printing directly.\nHow we built it\nAfter considering different programming languages and methods, we decided that our system should work in a browser to be truly accessible.\nChallenges we ran into\nJavascript is SLOW. We had processing power issues because of this -- unless we use Three.js in creative ways, it becomes quickly impossible to display a large-scale modifiable set of voxels.\nA lot of the 3D printers would not work with the software that we used early on during the project, which made us go through several iterations of our plans. Still, we have learned a lot from those software issues.\nAccomplishments that we are proud of\nWe are proud of learning the APIs of and interfacing three hardware systems of the future in 24 hours.\nWhat we learned\nWe learned about the basics of developing with high-tech devices, and learned about all the awesome stuff they can (and will) enable in the future, as well as their limitations (i.e. they are not magical devices that solve every problem). Yet, we hold the firm belief that the future will be really cool.\nWhat's next for Oculangelo\nWe would like the sculpting function to be much more detailed, versatile, and user friendly. It will have settings that will allow the user to manipulate the material in many different ways. We would also like for the user to be able to see their hands while sculpting. We could also integrate a myo bracelet that vibrates when the user is touching the material, to simulate the feeling of pressure from touching an object. There are a huge amount of possibilities for this project!\n",
        "hackathon_id": "codestellation-fall2015",
        "winner": false
    },
    {
        "description": "\nAs lovers of road trips, its hard to calculate when you will run out of gas and where the nearest gas station is without going too far off your route.\nHelps you find the nearest gas station along your route before your tank is empty.\nWe used Meteor.js, HTML, JavaScript, CSS, Bootstrap and Google Maps API to form our program.\nWe had a lot of challenges with learning new software in a short period of time. Also, incorporating the Google Maps API. We had challenges with GitHub and finding a power-strip.\nWe are proud of the work we put into so we could create our idea. Our code might not be completely functional but we did our best in the amount of time we were given. Most importantly, we are proud of ourselves.\nWe all learned the importance of teamwork. We improved and expanded upon our coding and web development skills. We learned how to run on exhaustion.\nWe hope to have the code working, and make it into an iOS and Android app for all to use.\n",
        "hackathon_id": "codestellation-fall2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe classic snake game, but improved and embellished\nWhat it does\nThe classic snake game (but with multiplayer on one keyboard, changing background color, wacky sound effects, cool start/end screens, and awful puns)\nHow we built it\nWith HTML Canvas, some CSS, Javascript\nChallenges we ran into\nGetting the snake to detect collision with the wall, other snakes, and its own body (excluding its head)\nAccomplishments that we're proud of\nWe're proud that we got the game to work with all of the improvements we desired\nWhat we learned\nEverything\nWhat's next for Snakes on Steroids\nIt'll gain millions of followers within the next month. Watch for it in the news!\nPunny domain name\nsnaking-on-steer-oids.com (will be live in 24 hours)\n",
        "hackathon_id": "codestellation-fall2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nruby-on-railschartkicktransloczurb-foundationcloud9\n",
        "hackathon_id": "codestellation-fall2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroidrajawali\n",
        "hackathon_id": "codestellation-fall2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroideclipse\n",
        "hackathon_id": "codestellation-fall2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nPok\u00e9mon nostalgia, the origin of all things good.\nWhat it does\nbioDEX enables users to take photos of wild life and stores them in a worldwide database to allow the cataloguing of fauna to be shared with other nearby users.\nHow we built it\nThe front-end was developed in Java using the IntelliJ IDE; the back-end was developed in Python using the Canopy and gedit IDEs, also using GitHub as source control.\nChallenges we ran into\nThe most major challenge we ran into was uploading image files using multipart form data in Java to the server.\nAccomplishments that we're proud of\nWe are proud of creating a fully-functional back-end, and most critically, introducing the world to real life Pok\u00e9mon art.\nWhat we learned\nWe expanded upon our current knowledge base regarding Android development, and worked more with Python, Tornado, and Regex.\nWhat's next for bioDEX\nFirst and foremost, we would genetically engineer the world's fauna and flora to match the world of Ash Ketchum. But, in the meanwhile, we would like to start work on visual recognition of animals (or at least a user-moderation system to ensure accuracy), a badging system for rewarding various types of achievements (ex: new entry, 20 upvotes, short distance from animal in picture), a voting system where users upvote/downvote photos, and a personal score for each user based on number of photos uploaded and their popularity.\n",
        "hackathon_id": "codestellation-fall2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe all wanted to experiment with the oculus rift\nWhat it does\nA flight simulator with myo hand gesture controlled velocity\nHow I built it\nUnity and Visual Studio\nChallenges I ran into\nWe began with creating a working unity environment that was compatible with the oculus rift, and then needed to figure out how to integrate the myo api and scripts into our project. There were some issues with the myo syncing and alignment.\nAccomplishments that I'm proud of\nWe successfully integrated the myo into our oculus rift unity project\nWhat I learned\nAll of us were either new to unity or beginners, so we all learned more about how the unity engine works. Some of us also learned more git version control tricks.\nWhat's next for https://github.com/bdatdo0601/myoculus-rift\nBetter terrains, packaged assets so that we don't have a million files\n",
        "hackathon_id": "codestellation-fall2015",
        "winner": false
    },
    {
        "description": "\nAuthor: Richard Cui\nInspiration\nOriginally came up with this idea as a joke, but I figured why not; create a robot that attempts to write poetry, then laugh at what it prints out!\nWhat does he do\nPOEtry-slam-bot is an aspiring poet who is well-versed in the literature of Emily Dickinson, Robert Frost, and William Blake. He submitted a few of his works and its up to you to judge if his verse is good enough to be immortalized in Project Gutenberg.\nChallenges\nI can't make a GUI to save my life so a command-line interface will have to do. Otherwise parsing input text with RegEx was probably the most challenging part of the project since different texts had different formatting.\n",
        "hackathon_id": "codestellation-fall2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nAs this is our first hackathon, we wanted to combine all of our skills and create something great together. What inspired us for this project was our love for robotics and our determination to create a robot that can be navigated using a Myo. This robot will provide visions to places where access are restricted. \nWhat it does\nThe Myo Explorer will perform our declared commands through different motions using the Myo sensing technology. It can also have a livestreams of what it \"sees\" through its journey. The livestream is broadcasted on the Microsoft server aka Azure's platform through the Ardunio Yun's local network. Devices that connect to our Yun's local network will be able to see what the Myo Explorer is up to.\nHow we built it\nThe body of the robot itself was created using four DC motors, an arduino Yun board, a motor shield and a voltage regulator along with the body of the car. We built the app using multiple languages and technology. We built an Android app through Android Studio to receive the Myo's command and transfer it to the Yun. \nNext, we implemented a webcam through the Yun's USB port, and created a web page through simple HTML/CSS to stream the video footage recorded. \nChallenges we ran into\n-First hackathon - so we didn't know what to expect. We have a lot that we wanted to implement but did not have all the time to do it.\n-There was an initial delay in the processing of the signal that was emitted from the armband, an issue that was combatted through a change of the android app's implementation from switch-case to if-else and creating a variable that tracked the position of which command was sent so there is only one command at a time. \n-Building the robot was a challenge since we aren't very familiar with connecting DV motors to sources. It was hard to get the motors spinning in one direction.\n-In order to use one battery we needed to create a voltage regulator since the arduino board is powered by 5V and the motors use 9. We had to build this by hand through a schematic we found and then perfected since the extra resistance did not work in our case because of the material resistance. \n-Programming the MYO was a challenge since it is a completely new technology and we did not know anything about it from the start. It was not very precise and took a lot of trial and error to finally get it to respond to our commands.\nAccomplishments that we're proud of\n-Being able to finish a project as it is our first hackathon ever\n-Smooth operation of the Yun. \n-Successful build of the robot with all the components neatly tucked into the body of the robot to create a visually appealing robot. \n-Using the MYO as a controller is an incredible accomplishment for us since it is a unique way to control a robot.\nWhat we've learned\nWe learned a lot about robotics, about building a robot from scratch and working with electronics components. We learned how to program a unique remote to work with an android and how to stream live video through a webcam connected to a microprocessing board. We learned how to work as a team that has never met before. We learned more about android development and how to use http protocols to not just webpages. \nWhat's next for Myo Explorer\nThe Myo Explorer next step would be to connect tools like lifts and shovels to be able to lift objects with. Create a sturdier body to be able to go into rough terrain. creating more unique controls with the MYO tool to control speeds. The Myo Explorer could also use its webcam to not only stream but record videos in the future and use to teleconference to users.\n",
        "hackathon_id": "hackharvard2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nmicrosoft-bandazureandroid-studiomongodbflaskjavapython\n",
        "hackathon_id": "hackharvard2015",
        "winner": true
    },
    {
        "description": "\nA Google Cardboard AR tool for designers to see how their work affects people with vision impairments.\nInspiration\nMany designers are not conscious of the fact that their work can exclude people with different abilities. This comes from the fact that they have never experienced those abilities before.\nAccording to Microsoft\u2019s Inclusive Design Booklet, \u201cIf we use ourselves at a starting point, we can end up with products designed for people who are young, English-speaking, tech-literate, able-bodied, and right-handed. Plus, those with money, time, and a social network. If we\u2019re designing for ourselves as a baseline, we can overlook people with circumstances different from ours.\u201d\nSo how can we change this? First, we looked at how other design fields (such as industrial design and architecture) try to conquer human diversity. A few great examples of this are the OXO Potato Peeler that was initially created for people with arthritis and the first electric toothbrush, the Broxodent that was initially created for people with mobility impairments.\nOur conclusions from these inspirations were the same as Michael Wolff (founder of Wolff Olins): \u201cWhen you include the extremes of everybody, that\u2019s to say differently abled people of all sorts, then you produce things that work better for us all.\u201d If designers create work for those with different vision abilities, their designs will be more legible for everyone.\nWhat it does\nBy simulating different types of vision, the app increases designers' awareness of abilities different than their own. The designer using the app experiences it through a Google Cardboard. When the app launches, the designer selects the visual ability they would like to experience and learns key information about that ability. They can choose viewing the world from the perspective of someone with color blindness, peripheral vision loss, or contrast sensitivity. If designers start to view their work through this lens, they can adjust accordingly to be more inclusive.\nHow we built it\nCamera\nUsed built-in camera of Android phone to extract video data.\nFilters/Image Processing\nUsed OpenCv and Python Image Library to create original filters from color-blindness calculations. Transformed those calculations into Java.\nCombining the camera and filters\nConverted the data from the camera to images, applied filters, then pushed new data to the user\u2019s screen in real time.\nCardboard UI\nUsed Unity and OpenGL to create the 3d interface through the Google Cardboard. Used phone\u2019s accelerometer to make the user feel like they are in this augmented reality. \nDesign\nUsed Sketch to mock-up final UI, that will be implemented at a later time.\nChallenges we ran into\n\nGoogle Cardboard has little documentation\nLive streaming and live processing data in real time causes lagging\nLive image processing in Android is not generally supported\nCalculating the color-blindness values\nAnd lastly, of course, time\n\nAccomplishments that we're proud of\n\nFocused on end users needs without getting too caught up in the excitement of technology\nLearned new techniques\n\nWhat we learned\n\nCross disciplinary teams are key to success\nAndroid Image Processing\nDeveloping for the Google Cardboard\n\nWhat's next for Insight\nAfter the hackathon:\n\nFinish UI\nAdd pages with information about the different abilities\nIntroduce the app to designers and get feedback\n\n",
        "hackathon_id": "hackharvard2015",
        "winner": true
    },
    {
        "description": "\nste\u00b7ga\u00b7no\u00b7graph\u00b7y\n/\u02ccste\u0261\u0259\u02c8n\u00e4\u0261r\u0259fi/ |\nnoun |\nthe practice of concealing messages or information within other nonsecret text or data.\nTo the normal onlooker, stegosaurus is a Chrome-extension chat client, allowing you to connect with friends from social media sites on one convenient interface. \nBut under the hood, stegosaurus is a powerhouse for communication. Using discrete cosine transformation, better known as DCT, we gather and process JPEG images, altering their least important bits to make simple image files into carriers of vital messages.\nHundred of millions around the world will be limited in their freedom of speech this year. \nstegosaurus gives those people and opportunity to communicate with others in a safe and protected way. Unlike simply encrypting messages, steganography offers plausible deniability. Users are protected from attempts to decode their messages as it will not be evident that they are sending encoded messages in the first place.\nstegosaurus can be used by a multitude of people. Those trapped in domestic violence or those silenced by an oppressive government will now be able to find communication that is accessible, safe, and essential.\nBuild\n-- Zip up the src directory and rename the extension to .crx and install in Chrome!\nBelow instructions are for the Hackathon demo version\n\nUpload the PHP files to a PHP server\nUse the .sql file to create the schema\nAdd credentials to the PHP files\n\n",
        "hackathon_id": "hackharvard2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nCourt opinions and journal articles form the foundation for all new legal thinking in the United States, and URL references have become a critical part of those documents in recent years. About 50% of links in Supreme Court cases, and about 70% in some law journals, are dead. Perma.cc, a tool invented in the Harvard Library Innovation lab, was developed to mitigate this problem for the future. Since its creation, Perma.cc has become the legal industry's standard for URL archiving, but there is one glaring issue: it can't do anything about the thousands of links rotting in existing databases.\nWhat it does\nWe built a web application which takes .JSON and .PDF input, scans files for URLs, creates permalinks for them, and inserts those permalinks into the documents. Then the user can download the permalinked files!\nHow we built it\nThis system was built on top of a Node.JS/Express front end. We utilized C on the back end to do our API calls to the Perma.cc API.\nChallenges we ran into\nOne big challenge that we had was handling the messy input data we scraped from CourtListener, a court opinion database with over 5 million different files. The URLs were often malformed due to low quality PDF OCR. Additionally, we saw problems with our web front end when attempting to post files to users for download. The segmentation between server and client-side code in Node led to this confusion, which we eventually sorted out by creating a static directory with all converted files.\nWhat's next for PermaCC++\nWe are in touch with some of Harvard's law journals about adding unrotted documents to their databases and will be discussing with Perma.cc about merging the two tools. The potential for our backend tool is almost limitless with respect to link archiving. If it is set up with a proper web scraping tool, we could begin permalinking virtually any JSON/PDF-based database to halt link rot.\n",
        "hackathon_id": "hackharvard2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nc#asp.netkinectandroid-studiomicrosoft-bandandroidazure\n",
        "hackathon_id": "hackharvard2015",
        "winner": true
    },
    {
        "description": "\nBuilt using python2.7 with pygame and pywin32, currently windows only. The Leap input client was written in C++ and connects locally to the Python UI via winsocks.\nAccesses application icons of installed Windows applications and displays them.\nUses gestures received from the leap motion to move across nodes, certain patterns open certain applications.\nNodal patterns can be user-defined within the config file. The base input client is highly extensible, and can be run from a different computer. Myo and Kinect support were originally planned, and can be easily added to the framework.\nNode patterns are consistent -- they do not change through use. Hence, users become accustomed to patterns, and do not need to spend time looking through icons. The hand motion required to select nodes is natural and easy to use.\n",
        "hackathon_id": "hackharvard2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe believe that Seisir is a revolutionary and life-saving technology. Since traditional seizure and epilepsy monitoring technologies are limited to capturing data over relatively brief periods of time, which can generally be measured most commonly in minutes, occasionally in days and rarely in weeks. With Seisir data can consistently be captured for days, weeks, months or even years without interruption. Not only does this expanded timeframe give Seisir the opportunity to become extremely valuable from a clinical and diagnostic standpoint. Seisir can monitor individuals routinely during periods of change during sleep wake cycles, a time at which seizures are more likely to occur. It is our hope that Seisir can provide a new benchmark in the tools to combat SUDEP, seizures and epilepsy. \nWhat it does\nSeisir pulls data from a Microsoft Band, through the app, and then uploads the information to a secure server. Once an individual's data is on the server, Seisir takes advantage of Microsoft Azure to analyze data in real-time using an advanced machine learning algorithm. The program then contacts one's family members and medical staff by way of text messaging in cases where the machine learning program detects a high likelihood of seizure activity. In plain terms, Seisir has a strong potential to save lives by notifying others in emergency cases. \nHow we built it\nOur program in it's entirety utilizes a combination of technologies starting with the Microsoft Band. A bluetooth connection to our android application is established with the band to obtain a variety of sensor data. This information is then passed through the android application to Microsoft Azure on the cloud. Using Microsoft Azure's machine learning platform, our program identifies seizure activity from the sensory data originally derived from the Microsoft Band. The cloud system responds to the android app in moments when seizure activity is found. Upon receiving a seizure alert from Microsoft Azure, the android app notifies emergency contacts via a traditional text message. \nChallenges we ran into\nSince the Seizure platform requires integrating a combination of multiple different technologies, devices and programming languages. This cross compatibility created the majority of our implementation challenges. \nAccomplishments that we're proud of\nWe successfully developed a machine learning algorithm using Microsoft Azure that can detect seizure simulations with 100% specificity and 100% sensitivity. We understand that our hack uses a limited dataset, but we are excited by the initially promising results. \nWhat we learned\nOur team learned a great deal about Microsoft products. We believe that Seisir demonstrates that Microsoft Band and Microsoft Azure have significant clinical applications. \nWhat's next for Seisir - Epilepsy Monitoring App\nIt is our hope that the Microsoft technologies behind Seisir have the opportunity to be used in a research setting that is clinically relevant to seizures and other epileptiform activity. Since one of our team members interns within the neurology department at Boston Children's Hospital and works with epilepsy patients on a daily basis, it is our hope that the Seisir / Microsoft combination platform have the opportunity to be tested within a clinical setting. \n",
        "hackathon_id": "hackharvard2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\npythonhtmlcssjavascriptshelldjango\n",
        "hackathon_id": "hackharvard2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nBurns are bad. Lots of people suffer terribly from them, and we, as a medical community - don't know that much about them. Our project seeks to address two major issues in the field of burn injuries:\n1) Diagnosis through Quantitative Metrics\nStatus quo diagnosis of burn wounds is left to the eye of the burn surgeon/dermatologist, as per the following 4 characteristics; Depth, Cause, Appearance, and Level of Pain. (Diagnostic Parameters) Of these metrics, the distinction of depth is often unclear externally, the latter two are arguably immeasurable objectively, and the last often has no standard of comparison (which complicates the entire diagnostic system). This uncertainty manifests itself in the relatively high variance of burn diagnoses for identical images in double blind studies, even amongst leading dermatologists in the field.\nBy measuring burn depth by proxy with a newly substantiated biometric (heat, as a function of collagen denaturation), one can objectively determine the damage and full topography of the wound. 2D thermal images can be processed, and using the linear nature of heat conduction, can use 3D temperature levels to indirectly derive wound topography. \nMuch like an iceberg, a burn only demonstrates a small amount of the wound externally, where there is extensive tissue death beneath the surface both immediately, and uniquely - experiences continued apoptosis after removal of heat stimulus. \n2) Noninvasive Injury Progression Tracking\nCurrent widespread method of depth and wound analysis is done through invasive biopsies. Not only do these inherently disrupt the wound healing process, but they only give one unique data point per biopsy. Due to the organic/nebulous shapes of burn wounds, however, these 'guessing points' from biopsies do not nearly paint an accurate picture of the state of the entire burn. In fact, depending on where they are taken, they can improperly generalize the state of the entire wound and lead to incorrect, or at best, quasi-arbitrary dosage information. \nWhat it does\nTakes a 2D IR image as an input, creates a dynamic 3D model, computes pertinent wound properties, diagnoses burn degree, calculates post-trauma fluid requirement.\nHow I built it\nPython serves as a middleman by taking a 2D orthogonal thermal image from our iOS/Android frontend input to our Mathematica script on the backend, called via the Wolfram Cloud Platform RESTful API. Image is decomposed pixel by pixel, assigning a given Z (depth) value to each coordinate in the XY plane based on the RGB color value from the original image. Points are then restructured and plotted using Wolfram 3DMap and Plot functions, smoothed to a surface of Isotherms, exported, and handed off to our front end again using Python for dynamic 3D Visualization. Further analytics are processed using Wolfram to attain values for burn degree, various other burn characteristics (surface area, volume), and estimated recovery time (note: varies significantly per person, so it's fairly inaccurate, but we wanted to implement the capability as the body of research attains a more accurate rate function).\nMinimum fluid requirement in 24 hours post-trauma (as per the Parkland Equation), is calculated, an essential treatment parameter for burn victims. \"Burned Body Area %\" is a fairly difficult value to attain for most people, so we offer a much more intuitive system that includes either estimating the wound size relative to the effected limb(s) (see: [Wallace Rule of Nines])(http://www.remm.nlm.gov/burns.htm), or even easier, a 'Draw' option onto a vectorized body, which then automatically computes the % wound coverage by comparing altered pixels to original pixels.\nChallenges I ran into\nWe don't have any thermal camera hardware here, but there are multitude that exist in industry (Nick worked with a couple in the past when he conducted Dermatology research at Stony Brook Medical Center). If possible, we would want to work with the new FLIR One. They are small enough to easily be transported for medics or emergency personnel, and can seamlessly be integrated with either iPhone or Android phones into any medical professional's repertoire - whether it be a large hospital or a small private practice. \nAccomplishments that I'm proud of\nWe were pretty stumped and demoralized, not coming up with a project idea until Saturday morning.\nNone of us have any mobile dev experience, and we were still able to push functioning (and arguably, good looking) iOS AND Android apps. We literally coded our first lines in Android Development Studio and Swift 24 hours before this was submitted. \nWhat I learned\nWhat's next for 3Degrees\n\nImproving relative size accuracy by implementing more precise depth calibration. \nIntegrating some sort of infrared camera to directly streamline the entire diagnostic process from image capture to analytics and injury progression tracking.\nMake things prettier. As this was our first time making mobile apps and using the Wolfram Alpha/Mathematica cloud platform, we were heavily prioritizing getting all core functionality working before all else.\nIntegrating Wolfram Anatomy Libraries\nBuilding out a proprietary dataset from user uploaded images (heat/depth over time) to begin training a Machine Learning model for burn injury progression.\n\n",
        "hackathon_id": "hackharvard2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nAfter one too many close encounters of the awkward kind, we decided that enough was enough. Gone would be the days of \"Hey... uh, you!\" and asking acquaintances to introduce themselves to each other. Technology was destined to bring about a golden age of not forgetting people's names, and we would be its heralds.\nWhat it does\nTake a picture, get a name. It's that easy.\nHow I built it\nWe used mathematica's classifiers (with several modifications) to recognize faces, and deployed this to wolframcloud.\nChallenges I ran into\nAndroid doesn't like to send files to wolframcloud. Also, mathematica classifiers are difficult to modify.\nAccomplishments that I'm proud of\nWe can match photos of people to their facebook profile pictures.\nWhat's next\nImproving the classifiers and getting greater quantity and quality of training data.\n",
        "hackathon_id": "hackharvard2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe wanted to make picture taking/sharing more fun!\nWhat it does\nYou take a selfie and we figure out what emotion you're feeling and add extra touches to the image.\nHow I built it\nWe did Android development and node.js. We used the Microsoft Project Oxford API for the emotion and face detection and deployed to AWS\nChallenges I ran into\nSending the image to the server takes quite a lot of time so we had to compress the bitmap.\nAccomplishments that I'm proud of\nWe've posted a lot of photos to Twitter and Facebook Messenger! People enjoyed this application and we would love to further improve it.\nWhat I learned\nTwitter Fabric and Facebook Messenger sharing implementation in Android, implementing a preview screen for the front camera, and communication of the phone, server, and Microsoft Oxford Project APIs through RESTful APIs.\nWhat's next for EmotiPic\niOS and streaming emotion animations.\n",
        "hackathon_id": "hackharvard2015",
        "winner": true
    },
    {
        "description": "\nHackHarvard2015\nhAIkuu is a completely autonomous AI poet.\nYou've just snapped the most artistic, stunning photo yet. \nAfter applying Valencia on Instagram, you realize you have one problem: You don't have an artistic caption to go with it. Hipsters fear no more!!! hAIkuu sees and interprets your image, and uses in-house AI natural language processing algorithms to craft deep haikus that your artsy friends can't possibly criticize.\nThe Problem\nWhether you can't seem to find the right words to describe a scene, or you just want to finish your morbidly long haiku homework, hAIkuu can generate a completely unique haiku for you. Never feel sad or bored again! With hAIkuu's  ability to make the cutest haikus ever, you'll feel better about yourself the next time you stay up 'til 4am doing all those computer science problem sets. Not a fan of cute? We got you, it also makes depressing stories that you can send to your enemies.\nTechnical Difficulty\nOur system uses the Clarifai API to classify the images you send, and then uses our in-house NLP haiku generator. We used two layers of algorithms to generate haikus that make sense. Firstly, n-gram generation using the Word Association Network. Most NLP systems use WordNet or similar synonym based graphs, but we realized that literature and poetry require creative links, which our WAN provided. The second layer analyzed our scraped database of 3000 haikus to understand how sentences in haikus are formed. This involved knowing which word was of which part of speech (noun, verb, etc.) and mapping our n-grams to the right format. We used Azure and a Python backend to put everything together. Don't forget our gorgeous UI!\n",
        "hackathon_id": "hackharvard2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nEver find yourself in an area where you don't have cell service or wifi, but need to connect to someone around you? \nWhat it does\nIt's a bluetooth chat network. \nHow I built it\nChallenges I ran into\nDeveloping in iOS! \nAccomplishments that I'm proud of\nWhat I learned\nWhat's next for OutOfTheWoods\n",
        "hackathon_id": "hackharvard2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\narduinoparticlenode.jsr\n",
        "hackathon_id": "hackharvard2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nswiftrubycocoapods\n",
        "hackathon_id": "hackharvard2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythflaskjavascriptjquery\n",
        "hackathon_id": "hackharvard2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nvhdlwolfram-technologies\n",
        "hackathon_id": "hackharvard2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nBrandon Wang wanted a better way to connect non-profits to volunteers.\nWhat it does\nThis service scans resumes and connects volunteers to non-profits.\nHow I built it\nWe built a small web app which could accept resumes in pdf form. We lift the text from these resumes and use NLP to match words from the resume to keywords given by the non-profit.\nChallenges I ran into\nGetting the node.js server to run was very difficult.\nAccomplishments that I'm proud of\nI'm really glad that we got the node.js server to work.\nWhat I learned\nThis was most of our team's first hackathon. We've learned a lot about web-programming and how web-apps are designed.\nWhat's next for Mission Code\nHopefully, we get user accounts set up for both non-profit organizations and volunteers.\n",
        "hackathon_id": "hackharvard2015",
        "winner": false
    },
    {
        "description": "\nScheduloo-Web\nLife is tough \u2014 we always have problems to schedule an efficient calendar that maximize our productivity and efficiency. That\u2019s where our idea of scheduloo came along.\nScheduloo is an online web application that can help students in University of Waterloo to get a satisfied class schedule without much effort.\nStudents can type in their intended course numbers and then with a simply click of \u201cnext\u201d, this system will display all available sessions for each course on a one page along with their time and ask students to rate them with sliders. After that, click on \u201cScheduloo\u201d, the system will automatically calculate 6 best combinations of the courses entered based on their time conflicts and students\u2019 intentions. (Hongbo got a \"optimal\" schedule to enjoy a long weekend every week! -- Shown in example picture)\nScheduloo is very easy to use and save students from lots of handwritten work for scheduling courses.\nThe data we use for Scheduloo comes from the University of Waterloo Open Data API ( check https://api.uwaterloo.ca/). The API provides large amount of information about the university\u2019s services, including courses, food, weather, news, etc. The information is organized in a tree structure and it is easy for programmers to access it. In addition, we use Microsoft Azure Cloud service to host our website.\nThe calculation algorithm is the core for this application. The algorithm is based on graph theory to optimize the efficiency, which is so fast that can give users the the best combinations out of millions of combinations in very short time. This algorithm can also be applied to more generalized scheduling in the future, for example, to schedule other university courses, company conferences, daily work, etc..\n",
        "hackathon_id": "hackharvard2015",
        "winner": false
    },
    {
        "description": "\nInspiration:\nsometimes one cannot place a call for help in times of danger, so we wanted to build an app that send a silent call for help\nWhat it does:\nsends an automated call to local authorities with your coordinates, name, and description and tells them that you are in need of help via a push of a button\nHow I built it:\nAndroid studio \nChallenges I ran into:\nLearning java\n Setting up \nAccomplishments that I'm proud of:\nLearning Java\nBetter understanding XML \nWhat I learned:\nJava\n XML\n Android design \nWhat's next for Soteria?:\nThe next move for Soteria is to add more features, based on the information entered to the app.\nWe will also improve the functionality of the app. We want to make sure that this app can be a real Silent Hero.\n",
        "hackathon_id": "hackharvard2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nStudy groups are often easy to find, but they might not match up with the way that you personally study. This application hopes to match students with study groups that will actually work effectively for them.\nWhat it does\nThis application allows users to find study groups in their area that match their studying style and the topics that they commonly study.\nHow I built it\nWe used HTML, CSS, and Javascript, along with the Parse API.\nChallenges I ran into\nWhen creating an algorithm to find the groups that would best suit a given user, we had some trouble properly extracting the time between the user and the group. However, we eventually replaced this functionality by providing a map view that would allow users to see where a group was located relative to themselves.\nAccomplishments that I'm proud of\nDeveloping the ranking algorithms and integrating it smoothly with the front end of the project, using the Google Maps API to display a map of group/user locations on the website.\nWhat I learned\nI learned how to use Javascript effectively in the context of a meaningful web application.\nWhat's next for Osmos\nWe will try to improve our ranking algorithm for calculating the best groups in a given area. We also want to improve the overall design quality of our website. We will also be moving the website to our own domain name once it's updated.\n",
        "hackathon_id": "hackharvard2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nReverse iSpy - who would not want to play?\nBesides, the phone knows way more words than you do, and this will be an opportunity to expand your vocabulary.\nPlus, it is just another reason to connect and use your phone more ;) \nWhat it does\nThe phone provides you with three \"tags\" or descriptors for an image. You then upload an image from your phone gallery you believe fits these descriptors. Once uploaded, the Clarafai API generates tags corresponding to your image, which are then compared to tags you were given. A score is calculated accordingly, based on number of matches.  Wolfram developer environment is used to generate the random words for tags (adjectives and nouns used only). \nHow I built it\nChallenges I ran into\nMany. The life of a beginner! Using swift was a pain, for syntax and even in terms of ensuring a \"clean layout\". \nAdditional challenges is the complexity of words generated from wolfram, which realistically makes this game fairly hard. We could not add a feature that took control of camera directly (and had to resort to upload an image option instead). We were unable to test the app on our phone using our camera and photo gallery, hence, we do not know how easy/hard the game is, as only the images available with Clarafai's api's where used (very limited). Additionally, tag loading is SUPER slow.. and we could not figure out a way to speed it up.\nP.S My computer took 5 hours to upgrade.. the waiting game was tough too. \nAccomplishments that I'm proud of\nOur first iOS app! Lots of head-banging, but we are still sane. Learned a completely new environment, and though not an expert yet, but more experienced then when we came in. Learning wolfram api and connecting it and clarafai API to our app made us proud (also first time working with APIs!). \nWhat I learned\nLots. Including sleeping in uncomfortable positions.\nBut on a more serious note, learned what is involved in building an app and how to incorporate APIs to make more functional and useful apps.\nWhat's next for uSpy\nWell, it'll be great to improve its functionality and make it work faster, look prettier and more visually appealing, and add a snap-chat like camera interface (instead of upload an image icon). \n",
        "hackathon_id": "hackharvard2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nRural and regional communities are under-served when it comes to Internet accessibility. As technology is increasingly utilised in regional and rural Australia for communication, business and emergency communications, a low-cost community-access approach to distributed IP networks seemed like a pretty fun thing to play around with.\nWhat it does\nReturns power to the people, man.\nHow I built it\nThe network is built up of mesh nodes, each able to communicate with each other via a meshing protocol. The meshing protocol establishes communication through participating nodes on the network, allowing any two nodes on the network to communicate with each other via other mesh nodes, so long as there is a path of intermediary nodes within wireless range of each other.\nChallenges I ran into\nI need bigger aerials, basically. Demonstration of the utility of the mesh network was limited by the only source of Internet connectivity being half a kilometer away. Bigger aerials would have meant the number of mesh nodes participating in the network would have been able to cover this distance.\nAccomplishments that I'm proud of\nI built a mesh network, and it did indeed mesh to form a computer network. The video call we ran over the mesh was pretty cool, too.\nThe portable mesh-node that I was driving around Bega with worked really well, too. It was running off of a golf-cart battery.\nWhat I learned\nYou can never have a large enough cache of RF equipment at home.\nWhat's next for 802.11 Wireless Mesh Network\nLarger-scale longer distance testing. It's only 10kms to Brogo...\n",
        "hackathon_id": "intoithackathon2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nPeople are always looking for local events, organised by venues or the community.\nWhat it does\nWotZon gathers the local events and makes them available as a mobile web app.\nIt allows users to add their own events easily and the event listings are available for 3rd parties like the local tourism websites to share.\nHow I built it\nBuilt as a single page mobile-friendly web app with a server database to store events.\nChallenges I ran into\nThe big challenge we have is now we've built it, getting people to start using it and adding events!\nSo the other side is Gary doing the 'growth hacking', that is generating ideas how to connect with the various communities to adopt WotZon as a way of sharing their local events.\nAccomplishments that I'm proud of\nWorking in the team to figure out what to concentrate on for the initial version.\nAnd the using rapid development tools to make it happen.\nWhat I learned\nThere's various places that list some events but there is a real need for easy access to all sorts of local events.\nWhat's next for WotZon\nFinish off our 1.0 version and then go back to talking to the local communities to show them and discuss opportunities.\n",
        "hackathon_id": "intoithackathon2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascriptcss-html\n",
        "hackathon_id": "intoithackathon2015",
        "winner": true
    },
    {
        "description": "\nInspiration: The Zork adventure games were a great inspiration. Saw it for the first time and said; \"Yes! We can do that.\"\nWhat does it do: The program runs a game called \"Neverend-Journey of the Mage. A text-based adventure game that puts the player into a world of magic and puzzles, where they input commands to make their next move. The plot follows our player and their companion, 'Ime', through different places to the castle of the Mage.\nBuilt with: We built it using jsfiddle, an online Javascript tool.\nChallenges we faced: Moving out of the original model and trying to making it more compact. Also, using Javascript as a language for the first time.\nAccomplishments we're proud of: Our awesome adventurey-text blocks imaginative ideas and so much more.\nWhat we learned: So much is possible with very little knowledge.\nWhat's next for Neverend-Journey of the Mage: We have no idea what will happen next with our little game, but we are definitely looking forward to adding to it and making it bigger and better!\n",
        "hackathon_id": "intoithackathon2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nlove\n",
        "hackathon_id": "intoithackathon2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nobjective-c\n",
        "hackathon_id": "intoithackathon2015",
        "winner": false
    },
    {
        "description": "\nInspiration pac man\nWhat it does he\nHow I built it coding in scratch\nChallenges I ran into moving the ghost\nAccomplishments that I'm proud of finishing puck man\nWhat I learned how to code in scratch\nWhat's next for puck man hoping to make an mobile app for puck man\n",
        "hackathon_id": "intoithackathon2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nmatlab\n",
        "hackathon_id": "intoithackathon2015",
        "winner": false
    },
    {
        "description": "\nWhat it does\nIt is a split screen fighter game, where you need to battle other players to win. You can mix and make you spell via using two elements (wind, and fire).\nHow I built it\nI built it with Unreal engine's blueprint system.\nBasically while you are holding the cast button each time that you hit an element key it adds it to an array. Then when you fire the spell it converts it to ratios then generates the spell effects, and color from that.\nChallenges I ran into\nI keep on having the problem where when I set a variable in another object, my computer would make that a lower priority and then do it after is works of the variable, so it wouldn't work and I had to add 0.01 sec delays to stop that.\nWhat I learned\nComputer can always prioritise well.\nProcedural content is hard.\nx / 0 is very bad.\nHow to edit a particles color live.\n",
        "hackathon_id": "intoithackathon2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe've had the idea to play a scavenger hunt using all of the cool technology available to us, but we wanted to put a cool twist on it. The multitude of logos at Hackthons and on CS Majors laptops served as a perfect, well-suited medium to play a round of awesome AR semi-virtual hunting!\nWhat it does\nOur program leverages off of the Android version of Unity to create a multiplayer scavenger hunt to be played with the sponsor logos as the targets.\nHow we built it\nWe built it using Vuforia and Unity- the former to render the AR interface, the latter to handle just about all of our actual game code. We also used Azure for hosting the backend server information (which allowed for multiuser support without much additional code), and interfaced it all with JSON-based HTTP requests (and a bit of duct tape, too).\nChallenges we ran into\nVuforia posed a few challenges both in its being something none of us have had experience with, and in some limitations associated with the API itself (i.e., only one model of a single type could be rendered at a given time; the comparative weakness of the Android phones kept our sense of scale in check; etc). Virtual buttons were one major stumbling block, since we were having major problems until we understood fundamentally what was wrong with our code. These issues took the longest to fix, because we could only remedy them when we had a deep intuition as to the way the code actually worked, which by nature isn't something to learn in the span of a few minutes.\nAccomplishments that we're proud of\nThis was our first venture into AR, and it ended up being a really awesome looking, visually-packed program!\nWhat I learned\nThat OnTrackedLost and GPS coordinates can be a replacement for virtual buttons, providing huge potential applications in our future with working with AR.\nWhat's next for ScavAR\nExpanding into payment within the app itself, and adding more awesome features like direct player-to-player interactions.\n",
        "hackathon_id": "wildhacks2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nRemember the good old days when Kodak existed and Polaroids was the bomb? Now you can get a similar experience with this well designed application that will help you and your friend share photos and print them whenever you want.\nWhat it does\nUsing Walgreen's API and hosted on IBM Bluemix, we are able to create a simple to use application for you to post pictures based on each events and choose pictures that you can print out to keep for life!\nHow We built it\nAndroid, Node.js and a lot of redbull\nChallenges We ran into\nAfter spending plenty of time setting up servers and trying out machine learning APIs, we got back to the basics to design and nice looking app!\nAccomplishments that I'm proud of\nWehave never used Node before, so this is quite interesting. As well, the application was quite smooth and bug free ( a rare case for hackathons)\n",
        "hackathon_id": "wildhacks2015",
        "winner": true
    },
    {
        "description": "\nInspired by our lack of actual musical talent, Muse produces MIDI samples of procedurally generated music.\nTo listen to samples generated by Muse, please visit https://soundcloud.com/ryan-eberhardt-1/sets/procedural-music-generation-demo/s-0cKVO\n",
        "hackathon_id": "wildhacks2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nyoursTruly is inspired by the enormously stressful time period of college-application season. Most high school seniors have a hard time choosing a school because universities give out similar brochures and flyers in a rather depersonalized way. yoursTruly aims to give prospective college students a real experience of the school by connecting them to the atmosphere and environment of the university, facilitating communication between students of the present and future.\nWhat It Does\nyoursTruly is an iOS app that allows current college students to leave their voice messages at certain locations on campus, such as stories, memories, and opinions. Prospective students can then approach the locations and listen to the stories of the current students. Therefore, they can get a more personal and interactive perspective of what the university is like.\nHow We Built It\nThe iOS app is coded in Swift. We used the Google Maps API for location tracking, Estimote beacons for location-based audio storage and retrieval, and Parse for the database. We crowd-sourced location based audio files from real Northwestern students and stored them to different classes in our database, based on each location. \nChallenges We Ran Into\nThis is our first time working with beacon, so we spent quite some time setting them up. The Estimote documentation and online examples were geared toward Objective-C more so than Swift, so another initial challenge was figuring out if the smartphones were detected within the beacon detection range.  \nAccomplishments That We're Proud Of\nWe are proud of how quickly we were able to learn everything within 24 hours, building an app that is fully functional and visually pleasing. Our team has diverse skill sets and was therefore able to complement each other and taking different roles in the team. \nBeyond making the backend functional, we put a lot of thought into UI design. We chose orange as our theme color because it carries the meaning of \"Truth\". Also, we chose an arrow (symbolizing going forward from high school into college) made out of a pause button and play button, since we have an audio app. \nWhat We Learned\nFrom the product side, we learned about the process of product design. We created a project timeline to split the main tasks, including front-end, back-end, and user interface, to keep track of product progress. From the technical side, we explored how to use the Google Maps API and integrating our app with the Beacon technology. We also collected user feedback, and modified our app accordingly. \nWhat's Next for yoursTruly\nWe would explore more in depth on how beacon operates technically, and what else we do with beacons. For example, beacons are best used for indoor positioning, and how can we better utilize this feature to indoor college touring.\nWe will study more about motivation for current students to contribute to the database. \n",
        "hackathon_id": "wildhacks2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nI happen to live in the woods and my mother is always afraid of being alone in the house and falling, getting hurt, and not being able to contact anyone. I wanted to create an app that would alleviate some of that fear.\nWhat it does\nOnce one downloads the app, all they have to do is edit the emergency contact information. They can simply enter the name of someone in their address or make a new entry and add it to their contacts. After that, they are ready to go! If they fall, the app asks the user if he or she is ok. If the answer is yes, great! If the answer is no, the phone calls the user's emergency contact. If the user does not answer the prompt in fifteen seconds, the phone will make the phone call anyways (in case the person is unable to answer the prompt).\nHow I built it\nI developed for iOS using Xcode and Swift. I also imported a framework to more easily access a user's contacts.\nChallenges I ran into\nI took me a while to synchronize threads, because I'm using a timer to determine when the phone should make an emergency call if a user has not answered the prompt.\nAccomplishments that I'm proud of\nHonestly, I'm just proud that I could get it working.\nWhat I learned\nI learned how to use CoreMotion and CoreData for iOS, plus how to import a new framework and utilize it in my project.\nWhat's next for Drop\nI would like notifications to pop up when the user is not inside the app.\n",
        "hackathon_id": "wildhacks2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nTwitter's Trending Topics only go as far as showing what people are talking about. To find out what's happening, you have to read through all the tweets about that trend and try to figure out whether people are happy or sad about that topic. In addition to that, many of the top trends are about the same topic but are still separated because they are different keywords. I want to solve this problem. I want people to be able to just think about one topic and they will automatically be shown what that keyword and other related keywords are, and tell you what people are thinking about that right now.\nWhat it does\nLanguage Modeling is used to analyze what people are thinking about on certain topics. It analyzes what people are tweeting about on that topic and does a real-time predictive analysis.\nHow I built it\nThe model takes a keyword and then uses Haven on Demand's Find Related Concepts API to identify the entities used in the Twitter search. It then streams Tweets to find all the related concepts to the entity and does sentiment analysis using HavenOnDemand Sentiment Analysis API and finds the aggregate sentiment of the tweet on a scale to 0-1.  \nChallenges I ran into\nPipeline of the application took some time.\nAccomplishments that I'm proud of\nLearned how to use HavenOnDemand APIs.\nWhat I learned\nDeploying a web application using Node.js.\nWhat's next for Language Modeling\nStoring all the tweets in a database and doing predictive analysis on the average sentiment of the tweets on the topic using HavenOnDemand Predictive Analysis API.\n",
        "hackathon_id": "wildhacks2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe want to know how much money we're spending on different parts of our lives, i.e. food, clothes, etc\nWhat it does\niOS app that allows you to choose/take a picture of your receipts, then displays nice graphics of the ways in which you are spending money\nHow I built it\nUsing Swift, Java, HP Haven On Demand API, and JSON\nChallenges I ran into\nConnecting front-end with back-end\nAccomplishments that I'm proud of\nDeveloping a full project at our first/second hackathon\nWhat I learned\nSockets, TCP Connections, JSON, API calls, Swift, \nWhat's next for Spending Tracker\nMore data analytics! Averages of monthly and yearly spending and more data visualizations\n",
        "hackathon_id": "wildhacks2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nAs a designer, I always look for photos to boost my design. I keep searching on Google for some time, until I find that perfect photo. That awesome photo that will truly rock my work; in the next 5 seconds I am sitting there, seeing every amazing idea that could go together with that photo go in front of my eyes. All of this drama stops the moment I click on view image; because I realize that photo is for sale on ShutterStock for $29!\nWhat it does\nStock Drops gathers high quality stock photos from all around the web, AUTOMATICALLY!\nThere are many personal blogs/sites where professional photographers share their amazing stock photos for the public to use for free in any type of project. The problem is, not everybody knows every single website, nor one website has gathered all of these photos together.\nHow I built it\nI used PHP for the most part (135 Lines), with the help of IBM's Bluemix (Alchemy API). Also a fair amount of work is done by WordPress, so thanks to their dev team! Also using Paypal's BrainTree, we have active donations to photographers!\nFirst it scans a website's photo index, looking for images. After locating the number of instances of images on the page, a loop runs, downloading each image, grabbing author info, and resizing them to 4 different sizes. After that each image is uploaded to WordPress as an attachment to a post which is created around the image. Then Bluemix steps in, creating tags for that specific image, then the tags immediately get assigned to the post.\nChallenges I ran into\nCreating Stock Drops, I did have a bit of trouble getting every single part of the machine working together!\nEach website has a different kind of HTML structure, hence making it more difficult for the code to always grab the accurate information. There was a lot of testing and debugging in the code, a lot!\nAccomplishments that I'm proud of\nI always had the idea to automate a specific process that would take a long time doing manually, and with Stock Drops, I managed to make automation possible in an area where many are looking for it, posting!\nWhat I learned\nI learned a great deal about working with APIs, and ofcourse my WordPress development knowledge has gone much higher; but more important than that, I now know that nothing is impossible once you put your mind into it, even if you only have 36 hours!\nWhat's next for Stock Drops\nStock Drops is and will be available to public for free. If and when I win any prizes at this competition, the funds will be spent on further development of the service, and hopefully using on-page ads in the near future, Stock Drops will start to generate revenue.\n",
        "hackathon_id": "wildhacks2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nVisualizations have incredible potential for illuminating insights that we just wouldn't see if we didn't have the numbers.  Many organizations in both industry and academia utilize visualizations when making important decisions.  However, these visualizations are inherently inaccessible to blind and visually impaired community members, blocking them from participating in these conversations.\nWhat it does\nTactile translates the graphs displayed on a screen into tangible movements.\nAnne Sullivan, Helen Keller's teacher, realized that she could translate visible sign language symbols into patterns on the palm of Helen's hand.  Inspired by this method, Tactile traces the datasets typically represented in a line graph along the user's palm.\nHow we built it\nBoth the traditional visualizations and the tactile behavior are controlled by a Node.js server on an Intel Edison.  The traditional visualizations are represented in a dashboard describing the state of the housing market in Detroit, the type of dashboard that community decision-makers at the Land Policy Institute might use.  The tactile component is driven by two servos with flexible plastic rods attached to them, which rotate over a few seconds to represent the relationship between the lines over time.\nChallenges we ran into\nWe were brand new to Intel Edison development and fairly unused to hardware development in general.  We brought some simple starter kits for Arduino and Raspberry Pi with us, but we were expecting on the MLH Hardware Lab to have a lot more hardware and actuators available.  Therefore we needed to do a lot of brainstorming to find something that could meet the challenge of representing something visual to non-visual people.\nWhat I learned\nWorking with hardware is complicated, and in the future we should probably enlist an electrical engineer.\nWhat's next for Tactile\nThe original plan for Tactile was to create a literal heat map, where bulbs of different colors would heat up to different (safe-to-the-touch) temperatures to create a tactile map that could represent color gradients for people who can't see colors.  This would also be helpful for colorblind people.  When we have access to the proper heating elements, we will add this component to the system.\n",
        "hackathon_id": "wildhacks2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\ntwiliopostmatesbraintree-sdk\n",
        "hackathon_id": "wildhacks2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWith the holiday season right around the corner, we saw an increased need for printed holiday photos.  However, going to a local store and waiting for the photos to print is often inconvenient.  We streamlined the process of printing your holiday photos!  \nWhat it does\nUsing the Walgreens API, you can upload photos and send them to a local Walgreens.  Then a PostMates courier will pick up your photos and deliver them right to your door!  There's no longer a need to leave the comfort of your home to print your precious holiday photos to send to your loved ones!\nHow I built it\nWe built this web app using Javascript, HTML, CSS and the Walgreens and Postmates API.\nChallenges I ran into\nProficient knowledge in the field of web development. Difficulties with implementing the API's. Getting addicted to the Tanvas Kinetic Sand.\nAccomplishments that I'm proud of\nDeveloping a web app that can be used in the near future. Making everyone's lives easier during the hectic holiday season. \nWhat I learned\nLearning how to better use Node.js and JavaScript.  \nWhat's next for PhotoMates\nIncluding a payment system that allows the consumer to pay for the total in one platform.  Tracking the PostMates courier to ensure you are available when they deliver.  Linking this application with the Walgreens mobile app so consumers can request photos to be delivered via the existing app.  \n",
        "hackathon_id": "wildhacks2015",
        "winner": true
    },
    {
        "description": "\nBlue Sky is a holistic weather experience. It doesn't just allow you to see the weather, it practically lets you experience it. Blue Sky is meant to be at the junction of form and function.\nWe use the most up-to-date weather data available to keep you constantly informed. We have advanced radar data and satellite imagery. We give you the temperature and the wind; basically everything you need in a quick, glanceable forecast.\nWe focused heavily on the design and user experience of the app. We picture this app used to quickly check if you need an umbrella before going out, but we wanted it to fit in on the wall of a doctor's office as well. Our design is highly functional, but it is also a visual experience that doesn't grow tiring after spending all day with it.\nWe hope you enjoy using it as much as we enjoyed creating it for you.\n",
        "hackathon_id": "wildhacks2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe decided to go with a hardware hack this time because of our limited experience with hardware. We decided that a smart doorbell / front door security system would be both fun and a good challenge for us. \nWhat it does\nWe have designed a doorbell which, when pressed, will buzz and then send a text message straight to your phone telling you that someone is at your door. You can then choose to respond to this message (to let the person at the door know that you'll be out in five minutes) or you can ignore the message. This allows for all of the convenience and utility of a regular doorbell along with the modern capability of receiving text messages. This is helpful in situations where a traditional doorbell fails, such as: when you're not home, when you're in a part of your house where the doorbell can't be heard, etc. \nHow I built it\nOur initial design was a motion sensor which would alert the homeowner that someone is at the door. We were designing this with the Intel Edison. However, this design is still very buggy and as such we went with a different approach -- a button (\"doorbell\") which connects to an Arduino board. Upon being pressed, a POST request is sent to a server which then sends a text message to the homeowner through the Twilio API. The homeowner can then respond to this message through another POST request which then writes the message to an LCD screen which is on the door. The server and web application was designed with Python and Flask; the circuitry used was Arduino; the API used was Twilio. \nChallenges I ran into\nOne challenge was integrating IoT (internet-of-things) into the project. We were initially going to have a board that wirelessly sends a POST request based on a motion or light sensor. However, we ran into some difficulties with network security (the Particle Spark Core would not connect to the web in any way) and then with firmware issues (the Intel Edison would not upgrade to a firmware which would allow for standalone WiFi interaction). So, we designed the bulk of the project without IoT and are instead working on it as a feature for the project in the future. \nAnother challenge was sending messages from the server to the LCD screen. The interaction between the serial and the server was written in Python. \nAccomplishments that I'm proud of\nOur Twilio integration. Ultimately, we were able to smoothly send and receive text messages through our doorbell system and with the Twilio API. \nWhat I learned\nWe learned that hardware has a whole sea of problems with it, much like software does. However, while these problems are scary for people who don't deal with hardware often, they are still solvable problems. This project taught us how to deal with hardware and how to deal with the issues that come with it.\nWhat's next for chimr\nWe are going to integrate IoT at some point, once the hardware is less buggy. The idea is for the board itself to send the POST requests instead of through another computer. This allows for less requirements for the project, which is desirable by any consumer. Besides this, we are considering adding an optional keyboard to the LCD screen or microphone on the door which allows for the visitor to communicate with the homeowner instead of just the homeowner sending messages to the visitor. In addition, we hope to integrate with wooden doors at some point. Finally, we aim to have two components: a small hardware component and a mobile or web application that users can download to use with the hardware.  \n",
        "hackathon_id": "wildhacks2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascripthtml5cssjquery\n",
        "hackathon_id": "wildhacks2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nobjective-cjavascriptcsshtmlazurebraintree\n",
        "hackathon_id": "wildhacks2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nInspired by Our World in Data, I wanted to show how different metrics in the world are improving dynamically to create a 'wow' effect.\nWhat it does\nCreated at Wild Hacks 2015, this project is meant to show that despite popular media claiming otherwise, there has been no better time to be alive. Education, life expectancy, sanitation and other factors are strongly on the rise while others such as poverty and risk of disease are sharply in decline.\nHow I built it\nUsing D3.js for 2-dimensional data visualization and Three.js for 3-dimensional data visualization, we have created some visualizations to demonstrate social economics. We also used the Boosted Decision Tree Regression algorithm from Microsoft Azure to predict population data until 2050.\nChallenges I ran into\nStruggled with tiny implementation details in D3.js and Three.js that are difficult for a beginner.\nAccomplishments that I'm proud of\nThe different animated maps -- the globe, bubbles and animated choropleth.\nWhat I learned\nHow to make animated visuals to tell compelling stories as well as how hackathons work and how to stay alive after coding for nearly 24 hours.\nWhat's next for Visualizing_Social_Economics\nI don't know, but will probably try to expand it to show how the world is doing much better than we give it credit for.\n",
        "hackathon_id": "wildhacks2015",
        "winner": true
    },
    {
        "description": "\nNoAccent!\nNoAccent! (featuring Space Cat!) is an iOS app that helps people correct their foreign accent. Created at WildHacks 2015.\nPurpose\nFor a foreigner, learning to speak a new language can be challenging and intimidating.\nCorrecting an accent isn't easy, and sometimes people are treated differently based on their accents.\nNoAccent! helps users correct their accents by using visual and audio input to provide suggestions for improvement.\nUse\nNoAccent! focuses on correcting pronunciation at the smallest level, one word at a time! The app interface features a list of commonly mispronounced English words. Users can pick a word from the list that they want to practice. From there, NoAccent! records a user's mouth movements while he/she pronounces the word.\nThen, two views of the user's mouth are generated: a frontal view and a lateral view. The frontal view overlays an animation of the mouth movement for Space Cat, a native English speaker, over the user's mouth movement for the word. The lateral view analyzes sound frequencies to approximates the user's lip and tongue positions and compares positional differences between the user and Space Cat. Based on their performances, the app will also provide users with suggestions for improving their pronunciation.\nFuture additions\nWildHacks 2015 was a short 24-hour hackathon; we had just enough time to produce a working version of our app. However, there are lot of features that we would love to implement in the future!\nNoAccent! currently only features a short list of easily mispronounced English words. However, the app can easily be expanded to include other languages as well. For each language, all that's needed is a database of commonly mispronounced words and an authentic speaker in the language for recording mouth movement.\nWe also want to pinpoint specific ways for improving pronunciation by using machine learning algorithms (Google Tensorflow) to analyze user audio recordings and by using facial recognition mouth contour detection to analyze differences in mouth movement.\nTeam\n\nRichard Wei (iOS developer)\nYang Yinghua (designer/linguist)\nDan Zheng (web developer)\n\nTechnologies\n\nXcode / Swift: iOS development\nPraat: spectrograms (visual representations of audio input)\nHTML/CSS/JS, Bootstrap: website (no-accent.me)\n\n",
        "hackathon_id": "wildhacks2015",
        "winner": true
    },
    {
        "description": "\nInspiration/What it Does\nMany people on the streets have no access to mobile devices or Wifi, and no way of finding a temporary home for the night. Homeline Bling is a hotline homeless people can call using a street payphone, and the hotline will relay the name and location of the closest shelter near the caller. So for those late, cold nights, Homeline Bling will provide you with a home.\nHow We Built It\nWhen a caller calls the hotline, which is set up using Twillio, and the location of the payphone is extracted using Google geocaching API. The location of the closest shelter is then calculated through our web application built in Django. Then using Twillio's text-to-speech API, the name and location of the closest shelter is relayed back to the user. The web application also allows representatives from shelters to update or add their information on our database. The website is hosted on the cloud using Microsoft Azure. \nWhat We Learned\nWe learned how to use the Django framework, and linking Twillio with a web application. We ran into many problems with the implementation, but we're very proud of what we accomplished in the end.\n",
        "hackathon_id": "wildhacks2015",
        "winner": true
    },
    {
        "description": "\nIntroduction\nThis is a repo for a project at Wildhacks 2015, 11/21 - 11/22/2015, at Northwestern University.\nThe team members are Shayne Hemminger (Louisville), Jon Tan (Waterloo), Jack Wu (Northwestern), and Aditya Dhingra (Purdue).\nWe are building a remote, cloud-streaming mobile app with multiple cameras integrated, which prints pictures from the Walgreens API and delivers with PostMate.\nThe user can swipe across to view the streams of different cameras they have set up integrated to the system, and interesting objects in the image are identified as text to the user. At the press of a button, the image is captured, printed from Walgreens, and shipped to PostMate. They are charged through Braintree.\nWe are using:\n\nMicrocontroller: Particle Photon (Arduino-compatible WiFi development board)\nCamera: Omnivision 7670 camera that is Arduino-compatible\nCloud server: Microsoft Azure and the Media Server\nMobile development: Android Studio and Swift for iOS\n\nThe programming languages we use are:\n\nC, for Arduino/Photon\nPHP and JSON\nSwift, for iOS\n\nThe APIs we are using:\n\nCloudSight API - image recognition \nBraintree API - payments\nWalgreens - take photo and print it\nPostmates - deliver that picture\n\nThe prizes we are aiming for include:\n\nBelvedere's hack that facilitates communication - cloud video throughput can communicate hand signals over the internet\nBraintree - take payments to take a picture\nWalgreens - take a picture from the camera and print it \nPostmates - deliver that picture (to us?)\nPunniest name - \"CamerAzure\"\n\nThe equipment we have are:\n\nMany Arduinos (UNO, Mega 2560, Nano, Pro Mini - Jackie, Jon)\n2 Particle Photons (Jackie)\nWires and wire cutter (Jackie)\nOther electrical equipment, like breadboards, wires, resistors (Jackie, Jon)\nCameras like OV7670 with FIFO, without FIFO, and others (Jackie)\n\n",
        "hackathon_id": "wildhacks2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nmy experience\nWhat it does\nanomlay detection for the speed the user types in password\nHow I built it\nI didnt sleep lol\nChallenges I ran into\nto work\nAccomplishments that I'm proud of\nit works\nWhat I learned\nalot about anomaly detectors\nWhat's next for Vision Security Solutions\nadd detectors\n",
        "hackathon_id": "wildhacks2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe wanted to make it easier to see exactly how users interact with your application in a visual and metaphorical way.\nWhat it does\nLogBlocks is designed to run on any web server, and parse and store request data from the most common apache and nginx log formats. The Unity application, running on an external client, then pulls this request data, and visualizes it graphically on the Oculus.\nHow I built it\nLogBlocks consists of 3 parts: A dummy API, a logrotator, and the Unity application for Oculus. We also built an application that generates fake requests for the purpose of generating data for the demo.\nWhenever the dummy API is hit at any of it's endpoints, the request, response code, and response time are stored in an Apache access log. Data is continually pulled by the logrotator service, which parses and rotates the logs; storing the relevant data in Redis. Whenever the Unity application is run, data is pulled from the log search API, which is then visualized as interacting blocks on the Oculus.\nChallenges I ran into\nRedis and Azure configuration was difficult.\nAccomplishments that I'm proud of\nIt works.\nWhat I learned\nHow to develop applications for the Oculus, and how to parse, store, and manage big data in a fast and efficient way.\n",
        "hackathon_id": "wildhacks2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe were inspired to create a lighthearted project that was fun to work on and involved each of our diverse skill sets. We decided to make a game with Groupon's Space Cat as the central focus with text and emoji based interactivity.\nWhat it does\nWe used a Twilio API to forward text messages through an ngrok server to a node server. From there, we used web sockets to forward the text message and the related data to the front-end game client. \nHow we built it\nIt's a lovely spaghetti feast of web-sockets, node, Twilio, and phaser. Please enjoy with us. \nChallenges we ran into\nHacking the game engine to use its dynamic scoping so that the Twilio app would interface with it properly, sending and receiving messages at the same time, and dealing with a single thread. In terms of design, we ran into problems with animation. \nAccomplishments that we're proud of\nSetting up Twilio, working with nasty nodes, game libraries, and collaborating with designers/artists.\nWhat we've learned\nHow to use Twilio and phaser. \nWhat's next for Space Cat: The Asteroid Game\nSpace Cat 2: Apocalypse Meow\n",
        "hackathon_id": "wildhacks2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nrubyhtmlcss\n",
        "hackathon_id": "wildhacks2015",
        "winner": false
    },
    {
        "description": "\nWe created a webapp to make simple programs on your phone, designed to be a completely different experience than traditional languages, which were made without phones in mind.\nRather than typing commands, add operations to the pipeline. The pipeline is like a stack: to add two numbers, first add two values to the stack, then add the Add function, and then an Apply block to run the last function. The stack will then collapse into the sum!\n\nArrays can be made with Value -> Value -> Range -> Apply to make an array of numbers from the low to the high value. Arrays can be mapped, too. To increment every element by one, you would do: Value -> Value -> Range -> Apply -> Value(1) -> Add -> Map -> Apply\n",
        "hackathon_id": "enghack-f15",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe wanted to create a new and easy way to compose music. All three of us love music, and especially playing drums. It's really hard to keep track of an improvised drum solo without recording it and analyzing the beat. We figured out a way to keep track of the player's speed and rhythm of an improvised drum solo by playing virtual drum strokes in the air with Myo armbands.\nWhat it does\nWe used two Myo armbands to compose music by playing the rhythm of a virtual snare-drum and a hi-hat in the air, while our web application simultaneously generates the music sheet. Name of the music, name of the composer can all be manually inputted and the whole music sheet can be downloaded as png.\nHow I built it\nWe built the front-end of the webpage using HTML5 and CSS3. We wrote Javascript to keep track of players' inputs which are connected with Lua script. We wrote Lua script to detect arm movements, acceleration and arm positions, controlling the application of Myo.\nChallenges I ran into\nWe spent a huge amount of time discussing the algorithm of developing rhythm with different tempo and notes, and how to Javascript to simultaneously generate the music sheet. Another time consuming challenge we faced was the use of two Myo connectors. The non-primary Myo connector could not recognize arm movement perfectly. All of us were not experienced with the scripting Language Lua, so we ran into troubles debugging and testing arm movements with Myo.\nAccomplishments that I'm proud of\nAt the end, we managed to make a web application that can compose the drum music sheet as the player plays the virtual snare drum and the hi-hat.\nWhat I learned\nThe team now has a more comprehensive understanding of Javascript,Lua script, as well as hardware troubleshooting of the Myo armbands.\nWhat's next for Myo Rhythm Composer (Drum Kit Edition)\nMaking the UI even more visually immersive and engaging with various tempo and instrument selections.\n",
        "hackathon_id": "enghack-f15",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascriptnode.jsmongodbangular.jsjadecss3coffeescript\n",
        "hackathon_id": "enghack-f15",
        "winner": true
    },
    {
        "description": "\nInspiration\nSeeing people with disabilities inspired us to help. We decided to first start with the visually disabled.\nWhat it does\nOur machine takes in text in English and prints it in Braille using a poking mechanism and also manually writes the text out in English afterwards\nHow I built it\nAlthough the mechanical prototype is not fully complete yet, we used the NXT Lego kit and will be using a Tetrix kit to complete our machine. We implemented a mechanism to move the paper in the y-direction, and the printing arm to move in the x-direction as well as the z direction. Although this part is not yet complete, we have a design which allows us to switch between a marker and a stylus for poking holes, depending on whether we want to print in braille or write in English.\nChallenges I ran into\nThe mechanical design and adjustments were definitely the hardest challenge for us.\nAccomplishments that I'm proud of\nWe are proud of what he have achieved thus far - we have the code 95% completed and the mechanical prototype 75%  complete.\nWhat I learned\nI've learned a lot about team-building and overcoming obstacles.\nWhat's next for BrailliantMachine\n",
        "hackathon_id": "enghack-f15",
        "winner": false
    },
    {
        "description": "\nThis is a Chrome Extension, which applies Content Script to put a button on both the Index page of Google Search and the result page. Once user type what he/she wanna search into the text box, the content script(written in Javascript) will get what the user typed in the text box and direct the user to the result page. Nothing special until now right? Then it's the exciting part. When clicking the button on the result page, it will open the first N result URLs, N can be defined by the user on Option page(but I haven't finished it yet, so I set 5 result links as default). The link on the result page will be open in a reverse order, in order to make the user see the first result link first, you'll see how it work. Im running out of time on writing this story!!!!!!!!!\nHow did I come up with this idea?\nIm lazy, i feel like to open everything at once on google search result page :) instead of holding command/ctrl + left click for every link.\nEngHack-F2015\nA Chrome Extension\nDONE\uff1a\nCreate an Extension;\nCreate a Button;\nLoad User Input;\nGet link according to user input;\nTO-DO LIST:\nOption menu;\npack\nissues:\nsetResultSetSize;\n",
        "hackathon_id": "enghack-f15",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtml5javascript\n",
        "hackathon_id": "enghack-f15",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe campus at Waterloo is so big, I always get lost. The closest app to solving this problem is WatIsRain, but it doesn't help if you dont know how to navigate within buildings.\nWhat it does\nIt is a more precise version of WatIsRain, where it uses floor plans of buildings to help you go hallway to hallway.\nHow I built it\nCurrently, it is on Android only. The back end was made in C++ and connected to Android through the JNI/NDK.\nChallenges I ran into\nTwo of my teammates (front end devs) were not able to make the hackathon, severely damaging productivity. Also, the other team member had to leave early and was not able to complete the Computer Vision algorithm needed to get the floor plan data.\nAccomplishments that I'm proud of\nFinishing the bulk of the app on my own.\nWhat I learned\nHow to use the Android NDK and Java JNI, C++ concepts, and application of Software Engineering Design Patterns and Good Practices to build a scalable app and API.\nWhat's next for WatIsLost\nFinishing the app by completing the Computer Vision algorithm that extras data out of a blueprint and constructs a graph. With this, we could have the data set necessary to have an app that could be shipped for production.\n",
        "hackathon_id": "enghack-f15",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaandroid-studio\n",
        "hackathon_id": "enghack-f15",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtmlcssmeteor.js\n",
        "hackathon_id": "enghack-f15",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptthree.jsjquerylove\n",
        "hackathon_id": "enghack-f15",
        "winner": false
    },
    {
        "description": "\nInspiration\nOur inspiration for the Alarm Cock was, as you could guess, an alarm clock. However, we wanted to create more than just an alarm clock, we wanted to create something bigger and better. We wanted to create something that did more than yell at you from across the room, we created a device that would really motivate you to get out of bed in the mornings. The face is the part of the body that is most likely to stay in the same place so we chose to interact with that part of the body and a cock was an animal known for making a lot of noise in the morning waking you up, hopefully a correlation that would help wake you up more effectively. \nWhat it does\nThe Alarm Cock is a interactive alarm clock that stimulates more than just one sense. Instead of just stimulating your hearing the Alarm Cock goes one step further and stimulates your sense of touch as well. For those deep sleepers it is a great way to assure a timely wake up as very few can sleep through the \"gentle prodding\" of the Alarm Cock for you to awaken. Taking an input of minutes until the alarm should go off the Alarm Cock triggers an alarm after the specified time period and triggers the mechanical module as well as emits an alarm sound so wake you and get you going on your day.\nHow I built it\nThe Alarm Cock was build using an arduino, a motor, two batteries, a rubber chicken, a phone, a laptop, a bread board, wires, a box, and a LOT of duct tape! Split into two main sections, hardware and software, the Alarm Cock was fairly challenging for us to assemble. On the hardware side we used the arduino and the bread board to create a control system for the motor which rotates the rubber chicken. Housed in a box sealed with duct tape this is our alarm module. On the software side we used Android Studio to code an android mobile app for alarm control and arduino for the motor control. We then linked to two components together with Bluetooth to create a unified system.\nChallenges I ran into\nThe biggest challenge we had was lack of experience with the tools we were using. None of us knew how to use the android development environment so we were all researching and learning together. This was nice to do but also very slow and time consuming. This meant what all of our time estimations fell behind and we had a lot of trouble keeping up with what we wanted to get done. In the end we weren't able to complete all the desired functions because we didn't know how to do the required actions and ran out of time to research and test new methods of achieving what we wanted.\nAccomplishments that I'm proud of\nOur whole group is proud of our final project. Over the 22 hours of hacking we ran into a large number of problems spanning a variety of topics. We even came to a point where we had decided to throw in the towel. The group came together and made a resulting product we can all be proud of. We are most proud of our ability to persevere and to learn quickly as that was our biggest problem and most vital success. \nWhat I learned\nFor all three members of the group this weekend was a new experience as we were all learning android app development from scratch. Only one of the three members had been to an hackathon before so not only did we build technical knowledge about Java coding and the android studio development environment, we also learned about hackathons and what to expect from them in the future. It was a great experience for all of us, all 22 hours of it.\nWhat's next for Alarm Cock\nFuture developments of the Alarm Cock include expanding customization of the alarm options, creating a more user friendly user interface and information return method, and lowering the power of the motor to hopefully achieve a more even rotation of the rubber chicken. This will create a better user experience and a more reliable result to our users.\n",
        "hackathon_id": "enghack-f15",
        "winner": false
    },
    {
        "description": "\nTeam Members\nSince they don't have Devpost as of the writing of this, here they are: Jack Chen, GuangZhi Xiao, Shruti Basil\nInspiration\nOur goal for this project was to try and build a flight simulation game with used two Myo's (one for each arm) in order to fly around. We thought working with one Myo wouldn't suck enough, so we decided to add another one just to see how bad it could get. \nWhat it does\nRight now what it does, it wander around in a a very erratic fashion when we try and \"fly\". What it's supposed to do it allow the user to fly around a landscape, using each Myo to control an individual rocket on our flying object. A gesture activates the thrust, and the spacial data from the Myo is used in order to guide the rockets.  \nHow I built it\nThalmic Labs included a Unity plugin, so the team has been using that in order to get the Myo to communicate with the in game objects. In game objects were built straight in Unity, which has been a total pain. Getting stable, but movable joints can be quite a challenge to Unity noobs like ourselves. \nChallenges I ran into\nHmm, where to begin. For starters the spacial data given by the Myo is in the form of Quaternions (you can go Google them), which are a total pain to work with. The next biggest challenge I would say was trying to make the physics behind flying work in game. Sure, we could get stuff moving around and flying, but in order to fly in a direction of our choice was a challenge. \nAccomplishments that I'm proud of\nWe managed to get in game objects to respond to input from both Myo's, which is pretty cool. \nWhat I learned\nMyo's give strange data to work with, Unity is unreliable, drinking 4 Redbull's in one go in a terrible idea. \nWhat's next for Go, Go, Myo Rocket!\nIt will be laid to rest on GitHub where the code will never be touched again. RIP Go, Go, Myo Rocket (November 14th, 2015 - November 15th, 2015)\n*Note, the GitHub link is slightly messed up since we created a Repo inside a Repo (Repo-ception!). I will try and get the updated scripts up at a later time.*\n",
        "hackathon_id": "enghack-f15",
        "winner": false
    },
    {
        "description": "\nInspiration\nClassic games like Guitar Hero and Dance Dance Revolution. \nWhat it does\nFeatures a game similar to GH/DDR that can be controlled using gestures from two Myos. The game has 4 buttons corresponding to swipe up and swipe down of the left myo and swipe up and swipe down of the right myo. Also features a playable piano with 8 keys that can be played with the same gestures. (Left Myo controls C-F, right Myo controls G-C).\nHow I built it\nUses Myo.js for the Myo events, Angular.js for part of the front-end, and the dirtiest javascript you've seen controlling the game logic. Also bootstrap and jquery.\nChallenges I ran into\nTranscribing songs and syncing the notes with the song is a pain in the ass. Dealing with my dirty code is a pain in the ass. Myo gestures are a pain in the ass. The Myo is a pain in the ass.\nAccomplishments that I'm proud of\nWe made basic guitar hero for Myo. You can actually play it with gestures, but only if the Myo gods bless you with both Myos synced and warmed up.\nWhat I learned\nMyos are not meant for quick detection of gestures. I write dirty javascript. I should learn Backbone. \nWhat's next for Myo Music\nTranscribe the entire Through the Fire and Flames song onto it so I can play Guitar Hero on PC.\n",
        "hackathon_id": "enghack-f15",
        "winner": false
    },
    {
        "description": "\nInspiration\nWhat it does\nIt tracks faces and moves the camera to keep the faces in view\nHow I built it\nChallenges I ran into\n-installing OpenCV (ended up using Ceemple)\nAccomplishments that I'm proud of\nWhat I learned\nBasics of OpenCV and how facial detection works\nWhat's next for Facial detection and tracking\nrefine the tracking functionality\n",
        "hackathon_id": "enghack-f15",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptangular.jsdjangohtml5\n",
        "hackathon_id": "enghack-f15",
        "winner": false
    },
    {
        "description": "\nMyoMeet\nGoal\nThe objective of MyoMeet is to help professionals to expand their network. The concept was developed around the common practice of exchanging of business cards during networking events. MyoMeet will allow you to connect with other professionals over the web with a merely handshake. \nHow does it work?\nWhen the two users of the Myo Armband engage in a handshake, the sensors inside the gadgets can recognize the motions, and send requests to add each other on their respective contact list. Both users can later review their list and keep or delete the newly made contacts. \nFuture Iterations\nBy the end of the hackathon, we were only able to complete the script which allows the Myo Connect application to identify individual Myos and recognize when a handshake occurs. In development still was the web page that is triggered by a Myo syncing to a laptop, which allows users to create/edit their profile to be shared with others. Some features that we wanted to implement: \n\n A user system where people can edit their profile from any device.\nUse the Bluetooth on smartphones as a hub to connect Myos together anywhere\nConnect the profiles to LinkedIn and various academic networking accounts.\n\n",
        "hackathon_id": "enghack-f15",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe wanted to development an application for the Myo armband and take advantage of its features. A paint application was a perfect idea as it made use of both arm movement and gestures.\nWhat it does\nMake a fist to paint\nSpread your fingers to change colour (Current colour is displayed at the bottom)\nMove your hand inward and outward to make the brush thinner and thicker\nClick on the Erase button to use the eraser  (By hovering over button and making a fist)\nSave the image using the Save button\nClear the canvas using the Clear button\nHow We built it\nWe used the Myo Connect application to use the Myo as the cursor and register the fist gesture as a hold until released left click\nWe used the java.awt and swing to implement the graphics. The java application tracks the cursor and draws when the fist gesture is selected.\nIn addition, we also utilized maven with the Java Myo library as a dependency communicate with the armband to check for other gestures and perform other functionalities.\nChallenges We ran into\nWe had a lot of difficulties trying to implement our custom cursor control using the gyroscope and accelerometer. In the end, we decided to use the Myo Connect application to map the cursor for us and just use the cursor input instead.\nAccomplishments that We are proud of\nWe were able to use the Myo Java library to connect the Myo with our application. We also managed to read the gestures using the library and perform operations with them. Moreover, we created a paint program which allowed us to paint with different brush sizes and colours. \nWhat We learned\nWe learned how the java graphics library works, how to use the Myo library, and how to multi-thread the program.\nWhat's next for Mayo\nAdding more features such as custom background, image loading to background, and different kinds of paintbrushes.\n",
        "hackathon_id": "enghack-f15",
        "winner": false
    },
    {
        "description": "\nInspiration\nAs a baking enthusiast, I decided to make this to give myself and other baking hobbyists lots of dessert suggestions.\nWhat it does\nYou can explore many recipes just by typing in some ingredients you are likely going to use.\nHow I built it\nRuby on Rails MVC, and Materialize library for front-end aesthetics\nChallenges I ran into\nAPI call integration with RoR\nAccomplishments that I'm proud of\nIt actually works.\nWhat I learned\nRoR! (the basics at least)\nWhat's next for Dessert Me\nEnhance search criteria such as the quantities of ingredients, as well as nutritional factors.\n",
        "hackathon_id": "enghack-f15",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe sought to provide students with a means to connect to tutors in a seamless and intuitive way. \nWhat it does\nIt helps students find tutors through an online web app.\nHow we built it\nUsing Mean stack but without mongodb; we used postgresql.\nChallenges we ran into\nOptimizing code for (free) database, Integrating frontend and backend\nAccomplishments that we're proud of\nCreating a modest, almost functional web app\nWhat we learned\nTeam Dynamics \nWhat's next for TutorUs\nImproved Location Services, Payment Services, Optimization for connections, Better Matching\n",
        "hackathon_id": "enghack-f15",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroid-studio\n",
        "hackathon_id": "enghack-f15",
        "winner": false
    },
    {
        "description": "\nBuilt With\nflaskpythonjavascriptnode.jshtml5jqueryajax\n",
        "hackathon_id": "enghack-f15",
        "winner": false
    },
    {
        "description": "\nUWAdvisorBot\nTL;DR TALK TO YOUR ACADEMIC ADVISOR\nDescription\nAutomatic bot for reddit that replies to posts containing certain keywords. It provides contact information for academic advisors specific to the faculty requested. Comment !advisor  (without the <>, and using ahs, arts, engineering, environment, math, science as the keyword in place of faculty> to get started!\nInspiration\nNot enough people talking to their academic advisor\nProblems We Ran Into\nGetting over how not enough people talked to their academic advisor\nNext Steps\nGetting people to livechat with their academic advisors\nAccomplishments\nNone. Didn't talk to my academic advisors and spammed reddit\nAcknowledgements\nThank you to sponsors and to academic advisors\nNo but seriously, talk to your academic advisors\n",
        "hackathon_id": "enghack-f15",
        "winner": false
    },
    {
        "description": "\nInspiration\nA simple tool was needed to track my WatCard usage, and the one provided by the school is both a hassle to access and does not provide much easily interpreted data.\nWhat it does\nIt is a Chrome extension where you log in with you UW ID and WatCard pin. You can then see your current balance and view how you've been spending your money recently.\nHow I built it\nCoding!\nChallenges I ran into\n\nWas new to regex parsing\nDate formatting for high charts\nFiguring out how to get the data from the school\n\nAccomplishments that I'm proud of\nThe project!\nWhat I learned\n\nREGEX!\nCHROME EXTENSIONS!\n\nWhat's next for WatCard Balance\n\nTracking interval changing\nRefactor code\nSecure authentication data\n\n",
        "hackathon_id": "enghack-f15",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe're to lazy to read long messages.\nWhat it does\nTLDR is a text editor and analyzer that uses Sentiment Analysis and Concept Extraction that uses statistical methods to extract key concepts from text, and analyzes text to return the sentiment as positive, negative or neutral. You can also put in your messages so you know the key concepts you\u2019re saying and what the tone of your text is.\nHow I built it\nWe built it on three platforms: iOS, Android, and Web.\niOS: We used xCode(swift)\nAndroid: Android Studio(Java)\nWeb: HTML, CSS, JavaScript, and jQuery, and three.js  \nAll of our platforms used the HP Haven OnDemand API's. (Sentiment Analysis and Concept Extraction)\nChallenges I ran into\nWeb: retrieving, parsing, and implementing JSON.\nAndroid: retrieving, parsing, and implementing JSON.\niOS: retrieving, parsing, and implementing JSON.\nAccomplishments that I'm proud of\nLearned how to use RESTful APIs\nWhat I learned\nAPI Integration\njQuery\nJSON\nWhat's next for TLDR\nPushing to Play Store and App Store in the near future.\n",
        "hackathon_id": "makehacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\njava\n",
        "hackathon_id": "hack2040miami",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascripthtml5css3\n",
        "hackathon_id": "hack2040miami",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascriptcssrubyhtmlruby-on-rails\n",
        "hackathon_id": "hack2040miami",
        "winner": true
    },
    {
        "description": "\nBuilt With\nhtmlcss\n",
        "hackathon_id": "hack2040miami",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtmlcssdjango\n",
        "hackathon_id": "hack2040miami",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaopencv\n",
        "hackathon_id": "mobihack",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascriptjqueryfirebasehtml5css3\n",
        "hackathon_id": "mobihack",
        "winner": true
    },
    {
        "description": "\nBuilt With\nionicangular.jsnode.jsexpress.jscouchbase\n",
        "hackathon_id": "mobihack",
        "winner": false
    },
    {
        "description": "\nBuilt With\nmeteor.js\n",
        "hackathon_id": "mobihack",
        "winner": false
    },
    {
        "description": "\nInspiration\nWanted to end the culture of  the populated physical bulletin board \nWhat it does\nCollects the notices(info regarding Books,Housing,jobs etc.,) from the student community , categorize it and make it available for viewing for the peers\nHow I built it\nNative android application development- Compatible on devices above KitKat\nChallenges I ran into\nconnecting with a centralized DB\nAccomplishments that I'm proud of\nHopefully IIT student community will  make use of it one day\nWhat I learned\nRapid Application development\nWhat's next for Hawk Board\nMore Enhanced features with customization and recommendations\n",
        "hackathon_id": "mobihack",
        "winner": false
    },
    {
        "description": "\nWe wanted to connect people that don't necessarily know each other, but who need each other. This service exchange is the main idea of the app, on which anyone can provide or request a special talent.\nOnly a demo is available as an Android project.\n",
        "hackathon_id": "mobihack",
        "winner": false
    },
    {
        "description": "\nInspiration\nIts a pain to zero in  a hangout place with friends because of budget ,confusion to chose best place etc.\nWhat it does\nThis app helps to plan and decide a best place to hangout\nHow I built it\nCreated pages using HTML,Java Script and using ionic framework files are made into use through mobile.Using Here geocode we zero in the locations based on the input provided by users.\nChallenges I ran into\nDifficult to create an App in a day. Worked most of the time to create a Geocode locations based on the input provided\nAccomplishments that I'm proud of\nMain part of the Application is ready\nWhat I learned\nLearned how to use Here API to geocode. Learned to host files in Parse\nWhat's next for Plan2Hang\nComplete the project and try to implement with real data\n",
        "hackathon_id": "mobihack",
        "winner": false
    },
    {
        "description": "\nInspiration\nReal-time Location-based technology\nWhat it does\nBased on your location, you get real-time notifications and image pop-ups of photos uploaded by anybody on Instagram\nHow I built it\nAndroid\nChallenges I ran into\nData collection and data fetching\nAccomplishments that I'm proud of\nSuccessfully completed the main working of the app\nWhat I learned\nNew technologies, Time management\nWhat's next for InstaLocate\nEnhancing real-time chat abilities, Location-based real-time video broadcasting\n",
        "hackathon_id": "mobihack",
        "winner": false
    },
    {
        "description": "\nInspiration\nHumans will invest in stocks they believe in and sell stocks they don\u2019t believe in; it only makes sense to be logical when dealing with matters of money and finance. Thus, accurately predicting stock changes requires knowing which companies are currently trending in the public\u2019s favor. What StockAssist brings to the table that is unique to our generation is generating predictions based on social media trends. Older generations may look to news sources to inform them of which stocks to invest in, but this implies a lag of possibly weeks as news sources need to gather their data and edit it before publishing. By the time the news reaches the crowd, its advice may already be outdated. With StockAssist, we cut out this lag entirely and give you the real-time general consensus of how a company stands by data mining and implementing machine learning on social media posts. This will give the most accurate prediction of how stocks will fare, and thus is revolutionary in advising people with their stock investment decisions. \nWhat it does\nThis web application will take the stock in question and collect all the news, social media, and statistical data about that stock. It will then run this data through our machine learning algorithms to analyze how well the company is doing in the eyes of the public. With this application, the users will only need to check one place to find an aggregated analysis of their stocks from a diverse, real-time generated data set. \nHow I built it\nThe first iteration of the application was written in Go. After discovering incompatibility issues with the Azure platform, the application was completely rewritten in javascript using Node.js. The application consists of two main parts the server and client, with each communicating with another through http requests.\nThe server is where all of the heavy data manipulation is conducted. The server receives a query from the client via an HTTP GET request. The server then takes that query and using Twitter\u2019s REST search api finds 1000 tweets that match that query. Then using regular expressions, the server strips and removes all the referenced URLs (in order to make the semantic analysis easier). After the data has been prepared, we perform an analysis of the tweets using semantic analysis tools hosted on Azure. The analysis tool then returns a score based the words used, and from that we generate a confidence statistic.\nThe second part of the application consists of the client. As mentioned beforehand, the client sends a query to the server, and the server in turn returns a summary of the analysis it performed. The client then generates a stock recommendation based on a determining algorithm, displays a rough summary of that data using a pie chart, and gives a confidence statistic. The client was written in the standard HTML5/CSS/JavaScript while reference several other open source libraries for the visuals and the communications.     \nChallenges I ran into\nDeveloping a web application hosted on Microsoft Azure was our biggest challenge. Initially, our team used Go to develop the back-end of the application; however, Azure never seemed to be compatible with Go. Thus, we had to switch languages, and completely re-write the entire back-end in Node.js. Another challenge we faced along the lines of Microsoft Azure was figuring out the Machine Learning. It was difficult to create training models with the help of different statistics such as chi-squared. We attempted to create an optimal training model on twitter feeds based on binary sentiment analysis. Upon building the training models, it was another challenge to create a predictive experiment based on the optimized training model, and hosting the solution on the web. Although we couldn't get the machine learning algorithm to work, we made great headway in learning this sector of Microsoft Azure. \nAccomplishments\nDespite all the challenges present, we were able to finally implement Microsoft Azure as a web host for our application. Even though we did not completely figure out the Microsoft Azure Machine Learning, we made great progress in learning how to utilize this tool to perform sentiment analysis on twitter feeds. In order to actually create the machine learning, we used a direct approach with sentiment analysis through node.js. On the front-end, we were able to coordinate all the back-end to co-exist with the front-end. The most important accomplishment was to develop the Azure hosting service, along with our web application.\nWhat I learned\nThis hackathon was full of twists and turns and we definitely learned a lot from it. From how to use Azure to what web frameworks work best with our front end, our general takeaway for this hackathon was to remember to reach out for help. The Microsoft team was immensely effective in mentoring us and helping guide us to reach our goals; it\u2019s been a game changer for us and it\u2019s something we\u2019ll be sure to do in future hackathons. \nWhat's next for STOCKASSIST\nWe\u2019d love to expand on every aspect of our app. This means we\u2019d love to include more and more social media outlets to better refine our data set, and thus use this to refine our machine learning algorithm as well. We also believe that this app would be effective across more platforms - from mobile to tablets to smart watches. If there\u2019s an influx of negative social media coverage for a particular company, having a mobile app ping our users would be highly effective in helping them save money in the stock market. \n",
        "hackathon_id": "hacksc2015",
        "winner": true
    },
    {
        "description": "\nHow I built it\nKinect based image recognition system. Uses Microsoft's open source Project Oxford to verify facial features in comparison to test subject. Uploads match boolean and comparison value to Firebase server. Based on positive or negative image comparison, will either lock a door or shoot a Nerf Gun Blaster at the approaching subject (hardware implemented by Intel Edison). \nWhat's next for NerfLock\nFully integrate Facebook API to populate \"verified\" individuals set through JSON queries.\n",
        "hackathon_id": "hacksc2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWhat it does\nPotentially help predict a yelp rating based on the words used in the review\nHow I built it\nUsing the Beaker IDE platform\nChallenges I ran into\nAccomplishments that I'm proud of\nWhat I learned\nWhat's next for What's in a Yelp?\n",
        "hackathon_id": "hacksc2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nEver gotten the feeling that you're left out of a conversation just because you just don't have enough background information? So have we. Recently, major events have shocked the world, leaving people confused and wanting to be informed at the topic at hand: but what exactly should people look out for? How can people search for something when they don't know where to begin?\nWhat it does\nIn Brief scrapes the internet looking for the most relevant pieces of information to help a user dive right into any conversation, whether it be about recent news, or just a topic in general. We grab descriptions from Wikipedia, the most current tweets on Twitter that mention the topic, recent news articles from Alchemy, and even the general sentiment on whether or not the public views a particular topic in a positive or negative light.\nHow I built it\nIn Brief was built with Javascript on top of Python with Flask. Our team learned a lot with this new framework, while still relying on standard web development tools such as Bootstrap, Flexbox, Material Design Lite, and jQuery (for front-end), and BeautifulSoup with other tools for back-end development.\nChallenges I ran into\nDesign was a major challenge of this process. We wanted to focus on getting the best project possible, and not just the best implementation possible. It took a lot of time and energy in defining exactly what we wanted and streamlining functionality to suit the user's need. Also, data and API availability was a huge problem: we had a goal in mind and the knowledge to do so, but the resources simply weren't there.\nAccomplishments that I'm proud of\nAt the end of the day, this was a huge accomplishment. Instead of hooking up to the usual one API, our team grabbed data from three APIs, really bringing the concept of \"data accumulation\" home.\nWhat I learned\nReally search hard for those resources such that your project has the most reach possible.\nWhat's next for InBrief\nThink about this: a lot of news applications can curate what the conversation is about, but a conversation can't exist without people. A large step forward would be linking InBrief to social media to see exactly who in your friend group is interested in a certain topic, so you can be certain there's something to talk about the next time you two meet up.\n",
        "hackathon_id": "hacksc2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nOne of our team members, Hannah, is double majoring in flute performance and computer science. She also enjoys videography (the video's we used, she took!). She wanted to create an app that manipulated videos. So after her initial idea and many pivots, we have successfully ended with Quark.\nWhat it does\nQuark is a multi-player apple TV app. Each player is able a distort the different video with different swiping motions and movements. Additionally by scanning QR codes, players can bring different instruments to life. When these instruments come together, a song is formed. \nHow I built it\nWe built this app entirely using Swift. \nChallenges I ran into\nApple TV can only connect to two devices at a time, only one of the members had ever done iOS development before this weekend.\nAccomplishments that I'm proud of\nIt was 3 out of 4 members first time programming iOS and using swift.  \nWhat I learned\nSwift\nWhat's next for Quark\nFinding a way to have more than 2 devices at a time. erggg apple tv\n",
        "hackathon_id": "hacksc2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWhat is that one thing that has driven the mankind to look out for new places, even if it needs and Apollo 11? The wanderlust within!\nQuite often you are tied to your work or your homework or simply stripped of the bucks to satiate that wanderlust. \nSo, why not let the world come to you and you take the driver's seat with simple gestures on your fingers!\nWhat it does\nJarvis GestUR is the next advancement in JARVIS2, with gesture controlled navigation and betteer VR travel experience. GestUR is the technology that tracks your hand gestures and sends them to JARVIS platform for it to give you all the joys of visiting new places. Yes, Jarvis GestUR is your personal gesture assisted VR navigation system.\nHow I built it\nLoaded with capabilities, the systeme leverages the database from Google Maps coupled with the VR power of Oculus. The platform integration is done using Unreal Engine with Myo driving the gesture automation in the VR.\nChallenges I ran into\nUnit 3D has no open-source free support to work on web enabled data for OCulus VR. And then Unreal 4.10 has compatibility issues with Myo Plugins. There were some modifications in the source codes that all settled the dust and gave life to Jarvis GestUR.\nAccomplishments that I'm proud of\nHuge learning on Myo and the featres it has. I tried creating custom gestures for our model and that was really exciting. \nWhat I learned\nMyo! The powerful armband.\nWhat's next for JARVIS GestUR\nVoice Integration, feet motion sensing. Other sense features for sound and feel factor!  Coming Up soon! - Stay tuned.\nJARVIS2 - The predecessor of Jarvis GestUR\nhttp://hackscfall2014.devpost.com/submissions/29775-jarvis2\n",
        "hackathon_id": "hacksc2015",
        "winner": true
    },
    {
        "description": "\nLightHouse\nA iOS application that allows for more immediate responses to disasters, crime, and terrorist attacks. \nOur product site is available at: https://matthew-lin-45a3.squarespace.com/\nOur web application is available at: http://lighthouse2015.azurewebsites.net/\nMotivation for platform\nGiven the recent tragedy in France, and many other disasters that strike us nearly every day; it becomes apparent that reacting effectively and efficiently in such scenarios becomes critical. It was for this reason that we decided to build LightHouse a platform that seeks to reduce the burden of these calamities. We hope that by using technology we can make response to these situations more effortlessly and reduce friction.\nSummary\nOur application aims to respond to every and all situations related danger; this includes sexual assault, armed robbery, terrorism, domestic abuse, arson, natural disasters. With the use of our application we allow victims a chance to instantly send out an SOS to the police and government; we also allow citizens to upload videos, photos, and audio of dangerous situations as they encounter them, creating essentially a hazard map that informs everybody around them of the danger.\nSolution\nOur solution can broken down into essentially two products: a web application and iOS application. For the average citizen our product aims to help quickly respond to disaster situations. Faced with danger a citizen can tap our widget on the lock screen without even opening the application allowing for instant contact with law enforcement. Additionally during times of national disaster, families can view loved ones through GPS location and know whether  are safe. Finally law enforcement can use either the mobile application or web application to monitor crime statistics, hot spots, and high problem areas.\nHere is a further break down of the three different categories to utilize our product; they are broken down as follows.\nLAW ENFORCEMENT\nOfficers can find out the number of conflicts reported as well as the distance to the nearest conflict.\nThe number of officers is reported to determine the number of police to be allocated per crisis.\nCrisis mapping indicates what the most urgent crisis is so that the officers know which disaster to prioritize.\nCIVILIANS\nCivilian users can register based on their Government ID i.e. Driver's License or Social Security.\nInformation about nearby disasters and their categorizations is provided.\nSimple, intuitive widget on mobile phone allows civilians to send an SOS in times of danger.\nFAMILIES\nUsers can verify the status of family members in a disaster. \nThe relative distance to the family member can be tracked to provide potential rescue options.\nEach user has his or her location mapped so family members know exactly where the disaster occurred.\nFuture/ Applications\nThis application was inspired by the recent attacks in Paris, but go much beyond that. It was built with the purpose of helping save lives and reduce daily calamities. This application works on the basis of immediate response and can therefore be applied to situations that require a natural disaster relief or situations of unrest in countries like in the Middle East.\n",
        "hackathon_id": "hacksc2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe believe that Virtual Reality has the power to send extremely powerful messages that no other medium can possibly convey. As a result, we created Diver, a Virtual Reality experience designed to spread awareness about environmental pollution. We started with a simple list of hobbies- what would people want to experience in Virtual Reality? From there, we thought of how we could convert a simple game into a meaningful and immersive virtual experience, in a way that only Virtual Reality could manage. Through Diver, and Virtual Reality itself, we sought to bring attention to the severity of pollution while also allowing users to navigate an underwater, though polluted, environment.\nWhat it does\nDiver is an underwater Virtual Reality experience, where the user is able to use Sixense Razer Hydras to swim and enjoy the beauty of underwater marine life (There's even a whale!), and the Oculus Rift to look around them. However, there's a catch: The ocean is filled with trash, and it's the player's job to swim around and clean up trash including cans and water bottles.\nOnce the user has cleaned up enough trash, they will have \"won\" our game, but the message we want to send is much more profound. A message will display saying \"Congratulations! You beat our game! In reality, however, pollution occurs on a much greater scale...\" and at that point, pollution rains from above and throughly covers the ocean floor where the user is swimming.\nIn this case, seeing is believing. It's one thing to hear about pollution- it's another to experience it around you. One person alone cannot solve the problem, and that problem is escalating quickly. This is the message we wanted to send through Diver, and the unfortunate reality we wanted to convey.\nHow I built it\nTo create Diver, we used the Unity Game Engine, the Oculus Rift, and the Sixense Razer Hydras. \nAll actual game functionality was built inside Unity, including the scene itself. We wrote several scripts in C# to implement the actual user \"swimming\" and the random instantiation of trash in the scene. \nThe Oculus Rift, arguably the most essential part of our message, brings Virtual Reality to the game engine and allows the user to become fully immersed in the experience. It provides 360 motion tracking, allowing anyone to look around them while in the scene completely hands free.\nThe Razer Hydras, an input mechanism designed by Sixense, were used to map actual human hands into the scene. When the user holds the Hydras, they gain control of these hands, and can move in a 3D space to move the hands as well. Through this input mechanism, we were able to let the user \"swim\" around them, an action achieved by actually moving the hands while inside Virtual Reality.\nWe obtained facts from kanat.jsc.vsc.edu/student/brookfield/mainpoints.htm and music, titled Perspectives, from http://incompetech.com/music/royalty-free/index.html?isrc=USUAN1300027. \nWhile the work on Diver was split amongst the three of us, we collaborate for opinions and to keep each other updated and aware on the progress of the part. Tasks were given based on who was capable of doing so. Several examples of collaborative tasks include working with the swimming simulation, designing the murky underwater fog, and music choice. Communication among the team was also important to ensure proper combination and building of the project in the end so that everyone's work gets successfully integrated.\nChallenges I ran into\nOur biggest challenge was trying to work with the Razer Hydras to simulate swimming. The user, ideally, should be able to use the Razer Hydras to swim through the scene and collect trash. However, we had trouble deciding the best way to implement the action. We settled with using the Hydras to detect which direction the palms of the hands were facing and, by using the distance from the start of the movement to the end, allow the user to move in the direction opposite of where the hand is facing in a distance relative to how much distance your hands moved, as if they are \"pushing water\" and moving. Mapping actual swimming gestures and practices was unrealistic given our time frame, so the swimming in the game is more of a \"push away from the direction you want to move\", which sometimes takes a bit of getting used to.\nDistributing work was also tricky. However, we were able to get through by lots of communication and making sure each person was up to date with their task and no one was falling behind. There was a lot to do so each part and person were important.\nAccomplishments that I'm proud of\nDiver is a creation based on the desire to make a difference in the world. Though it is still, at it's core, a Virtual Reality game, it transcends that purpose and is far more of a message we want to send out across the world. We truly believed in the power of Diver to raise awareness and think that it has the potential to change perspectives for those who don't recognize the actual severity of pollution in the environment. Virtual Reality is still a very undeveloped field, and through our project, we are guiding it in a more positive and helpful direction.\nWhat I learned\nHonestly, we were forced to face the realities of pollution ourselves. Through looking up facts and creating devastating scenes, we had to confront a reality that pollution is far worse than we expected, and essentially tried to convey the same shock we initially experienced.\nOn a more technical note, we learned a lot about actual movement in Virtual Reality using the Razer Hydras, and about input mechanisms in general and the role they play in VR.\nWhat's next for Diver\nWe want to expand the message that Diver sends. Rather than just presenting the user with an ultimate feeling of hopelessness as trash piles up, we want to show that, through collaboration, the problem can be solved. First, we want to clean up what we have, and improve the actual quality of experience and make it more understandable for the general public. From there, we want to integrate ways and show the user that they can make a difference if everyone pitches in.\n",
        "hackathon_id": "hacksc2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nAn opportunity to work on a various brand new platforms.\nWhat it does\nThe application on Echo uses TicketMaster APIs to find the events in the city with the details and with consent of the user, it also books an Uber for the user through Uber APIs.\nHow I built it\nThe application uses Alexa Skillset to train the Echo and convert the text to speech and vice-versa. The backend service that creates the functionality is hosted using Amazon Lambda. The Lambda function inturn communicates with a python web service hosted on a Azure instance to generate authentication credentials that allow the Echo to book an Uber on the user's behalf.\nChallenges I ran into\nUnderstanding various new technologies like Amazon Lambda service, Alex Skillset, Azure and integration among them. To generate the authentication tokens using OAuth in Java for Uber provider.\nAccomplishments that I'm proud of\nImplementing the authentication module for the Uber API. Integrating with Azure to host a web service over SSL.\nWhat I learned\nVarious technologies like Lambda Service, Amazon EC2, Microsoft Azure. The team effort and the working in parallel by sharing the work to maximize the throughput.\nWhat's next for ShowFinder\nBeing able to set a reminder using Alexa to Book a Uber.\n",
        "hackathon_id": "hacksc2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nswiftwatchkitazurecartodbd3.jsapple-watchscikit-learn\n",
        "hackathon_id": "hacksc2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nswiftwatchkit\n",
        "hackathon_id": "hacksc2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nYou've have a really long day... Let's just say you've gone from aiming for \"straights A's \"... to \"Bs\"... \"to Cs\"... to \"just passing\". Worst of all, you really miss home and your dog Waffles. Wouldn't it be nice if you could be cheered up?  \nWhat it does\nEnter Doggish! This is the paws on demand service that ensures flurry deliver to you! Using Doggish you can see the nearest dog play dates conveniently displayed on a map. Would like some 4 legged action now?? Search for specific dogs and notify them right away! \nWhat about dog owners you ask? As a dog owner of course you want to be encourage to take your precious pooch out, socialize, and show him off! But wait! With every confirmed play date, you earn points. Whenever you reach the next level, you get your pick of pet prizes!\nThere's more! We also waited to eliminate digital noise. Everyone hates irrelevant advertisements thrown in their faces. With our app, local pet stores can offer coupons as prizes! This relevant, direct marketing ensures happier consumers and businesses. Are you a pet product company? No problem! Contact us to list your new product as a prize sample. Choose to directly market to small or large, young or old dogs, even specific breeds of dogs!\nHow we built it\nWe using facebook login to authenticate users, and take that access token to exchange for valid Amazon web services credentials (Cognito) to access resources. The database is a noSQL, fully managed and scaleable dynamo db. To ensure minimal latency we don't edit the database directly. We can AWS lambda functions, which pretty gives us a on demand server to run whatever code we need. We used google cloud messaging for push notifications to users. Of course we use google maps and markers to display the play date points. As a team, of course we realize we could not implement everything we wanted. Our designer used Illustrator and Photoshop to whip up custom icons and images as \"Coming soon\" features. \nWhat's next for Doggish\nWe plan on extensive testing for bugs and finishing the implementation. We came together because we wanted to leverage cool technology and built something helpful. You might just find in the app store soon!\n",
        "hackathon_id": "hacksc2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe set out to build an iOS application that truly solves a real-world problem, and we did exactly that. We realized how tedious it is to browse through postings in Excel of hackers posting their technical expertise and skills. In fact, they all end up looking roughly the same over time. WeHack simplifies the entire process of finding teammates based on desired skills, and exploring teams to better understand the project idea, including skills they're currently looking for as well as how many spaces are open. In addition, there's a bulletin board for the hackathon admin to continuously update, all with locations that make it easy for attendees to pinpoint exactly where the event or food is. This proves to be particularly useful since most attendees are new to the school and unfamiliar with its layout.\nWhat it does\nWeHack serves as a platform for teams to browse students who are looking for teams. They can search for specific skills, making it much more easier than ever before to find attendees with the exact skills they're looking for. In addition, attendees can view teams, their project idea, as well as the tech stack for the project. The admin of the hackathon event can continuously add bulletin posts with the latest news and updates, all with location included (that open in maps) that make it easy for attendees to find exactly where the event is going on. \nHow I built it\nWe built this with Swift for the iOS application, and node.js with MongoDB for the back-end REST API. \nChallenges I ran into\nThere were several challenges we ran into throughout the process of developing this application. The main one was developing a fully polished iOS app that adheres to Apple's UI/UX guidelines within the timeframe of this hackathon. While we got much of the application working, there is definitely more work to be done.\nAccomplishments that I'm proud of\nWe're proud of developing an iOS application that resolves a real-world problem for hackathon attendees. We placed UI/UX design as one of our priorities as this application seeks to be the information hub for hackathons. We completed read through and understood Apple's design guidelines, and each every button, gesture, and style is optimized for ease of use for the user. We really believe that this application can change the way that people attend hackathons in the future, resolving many of the common pain-points from earlier.\nWhat I learned\nTo make a fully robust iOS application, it definitely takes more than 1-2 nights. We also learned how to build robust APIs in Node.js and the sheer amount of work it takes to develop a UI/UX friendly application that optimizes the user's ease of use.\nWhat's next for WeHack\nWe need to fully implement some of the features we set for the roadmap of our product, such as the admin options and messaging. \n",
        "hackathon_id": "hacksc2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWanted to create something that looked better than a simple 2D game, possibly better than some existing Unity 3D projects out there.\nWhat it does\nControl a player who has to avoid the enemies. Enemies spawn at edges of the map at increasing frequencies as time passes. \nHow I built it\nCreated terrain, added some graphic details, then created enemy, player, and collision detection as well as scripts for damaging.\nChallenges I ran into\nCollision detection between enemy and trees as well as player and terrain.\nAccomplishments that I'm proud of\nSolved pathfinding through NavMesh, looks great with the wind and sun, also first project in Unity\nWhat I learned\n3D programming isn't as hard as I thought it would be, it's exciting to be able to do so much just over one weekend.\nWhat's next for Lost In The Woods\nAllow player to kill enemies, add a start screen.\n",
        "hackathon_id": "hacksc2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nphp5laravelbootstrapjavscriptajaxjson\n",
        "hackathon_id": "hacksc2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nc#xaml\n",
        "hackathon_id": "hacksc2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWE LOVE EATING and knowing new friends.\nWhat it does\nUsers can get to know new people through our app and join or create a dining based on who they want to know and what they want to know.\nHow I built it\nWe started from learning the Swift Language and Xcode.\nChallenges I ran into\nSWIFT is NEW!!! And so many features for an app to be perfect\nAccomplishments that I'm proud of\nWe learned a lot!\nWhat I learned\nNew Language and new friends.\nWhat's next for DinePro\nWe want to start a Startup!\n",
        "hackathon_id": "hacksc2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonflaskswiftazuregooglegoogle-mapsmobileios\n",
        "hackathon_id": "hacksc2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe inspiration came from a game many are familiar with and may have played at some point called \"assassin.\" Essentially every player is given a target which they will try to find over a however-long period of time and \"assassinate' them. So at any given moment you will have someone you are trying to find before someone else finds you. This game has been the subject of large events over the years and has many variations to its name but never has there been an app to help facilitate it.\nWhat it does\nThe app will allow for players to choose to join ongoing games or create games of their own. Once the player joins, they are automatically assigned a player to find on their smartphone along with a radar pointing to were they are in the predetermined boundaries. They will then have to navigate their way through their campus, city or neighborhood and try to locate their target. Once located the user will have the chance to tag their target by swiping up on their face on the app and send a notification to the target that they've been tagged. The player then earns points and can then carry on with their next target while their tagged target must report to a \"respawn zone\" to continue with their game.\nHow we built it\nWe used swift to code the front-end which currently consists of a map that will follow the user on the map as they walk towards the preset pin on the map. Once the user is close enough, they have the option of clicking the tag button and send a notification to themselves that they've tagged the target. Later code will incorporate our back end to connect other users and allow for much more functionality in the app.\nChallenges we ran into\nSome challenges we ran into was learning the protocols to program iOS apps in swift. \nAccomplishments that we're proud of\nCreating a basic iOS app with a team with diverse skill sets.\nWhat we learned\nHow to build a map on an iOS app and place your current location. \nWhat's next for Convergent\nIncorporating other users and adding navigation to our app so users can see their profile and statistics. Additionally there will be matches which users can join and play with others. \n",
        "hackathon_id": "hacksc2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nMany of us are not able to afford a private mode of transportation. Thankfully, we do have other options like Uber or Lyft which enable us to commute effectively. But unfortunately, it can still get expensive for everyday commutes. So we decided to work on creating a system that provides a cheap as well as consistent solution to this problem.\nWhat it does\nRideOut is a ride sharing application that allows people to pool cars to go from one point to another. It is different from other car pooling or cab applications out there in the sense that it takes into account driver's priorities - drivers post their ride as per their itinerary. \nFor example a person X wants to go shopping from his home and return. X can reduce his/her fuel cost by picking up maybe a couple of people on his way who are also looking to go for a similar errand. As a result, the price is considerably lower than other cabs. The riders benefit from this model since they get a similar ride at deflated price. \nPeople who wish to commute between places can look up for available drivers who have planned their journey on a similar route.\nHow I built it\nWe created an iOS application to showcase our MVP. Coding was done in Swift to speed up development. Back-end was hosted with Parse for the time being. We used Google Maps APIs to carry out all travel and map operations.\nChallenges I ran into\nDrivers can post rides from source S to destination D with several additional points (way-points) in between. With huge number of drivers posting, this creates a graph of available stops (nodes) and paths (edges). Now the challenge is to provide all possible paths when a rider searches for a ride from source S\u2019 to destination D\u2019. There can be multiple paths using those intermediate way-points which can be tough to find since the Google Maps API returns only points in path A to B (it doesn\u2019t consider all points around its near proximity). But our application should provide all such paths.\nSince time was a constraint, we designed an algorithm which finds rides which uses all such way-points in a x mile radius from source and destination only. But it can be extended in future to use all such 1 mile radius way-points along the entire path (not just source and destination).\nAccomplishments that I'm proud of\nWith the time constraint, we are happy to create a close MVP for a ride-sharing app which incorporates a custom routing algorithm as per the novel idea of making the app driver centric and yet keeping the cost cheap for the riders.\nWhat I learned\nWe learnt to use Google Maps APIs better than ever before since we never needed to explore the API to the edge. There was this great real world graph problems which further strengthened our knowledge of the most interesting and effective field of Computer Science.\nWhat's next for RideOut\nWe wish to provide every transit method for a person who is planning to go from A to B. This could be by walk, bike or other transport methods available, to make the system fully complete for a person.\nAs we gather more and more users on the system, and consequently more data, we plan to mine the data to gather meaningful insights out of it. A rating system can be created where drivers can rate passengers and vice-versa. A recommendation engine can be incorporated to make the experience better for both parties.\n",
        "hackathon_id": "hacksc2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\ngoogle-cardboardmicrosoft-luismicrosoft-speach-apiazure\n",
        "hackathon_id": "hacksc2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nBoth of our team members love traveling. And while we were traveling around different places, we found that we always missed a lot of beautiful and interesting things. Sometimes the reason is as simple as we didn't know that they existed. So we developed this RoadTrip Discover to help us better plan our travel.\nWhat it does\nPlan your trip and help you find all the intersting and wonderful places that you might want to visit during your trip. Also we can share the experience using OneNote.\nHow I built it\n(1) Bing Search \n(2) OneNote \n(3) Apple iOS (Map Kit and so on)\nChallenges I ran into\nIntegrating the app with OneNote and Bing search was very challenging for us for the season that we were both new to this and it took us a long time to figure out the best way to integrate our app with them.\nThe Sample code is at least 2 years ago....\nAccomplishments that I'm proud of\nFinally I made it, without a lot sleep\nWhat I learned\nA lot \nWhat's next for RoadTrip Discover\nAdd more thing? Publish to Apple App Store? \nWe will do road trip to North California We will see\n",
        "hackathon_id": "hacksc2015",
        "winner": false
    },
    {
        "description": "\nWhat would a common user interface design pattern look like if it were translated into VR?\nThis web app displays the latest tweets from the user's home timeline in 3D. By turning right, the user can see more tweets. Tweets outside of the user's field of view get replaced by new tweets in the user's feed, allowing tweets to be displayed continuously. Media associated with the tweet can be viewed directly underneath the tweet.\nCardbird runs entirely in your browser. It utilizes Chrome Experiments for VR for setting up three.js to work with Cardboard. OAuth.io is used to authenticate the user with Twitter easily and to call the Twitter API. Tweets are converted into three.js objects and are inserted and removed from the scene as the user turns left and right.\nWhat's next\nCurrently, Tweets are read-only, but the retweet/favorite buttons could be used to perform their associated actions. If a tweet is part of a conversation, the other tweets in that conversation could be displayed behind the tweet.\n",
        "hackathon_id": "hacksc2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nswiftobjective-cxcodephotoshoppapercoremotionaudiotoolkit\n",
        "hackathon_id": "hacksc2015",
        "winner": false
    },
    {
        "description": "\nDelhack 2015\nTeam: Jeremy Keeler, Kyle Sullivan, and Natalie Lane\nProject: Restaurant Heat Map+\nDescription:\n\nA heat map that tracks how busy restaurants are in a given area.\nUsers can navigate a map to see what restaurants are busy and also\npick up sweet flash deals. Restaurant owners can view data about \nhow busy their restaurant is and toss out flash deals to attract\ncustomers to their restaurant\n\nTechnology Used:\n\nPostgres, Express, Angular, Node.js with a dash of javascript magic and some css styling. Don't forget bootstrap!\n\n",
        "hackathon_id": "delhack-2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWhat it does\nDigiClick is a glove that allows the user control the cursor on his or her computer. The intuitive controls make navigating a breeze and allows the user to navigate without the restrictions mice or trackpads. To move the cursor, the user simply rotates his or her hand in the desired direction. To click the user depresses and retracts their index finger much like clicking an invisible mouse. To right click, the user simple presses the button located on the tip of the middle finger. Scrolling functionality has also been implemented by clicking and right clicking at the same time and rotating the hand in the desired scroll direction. DigiClick can also be disabled by pressing the green button located on the back of the wrist in order to type or do other tasks while wearing the glove.\nHow we built it\nTo build DigiClick, we connected a flex sensor to an Imuduino. The flex sensor allows us to detect when the user depresses his or her finger which allows us to register a click. In order to determine a click from noise, we use a running average to compute the resistance of the flex sensor over multiple samples. To track mouse movement, we use the Imuduino's built in 10dof sensor  which allows us to track the position and rotation of the glove. A push button allows us to give the user right click functionality and a button on the back of the wrist allows the user to disable the glove. Once all of the components were working together on a breadboard, we went ahead and soldered them on a pcb project board in order to reduce the size of the project and make it wearable. Once the device was small enough to wear, we used wire and tape to secure it to the glove.\nChallenges we ran into\nDetermining the correct threshold for of the flex sensor to register a click proved to be more challenging than we expected. Some of the logic used to control the clicks also gave us some trouble as the glove would frequently get stuck holding down left click. Attaching everything to the glove in a manner that was both comfortable and function also proved to be quite a challenge especially since the Imuduino needed to be positioned rather preceisly in order to function correctly.\nAccomplishments that we're proud of\nWe are proud that we were able to reduce the size of the device to a wearable size and solder the components to the board correctly on the first attempt. We are also proud of how relatively reliable the glove is considering how quickly it was put together and how little we knew about controlling a cursor before hand. \nWhat we learned\nWhat's next for DigiClick\n",
        "hackathon_id": "delhack-2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nangular.jsmongodbsocket.iojavascriptgrunt.jscss3html5youtube\n",
        "hackathon_id": "delhack-2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nSpecial ed students struggling to write essays\nWhat it does\nBreaks down the essay into easy to conceptualize bytes\nHow I built it\nUsing php and mySQL, front end using the bootstrap framework\nChallenges I ran into\nStarted extraordinarily late b/c of idea change late in the game\nAccomplishments that I'm proud of\nPrototype is functional and provides a very basic framework for a minimalistic, easy-to-use design\nWhat I learned\nAn incredible amount; our team was a hodgepodge of different technical skill levels, and by the end, we understood the immense scope of any project \nWhat's next for Essaymaker\nChoosing different sections to add (intro, topic, conclusion), different helper skins/personalities, save function, build your own essay\n",
        "hackathon_id": "delhack-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nThere aren't enough for clubs to showcase what they're working on\nWhat it does\nAllows people to submit a description and upload an image\nHow I built it\nI built using parse, other javascript\nChallenges I ran into\nEverything\nAccomplishments that I'm proud of\nIt works\nWhat I learned\nSetting up Parse, sending info to database through form, displaying info on web page\nWhat's next for Udisplay\nRefining the format, working on CSS to make it look better\n",
        "hackathon_id": "delhack-2015",
        "winner": false
    },
    {
        "description": "\nInspiration Making a game that appeals to everybody\nWhat it does  A fun game for all ages to try to beat or improve their score.\nHow I built it Used Libgdx for cross-deployment amongst, Android, iOS, HTML & Desktop\nChallenges I ran into Getting the Character Sprite to change images, based on character direction.  Getting the Zombies rendered on the screen was tough because, there is no clean way to do it\nAccomplishments that I'm proud of Getting the Title Screen, Main Menu and instruction screens done and implemented.  I also got the character sprite and the bullets working and displayed.\nWhat I learned the complexity of what was supposed to be an easy concept and the great extent of troubleshooting and the adding on of features and enhancements make the project more difficult.\nWhat's next for Bounty Hunter Survival. Adding touch features for android and iOS.  Adding proper background screens, possible expansion of enemies, which would be bonus enemies for certain levels, more characters, that the player can choose from, each with their own strengths and weaknesses.  Working on the algorithms to generate and monitor zombies intended behavior in an automated way.  Fully implementing the scoring system and high scores.  Allow the player to enter data, to be traced with game scores.\n",
        "hackathon_id": "delhack-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaandroid-studio\n",
        "hackathon_id": "delhack-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWhat it does\nHow I built it\nChallenges I ran into\nAccomplishments that I'm proud of\nWhat I learned\nWhat's next for  Industrial fans,Australia\nLooking for high-quality industrial fans, commercial & factory fans in Melbourne, Australia! Visit our website to choose from the world\u2019s best available brands. \nhttp://www.hnw.com.au/\n",
        "hackathon_id": "bathhack",
        "winner": false
    },
    {
        "description": "\nInspiration\nWhenever you buy movies or games, usually a code is present for some online media that you aren't usually interested in. Digital codes also exist for a myriad of different formats, you may receive them by gift, or you may decided you didn't want it before you used it.\nSelling these codes isn't all that difficult, but you are hit with large eBay and Paypal fees, alongside the lack of automated code sending.\nBuying the codes, again, isn't difficult, but sometimes you may be waiting a long time to receive the code from the seller.\nAnother concern with the buying and selling of codes is security, it's very easy to sell a \"dud\" code to someone and simply accuse them of lying about said \"dud\" code. Due to the lack of identity surrounding communities that may trade these code.\nWhat it does\nDicode is a peer to peer digital code buying and selling platform/marketplace. Dicode forces all users, regardless of intent to buy or sell, to have a fully authorised Stripe account, meaning that bank account details, billing addresses and legal names must be used. Once authorised, users can post up products they wish to sell. The code is entered when you list the item to sell, therefore, when bought, the code is instantly delivered to the buyer. Once bought, a feedback system is in place to allow the buyer to notify the system and other users, whether this seller has a good ratio of good to \"dud\" codes.\nIn order for the platform to make money, a small 5% application fee is taken on buyer payment.\nUsers can search for the codes they want based on name, category and price range.\nIn just 24 hours, this application has actually been placed live and multiple real-life purchases have been made.\nHow I built it\nRuby on Rails has been used in conjunction with Heroku to get the app live.\nStripe's OAuth implementation has been used for user creation.\nStripe Connect has been used to allow us to place money in our seller's account without the need for continued approval, as well as take the application fee.\nBootstrap provided a fantastic stepping stone to get the app looking great\nChallenges I ran into\nThe main challenge was getting a payment from a buyer's card, to a seller's stripe account, with an application fee making the way to our platform's account, all in 1 go.\nAnother challenge was getting the app to be usable and look nice in just 24 hours whilst being up against the wall with the sheer amount of backend work needed.\nUsing Stripes OAuth to get our users, rather than using a traditional email and password sign up was an interesting and new problem to solve.\nThe problem of \"what if?\" when it comes to people using \"dud\" codes is a hard problem to get across. However, by forcing full Stripe authorization, a big brickwall is put up to stop people from abusing the system. The addition of the feedback system creates a great foundation to build on for the future, regarding this issue. It is important to remember that when it comes to buying and selling online, regardless of digital content or not, trust is required. \nAccomplishments that I'm proud of\nWe are extremely proud of getting a fully P2P marketplace in to production within 24 hours. In its current state it is fully usable, it's not perfect, but it serves its purpose.\nWhat I learned\nWe learnt about a lot more ruby \"gems\", which are community created code snippets that help with various issues.\nWe learnt that dealing with payments online is rather troublesome, and even harder to test properly.\nWe learnt that trust can never be fully modeled in an online environment.\nWe learnt that Stripe is an absolutely extraordinary product.\nWhat's next for Dicode\nConsidering we managed to achieve so much in such little time, we are thinking about taking steps towards adding a few more things that would make the product fully \"public ready\". In it's current state it can be used for its purpose absolutely fine, but there are some fundemental things missing that no website should be launching without. This includes proper mailing (registration mailers, payment invoices etc) and in particular for a system involving a marketplace, some sort of dispute system, which we planned but decided against due to time constraints.\nTerms and conditions and privacy policies are also lacking. Due to the nature of Stripe Connect, the seller is lawfully treated as their own merchant, which takes a lot of the heat off of our backs when it comes to legal issues and the like. However, this needs to be made clear.\n",
        "hackathon_id": "bathhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythondjangobootstrapjquery\n",
        "hackathon_id": "bathhack",
        "winner": false
    },
    {
        "description": "\nInspiration\nVirtual reality is potentially the future of the games industry, seeing the Oculus rifts on offer was an opportunity we could not miss to get a chance to develop for something that is becoming increasing popular. Virtual reality games fully immerse you and we wanted to attempt to create an experience that achieved that.\nWhat it does\nVirtua Cube is a virtual reality game where the object of the game is to survive for as long as possible by not allowing various cubes to hit you. There are a variety of power-ups in the game, including time manipulation, bonus points, bombs and lasers. There is a high score system so users can compete with their friends to see how long they can survive in the virtual gauntlet.\nHow we built it\nWe used Unity, C# and the Oculus Rift SDK to develop the game.\nChallenges we ran into\nSome of the maths involved in calculating the positions of swerving cubes was more challenging than anticipated and took us a considerable amount of time to figure out. We also faced some issues with the system requirements of the Oculus Rift.\nAccomplishments that we are proud of\nWe are proud to say we have developed a game for virtual reality headsets and creating an experience that we feel you can be fully immersed in. We also feel that the game is very addictive and has good re-playability value.\nWhat we learned\nWe learned more about how to use Unity and C# as well as being introduced to the Oculus Rift SDK and the realm off virtual reality.\nWhat's next for Virtua Cube\nWe have plans to add more power-ups into the game and a larger variety of cubes. We would also like to add an online high score system and would like to look into getting the game working on Android with Google Cardboard. We would also like to add a quest system to the game where you gain addition points for small objectives.\n",
        "hackathon_id": "bathhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtmlcss\n",
        "hackathon_id": "bathhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\ndjangoheroku\n",
        "hackathon_id": "bathhack",
        "winner": false
    },
    {
        "description": "\nInspiration\nParis Attacks\nWhat it does\nIf user needs to report an emergency, to warn others of potential danger, in two clicks of loading the page, they can submit a geo tagged and categorised panic alert to the database, and displayed on the map. They can also submit videos along with their report, encouraging citizen journalism.\nHow we built it\nSQL data base to store the data, php for handling requests, then javascript to format it all, with a bootstrap layout.\nChallenges we ran into\nintegration of video upload and panic reporting into the same database, the tables were made separately so linking a video to a report was difficult until we rewrote the SQL code from scratch.\nAccomplishments that we're proud of:\nvideo uploading and hosting\ncool concept - topical,\nWhat we learned\nRob knows everything\nWhat's next for Don't Panic\nmaking money\n",
        "hackathon_id": "bathhack",
        "winner": false
    },
    {
        "description": "\nTried out node.js and came up with some nice designs.\n",
        "hackathon_id": "bathhack",
        "winner": false
    },
    {
        "description": "\nInspiration\nI was inspired by the #PorteOuverte hashtag on Twitter where citizens in paris were opening their homes to strangers in order to provide them with a safe place to stay amongst the chaos\nWhat it does\nIt maps possible locations people could stay and who to contact AirBnB style\nHow I built it\nLots of node lots of express\nChallenges I ran into\nnode and express\nAccomplishments that I'm proud of\nmanaging to node and express and also postgress. I eventually figured out how to actually pull data and push data to my database properly after many sleepless hours.\nWhat I learned\nPostgress is better than mongo.js\n",
        "hackathon_id": "bathhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\nionicangular.jsnode.jsexpress.jscouchbase\n",
        "hackathon_id": "bathhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavajavascript\n",
        "hackathon_id": "bathhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\ngoogle-metrix-apic#xmlgraph-theory\n",
        "hackathon_id": "bathhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\nphpjavaamazon-web-serviceshtmlcss\n",
        "hackathon_id": "bathhack",
        "winner": false
    },
    {
        "description": "\nWhat it is\nScore Tracker is a Java application that allows you to track the score when playing board games instead of using paper.\nWhat it does\n_Once you launch the application, you chose how many players will be playing the board game.\n_You next chose what type of score tracker you would like to use by selecting a game from the list of score trackers from the pop-up menu.\n_Tap the + and - button under each player to add +1 or -1 to their total score\n_You can add a value in the middle to chose how much to add or remove from the player's total.\nGames supported\n_Tic tac toe\n_Checkers\n_Backgammon\n_Guess Who?\n_Connect 4\n_Battleships\n_Dots and Boxes\n_Scrabble\n_Monopoly\nHow we built it\nWe built it using Eclipse and IntelliJ IDEA\nChallenges we ran into\nCreating the interface with the buttons (just kidding, pretty much everything)\nWhat we learned\nMore JAVA\n",
        "hackathon_id": "bathhack",
        "winner": false
    },
    {
        "description": "\nPROMOTIONAL VIDEO: https://www.youtube.com/watch?v=evA31orGV3g\nTHE PROBLEM:\nHumans are inherently lazy, so lazy that some don\u2019t even want to take that trip to the fridge in vain. Take for example, a busy student studying for finals. They\u2019re hungry but they don\u2019t want to waste time going to the fridge unless there was something cool to eat. So unless this very busy Penn student had time, on top of her 6 classes, to keep a list of things in their fridge and keep updating it too, chances are that she probably has no idea if there is something chill to eat. Our solution is a way to remotely access contents in your fridge. \nSpeaking of very busy people. They\u2019re never organised. They forget to buy new groceries, like forgetting to buy more eggs once they\u2019re out. Our solution was to send the user reminders on an accessible interface whenever they had to go out and buy more groceries. \nAPPROACH TO SOLVING THE PROBLEM: What if there was a way to know what\u2019s in your fridge without having to actually go to it? We approached this problem by creating a remote that lets you know what\u2019s in your fridge. Our approach to tracking the contents of the fridge was to use RFID. All the user has to do is attach a tag to each item in the fridge and scan it against a sensor when putting it in or removing it from the fridge. To send information about the contents of the fridge to the remote, we decided to use Bluetooth. This, we believed, would solve the problem of lazy, busy students knowing what\u2019s in the fridge without having to go to it, as they can remotely access the contents of their fridge. To solve the problem of people forgetting to buy new groceries, IMF also sends reminders via text to the user when they exhaust an item, telling them to buy more. \nTECHNICAL DESCRIPTION\nRFID:\nThe current location of each item in the fridge is kept track of using radio-frequency identification. The items in the fridge each have a unique RFID tag. The tag is scanned by the RFID sensor every time an item is removed or put in the fridge. The device is programmed so that the location of each item is stored in an array with \u20181\u2019 meaning it is currently in the fridge, and \u20180\u2019 meaning it is outside the fridge. The names of the items and the tag numbers corresponding to each item are also stored in arrays. These 3 arrays are parallel, so the index number of the array is used to link the name, tag and location of each item. When an RFID tag is scanned, the sensor reads the tag number, and the location is changed to \u20181\u2019 if the current location is \u20180\u2019 and vice versa. \nBluetooth:\nOur code for the Bluetooth communication was written so that the array index numbers of all the items that are currently in the fridge are sent from the master module to the slave. This Bluetooth communication sends an updated list of what\u2019s in the fridge every time an item is taken out or put in the fridge. Every time the button that is on the remote is pushed, the LCD screen displays the names of the items in the fridge. The Bluetooth receiver code contains the array of names of items in the fridge, so the array index numbers it reads from the master module are used to find the names of the items. \nArduino serial communication:\nThe arduino that contains the RFID sensor and Bluetooth receiver is connected by wire to a second arduino. When an item is removed from or put in the fridge, the array index of the item and its location are sent via wire to the second arduino. The location is updated in the code for the second arduino. The code for the second arduino contains the array of item names in the fridge, as well as an array with the locations. The array index number it reads from the first arduino is used to identify the name of the item. \nEthernet:\nAn Ethernet shield is coupled to the second arduino. Every time an item is taken out of the fridge and is not put back after a period of time (e.g. 12 hours) IMF considers the item exhausted. When an item is removed from the fridge, the code delays for a certain amount of time and checks to see whether the item is still out of the fridge, or has been returned to the fridge after the delay. If the item is still out of the fridge after this amount of time, an SMS is sent to the user as a reminder to buy more of the item. \n\nCODE\n\nCode for RFID, Bluetooth Master and Serial Communication\n\n#include <Wire.h>\n#include <SoftwareSerial.h>\nSoftwareSerial RFID(2, 3);\nSoftwareSerial  BTSerial(5, 6); //RX TX\n\n// 3 parallel arrays\nString names[5] = {\"chips\", \"mint\", \"nuts\", \"apple\", \"juice\"};\nString items[5] = {\"6A0049C6D8\",\"6A0049C655\", \"6A0049EFC4\", \"6F007F61BC\", \"6A003E3389\"};\nint location[5] = {1, 1, 1, 1, 0};\n\nboolean notSent;\nint notFirst = 0;\n\nvoid setup() {\n  BTSerial.begin(9600); // bluetooth communication\n  RFID.begin(9600); // rfid sensor\n  Wire.begin(); // serial communication between arduinos\n  Serial.begin(9600);\n}\n\nbyte x = 0;\n\nvoid loop() {\n\n  // send fridges contents right away\n  while (notFirst == 0) {\n    firstBluetooth();\n    }\n\n  // read RFID tag\n  char tagString[11];\n  int index = 0;\n  String tagnum = \"\";\n  String tagnum2 = \"\";\n\n  while (RFID.available() > 0) {\n\n    int readByte = RFID.read(); //read next available byte\n\n    if (index <= 10) {\n      tagString[index] = readByte;\n      index ++;\n    }\n\n  }\n\n  tagnum = tagString;\n  tagnum2 = tagnum.substring(1, 11);\n  if (tagnum2 != \"\") {\n    Serial.print(tagnum2 + \" \");\n    changeLocation(tagnum2); // update location of item\n    resetReader();\n  }\n\n  clearTag(tagString); //Clear the char of all value\n  resetReader();\n\n  bluetooth(); // start Bluetooth communication\n\n  search(); // check if item is in fridge via serial monitor\n\n}\n\nvoid resetReader() {\n  delay(150);\n}\n\nvoid clearTag(char one[]) {\n  // clear the char array by filling with null \n  // Will think same tag has been read otherwise\n  for (int i = 0; i <= strlen(one); i++) {\n    one[i] = 0;\n  }\n}\n\n// updates location of fridge\nvoid changeLocation(String tag) {\n  for (int j = 0; j < sizeof(location); j++) {\n    if (items[j] == tag) {\n      if (location[j] == 1) {\n        location[j] = 0;\n        Serial.println(names[j] + \" out of fridge \" + \"(\" + location[j] + \")\");\n        notSent = true;\n\n        // Serial communication\n        Wire.beginTransmission(8); // transmit to other arduino\n        Wire.write(j);\n        Wire.write(0);// sends one byte\n        Serial.println(\"sent success\");\n        delay(500);\n        Wire.endTransmission(); // stop transmitting\n        delay(500);\n      }\n      else {\n        location[j] = 1;\n        Serial.println(names[j] + \" in fridge \" + \"(\" + location[j] + \")\");\n        notSent = true;\n        // Serial communication - if item is put back into fridge \n        Wire.beginTransmission(8); // transmit to device #8\n        Wire.write(j); \n        Wire.write(1); // sends one byte\n        Serial.println(\"sent success\");\n        delay(500);\n        Wire.endTransmission();    // stop transmitting\n        delay(500);\n      }\n    }\n  }\n}\n\nvoid bluetooth() {\n  if (notSent) {\n    for (int j = 0; j < sizeof(names); j++) {\n      if (location[j] == 1) {\n        BTSerial.print(j);\n        Serial.println(j);\n      }\n    }\n    notSent = false;\n  }\n}\n\n// display contents of fridge without location change\nvoid firstBluetooth() {\n  delay(1000);\n  if (notFirst == 0) {\n    for (int j = 0; j < sizeof(names); j++) {\n      if (location[j] == 1) {\n        BTSerial.print(j);\n        Serial.println(j);\n      }\n    }\n    notFirst = 1;\n  }\n}\n\n// search for item to see if it's in the fridge \n// via serial monitor\nvoid search() {\n  String item;\n  if (Serial.available()) {\n    item = Serial.readString();\n\n    for (int j = 0; j < sizeof(names); j++) {\n      if (item == names[j]) {\n        if (location[j] == 1) {\n          Serial.println(item + \" is in fridge\");\n        }\n        else Serial.println(item + \" is not in fridge\");\n      }\n    }\n  }\n}\n\n\n\nCode for Serial Communication and Ethernet\n\n#include <SPI.h>\n#include <Dhcp.h>\n#include <Dns.h>\n#include <Ethernet.h>\n#include <EthernetClient.h>\n#include <Temboo.h>\n#include \"TembooAccount.h\" // File containing Temboo account information\n// used to send SMS\n#include <Wire.h> // For serial communication with another arduino\n\nbyte ethernetMACAddress[] = ETHERNET_SHIELD_MAC;\nEthernetClient client;\n\nint numRuns = 1;   // Execution count, so this doesn't run forever\nint maxRuns = 1;   // Maximum number of times the Choreo should be executed\nint x;\n\n// parallel arrays with names and locations\nString names[5] = {\"chips\", \"mint\", \"nuts\", \"apple\", \"juice\"};\nint location[5] = {1, 1, 1, 1, 1};\n\n\nvoid setup() {\n  Wire.begin(8);                \n  Wire.onReceive(receiveEvent); // register event\n  Serial.begin(9600);           // start serial for output\n\n  while (!Serial);\n\n  if (Ethernet.begin(ethernetMACAddress) == 0) {\n    //Serial.println(\"FAIL\");\n    while (true);\n  }\n  //Serial.println(\"OK\");\n  //delay(1000);\n\n  //Serial.println(\"Setup complete.\\n\");\n}\n\n\n// function that executes whenever data is received from master\n// this function is registered as an event in setup()\nvoid receiveEvent(int howMany) {\n\n  // Serial communication\n  while (1 < Wire.available()) { \n  }\n\n  // read in index and location\n  x = Wire.read();    \n  Serial.println(x);\n  // y = Wire.read();\n  // location[x] = y; \n  // Serial.println(y);\n\n  // check location\n  if (numRuns <= maxRuns) {\n    // delay(60000);\n    // if (location[x] == 0) {\n    TembooChoreo SendSMSChoreo(client);\n\n    // Invoke the Temboo client\n    SendSMSChoreo.begin();\n\n    // Set Temboo account credentials\n    SendSMSChoreo.setAccountName(TEMBOO_ACCOUNT);\n    SendSMSChoreo.setAppKeyName(TEMBOO_APP_KEY_NAME);\n    SendSMSChoreo.setAppKey(TEMBOO_APP_KEY);\n\n    // Set Choreo inputs\n    String AuthTokenValue = \"d558044c31f041db628941ac481d838c\";\n    SendSMSChoreo.addInput(\"AuthToken\", AuthTokenValue);\n    String BodyValue = \"Reminder: Buy more \" + names[x] + \"!\";\n    SendSMSChoreo.addInput(\"Body\", BodyValue);\n    String ToValue = \"+12153754459\";\n    SendSMSChoreo.addInput(\"To\", ToValue);\n    String AccountSIDValue = \"ACfd625c80670237064ee9dae1fc445844\";\n    SendSMSChoreo.addInput(\"AccountSID\", AccountSIDValue);\n    String FromValue = \"+13158025038\";\n    SendSMSChoreo.addInput(\"From\", FromValue);\n\n    // Identify the Choreo to run\n    SendSMSChoreo.setChoreo(\"/Library/Twilio/SMSMessages/SendSMS\");\n\n    // Run the Choreo; when results are available, print them to serial\n    SendSMSChoreo.run();\n\n    while (SendSMSChoreo.available()) {\n      char c = SendSMSChoreo.read();\n      //Serial.print(c);\n    }\n    SendSMSChoreo.close();\n  //}\n  }\n}\n\nvoid loop() {\n}\n\n\n\nCode for Remote [Bluetooth receiver with LCD Screen & Button]\nNB: Serial.print statements included for debugging purposes are commented out \n\n#include <LiquidCrystal.h>\n#include <SoftwareSerial.h>\nSoftwareSerial  BTSerial(2, 3); //RX TX\nLiquidCrystal lcd(8, 9, 4, 5, 6, 7);\n\nconst int button = 13; //define button pin\nint val = 0;\nint oldVal = 0;\nint backlight = 10; // define the backlight pin of LCD\n//define item's nameLength and row number for printing purposes on the LCD screen\nint nameLength = 0;\nint row = 0;\n\n// parallel arrays containing names of items and locations\nString names[5] = {\"chips\", \"mint\", \"nuts\", \"apple\", \"juice\"};\nint location[5] = {0, 0, 0, 0, 0}; //0 = out of fridge; 1 = in fridge\n// array to translate ascii value, obtained via bluetooth, to decimal value \nint ascii[5] = {48, 49, 50, 51, 52};\nint sensorValue;\nboolean avail = BTSerial.available();\n\nvoid setup() {\n  BTSerial.begin(9600);\n  pinMode(button, OUTPUT);\n  pinMode(backlight, OUTPUT); // define the backlight pin as OUTPUT\n  digitalWrite(backlight, HIGH); // set the backlight high\n  lcd.begin(16, 2); // Print a message to the LCD.\n  //printing welcome message to screen\n  lcd.print(\"Welcome to IMF!\");\n  delay(2000);\n  lcd.clear();\n  lcd.setCursor(0, 0);\n  lcd.print(\"Press me to see\");\n  delay(2000);\n  lcd.setCursor(0, 1); //move cursor to next line\n  lcd.println(\"what's in yo          \");\n  delay(2000);\n  lcd.clear();\n  lcd.setCursor(5,1.5); //move cursor to middle of bottom line in screen\n  lcd.print(\"FRIDGE!\");\n  delay(2000);\n  lcd.clear();\n  Serial.begin(9600); //begin serial communication\n}\n\nvoid loop() {\n  val = digitalRead(button); //check if button pressed or not\n  //Serial.println(val);\n  //if button was just pressed right now\n  if (val == HIGH && oldVal == LOW) {\n//    Serial.println(\"in here\");\n    lcd.clear();\n    // read information sent by master\n    while (BTSerial.available()) {\n      char index = BTSerial.read(); //reads index of items currently in fridge from master\n      // iterate through array to match ascii value with index\n      for (int i = 0; i < sizeof(names); i++) {\n        if (ascii[i] == index) {\n          // print name of item to LCD screen along the width of the screen.\n          //if the list doesn't fit on one line, reset nameLength to 0 and set row = 1\n          if (nameLength + names[i].length() > 15) {\n            nameLength = 0;\n            row = 1;\n          }\n          //move cursor to next line after the last print word\n          lcd.setCursor(nameLength, row);\n          //print item name followed by a space\n          lcd.print(names[i] + \" \");\n          //update nameLength everytime an item's name is printed on the screen. the '+1' refers to the gap followed  by an item's name\n          nameLength += names[i].length() + 1;\n//          Serial.println(names[i]);\n          location[i] = 1; //this means that the items getting printed is in the fridge\n          // lcd.setCursor(0, 1);\n          delay(500);\n        }\n      }\n    }\n    //reset row and nameLength\n    row = 0;\n    nameLength = 0;\n//    Serial.println(\"setting old val to val\");\n  }\n  oldVal = val; //update oldVal\n  delay(500);\n}\n\n\n",
        "hackathon_id": "ese111f15",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe SmartJacket is inspired by the ongoing Syrian refugee crisis. Refugees pack into lifeboats to sail through the Mediterranean to Europe, often filling boats far beyond their capacity. When these boats capsize, refugees are only have lifejackets (if they are lucky) and are left to the mercy of the sea. Some are never found. \nWhat it does\nOverview\nThe product has two main features--the jacket itself, which collects relevant data to the person wearing it (position, temperature, heart rate) and a networking capability that enables each jacket to access the information of jacket(s) around it, and to transmit this data to potential rescuers.\nSubsystem 1\nInside the jacket there will be a collection of sensors to help determine the vitals of the wearer. These sensors include a heart rate sensor as well as two temperature sensors, one to collect body temperature and one to collect the external temperature.  In addition the device will have a way of obtaining its position (GPS / Internet).\nSubsystem 2\nThe second component of the jacket involves its radio and network to communicate the sensor data (position and vitals). The idea behind this is a collection of jackets that can dynamically create an ad-hoc network in order to efficiently and reliably communicate data to the rescuers. \nGoing Further\nAlthough the original intended purpose of the device is to be used at sea with lifejackets the jacket can easily be modified to suit the needs of mountain climbers, military personnel, etc.\nIntro Video\nhttps://www.youtube.com/watch?v=ZQyGeAH69kA\nTech Video\nhttps://www.youtube.com/watch?v=PbTptgTUPi0\nResources & Documentation\nPower Point Documentation\nhttps://docs.google.com/presentation/d/158SwC2WT8aaCJhQizkH8sPBdtKX1GikPdfcGK6NDCtw/edit?usp=sharing\nRescuer Code\nhttps://docs.google.com/document/d/1xg2Q4Z-bZ9ZYCC6teL1xQ6xh36OYQHK6aB12k36wY3E/edit?usp=sharing\nNode Code\nhttps://docs.google.com/document/d/1ph8eAyZ3lyJT2kuEhFeuaH_BPu8264PUYIbreR56feI/edit\n",
        "hackathon_id": "ese111f15",
        "winner": false
    },
    {
        "description": "\nFrom ancient China, to Benjamin Franklin\u2019s experiments with electricity, to the fun times for children and their new toy, kites have been one of the most fun and most consistent toys for people of all ages to play with (and use for experiments!). But what if we told you you could do more with your kite? \nSmartKite drastically improves the kite flying experiences. Equipped with state-of-the-art sensors and communications, SmartKite can take temperature, pressure, or altitude data and relay the data to another system on the spool via BlueTooth. SmartKite makes getting scientific data easier, and, for advanced kite fliers, getting that important altitude data a piece of cake. Also included are internet capabilities: KiteRight can retrieve weather data and advise the user on flight conditions! KiteRight takes the guesswork out of the equation, fly right with KiteRight today! \nTechnical:\nSmartKite consists of two modules: a receiver attached to the kite's spool and a transmitter attached to the kite itself. Upon startup, SmartKite connects to Yahoo Weather via Ethernet, gathering and displaying wind speed and direction on the receiver, allowing the user to determine if the conditions are right for flying. Then, the receiver starts communicating with the transmitter using bluetooth. The transmitter utilizes an Adafruit BMP180 sensor, which measures atmospheric pressure in hectoPascals and temperature in degrees Celsius. After calibration, during which SmartKite gets a baseline pressure at ground level, the sensor gathers data continuously. The pressure is used to calculate the kite's altitude using the barometric formula (generally, a change in pressure of 1.2 kiloPascals roughly corresponds with a 100 meter change in altitude). Altitude and temperature readings sent from the transmitter are displayed on the receiver.\n",
        "hackathon_id": "ese111f15",
        "winner": false
    },
    {
        "description": "\nAbstract\nHave you ever burnt your tongue trying to sip your coffee when it\u2019s way too hot to drink? Or left it sitting on the counter only to pick it up later when it\u2019s almost iced coffee? With the new SmartMug technology, you will receive an alert on your phone letting you know when your drink of choice has cooled to the ideal temperature, and if by mistake you attempt to take a sip before it\u2019s ready, the mug will gently vibrate, warning you to put it back down. \nThe cup will have a temperature sensor to monitor when the coffee is ready. Using networking technology, a notification will the sent to the user\u2019s phone when the coffee is at a drinkable temperature. The coffee mug will also incorporate an accelerometer that detects when the user is going to take a sip. If the accelerometer detects movement before the temperature sensor reading is at a certain maximum, the cup will vibrate, warning the user that the coffee is too hot. \nPromo Video: https://www.youtube.com/watch?v=x-UD_Lqq9Ls\n",
        "hackathon_id": "ese111f15",
        "winner": false
    },
    {
        "description": "\nInspiration\nEver feel like reading in the dark without light?\nMaybe the lamp is too far away from you?\nMaybe the power went out?\nMaybe you want to read at 4am but don't want to wake your S/O roommate?\nMaybe you are out camping?\nMaybe reading in the dark strains your eyes?\nMaybe you want to keep a reading log without writing the pages down?\nWith BookLite those are problems of the past \nWhat it does\nMakes it easier to read by automatically turning up the brightness in the dark\na ring of LED light bulbs will adjust to the intensity of light\nKeeps track of how long the users have been reading by sending a friendly reminder\nA built-in timer that has a customizable allowable reading time\nSends email to user's phone to remind themselves if allowable reading time is surpassed\nLight blinks dimly after allowable reading time to protect eyesights\nGetting an effortless update of number of pages read\nA light sensor that senses the number of times pages have been flipped\nWhen book is closed, user will receive an email update of his/her daily reading log\nHow I built it\nWe started first with arduino uno and breadboard. By using wires, photoresistors and leds we were able to create a dark activated light switch. This is also done by comparing the resistance reading on the photoresistor with the threshold we set up on arduino. We added appropriate code that makes the leds blink in conjunction with timer by using the delay function. Then we implemented the ultrasonic sensor and the related code to add two pages to the total page count when there's an object within 5 cm of the sensor. By using delays we were able to create a refresh rate for the sensor that is able to capture the accurate amount of pages. After that we created a client email address and with code, we were able to make the server send an email to user's email every two hours, detailing how many pages one has read over the last 24 hours.\nChallenges I ran into\nSetting up a client email server//\nHaving the ultrasonic sensor do correct rating over a certain refresh rate\nAccomplishments that I'm proud of\nImplementing an accurate sensor for counting pages//\nFiguring out how to put things we learned in ESE 111 into a final project\nWhat I learned\nHow to set up client email address and send email//\nImplementing ultrasonic sensor//\nBuilding form the basics to more complex results\nWhat's next for BookLite\nImplementing a stronger lighting system//\nHaving the users able to compare their reading logs with each other, other intercommunication improvements with bluetooth\n",
        "hackathon_id": "ese111f15",
        "winner": false
    },
    {
        "description": "\nInspiration\nEver wondered if the drinks you put in the fridge a while ago are already cold or not? Don't want to get up from the couch to check? Just grab your phone and ColDrinks tells you when your drinks are ready to be enjoyed!\nLink to promotional video: https://www.youtube.com/watch?v=aO7WtFZdR18&feature=youtu.be\nWhat it does\nHave you ever bought lots of drinks and put them in the fridge to cool down and then checked several times if they are cold enough? Or have you even forgot about them while waiting? We have a solution for you. Our product is a small box that you place inside a fridge. You simply put a can or bottle on it and wait until the system sends a text message to your phone notifying that your drink is at the temperature you want to drink it. It is called ColDrinks.\nHow I built it\nOur product is the combination of efficiency and viability. It is very easy to use and has great benefits. The Arduino uses power from a Minty Boost battery pack that we crafted in the soldering workshop. The battery pack is powered by two AA batteries and connected to the Arduino via USB. The Minty Boost pack is made of a printed circuit board (PCB), several resistors, capacitors, electrolytic capacitors, a diode, a power inductor, a converter chip, and a socket that protects the chip. Arduino has a Bluetooth module and a LM34 temperature sensor attached to it. The temperature sensor is placed on the top layer of a soft foam. This way when something is placed on it, the foam compresses and the bottle has perfect contact with the temperature sensor. However, when the bottle is removed the foam returns to its normal position.\nWe uploaded a code on the Arduino, that executes itself when connected to the battery pack. The temperature sensor starts sending information to the Arduino and values of temperature are printed on the Serial Monitor. The Arduino is connected to a Bluetooth module (transmitter), which sends a signal to another Arduino unit with a Bluetooth module (server), which is located in another casing. The other Arduino is connected to an Ethernet shield, which allows us to establish a connection to the Internet. We used services provided by Temboo and Twilio to execute text messaging. When the temperature hits the desired threshold, a signal is sent to the Temboo server, which initiates sending a message through the Twilio account. The Twilio service sends a text message to the number specified in the code.\nBecause Arduino works well in different temperatures, the system will work for many hot and cold drinks. After observations we have found out that due to some malfunctions in the system, the temperature sensor sometimes gives an error voltage of 0, which translates to 32 Fahrenheit\u2019s. We eliminated this problem by modifying the code to cancel out these error readings. (Adding if and else statements, depending on the readings.) The message will be sent to the phone only when Arduino starts getting a reasonable signal.\nOne of the main components of the project is the design of the casing. We tried various approaches to achieve the best design: using a servo to grab the bottle, using a spring that shoots to the bottle and attaches the sensor, using rack-and-pinions and so on. We found out that curving the top of the casing and attaching the temperature sensor on the bottom of the curve turned out to be the most reliable and the most beautiful design. We made the boxes with laser cutting equipment in one of the MEAM labs, under supervision of teaching assistants Sam Weintraub and Spencer Collins. The top of the box has lots of laser cuts on it, in order to make it elastic. When a bottle is placed on the casing, the material bends out, but its elasticity does not let it break. We researched the most common measurements used in bottles and cans. According to this research, we developed the perfect curve to accommodate most bottles. Bottles of various sizes always roll into the middle and press on the temperature sensor, producing a good reading.\nWe have also created a survey powered by Penn Engineering, which was targeted to figure out the possible market and the willingness of consumers to purchase our project. The results of the survey prove that lots of people have never thought about a device that would keep track of the temperature of their drink, (70%) but most people would like to have some kind of technology do this for them (79%). Lots of people liked our project and were interested in it (84%). \nHere is a link to the survey: https://upenn.co1.qualtrics.com/jfe/form/SV_bCovaV9Ds8IR7ff\nAnd the code that made this technology work:\nTransmitter:\n#include <SoftwareSerial.h>\nSoftwareSerial  BTSerial(2, 3); //RX TX\nint tempPin = A1;\nString BTSend;\n\nvoid setup() {\n  BTSerial.begin(9600); \n  Serial.begin(9600);\n  pinMode(tempPin, INPUT);\n}\n\nvoid loop() {\n  float sensorReading = analogRead(tempPin); //read temperatuyre from the sensor\n  sensorReading=(((sensorReading*5000)/1024)-500)/10;\n  int degreeF = ((sensorReading*9)/5)+32; //convert the value of temperature\n  BTSerial.println(String(degreeF));\n  Serial.println(String(degreeF));\n  delay(1000);\n}'\n\nServer:\n#include <SoftwareSerial.h>\n#include <SPI.h>\n#include <Dhcp.h>\n#include <Dns.h>\n#include <Ethernet.h>\n#include <EthernetClient.h>\n#include <Temboo.h>\n\nSoftwareSerial  BTSerial(2, 3);   \n#define TEMBOO_ACCOUNT \"srimali\"\n#define TEMBOO_APP_KEY_NAME \"myFirstApp\"\n#define TEMBOO_APP_KEY \"b7bb7ef00e2848849fdf14d9444cf14d\"\nString outString =\"\";    \nboolean stringComplete = false;\nint degreeF = 0;\n\nbyte mac[] = {0x90, 0xA2, 0xDA, 0x00E, 0x07, 0xC5};\n\nEthernetClient client;\n\nvoid setup() {\n  BTSerial.begin(9600);\n  Serial.begin(9600);\n  outString.reserve(10);\n  delay(2000);\n  while(!Serial);\n  Serial.print(\"DHCP:\");\n  if (Ethernet.begin(mac) == 0) {\n    Serial.println(\"FAIL\");\n    while(true);\n  }\n  Serial.println(\"OK\");\n  delay(1000);    \n}\n\nvoid loop() {\n      if (BTSerial.available()) {\n    char inChar = (char) BTSerial.read();\n    outString += inChar;\n    if (inChar == '\\n') {\n      stringComplete = true;\n    }\n  }\n  if (stringComplete) {\n    degreeF = outString.toInt();\n    Serial.println(degreeF); \n    if (degreeF < 67 && degreeF != 32) {\n\n    Serial.println(\"Running SendSMS\");\n    TembooChoreo SendSMSChoreo(client);\n    SendSMSChoreo.begin();\n    SendSMSChoreo.setAccountName(TEMBOO_ACCOUNT);\n    SendSMSChoreo.setAppKeyName(TEMBOO_APP_KEY_NAME);\n    SendSMSChoreo.setAppKey(TEMBOO_APP_KEY);\n\n    String AuthTokenValue = \"380e755fb6c03d96923eba7dd59f0cc7\";\n    SendSMSChoreo.addInput(\"AuthToken\", AuthTokenValue);\n    String BodyValue = \"Mr. Rimali, your drink is ready.\";\n    SendSMSChoreo.addInput(\"Body\", BodyValue);\n    String ToValue = \"+17208626024\";\n    SendSMSChoreo.addInput(\"To\", ToValue);\n    String AccountSIDValue = \"AC90f1f15922f1658eda4fb1dc60b49194\";\n    SendSMSChoreo.addInput(\"AccountSID\", AccountSIDValue);\n    String FromValue = \"+14155992671\";\n    SendSMSChoreo.addInput(\"From\", FromValue);\n    SendSMSChoreo.setChoreo(\"/Library/Twilio/SMSMessages/SendSMS\");\n    SendSMSChoreo.run();\n\n    while(SendSMSChoreo.available()) {\n      char c = SendSMSChoreo.read();\n      Serial.print(c);\n    }\n    SendSMSChoreo.close();\n    delay(300000);\n  }\n    outString = \"\";\n    stringComplete = false;\n  }\n}'\n\n",
        "hackathon_id": "ese111f15",
        "winner": false
    },
    {
        "description": "\nHave you ever had the dreadful experience of having your locker password hijacked, and your belongings stolen? What about your safe? If not, you can. Or could, up until you get Gotcha!.  \nGotcha! is a device you can add to any locker, safe deposit, closet, or any space enclosed by a door, that turns on a video recorder whenever the door is open. This allows you to monitor any movement inside the safe, and even detect any intruder who hijacks your personal space. \nOur device consists of an accelerometer attached to your locker\u2019s door. This accelerometer will sense motion (whenever the door is opened) and will send a Bluetooth signal to a camera attached at the end of the locker (pointing at the door). The camera will record a video up until the moment when the door is closed, and the recorded video will be sent to the owner\u2019s phone, if possible. If not possible, it will be posted online and the link will be sent to the owner through a text message.\nHere is the link to our Promotional Video:\nhttps://www.youtube.com/watch?v=dTP3J5oJvuY\n",
        "hackathon_id": "ese111f15",
        "winner": false
    },
    {
        "description": "\nAbstract\nTraditional gamepads typically require a T.V. screen or a monitor that is propped up on a stand. With handheld devices such as smartphones however, require you to hold onto the display itself. The player to either has to prop up the phone on the table or settle for on screen displays that lack the tactile feedback that physical buttons have. The VPad utilizes Google\u2019s open-source VR platform Cardboard to give gamers an affordable VR gaming experience.  The VPad will interface via Bluetooth to a computer and the rendered frames in the computer will then be streamed to the android smartphone. Headtracking is also implemented to complete the whole VR experience. The incorporation of these systems in a gamepad will prove to be invaluable in certain game genres like racing games. The user can coast through a race track while looking around and enjoy amazing scenery that accompanies the skyline. This effectively provides an affordable solution to players who want to experience VR gaming. \nThe Problem\nToday, many gamers wish to experience the awesome vr gameplay, but are restricted by certain problems.. Phones need to be propped up in order to use a gamepad, but with the VPad, this is not a requirement. Gamepads that work with today's VRs such as Oculus cost more than $100 usually, but the VPad is affordable and can be easily implemented and ran on any VR and game.\nDetails\nGame Engine: Unity\nWe made a driving simulator in Unity to demo the VPAD. We used Unity's graphics engine to render the car and race track and used Unity's physics engine to implement the driving mechanics. Since the focus is on the VPAD controller, we will not go into the technical details of how c# code in Unity works. For the friction, we adjusted the center of mass to be low as possible and increased the stiffness off the wheel colliders to match the terrain we imported. I used lerping and clamping to fix the driving wheel's rotation. To parse the data from serial monitor, we used a SerialPort and connected to the right port to read a line. After that, the string was parsed and broken down based on whenever there were spaces between the number and the next value. Since the values from the analog stick varied from 510 to 530, we set a thresholds for an idle joystick so the car would not rotate while there was no user. The push buttons were connected to digital pins, so we only needed to detect if data read from the pin was HIGH or LOW and start accelerating or decelerating based on the user's presses.A copy of the C# code is included in the Google Drive files found below. ThingSpeak: In the Unity code, we tracked the amount of times each button on the controller is pressed and automatically upload the data to ThingSpeak at the end of each session. ThingSpeak servers will then display a graph that logs the user's stats.\nVR Technology: Samsung Gear VR and Trinus\nSome may argue that the Samsung Gear VR used in the demo contradicts our philosophy of creating a cheap VR gaming solution, especially considering that Samsung's Gear VR costs around $200 alone and requires a $600 smartphone to operate. This is a valid point, however, we do want to point out that our implementation of the VPAD works just as well with any Smartphone that is compatible with Google Cardboard. Google Cardboard can be found on Amazon for as low as $6. This is made possible through an Android App called Trinus, Trinus acts as a bridge between the computer and smartphone. The app streams anything that is displayed on the computer's screen to the smartphone via Wi-Fi and sends data from the Gyro and Accelerometer in the phone to the computer, this is how headtracking is implemented. The \"3D\" effect is created by rendering two images that are slightly offset from one another and presenting one image to each eye. The stereoscopic images tricks our brain into thinking that we are perceiving depth. \nVPad Controller: Arduino\nThe controller itself runs on Arduino. We are using two Arduino Unos along with an Analog stick, two buttons, two Bluetooth modules and a battery pack. The Arduino code and circuitry diagrams will also be included in the image gallery above.\nThe Analog stick outputs two analog signals, one for the x direction and one for the y direction. The signals range from 0 to 1023 with 0 corresponding to the left direction, 1023 to the right direction and the 500-520 mark being the idle or neutral state. With this information, we mapped out the ranges that is outputted from the serial monitor to the corresponding steering directions in the Unity code. \nThe two buttons are simply connected in series with a resistor and connected to two digital pins that output a simple on or off state. Again, the state of the two buttons are outputted in the serial monitor to Unity and the green and blue buttons were matched to the gas and reverse functions respectively. \nThe implementation of Bluetooth has allowed us to go completely wireless which is critical to the immersive VR experience because the user will no longer have orientation constraints that are placed by wires. If there were wires involved, for example, doing a full body 360 degree turn will wrap the wires around the user's body. Needless to say, this will ruin the whole experience. We used two HC-05 that were paired up in a Master and Slave relationship with the Master on the controller transmitting data and the Slave on the other Arduino that is hooked up to a computer to read the transmitted information. \nArduino code for the transmitter:\n#include <SoftwareSerial.h>\n  // Define buttons to use\n   int vertical = 0;\n   int horizontal = 0;\n   int selectA, selectB;\n\n   const int buttonB = 8;\n   SoftwareSerial  BTSerial(12, 13); //RX TX\n// variable to hold the state of the buttons\n\n//=========================================================\n//=======  SETUP\n//=========================================================\nvoid setup()\n{\n   BTSerial.begin(9600);\n   pinMode(buttonB, INPUT);  \n   pinMode(2, INPUT);\n   pinMode(8, INPUT);\n   Serial.begin(9600);  // turn on the serial communication\n\n}\n\n//=========================================================\n//======= MAIN LOOP\n//=========================================================\nvoid loop()\n{\n\n  vertical = analogRead(1); // will be 0-1023\n  horizontal = analogRead(0); // will be 0-1023\n  selectA = digitalRead(2); // will be HIGH (1) if not pressed, and LOW (0) if pressed\n  selectB = digitalRead(8);\n  // print out the values\n\n   serialToUnity();\n\n}\n\n\n//=========================================================\n//======= Serial Communication to unity\n//=========================================================\nvoid serialToUnity()\n{\n    String output = \"\";\n    //if(output == \"\") {\n      // Serial.print(vertical, DEC);\n    //}\n    //else {\n      BTSerial.print(vertical, DEC) + BTSerial.print(\" \");\n      Serial.print(vertical, DEC) + Serial.print(\" \");\n    //}\n    //if(Serial.peek() == -1) {\n        BTSerial.print(horizontal, DEC) + BTSerial.print(\" \");\n        Serial.print(horizontal, DEC) + Serial.print(\" \");\n\n        if(selectA == LOW) {\n          BTSerial.print(\"A \");\n          Serial.print(\"A \");\n        }\n        else {\n          BTSerial.print(\"C \");\n          Serial.print(\"C \");\n        }\n\n        if(selectB == LOW) {\n          BTSerial.print(\"B\");\n          Serial.print(\"B\");\n        }\n        else {\n          BTSerial.print(\"D\");\n          Serial.print(\"D\");\n        }\n    //}\n    //else {\n      //Serial.print(horizontal, DEC) + Serial.print(\" \");\n    //}\n\n    //if(selectA == HIGH)\n    //{ output += \" A\";}\n    //if(selectB == LOW)\n    //{ output += \" B\";}\n\n      BTSerial.println(\"\");\n      Serial.println(\"\");\n\n    Serial.flush();\n    delay(100);\n\n}\n\nArduino code for receiver:\n#include <SoftwareSerial.h>\nSoftwareSerial  BTSerial(2, 3); //RX TX\nString inData;\nvoid setup() {\n  BTSerial.begin(9600); //begin bluetooth communication\n  Serial.begin(9600); //begin serial communication\n}\n\nvoid loop() {\n  if (BTSerial.available()) {\n    char received = (char) BTSerial.read(); //reads single character at a time\n\n        // Process message when new line character is recieved\n        if (received == '\\n')\n        {\n            Serial.println(inData);\n\n            inData = \"\"; // Clear recieved buffer\n        } else {\n              inData += received; \n        }\n  }\n}\n\nSince the Arduinos are powered via USB, a power bank that is used to charge smartphones can be repurposed and used as the power for the controller. The power bank even has a battery level indicator to tell us when to charge the Vpad. We used a double sided tape to tape the controller onto the Arduino Uno and with that, we have a completely wireless controller. \nFiles\nhttps://drive.google.com/folderview?id=0B5oquuFspmWoN1h6R1ZIdjhBNlU&usp=sharing\nThingSpeak\nhttps://thingspeak.com/channels/69685\nVideos\nIntro:\nhttps://www.youtube.com/watch?v=eKC0J13TJbQ\nFinal:\nhttps://www.youtube.com/watch?v=aeN0Aisppvk\nGoogle Doc version:\nhttps://docs.google.com/document/d/1ssZ1BxdQpgPH0yRaRq9vAdIHnbqf3kUEDp5Zgvh5CA4/edit?usp=sharing\nClosing\nThe beauty of the VPad is that it is made with technology that is readily available. The Arduinos, battery pack, analog stick, buttons and Google Cardboard can all be purchased at low prices from various online retailers. The computer and smartphone on the other hand, are products that are common in every house hold. Ultimately, we wish to show that you don't need to spend hundreds of dollars to experience the latest and coolest technology that the modern world has to offer. \n",
        "hackathon_id": "ese111f15",
        "winner": false
    },
    {
        "description": "\nAbstract:\nThe Tracker Turtle is a compact, scalable anti-theft device. The Tracker Turtle can be easily \"locked\" & \"unlocked\" from any Bluetooth capable device. RGB LEDs built into the turtle will glow green when the device is \"locked\". The Turtles can be placed on personal belongings such as laptops and backpacks and \"locked\" to protect them from thefts. Once locked, when movement is sensed with the aid of an onboard accelerometer and our sophisticated algorithms, it will sound an alarm, flash red, and send a Bluetooth notification to your cellular device. A powerful built in magnet and non-slip surface on the bottom allow the TrackerTurtle to be secured to many surfaces. \nAn alternate mode still in development will allow you to disable the movement based alarm and switch to a proximity based \"wireless leash\" instead; alarms will be sounded when the distance between turtle and smartphone exceed a certain threshold, measured by monitoring signal strength. \nInspiration\nOur project was inspired by the need for a more convenient method of protecting valuable personal belongings. Laptop locks exist, but are bulky and not user friendly. We set out to create a product to protect your laptop from theft while you step away to use the bathroom or take a call. \nAddressing the Problem\nUnattended valuables are highly prone to theft especially susceptible to theft, and we wanted to create a device to combat this. Our approach to this problem was to create a device that will keep any personal belonging safe while left out. Thus, the Tracker Turtle was born. We decided that the Tracker Turtle should alert the owner of the turtle, and those around the items that may be stolen, and proposed that our device should make some sensory display such as a loud noise and flashing lights, and alert the user over Bluetooth that their items were being stolen. \nOur design would provide threefold protection against thefts: firstly, the deterrent of a glowing green turtle on the personal belonging; secondly, the audiovisual alarms from the turtle once a theft was initiated; and thirdly, the bluetooth notifications alerting the owner and allowing them to take action.\nWhat it does\nThe Tracker Turtle contains sophisticated movement detection to protect your devices from theft. It is sensitive to changes in acceleration over time and also highly responsive to minute changes in Z-axis orientation (<10\u00b0). Our unique calibration system measures the initial position of the Turtle once locked, and monitors its sensors to alert the user of changes from that position. \nAdditionally, the Tracker Turtle uses Bluetooth to connect with any smart phone. Once the user\u2019s phone is connected, the Tracker Turtle can be locked and unlocked with a unique four digit pin code created by the user. If movement is detected by the turtle when it is locked, an alert will be sent the user\u2019s phone saying that their belongings are being stolen. Once the device has performed its duty, it can be easily unlocked with the same passcode created by the user.\nHow we built it\nThe Tracker Turtle\u2019s main hardware is Punch Through Design\u2019s Light-Blue Bean. The bean contains an on board accelerometer, Bluetooth module, and LED. In order to perform the functions we wanted, we attached a speaker and two additional LEDs to the bean. Finally, we used a clear PVC 3D printed turtle shell as the enclosure for the bean to create a simple, powerful device. \nAccomplishments that we're proud of\nOur team is especially proud of the incoming and outgoing bluetooth communications incorporated into our product.\nWhat we learned\nWe learned a lot about Bluetooth Low Energy communications protocols in the course of this project.\nWhat's next for TrackerTurtle\nWe hope to include RSSI based distance detection into future prototypes of this product, to alert the user when their Turtles are going out of range.\n",
        "hackathon_id": "ese111f15",
        "winner": false
    },
    {
        "description": "\nESE 111\nAutomated Pet Feeder\nTechnical Description\nBisher Haddadin & Omar Hafez\nA personal problem we both faced as pet-owners was filling a pet\u2019s bowl with food which is a time-consuming and tedious task to be performing multiple times a day, every single day of the week. This is also related to the problem of pet-owners not being able to travel and leave their pet behind for a few days or even longer. After having an ideation session, this inspired us to come up with the concept for our Automated Pet Feeder. The approach we adopted was find a need in the market that we satisfy with the creation of our product as opposed to trying to fit a technical product to some need in the market. This is perhaps one of the most important reasons our product concept led to the creation of a likeable and marketable product prototype. \nWe now had this wonderful idea that we were trying to implement using our knowledge of embedded systems based on the Arduino microcontroller. It was time to go to the drawing board. You can see below the very basic prototype plan that involved using a light-gate that will detect the level of food in the bowl and using a lower threshold in order to detect when the bowl was empty. It sounded very promising on paper. \nWe left the drawing board and headed straight to the lab, enthusiastic as we were. We then started discussing our idea with the lab engineers and technicians attempting to find any potential failures of the system and any possible improvements. We started thinking of each component of our system separately and considering that the light-gates one was the most ambitious, it was the first to be scrutinized. After thorough research, we discovered that the light gate beam might be scattered by the surface of our bowl even if it was clear. This would have led to inconsistent readings and the lower threshold would vary greatly and be inaccurate. We started brainstorming for alternatives and decided that using a strain gauge-based load cell would be the most feasible alternative in order to find the lower threshold of food in the bowl (using mass this time instead of the length of column of food in the bowl). With this alternative proposed, we started procuring parts that weren\u2019t readily available in the lab. These were: The load cell, the load cell amplifier (since the voltage change the load cell produces is too small to be directly read by the Arduino), the dispenser and stand and the bowl to be used. We also got 3 Arduinos, breadboards, a servo motor, two Bluetooth modules, an Ethernet shield and connecting wires. We decided that we will be 3D printing the part that will be used to open and close the dispenser and the part connecting the servo to that stopper that will be used to rotate it 90 degrees to open and close it. The apparatus setup is shown in the following pictures:\nWe began with the servo-load cell system. The load cell needed to be calibrated to give accurate readings of weight by using a known weight and editing the calibration factor. The following code was uploaded to the Arduino that connected the servo to the load cell. It opens the servo by rotating it by 90 degrees and updates the value of the Bluetooth serial with an \u2018H\u2019 if the weight is below the threshold. It uses the HX711 library (for the load amplifier), the servo library and the SoftwareSerial library for Bluetooth.\n/*\nLoad cell-servo system:\n Arduino pin 2 -> HX711 CLK\n 3 -> DOUT\n 5V -> VCC\n GND -> GND\n Most/ any pin on the Arduino Uno will be compatible with DOUT/CLK.\n The HX711 board can be powered from 2.7V to 5V so the Arduino 5V power should be fine.\n*/\ninclude \"HX711.h\"\ninclude \ninclude \ndefine DOUT  3\ndefine CLK  2\nHX711 scale(DOUT, CLK);\nSoftwareSerial  BTSerial(7, 6); //RX TX\nfloat calibration_factor = -21260; \nServo serv;\ndouble weight = 0;\nvoid setup() {\n  BTSerial.begin(9600); \n  Serial.begin(9600);\n  Serial.println(\"Weight Readings:\");\n  serv.attach(10);  // attaches the servo on pin 10 to the servo object\n  serv.write(90);\n  scale.set_scale(calibration_factor);\n  scale.tare();  //Reset the scale to 0\n}\nvoid loop() {\n  scale.set_scale(calibration_factor); //Adjust to this calibration factor\n  Serial.print(\"Reading: \");\n  Serial.print(scale.get_units());\n  Serial.print(\" kg\");\n  Serial.println();\n  weight = (scale.get_units());\n  if (weight < 0.05) { //if the weight is less than the lower threshold, rotate servo\n    delay(2000);\n    serv.write(0);\n    delay(900);\n    serv.write(90);\n    BTSerial.println(\"H\");\n    delay(900);\n    }\n    else {\n    BTSerial.println(\"L\");\n    } \n    delay(100);\n}\nAfterwards, this information is relayed using Bluetooth modules to another Arduino which is governed by the following code: \ninclude \nSoftwareSerial  BTSerial(7, 6); //RX TX\nvoid setup() {\n  BTSerial.begin(9600);\n  Serial.begin(9600);\n}\nvoid loop() {\n  if (BTSerial.available()) {\n    char inChar = (char) BTSerial.read();\n    Serial.println(inChar);\n    if (inChar == 'H') {\n      digitalWrite(2, HIGH);\n    }\n    else {\n      digitalWrite(2, LOW);\n    }\n  }\n}\nThis then uses digitalWrite() and digitalRead() functions to relay the threshold to our load cell-e-mail system which serves to give our product a greater utility by sending an e-mail notification to user letting them know that the pet has completed another bowl-full. This allows the owner of the pet to keep track of the pet\u2019s eating habits which allows the user to know just how frequently the pet is eating. This can prevent pet obesity and other diet-related issues. We came up with this idea in order to further make this product marketable and aesthetic for pet-owners. The Arduino code that is responsible for sending the e-mail uses the Temboo interface and library and has been edited by us to use the lower threshold and send an e-mail when the bowl is emptied. It is found below:\ninclude \ninclude \ninclude \ninclude \ninclude \ninclude \ninclude \"TembooAccount.h\" // Contains Temboo account information\nbyte ethernetMACAddress[] = ETHERNET_SHIELD_MAC;\nEthernetClient client;\nint numRuns = 1;   // Execution count, so this doesn't run forever\nint maxRuns = 10000;   // Maximum number of times the Choreo should be executed\nint val = 0;\nvoid setup() {\n  Serial.begin(9600);\n// For debugging, wait until the serial console is connected\n  delay(4000);\n  while(!Serial);\n  Serial.print(\"DHCP:\");\n  if (Ethernet.begin(ethernetMACAddress) == 0) {\n    Serial.println(\"FAIL\");\n    while(true);\n  }\n  Serial.println(\"OK\");\n  delay(5000);\n  Serial.println(\"Setup complete.\\n\");\n}\nvoid loop() {\n    val = digitalRead(2); \n    if (numRuns <= maxRuns && val == HIGH) {\n      Serial.println(\"Running SendEmail - Run #\" + String(numRuns++));\n      TembooChoreo SendEmailChoreo(client);\n      // Invoke the Temboo client\n      SendEmailChoreo.begin();\n      // Set Temboo account credentials\n      SendEmailChoreo.setAccountName(TEMBOO_ACCOUNT);\n      SendEmailChoreo.setAppKeyName(TEMBOO_APP_KEY_NAME);\n      SendEmailChoreo.setAppKey(TEMBOO_APP_KEY);\n      // Set Choreo inputs\n      String MessageBodyValue = \"Your pet has just finished another bowl-full! Bon appetit!\";\n      SendEmailChoreo.addInput(\"MessageBody\", MessageBodyValue);\n      String SubjectValue = \"Automated Pet Feeder Notification\";\n      SendEmailChoreo.addInput(\"Subject\", SubjectValue);\n      String PasswordValue = \"axhgbkvicwnrzzfd\";\n      SendEmailChoreo.addInput(\"Password\", PasswordValue);\n      String UsernameValue = \"bisher.haddadin@gmail.com\";\n      SendEmailChoreo.addInput(\"Username\", UsernameValue);\n      String ToAddressValue = \"omarhafez3300@gmail.com\";\n      SendEmailChoreo.addInput(\"ToAddress\", ToAddressValue);\n      // Identify the Choreo to run\n      SendEmailChoreo.setChoreo(\"/Library/Google/Gmail/SendEmail\");\n      // Run the Choreo; when results are available, print them to serial\n      SendEmailChoreo.run();\n  while(SendEmailChoreo.available()) {\n    char c = SendEmailChoreo.read();\n    Serial.print(c);\n  }\n  SendEmailChoreo.close();\n}\nSerial.println(\"\\nWaiting...\\n\");\ndelay(15000); // wait 15 seconds between SendEmail calls\n\n}\nThe e-mail notification sends the following message:\nYour pet has just finished another bowl-full! Bon appetit!\n",
        "hackathon_id": "ese111f15",
        "winner": false
    },
    {
        "description": "\nProject Motivations and Abstract\nFind yourself missing that 9am class or meeting because you hit that snooze button way too often? As college students, this is a daily predicament we face and is a common problem shared by working adults too. Oversleeping only adds to the daily stress of college by making our schedules even busier with the need to get in touch with teachers and get caught up on missed material. Research from health publications such as Everyday Health put forth several tips to boost daily productivity, of which are: making the snooze button harder to hit and getting out of bed to hit the alarm clock.\nWell, be late no more for that morning class you\u2019ve always dreaded with a system that incorporates all these principles! We present to you RunawayClock! an alarm clock system that runs away from you in real-time when the alarm sounds. Utilizing ultrasonic sensors, a car frame, a pushbutton, a buzzer, an LCD module and Bluetooth communication, the RunawayClock! makes hitting the snooze button a challenge. When the alarm rings, the device zips around on the floor and will back away from movement it senses, forcing the user to get out of bed and chase the device in order to turn it off. This unavoidable activity in the morning gets the user out of bed and moving in order to make the waking up process a one time ordeal. \nThe RunawayClock! system features 2 subsytems: Car Alarm / Evasion System, and Time Display / Alarm Setting System.\nMarketing Viability of our Product\nWith a mature alarm clock market that has gained robust foundations through time, we needed to devise a product that revolutionized the way we wake up. The demand for alarm clocks is certain. In today's age where smartphones are ubiquitous, alarm clocks still find their existence in households for both practical and psychological reasons. Coupled with research in boosting productivity and techniques in waking up, we created a product that would tailor to details such as these while offering the functionality of an alarm clock. Users, be it college students, working adults, or just about anyone who has not yet attained the luxury of not needing to wake up, will find great use in our product. For future development purposes, we can carry out the production of the car frame in-house, such that the cost of our product can be minimized. Such cost savings can be passed on to consumers and even be useful when we intend to penetrate the market by setting a price lower than that of competitors.\nProject Goals\nCreate an alarm clock that would solve the common problem of oversleeping traditional alarms. Make the snooze button less accessible and force the user to get out of bed and get moving in the morning in order to turn off the alarm.\nTechnical Details and Approach\nCar Alarm / Evasion System\nFirst, we worked on the subsystem of the ultrasonic sensors. To ensure these were working, we used basic ultrasonic sensor code from Arduino and modified it to work for four sensors. We then printed the distance reading from each sensor to the serial monitor so we could see if things were working. Once we got consistent readings from the sensors, we determined thresholds for the sensors which, when crossed, would set the motors of the Zumo shield into motion. In order to make this module avoid the user, we set up a series of conditional statements in the code so that the car would move opposite the user\u2019s approach.\nTime Display / Alarm Setting System (LCD)\nNext, we built the other part of the project by attaching an LCD shield to another Arduino. This piece is the alarm clock base, which we used to display the time and set the alarm. We used the Time library of Arduino with a Processing program in order to sync the internet time of the computer to the Arduino. The time is displayed on the first row and the alarm time is displayed on the second row once both programs are running. In order to set off the alarm, we checked if the alarm time and the clock time were equal, and then sent a signal to the Arduino on the Zumo shield via Bluetooth. As we only wanted the alarm to be triggered once for each time the set alarm equaled the current time, we sent the one-character String \u201cA\u201d once. This ensured that the Boolean value used in the software to determine if the alarm should be going off or not would only change once until the alarm was turned off by the user.\nInterfacing both Systems to make the RunawayClock!\nOnce we got the alarm to cooperate with the clock, we incorporated a pushbutton into the circuit on the Zumo car to act as an off button. Of course, an alarm clock would be useless without sound, so we also added a buzzer to the circuit. When the button is pressed, the Boolean value mentioned above is reverted to false, and the motors and buzzer turn off. The alarm can be set to a different time, and will go off without having to reset any of the hardware. \nOur Accomplishments\nUltimately, we were able to achieve what we set out to do and created the RunawayClock! that truly ran away from the user when the alarm sounds. Although we encountered numerous challenges along the way, we did not compromise on any of the product features we had planned from the start.\nChallenges Encountered\nThere were a few issues we struggled with over the course of this project. The wiring of the Car Alarm / Evasion System was challenging, as the breadboard on top became increasingly cluttered as we added more subsystems over time. We had to exercise caution when planning how the circuitry should be like, as the wires sometimes introduced too much tension with neighboring wires and caused connection breaks as we ran tests. Thus, by drawing out the entirety of the circuitry of our system, we resolved this issue by optimizing the placement of our subsystems. We also had a rather hard time with the Bluetooth setup simply because we found them to be unreliable for our project. We would often have to restart the receiver and transmitter in order to get the alarm to work, even if we hadn\u2019t changed any software or hardware. As for the coding side, writing the programs for both of our systems was equally challenging in both cases, as we gave careful thought into the implementation of respective details. For instance, in our Time Display / Alarm Setting System, we designed the alarm setting function such that the seconds, minutes, and hours values will roll over appropriately as we increased the desired alarm time. For the alarm car, we were concerned with interfacing the ultrasonic sensors, Bluetooth, and car motors with our code, which proved far more challenging as we were ambitious in crafting the many cases of movement we wanted our product to feature.\nLink to Promotional Video\nhttps://youtu.be/IsMUTFTlkkE\nAlternate Link to Final Video\nhttps://www.dropbox.com/s/40nes3kcbaltigx/RunawayClock%20Final%20Video.mp4?dl=0\nCode for Car Alarm / Evasion System\n/* alarm_car_code.ino *   *  A program that waits for a signal from the alarm clock module via bluetooth *  If the certain signal is received, the buzzer makes noise and the car will move away from objects it detects with ultrasonic sensors *    *  */\n\n#include <ZumoMotors.h>\n#include <SoftwareSerial.h>\n\n// create objects for Bluetooth serial and motors of Zumo shield\nSoftwareSerial BTSerial(A3, A1); // TX RX\nZumoMotors motors;\n\nint trigRear = 4; // attach every other pin except 0, 8, 10 (reserved by arduino or zumo shield) to trigs\nint trigLeft = 6;\nint trigRight = 12;\nint trigFront = 2;\nint echoRear = 5; //attach every other pin except 1, 7, 9 (reserved by arduino or zumo shield) to echos\nint echoLeft = 11;\nint echoRight = 13;\nint echoFront = 3;\n\n// set buzzer and button pins\nint button = A0;\nint buzzer = A4;\n\n// boolean to tell alarm whether to go off or not\nboolean alarmOn = false;\n\n// establish variables for duration of the ping,\n// and the distance result in cm:\nlong duration, distance, cmRear, cmFront, cmLeft, cmRight;\n\n\nvoid setup() {\n\npinMode(button, INPUT);\npinMode(buzzer, OUTPUT);\nBTSerial.begin(9600); // initialize Bluetooth communication\nSerial.begin(9600);\nSerial.print(\"Rear - Left - Right - Front\");\nSerial.println();\n\n}\n\nvoid loop()\n{\n\n  if (BTSerial.available()) {\n    char inChar = (char) BTSerial.read();\n    if (inChar == 'A') {\n      Serial.println('A');\n      alarmOn = true;\n    }\n  }\n\n\n  if (digitalRead(button) == HIGH) {\n    alarmOn = false;\n\n  }\n\n  // should the alarm be going off\n  if (alarmOn == true) {\n\n    // if so, set off buzzer\n    tone(buzzer, 3000, 1000);\n\n    // read distances from the four sensors\n    SonarSensor(trigRear, echoRear);\n    cmRear = distance;\n    SonarSensor(trigLeft, echoLeft);\n    cmLeft = distance;\n    SonarSensor(trigRight, echoRight);\n    cmRight = distance;\n    SonarSensor(trigFront, echoFront);\n    cmFront = distance;\n\n    // check the cases and set the motor speeds accordingly\n    if (cmRear < 50 && cmLeft < 50) {\n      motors.setLeftSpeed(200);\n      motors.setRightSpeed(300);\n    }\n    else if (cmRear < 50 && cmRight < 50) {\n      motors.setLeftSpeed(300);\n      motors.setRightSpeed(200);\n    }\n    else if (cmFront < 50 && cmLeft < 50) {\n      motors.setLeftSpeed(-200);\n      motors.setRightSpeed(-300);\n    }\n    else if (cmFront < 50 && cmRight < 50) {\n      motors.setLeftSpeed(-300);\n      motors.setRightSpeed(-200);\n    }\n    else if (cmRear < 50) {\n      motors.setLeftSpeed(200);\n      motors.setRightSpeed(200);\n    }\n    else if (cmRight < 50) {\n      motors.setLeftSpeed(300);\n      motors.setRightSpeed(500);\n    }\n    else if (cmLeft < 50) {\n      motors.setRightSpeed(300);\n      motors.setLeftSpeed(500);\n    }\n    else if (cmFront < 50) {\n      motors.setLeftSpeed(-200);\n      motors.setRightSpeed(-200);\n    }\n    else {\n      motors.setLeftSpeed(30);\n      motors.setRightSpeed(30);\n    }\n    Serial.print(cmRear);\n    Serial.print(\" - \");\n    Serial.print(cmLeft);\n    Serial.print(\" - \");\n    Serial.print(cmRight);\n    Serial.print(\" - \");\n    Serial.print(cmFront);\n    Serial.println();\n    }\n  else {\n    motors.setLeftSpeed(0);\n    motors.setRightSpeed(0);\n  }\n  delay(100);\n\n}\nvoid SonarSensor(int trig, int echo) {\n  // The PING))) is triggered by a HIGH pulse of 2 or more microseconds.\n// Give a short LOW pulse beforehand to ensure a clean HIGH pulse:\npinMode(trig, OUTPUT);\ndigitalWrite(trig, LOW);\ndelayMicroseconds(2);\ndigitalWrite(trig, HIGH);\ndelayMicroseconds(5);\ndigitalWrite(trig, LOW);\n\n// The same pin is used to read the signal from the PING))): a HIGH\n// pulse whose duration is the time (in microseconds) from the sending\n// of the ping to the reception of its echo off of an object.\npinMode(echo,INPUT);\nduration = pulseIn(echo, HIGH);\ndistance = microsecondsToCentimeters(duration);\n\n}\n\nlong microsecondsToInches(long microseconds)\n{\n// According to Parallax's datasheet for the PING))), there are\n// 73.746 microseconds per inch (i.e. sound travels at 1130 feet per\n// second). This gives the distance travelled by the ping, outbound\n// and return, so we divide by 2 to get the distance of the obstacle.\n// See: http://www.parallax.com/dl/docs/prod/acc/28015-PI...\nreturn microseconds / 74 / 2;\n}\n\nlong microsecondsToCentimeters(long microseconds)\n{\n// The speed of sound is 340 m/s or 29 microseconds per centimeter.\n// The ping travels out and back, so to find the distance of the\n// object we take half of the distance travelled.\nreturn microseconds / 29 / 2;\n}\n\n\nCode for Time Display / Alarm Setting System\n/*  * AlarmClock_code.ino * code that uses TimeSerial code from Time library in conjunction with Bluetooth and LCD screen to make an alarm clock * When alarm time is the same as clock time, program sends a signal to alarm car via Bluetooth  * * Used in combination with a Processing program (SyncArduinoClock) to sync time on LCD to internet time of computer *  * Some of this code is adapted from the TimeSerial function of the Time library of Arduino.  */ \n\n#include <TimeLib.h>\n#include <LiquidCrystal.h>\n#include <SoftwareSerial.h>\n\n#define TIME_HEADER  \"T\"   // Header tag for serial time sync message\n#define TIME_REQUEST  7    // ASCII bell character requests a time sync message \n\nLiquidCrystal lcd(8,9,4,5,6,7);   // initalize the lcd\nSoftwareSerial BTSerial(2,3);   //intialize the Bluetooth Serial for communication between \n\n// create strings which will be used to print times to LCD \nString hr;\nString mint;\nString sec;\nString ahr;\nString amint;\nString asec;\n\n// create integers to store the values of time for alarm\nint hrAlarm;\nint mintAlarm;\nint secAlarm;\n\nint readkey;    // int to store value received from A0\nint j;        // counter variable for setting alarm\nboolean setAlarm = false;   // boolean to check if user is setting alarm or not\n\nvoid setup()  {\n  BTSerial.begin(9600);\n  Serial.begin(9600);\n  while (!Serial) ; // Needed for Leonardo only\n  pinMode(13, OUTPUT);\n  setSyncProvider( requestSync);  //set function to call when sync required\n  Serial.println(\"Waiting for sync message\");\n  lcd.begin(16, 2); // start the LCD\n}\n\nvoid loop(){\n\n  readkey = analogRead(0); // check to see which button is being pressed based on varying input on A0\n  if (readkey > 650 && readkey < 850) { //button select\n    setAlarm = !setAlarm;   // turn alarm setting mode on/off\n  }\n  if (setAlarm == true) {     \n    lcd.blink();    // blink so user knows the alarm can be set    \n      readkey = analogRead(0);    // re-read A0 to determine \n      if (readkey < 50) { // button right\n        if (j == 6) j = 0;\n        j += 1;          \n      }\n      else if (readkey < 250) { //button up\n        // check cases based on where the \"cursor\" would be\n        if (j == 0) {\n          hrAlarm += 10;          \n        }\n        else if (j == 1) {\n          hrAlarm++;\n        }\n        else if (j == 2) {\n          mintAlarm += 10;\n        }\n        else if(j == 3) {\n          mintAlarm++;\n        }\n        else if(j == 4) {\n          secAlarm += 10;\n        }\n        else {\n          secAlarm++;\n        }\n      }\n      else if (readkey < 450) { //button down\n        // check cases based on where the \"cursor\" would be\n        if (j == 0) {\n          hrAlarm -= 10;          \n        }\n        else if (j == 1) {\n          hrAlarm--;\n        }\n        else if (j == 2) {\n          mintAlarm -= 10;\n        }\n        else if(j == 3) {\n          mintAlarm--;\n        }\n        else if(j == 4) {\n          secAlarm -= 10;\n        }\n        else {\n          secAlarm--;\n        }\n      }\n      else if (readkey < 650) { // button left\n        if (j == -1) j = 5;\n        j--;         \n      }\n\n  }\n  else {\n    lcd.noBlink(); // turn off blink to let user know the alarm isn't being set anymore\n  }\n  if (Serial.available()) {\n    processSyncMessage();\n  }\n  if (timeStatus()!= timeNotSet) {\n    digitalClockDisplay();  \n  }\n  if (timeStatus() == timeSet) {\n    lcd.clear();\n    // if the hours/minutes/seconds are in single digits, add a 0 in front for aesthetic reasons (00:00:00 vs 0:0:0)\n\n    if (hour() < 10) {\n      hr = \"0\" + (String) hour(); \n    }\n    else {\n      hr = (String) hour();\n    }\n    if (minute() < 10) {\n      mint = \"0\" + (String) minute();\n    }\n    else {\n      mint = (String) minute();\n    }\n    if (second() < 10) {\n      sec = \"0\" + (String) second();\n    }\n    else {\n      sec = (String) second();\n    }\n    // do the same for alarm values, but also ensure that going over 24 for hours and over 60 for minutes/seconds resets the counter to 0\n    if (hrAlarm < 10) {\n      ahr = \"0\" + (String) hrAlarm; \n    }\n    else if (hrAlarm > 24) {\n      ahr = \"00\";\n      hrAlarm = 0;\n    }\n    else {\n      ahr = (String) hrAlarm;\n    }\n    if (mintAlarm < 10) {\n      amint = \"0\" + (String) mintAlarm;\n    }\n    else if (mintAlarm > 60) {\n      amint = \"00\";\n      mintAlarm = 0;\n    }\n    else {\n      amint = (String) mintAlarm;\n    }\n    if (secAlarm < 10) {\n      asec = \"0\" + (String) secAlarm;\n    }\n    else if (secAlarm > 60) {\n      asec = \"00\";\n      secAlarm = 0;\n    }\n    else {\n      asec = (String) secAlarm;\n    }\n    // check to see if the alarm time is the same as the clock time\n    if (hrAlarm == hour() && mintAlarm == minute() && secAlarm == second()) {\n      // if the two times are equal, send the one-character String \"A\" over bluetooth\n      BTSerial.println(\"A\");\n    }\n    lcd.print(\"Time: \" + hr + \":\" + mint + \":\" + sec);  // print time to screen\n    lcd.setCursor(0, 1);    // go to the next line of the lcd screen\n    lcd.print(\"Alarm: \" + ahr + \":\" + amint + \":\" + asec);  // print the alarm time to screen\n  } \n  delay(1000);\n}\n\nvoid digitalClockDisplay(){\n  // digital clock display of the time\n  Serial.print(hour());\n  printDigits(minute());\n  printDigits(second());\n  Serial.print(\" \");\n  Serial.print(day());\n  Serial.print(\" \");\n  Serial.print(month());\n  Serial.print(\" \");\n  Serial.print(year()); \n  Serial.println(); \n}\n\nvoid printDigits(int digits){\n  // utility function for digital clock display: prints preceding colon and leading 0\n  Serial.print(\":\");\n  if(digits < 10)\n    Serial.print('0');\n  Serial.print(digits);\n}\n\n\nvoid processSyncMessage() {\n  unsigned long pctime;\n  const unsigned long DEFAULT_TIME = 1357041600; // Jan 1 2013\n\n  if(Serial.find(TIME_HEADER)) {\n     pctime = Serial.parseInt();\n     if( pctime >= DEFAULT_TIME) { // check the integer is a valid time (greater than Jan 1 2013)\n       setTime(pctime); // Sync Arduino clock to the time received on the serial port\n     }\n  }\n}\n\ntime_t requestSync()\n{\n  Serial.write(TIME_REQUEST);  \n  return 0; // the time will be sent later in response to serial mesg\n}\n\n\nSupplementary Code for Time Display / Alarm Setting System\n/**\n * SyncArduinoClock. \n *\n * portIndex must be set to the port connected to the Arduino\n * \n * The current time is sent in response to request message from Arduino \n * or by clicking the display window \n *\n * The time message is 11 ASCII text characters; a header (the letter 'T')\n * followed by the ten digit system time (unix time)\n */\n\n\nimport processing.serial.*;\nimport java.util.Date;\nimport java.util.Calendar;\nimport java.util.GregorianCalendar;\n\npublic static final short portIndex = 0;  // select the com port, 0 is the first port\npublic static final String TIME_HEADER = \"T\"; //header for arduino serial time message \npublic static final char TIME_REQUEST = 7;  // ASCII bell character \npublic static final char LF = 10;     // ASCII linefeed\npublic static final char CR = 13;     // ASCII linefeed\nSerial myPort;     // Create object from Serial class\n\nvoid setup() {  \n  size(200, 200);\n  println(Serial.list());\n  println(\" Connecting to -> \" + Serial.list()[portIndex]);\n  myPort = new Serial(this,Serial.list()[portIndex], 9600);\n  println(getTimeNow());\n}\n\nvoid draw()\n{\n  textSize(20);\n  textAlign(CENTER);\n  fill(0);\n  text(\"Click to send\\nTime Sync\", 0, 75, 200, 175);\n  if ( myPort.available() > 0) {  // If data is available,\n    char val = char(myPort.read());         // read it and store it in val\n    if(val == TIME_REQUEST){\n       long t = getTimeNow();\n       sendTimeMessage(TIME_HEADER, t);   \n    }\n    else\n    { \n       if(val == LF)\n           ; //igonore\n       else if(val == CR)           \n         println();\n       else  \n         print(val); // echo everying but time request\n    }\n  }  \n}\n\nvoid mousePressed() {  \n  sendTimeMessage( TIME_HEADER, getTimeNow());   \n}\n\n\nvoid sendTimeMessage(String header, long time) {  \n  String timeStr = String.valueOf(time);  \n  myPort.write(header);  // send header and time to arduino\n  myPort.write(timeStr); \n  myPort.write('\\n');  \n}\n\nlong getTimeNow(){\n  // java time is in ms, we want secs    \n  Date d = new Date();\n  Calendar cal = new GregorianCalendar();\n  long current = d.getTime()/1000;\n  long timezone = cal.get(cal.ZONE_OFFSET)/1000;\n  long daylight = cal.get(cal.DST_OFFSET)/1000;\n  return current + timezone + daylight; \n}\n\n\n",
        "hackathon_id": "ese111f15",
        "winner": false
    },
    {
        "description": "\nTechnical Description\nDuring our first months living in a college dorm, we both realized that not everyone living in our halls was on the same schedule as us.  There were times when we would be trying to sleep or study, and were disrupted by loud music or noise from our neighbors.  We soon realized that this was a common problem across all dormitory halls, so we came up with Turn Down for Your Hallmates to try and solve this problem.  \nTurn Down for Your Hallmates is an automatic noise detecting device that regulates the noise level in a dorm hall by sending a message to each of the residents instructing them to lower the volume when the hall gets too loud.\nThe transmitter module would be placed in the hallway and is made up of an Arduino and a breadboard shield.  The breadboard has a microphone and a master bluetooth module connected to it.  The receiver module is made up of an Arduino, an Ethernet shield, and a breadboard shield.  The breadboard shield on the receiver has the slave bluetooth module and an LED connected to it.  If the volume of noise detected by the microphone on the transmitter exceed the threshold of 700 that we set, the transmitter sends an \"H\" to the receiver; if the volume is below 700, the transmitter sends an \"L\" to the receiver.  If the receiver receives 10 \"H\"s in a row, the LED will light up and the receiver will send out an email to each of the designate recipients telling them to lower the volume.  The receiver then waits 30 seconds for the residents to lower the volume before it starts receiving data from the transmitter again.\nPromo Video\nhttps://www.youtube.com/watch?v=GA8FKh0BA6w&feature=youtu.be\n",
        "hackathon_id": "ese111f15",
        "winner": false
    },
    {
        "description": "\nAbstract\nThe current shopping experience is often a time consuming chore because of the long lines at checkout. Even the express lanes can take a tedious amount of time between scanning the products, paying, and bagging. We seek to innovate the shopping experience with the NFC enhanced shopping cart--ExpressCart. It keeps track of what is in the cart and updates that on your phone. Each shopping cart is equipped with an NFC reader and all products in the store are labelled with small, passive NFC tags. As you shop, you scan the item before placing it in your shopping cart. Your current cart contents are displayed on an app on your phone so you can keep track of what you\u2019ve bought. If you forget to scan before placing an item in your cart, the cart will beep to remind you. If you decide that you no longer want one of the items in your cart, simply scan it again when you take out the item. When you\u2019re ready to pay, click the red \u201cPAY NOW\u201d button on your phone and a digital receipt will be sent to your email.\n\nFunction Modules\nExpressCart has three main function modules.\n\n1. NFC Scanner/Tags:\n    Each tag has a unique UID to start with. We then wrote in a unique item name into each tag. When the tag is scanned by the NFC reader, the Arduino finds the price associated with the item name and displays the item name and price, as well as the total price to the LCD. This information is also sent to the app on your phone via Bluetooth (see next section). The Arduino will store an array of all the items that have already been scanned. If you want to remove an item from the cart, the item name that is scanned in will already be in the scanned items array, so instead of adding this item again, the Arduino will remove the item from the scanned items array as well as deduct this price from the total price. The app on your phone will also be updated accordingly.\n2. Pressure Sensor:\n    The bottom of the cart is equipped with two pressure sensors to prevent people from placing items into the cart without first scanning. If the pressure sensor senses an increase in weight without a corresponding increase in item number count, the buzzer will beep to remind the shopper to scan the item. The pressure sensor is powered by a separate arduino and receives the current item count data from the arduino with the NFC scanner. The pressure sensors keep track of an item count independent of the NFC item count. If the pressure sensor item count exceeds the NFC item count, this means the shopper placed an item into the cart without scanning first, so the buzzer will beep. If an item is removed from the shopping cart, the pressure sensor item count will decrement accordingly.\n3. Bluetooth/Phone app:\n    The bluetooth on your phone connects to the bluetooth module on the cart when you start shopping. As you shop, the current updated cart contents and total cost will be sent to your phone so you can keep track of what you\u2019re buying. When you\u2019re ready to pay, click the red \u201cpay now\u201d button. This will lead you to pay with PayPal or your bank account, as well as receive  a digital receipt through email. In  our prototype, we have achieved the function of sending a digital receipt to your email after you \u201cpay\u201d so you have a record of what you bought. The payment function is yet to implement.\n",
        "hackathon_id": "ese111f15",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe current shopping experience is often a time consuming chore because of the long lines at checkout. Even the express lanes can take a tedious amount of time between scanning the products, paying, and bagging. We seek to innovate the shopping experience with the NFC enhanced shopping cart--ExpressCart. \nWhat it does\nIt keeps track of what is in the cart and updates that on your phone. Each shopping cart is equipped with an NFC reader and all products in the store are labelled with small, passive NFC tags. As you shop, you scan the item before placing it in your shopping cart. Your current cart contents are displayed on an app on your phone so you can keep track of what you\u2019ve bought. If you forget to scan before placing an item in your cart, the cart will beep to remind you. If you decide that you no longer want one of the items in your cart, simply scan it again when you take out the item. When you\u2019re ready to pay, click the red \u201cPAY NOW\u201d button on your phone and a digital receipt will be sent to your email.\nHow we built it\nExpressCart has three main function modules.\n1. NFC Scanner/Tags:\nEach tag has a unique UID to start with. We then wrote in a unique item name into each tag. When the tag is scanned by the NFC reader, the Arduino finds the price associated with the item name and displays the item name and price, as well as the total price to the LCD. This information is also sent to the app on your phone via Bluetooth (see next section). The Arduino will store an array of all the items that have already been scanned. If you want to remove an item from the cart, the item name that is scanned in will already be in the scanned items array, so instead of adding this item again, the Arduino will remove the item from the scanned items array as well as deduct this price from the total price. The app on your phone will also be updated accordingly.\n2. Pressure Sensor:\nThe bottom of the cart is equipped with two pressure sensors to prevent people from placing items into the cart without first scanning. If the pressure sensor senses an increase in weight without a corresponding increase in item number count, the buzzer will beep to remind the shopper to scan the item. The pressure sensor is powered by a separate Arduino and receives the current item count data from the Arduino with the NFC scanner. The pressure sensors keep track of an item count independent of the NFC item count. If the pressure sensor item count exceeds the NFC item count, this means the shopper placed an item into the cart without scanning first, so the buzzer will beep. If an item is removed from the shopping cart, the pressure sensor item count will decrement accordingly.\n3. Bluetooth/Phone app:\nThe Bluetooth on your phone connects to the Bluetooth module on the cart when you start shopping. As you shop, the current updated cart contents and total cost will be sent to your phone so you can keep track of what you\u2019re buying. When you\u2019re ready to pay, click the red \u201cpay now\u201d button. This will lead you to pay with PayPal or your bank account, as well as receive a digital receipt through email. In our prototype, we have achieved the function of sending a digital receipt to your email after you \u201cpay\u201d so you have a record of what you bought. The payment function is yet to implement.\n",
        "hackathon_id": "ese111f15",
        "winner": false
    },
    {
        "description": "\nTechnical Description\nCommon household clocks are stand alone clocks. They operate on internal counters to keep time. This is precisely why problems occur with house hold clocks; time kept by those most often than not is not accurate. Oscillations by electronic and or mechanical means contain offset percentages as high as 0.01% which is about 7 seconds of error each day.\n\nMx clock solves this problem by using an accurate online time source to sync itself with. By supplying the clock with initial values, Arduino equipped MxClock keeps an accurate internal counter to display time. While there are inaccuracies from Arduino, MxClock\u2019s time gets synced automatically when an alarm is set.\nSyncing is done through MATLAB, where the time and alarm from timezonedb is converted into a string and sent to Arduino through a serial connection.\nStatistics show that one in every three adults snooze at least 3 times each morning and one in every 2 people from 25 to 34 snooze daily. The Mxclock\u2019s shaking to turn off alarm clocks leads to more simulation than just simply pressing a button to snooze. While this doesn\u2019t solve all snoozing issues, more simulation accelerates your waking up state. Combined with an extremely annoying buzzer as an alarm, the MxClock definitely packs a stronger incentive to get up and turn the alarm off.\nLED\u2019s are more appealing than traditional digital LED displays. Using multiplexing, the number of pins required to power and change each digit is reduced. \nThe picture below shows 7 segments of an digital number: A, B, C, D, E, F, and G. Each segment is connected to an Arduino pin and each corresponding segment of all the digits is connected to the same pin. This means all the segment A\u2019s are connected (to pin 13 on Arduino) and all the segment B\u2019s are connected and so on and so forth. The process of multiplexing is by changing the number of a single digit by shutting off ground connection for all the others. The ground for digits is shut off by turning transistors off. Essentially, this means only one digit is turned on at a time. The catch is that the rate of turning digits on and off is 5 milliseconds which is fast enough that our eyes can\u2019t detect its turning off. In other words, pretend we want to write 04:03. Segments g is turned off to show 0 and grounds for one hour digit, 10 minute digit, and minute digit are shut off. Then for number 4, segment A, D, and E turns off and grounds for 10 hours, 10 minutes, and minutes are turned off. The rest is self explanatory. Because the transistors used are more susceptible to voltage leakage, only 4 transistors are used for digit changing and 7 Arduino pins are used to directly power on segments. This definitely requires more battery power. However, to protect all the circuitry \u2013 mainly the maximum of 14 LED on at one time and 1 transistor \u2013  only 9 total volts was used. With that, the clock can standalone on its own.\n",
        "hackathon_id": "ese111f15",
        "winner": false
    },
    {
        "description": "\nInspiration:\nPenn students know that swiping a card and entering a four-digit pin after a night out is no easy task. Get it wrong a few times and a concerned security guard might call the Medical Emergency Response Team (MERT), causing embarrassment and a large fine. \nWhat it does:\nPinFaced has your back. ((We\u2019ve developed an apparatus that enters your 4-digit code for you.)) It\u2019s easy: swipe your card & enter. Our machine connects with your phone, receives your code via bluetooth, and pushes the buttons for you. After completing it's task, it sends an email to a designated friend that will come help you get to bed.\nHow I built it\nThere are two major sections part of our project: the Keypad and PinFaced. We will first describe the KeyPad and then PinFaced.\nAll the code and Solidworks files is in the Additional Links section. The files include the code for the Keypad Arduino, the PinFaced Arduino, and the Ethernet Arduino. The Solidworks files include the design for the Keypad and for PinFaced.\nThe Keypad contains a magnetic card reader, a 16-digit keypad, Bluetooth, LED indicators, and and Arduino Uno with a SparkFun breadboard shield. Each row and column of the 16-digit has a unique connector pin that is connected to the Arduino into a corresponding digital pin. When a digit is pressed, the row and column intersection represents a short and is read by the digital pin. The result can be viewed on the serial monitor. The yellow LED is normally on, but when a key is pressed, it blinks off. The green LED is normally off and blinks on when the correct 4-digit pin is entered. The LEDs are controlled by digital pins and are build on the breadboard shield. The Bluetooth portion contains a Master module used to send information to the PinFaced apparatus. This module is also connected to digital pins. Lastly, the magnetic card reader is connected to the computer and functions as a keyboard, inputting the card data into the Serial input of the Arduino\u2019s Serial Monitor.\nThe code for the Keypad is publically available and it is important to examine in order to develop a technical understanding of the system. The 16-digit keypad has reference code on Arduino\u2019s site that we conveniently incorporated in our code. This 16-digit keypad code simply printed the pressed key on the serial monitor. However, we have added many modifications to interpret the pressed key. Using Serial input functions, we have coded the Arduino to be able to read card data that was entered by the magnetic card reader. The Arduino is coded to take the specific digits from the card data that represent a Penn ID and search for a corresponding pin code using a pre-constructed \u201cID to Pin\u201d map. Once the correct pin is found, it is displayed on the Serial monitor and sent to the slave Bluetooth on pin faced using btserial functions. Now the Keypad is looking for a sequence of four digits in the correct order and value that matches the pin. Once a set of 4 digits are entered, the Keypad check for a match. If there is a match, the code instructs the green LED\u2019s digital pin to turn high. If there is not a match, the Yellow LED remains turned on. In both instances, the Keypad resets and is ready to accept another pin-entry or card-swipe, making it a fully functional Keypad that can be used in any industry or setting.\nNow we will discuss the technical aspects of the PinFaced apparatus, beginning with the hardware and circuitry and then the code. The PinFaced, similar to the Keypad, sits in a box constructed by laser cut pieces press-fitted together. We used Solid Works to design both PinFaced and the Keypad. PinFaced has three tiers. The bottom tier is space for the Keypad. The middle tier contains the solenoids and circuitry for the solenoids, which is soldered on a perfboard. The top tier contains two Arduinos and a Bluetooth module.\nThe middle tier contains the actuators, which are the solenoids that press down on the Keypad depending on the pin that is passed to them. A solenoid is an electro-mechanical device that uses current to generate a magnetic field that pulls/pushes a metal piece. Each solenoid is controlled by a transistor circuit, resulting in ten repeated circuits on the perfboard. A transistor is needed to control an external power source using directions from electronic signals from the Arduino, so the transistor is functioning as an electronic switch. Solenoids require power external to that of the Arduino because the Arduino can only supply 40mA through its digital pins while the solenoids require 300-400mA depending on the solenoid. The circuit connects the digital pin to the gate of the transistor, thus controlling it. The drain of the transistor is connected to the ground of the solenoid and to the anode part of a diode, which has its cathode connected to the positive terminal of the external power supply in order to prevent back-emf generated by the movement of the solenoid and its creation of current. The source is connected to the positive terminal of the external power supply along with the positive end of the solenoid. This circuit is repeated ten times.\nNext, we can examine the top tier of PinFaced, which contains two Arduinos. The first Arduino controls the solenoids and is connected to the slave Bluetooth that corresponds to the master in the Keypad. It uses the digital pins to open or close the transistor switch. It is also connected to the second Arduino and controls it by giving it a high voltage that triggers an action. The second Arduino is connected to Ethernet and sends an email to the user\u2019s friend after a high voltage signal is received from the first Arduino.\nLastly, we will explain the code behind the Arduino that controls the solenoids. We coded the Arduino to wait for bt serial communication from the master module. Information is transmitted character by character, so we had to build a string and change it into an integer using the toInt function. Then, to parse out individual digits that would then call on digital pins to fire solenoids, we divided each digit by a power of ten, took the first integer, and kept the remainder to be cycled for the next iteration. The solenoids were then triggered to fire, the program was reset, and the Ethernet Arduino was activated. One problem that we had to solve was \u201cbouncing,\u201d where the solenoid, when fired, would bounce at micro levels and press the Keypad keys multiple times. We fixed this by implementing a \u201cDebounce\u201d code in the Keypad that created a delay after each key was pressed to null the subsequent presses.\nChallenges I ran into\nDiscovering a method to transmit data between a card reader and the Arduino. Eventually, this was solved by using the IDE to send and receive serial data. The firing of the solenoids proved a little challenging as each one requires about 3V and .4amps of for a single activation. \nAccomplishments that I'm proud of\nAs systems engineers, we are proud of our combination of software, electrical, and mechanical systems. \nWhat I learned\nWe learned how to incorporate transistors to amplify the power that the solenoids received. We developed our skills in solidworks and increased our coding ability. \nWhat's next for PinFaced\nTo be mass produced and used all over Penn's campus.\nAdditional Links\nPromo video - https://www.youtube.com/watch?v=CALCoLMaXlk\nFiles - https://drive.google.com/folderview?id=0Bz0l6KVoK_TPekcyVTNOTjhITDA&usp=sharing\n",
        "hackathon_id": "ese111f15",
        "winner": false
    },
    {
        "description": "\nInspiration -\nThis project was inspired by being in class all day (the engineering life), unable to take care of a pet and how we could fix that. Most of us out there have wanted a pet fish or have had one, but were always scared you wouldn\u2019t be around to feed it and end up killing it. Many of us who do have fish and go through all the trouble of taking care of it have many difficulties and time conflicts. Going on vacation, weekend trips, daily commute, or going to engineering class on the other side of campus are just hassles that sometimes you wish you could just feed your fish from wherever you were.\nWhat it does -\nThis product allows you to intimately feed your fish wirelessly in case you forgot to or do not have enough time at home to feed it and want to use the commute to work to feed it or are on vacation.\nHow it works -\nThe product is split into three parts that contribute to a total of but not limited to 3 functions/features. The code for all these functions can be found below. The first part is the controller.\nThe Controller\nThe controller is comprised of an arduino microcontroller, a 3 axis accelerometer, a master bluetooth transmitter and a push button. The controller is programmed so that when you want to feed your fish, you have to push the button and shake the controller at the same time. \nBut what makes this product so different from an ordinary robotic, monotonous fish feeder? Well, first ask yourselves, why do you have a fish, a pet in the first place? You want a friend to take care of and love. Well feeding is one of the most loving actions you could do.\nWe use hard-coded threshold values for deviations from the baseline acceleration values from when you turn it on to check whether or not you are shaking the controller while the button is pressed. Once the arduino recognizes that you are indeed pressing the button and shaking the controller, it sends a signal over Bluetooth to the receiver on the fish feeder. The next part is the receiver which is connected to the actual fish feeder itself.\nThe Receiver/Fish Feeder\nThe receiver comprises of an arduino, ethernet shield, and bluetooth receiver. The receiver is programmed to continually wait for a signal from the transmitter and when it receives the signal, it sends another signal through wire to the fish feeder.\nThe actual fish feeder itself is composed of a continuous rotation servo motor, 3D printed water wheel, hopper, and frame.\nOnce the receiver receivers and sends the signal to the feeder, the motor turns for half a second, turning the wheel and dispensing a certain amount of fish food.\nThe hopper is designed to make certain that all fish food put into it, ends up in the wheel and gets dispensed.\nThe last part is thingspeak, the online interface.\nThingspeak\nThingspeak is used as when the receiver receives the signal, the arduino fetches the current epoch time through the internet and uploads it to Thingspeak.com using the ethernet cable and shield. On Thingspeak, using MATLAB visualization and analysis, statistics about your feeding habits and times are displayed. You check how consistently you feed your fish and you can check how many times you have fed your fish including the last time you have to make sure you feed it every day.\nThere are many more adaptations available with more and more resources.\nNote for TAs:\nThe 2 minute promotional video can be found here:\nhttps://www.youtube.com/watch?v=_lGi-aSByAE\nand if you cannot see the technical it can be found here:\nhttps://www.youtube.com/watch?v=V-xSGFIBDLY\nReceiver Code\n#include <SPI.h>\n#include <Servo.h>\n#include <Ethernet.h>\n#include <SoftwareSerial.h>\n#include <SoftReset.h>\n\nunsigned int localPort = 8888; //local port to listen UDP packets\nchar timeServer[] = \"time.nist.gov\"; \nconst int NTP_PACKET_SIZE = 48;\nbyte packetBuffer[NTP_PACKET_SIZE]; //buffer to hold incoming and outgoing packets\nEthernetUDP Udp;\n\n//RX TX bluetooth module digital pins\nSoftwareSerial  BTSerial(2, 3);\n\n// Local Network Settings\n// Must be unique on local network\nbyte mac[] = {0x90, 0xA2, 0xDA, 0x0D, 0xD2, 0xC6};  \n// you must change this\nIPAddress ip(192, 168, 1, 109); \n\n// ThingSpeak Settings\nchar thingSpeakAddress[] = \"api.thingspeak.com\";\n// you must change this\nString writeAPIKey = \"3CDPP6MET80GNVNZ\"; \n//Delay time to next possible shake\nint updateThingSpeakInterval = 2000;\n\n// Initialize Arduino Ethernet Client\nEthernetClient client;\n\n//Initialize the servo motor\nServo motor;\n\nvoid setup() {\n  BTSerial.begin(9600); //begin bluetooth communication\n  Serial.begin(9600); //begin serial communication\n  // Start Ethernet on Arduino\n  client.stop();\n  Ethernet.begin(mac, ip);\n  motor.attach(8);\n  motor.write(92);\n  Udp.begin(localPort);\n}\n\nvoid loop() {\n  if (BTSerial.available()) {\n    //reads single character at a time\n    char inChar = (char) BTSerial.read();\n    if(inChar == 'H') {\n      motor.write(85); //Change this speed to be reasonable \n      delay(500); //Change this delay to be reasonable\n      motor.write(92); //Stop motor\n      // Update ThingSpeak\n      int time = getTime();\n      if (time < 5) {\n        time = 19 +  time;\n      } else {\n        time = time - 5;\n      }\n      updateThingSpeak(\"field1=\"+String(time));\n      soft_restart();\n    }\n  }\n}\n\nvoid updateThingSpeak(String tsData) {\n  if (client.connect(thingSpeakAddress,80)) {  \n    client.print(\"POST /update HTTP/1.1\\n\");\n    client.print(\"Host: api.thingspeak.com\\n\");\n    client.print(\"Connection: close\\n\");\n    client.print(\"X-THINGSPEAKAPIKEY: \"+writeAPIKey+\"\\n\");\n    client.print(\"Content-Type: application/x-www-form-urlencoded\\n\");\n    client.print(\"Content-Length: \");\n    client.print(tsData.length());\n    client.print(\"\\n\\n\");\n    client.print(tsData);\n    Serial.println(\"Updated thingspeak: \" + tsData);\n    delay(1000);\n  }\n}\n\n// send an NTP request to the time server at the given address\nunsigned long sendNTPpacket(char* address) {\n  Serial.println(\"sending packet\");\n  // set all bytes in the buffer to 0\n  memset(packetBuffer, 0, NTP_PACKET_SIZE);\n  // Initialize values needed to form NTP request\n  // (see URL above for details on the packets)\n  packetBuffer[0] = 0b11100011;   // LI, Version, Mode\n  packetBuffer[1] = 0;     // Stratum, or type of clock\n  packetBuffer[2] = 6;     // Polling Interval\n  packetBuffer[3] = 0xEC;  // Peer Clock Precision\n  // 8 bytes of zero for Root Delay & Root Dispersion\n  packetBuffer[12]  = 49;\n  packetBuffer[13]  = 0x4E;\n  packetBuffer[14]  = 49;\n  packetBuffer[15]  = 52;\n\n  // all NTP fields have been given values, now\n  // you can send a packet requesting a timestamp:\n  Udp.beginPacket(address, 123); //NTP requests are to port 123\n  Udp.write(packetBuffer, NTP_PACKET_SIZE);\n  Udp.endPacket();\n}\n\n\nint getTime() {\n  Serial.println(\"getting time\");\n  sendNTPpacket(timeServer); // send an NTP packet to a time server\n\n  // wait to see if a reply is available\n  delay(1000);\n  if (Udp.parsePacket()) {\n    Serial.println(\"packet parsed\");\n    // We've received a packet, read the data from it\n    Udp.read(packetBuffer, NTP_PACKET_SIZE); // read the packet into the buffer\n\n    // the timestamp starts at byte 40 of the received packet and is four bytes,\n    // or two words, long. First, extract the two words:\n\n    unsigned long highWord = word(packetBuffer[40], packetBuffer[41]);\n    unsigned long lowWord = word(packetBuffer[42], packetBuffer[43]);\n    // combine the four bytes (two words) into a long integer\n    // this is NTP time (seconds since Jan 1 1900):\n    unsigned long secsSince1900 = highWord << 16 | lowWord;\n    Serial.print(\"Seconds since Jan 1 1900 = \");\n    Serial.println(secsSince1900);\n\n    // now convert NTP time into everyday time:\n    Serial.print(\"Unix time = \");\n    // Unix time starts on Jan 1 1970. In seconds, that's 2208988800:\n    const unsigned long seventyYears = 2208988800UL;\n    // subtract seventy years:\n    unsigned long epoch = secsSince1900 - seventyYears;\n    // print Unix time:\n    Serial.println(epoch);\n\n    Serial.println(\"The UTC time is \");       // UTC is the time at Greenwich Meridian (GMT)\n    int hour = (epoch  % 86400L) / 3600;\n    Serial.print(hour); // print the hour (86400 equals secs per day)\n    return hour;\n  }\n}\n\nTransmitter Code\n#include <SoftwareSerial.h>\n//RX TX on Bluetooth module, digital pins\nSoftwareSerial  BTSerial(2, 3);\n//button digital pin\nconst int button = 13;\n//value returned by button\nint val = 0;\n\n//Analog read pins for accelerometer\nconst int xPin = 0;\nconst int yPin = 1;\nconst int zPin = 2;\n\n//Baseline values for accelerometer, we only\n//care about the absolute value of the change \n//in acceleration\nint xbl, ybl, zbl;\n\n//Thresholds for fishfood shake\nint threshold[3] = { 80, 40, 40 };\n\nvoid setup() {\n  BTSerial.begin(9600);\n  Serial.begin(9600);\n  //Defining button pin as input\n  pinMode(button, INPUT);\n  int xbla[50], ybla[50], zbla[50];\n  for(int i = 0; i < 50; i++) {\n    xbla[i] = analogRead(xPin);\n    ybla[i] = analogRead(yPin);\n    zbla[i] = analogRead(zPin);\n  }\n  xbl = sum(xbla) / 50;\n  ybl = sum(ybla) / 50;\n  zbl = sum(zbla) / 50;\n}\n\nint sum(int array[]) {\n  int sum = 0;\n  for (int i = 0; i < sizeof(array); i++) {\n    sum = sum + array[i];\n  }\n  return sum;\n}\n\nvoid loop() {\n  //read the analog values from the accelerometer\n  int xRead = abs(analogRead(xPin) - xbl);\n  int yRead = abs(analogRead(yPin) - ybl);\n  int zRead = abs(analogRead(zPin) - zbl);\n\n  //read the value from the button, \n  //whether it is pressed or not\n  val = digitalRead(button);\n\n  Serial.println(val);\n\n  //Check if button is pressed and the controller is shaked\n  if(val == HIGH && (xRead > threshold[0] || \n  yRead > threshold[1] || zRead > threshold[2])) {\n    BTSerial.println(\"H\");\n  }\n  delay(2000);\n}\n\nThingspeak Visualization Matlab Code\n% Channel ID to read data from\nreadChannelID = 71223;\nreadkey = 'L5WC4RZ6WCM9GK4T';\n% Temperature Field ID\nTimeID = 1;\n\n[data, time] = thingSpeakRead(readChannelID, 'Fields', TimeID,'ReadKey',readkey,'NumPoints',100);\n% disp(data)\nNUM = length(data);\n% [data2, time] =thingSpeakRead(readChannelID, 'Fields', TimeID,'ReadKey',readkey,'NumPoints',NUM);\nhistogram(data);\nxlabel('Time');\nylabel('Number of Times Fed');\ntitle({['Your Feeding Habits: ','You have fed your fish ',num2str(NUM),' times'];...\n['You last fed your fish at around ',num2str(data(end)),':00']});\naxis tight\ngrid on\n\n",
        "hackathon_id": "ese111f15",
        "winner": false
    },
    {
        "description": "\nAbstract\nBarbell Trainer XTreme is the perfect device for any gym enthusiast who wants to learn how to lift correctly. Barbell Trainer XTreme is a low cost, highly successful device that you can attach onto your barbell. It will measure your form as you lift and beep to indicate to you if your bar is uneven. \nBarbell Trainer XTreme uses the cutting-edge technology of the Arduino to do this. It uses an Arduino placed on each edge of the bar. Using an accelerators that are wired onto it and bluetooth modules to communicate, it finds the differences in your acceleration on each side and then compares them. If it is over a certain threshold, it will indicate to you that you are uneven. It has three different modes in can measure in so it works for a variety of barbell lifts. \nInspiration\nBarbell Trainer XTreme was invented with a simple purpose in mind: to help make college students healthier. As students get deeper into their college lives, many begin going to the gym to help stay in shape. When going to the weight room, as many individuals have never received formal training in how to lift correctly, they display incorrect form. Lifting with poor form long-term can cause serious injury. Barbell Trainer Xtreme serves to help correct a lifter's form. In particular, it focuses on correcting the form of barbell Lifts such as bench press. \nAddressing the Problem\nThe most common error in barbell lifts are those in which the bar is raised unevenly.  To help measure and correct a lifter's form, this product uses two separate Arduinos placed at the edge of each barbell. Each Arduino has an accelerometer and a battery pack attached two. The two devices communicate via bluetooth with each other and run separate codes written in the Arduino script form. Each Arduino is wired with a breadboard shield attachment to help keep the device compact. \nHow it Works\nWhen the Arduinos are powered and attached to the edge of the bar, they each take a reading in either the x,y,z direction (depending on which version of the code is set to run). Readings are taken every quarter second The module that contains the master-component of the bluetooth takes it's reading and sends it to the slave-receiver on the other module. The slave then compares the reading to the reading on it's accelerometer. If the reading is over a certain threshold, it then powers the speaker to beep to indicate to the lifter that the bar is uneven. If it is below the threshold, the speaker does not beep. (See code files within submission)\nThe Arduinos are placed at the edges of the bar as it is the location furthest from the center of mass of the bar. This is the spot on the bar that will experience the most rotation as the distance from the center is greatest. The rotation is measured as acceleration and a large enough differences in acceleration show that the lifter is lifting the bar unevenly. The threshold calibration can be changed within the code by changing the minimum z difference to adjust the sensitivity of the bar.\nA video of the technical demonstration and demo can be viewed in the link below. \nFuture Plans\nWhen using heavier weights on a barbell, it is important to clip the weights so they do not slide. Barbell Trainer XTreme will be attached to a clip to allow it to slide onto the bar easily and so it does not look out of place at the gym. Each clip will weight 2.5lbs so the user can account for the devices weight when placing weights on the barbell. \n",
        "hackathon_id": "ese111f15",
        "winner": false
    },
    {
        "description": "\nThe laser harp allows its users to play and wirelessly record their music in an elegant, yet modern way. Using laser pointers focused on photo-resistors, the harp will detect when a user's finger breaks the laser beam and will play the note that corresponds to that string. Using an mp3 shield with a traditional Arduino, the harp can be hooked up to any traditional speaker system with an AUX cable.\n",
        "hackathon_id": "ese111f15",
        "winner": false
    },
    {
        "description": "\nAbstract\nThis product is another way to help make many households smarter by integrating it with technology. By monitoring local weather from the internet, this product communicates wirelessly to a device controlling a window in the house. This allows for windows to be opened or closed automatically based on the user's temperature preferences. It will also allow for manual overrides to allow one window to be open or shut at a moment's notice. It also allows for windows to be shut simultaneously in case of rain, emergency, ..etc. The preferences will be entered as a parameters into the device (hopefully in a user friendly website format).\nPromo Videos\nThe first Part of our promo video is here https://youtu.be/iMmLY25WYuQ\nThe second Part of our promo video is here https://youtu.be/Rjkue3Om-Oc \nTechnical Description \nTechnology has slowly been advancing into many peoples lives in order to make life easier and save time. In this process many regular items have became \"smart.\" The demand for such products is very high at the moment. Everyone wants the next new technology that will make their life less complicated. With this in mind we looked at the problem of temperature control in a household. Apple has started to work in this field with their new Nest technology, which controls thermostats based on consumers tendencies. This is great, however only solves half the problem. The other temperature controlling device in homes have been around for a longer period of time. Windows. With many windows in a house it is hard to change them all at once. It is also very easy to forget or not be able to close a window when an unforeseen thing happens such as rain. With this problem in mind we decided to develop Painless Windows.\nPainless Windows resolves this problem by monitoring the weather with a Arduino Micro-controller and Ethernet Shield. Then using bluetooth, the micro-controller sends information to another Arduino. Based on the information received the Arduino will control a servo motor connected to the window. As temperature changes, every window in a home can as well without any manual operation. A wet household can also be avoided because as soon as rain is detected all windows are shut immediately, and will remain shut until the rain stops. Painless Windows brings technology too a simple part of the household and is beneficial to all who have windows. \nThe hardware used in this project consists of: \n\n2 Arduino Unos\n1 Arduino Ethernet Shield\n2 Arduino Proto Shields\n1 Bluetooth system(Master and Slave)\n1 Continuos Servo Motor\nAll parts for the mock window setup were laser cut. These were made to demonstrate how the window would work with the Painless Window system installed. \n\nHere is the code for the master controller which is connected to the ethernet shield. It has two functions, one for temperature, and one for forecast. If there is rain the an R is printed in the BTSerial. If not a temp character is sent based on the temp compared to other temperatures that would be set by the home owner.\n(Code in pictures due to difficulties with DevPost)\nHere is the code for the slave controller. It is hooked up to the continuos servo. It rotates for a certain time depending on how far it is going. This code keeps track of the last character to be received by bluetooth in order to identify where the window currently is. This allows it to move from one state to the next.\n(Code in pictures due to difficulties with DevPost)\nThe Painless Windows system was a success. We were able to gather data from the internet, send the information via bluetooth, and use the information to control a window how  we wanted to. If we were to have added any other systems the first would have been a manual override because maybe a home owner would want to open or close a specific window without affecting the remaining windows. We had a lot of fun making this project although at sometimes it was difficult to problem solve along the way. We are glad we were able to complete the Painless Windows System.\n",
        "hackathon_id": "ese111f15",
        "winner": false
    },
    {
        "description": "\nIntroducing SafeSip:\nLink to our final video: https://youtu.be/SXB979mPMcw\nLink to our promo video: https://www.youtube.com/watch?v=PRx9-8Oq4GM\nFeaturing: the Arduino interface, LM34 Heat Sensor, breadboard, ethernet shield, soldered wires, a cell phone, an email account, your favorite mug, and Solidworks for 3D printing. \nOur initial idea was to focus on notifying a user if their drink was either heated up or cooled down to their desired temperature. However, after visiting a hectic kitchen during initial design, we changed our project to be compatible with other kitchen appliances, such as pots and pans, to reduce disorder in the kitchen. Now, this handy tool will inform you when your creations in the kitchen reaches your desired temperature. Simply set your desired temperature, and you will receive an email when it is ready! Now, you can multitask without worrying about what\u2019s going on in the kitchen!\nHere how it works: First, we focused on creating a prototype using the Arduino interface and a breadboard.  We implemented Arduino code to convert the input voltage to degrees Fahrenheit and Celsius. We then set the threshold so that if the input temperature ever read a value above this threshold, the serial would print the word \"hot.\"\nThe next step of implementing Ethernet added another level to our project. By adding the Ethernet shield to our device and connecting it to the Detkin\u2019s network, we were able to connect to the Ethernet. We experimented with external servers, such as smtp2go.com, and decided to use Temboo. After creating an account with Temboo and linking it to Gmail, we able to create code using Temboo\u2019s client and library to send email through Arduino. Now, whenever the threshold was reached, the email code was triggered and an email was sent.\nFor the hardware, we soldered three wires and added heat shrink to enable it to fit in desired space. This ultimately allowed mobility for the heat sensor itself. We designed and 3D- printed a round device with a place designed to hold the heat sensor at the end of the soldered wires.\nSay goodbye to burns, pains and sadness, and hello to perfect meals! Keep your family safe too!\n",
        "hackathon_id": "ese111f15",
        "winner": false
    },
    {
        "description": "\nAbstract:\nAccidents happen. Everyday people all over the world suffer injuries in crashes and falls. Though a person might be able to walk away from a minor injury, a major injury that happens while the person is alone could pose a serious threat. In these cases, people may be unable to reach assistance either because the accident leaves them physically unable or even unconscious. SafeSmart is trying to change that. Our simple, wearable device will use an accelerometer to monitor for accident-like movements. When the device registers an accident and is sure the data isn't an error, it will sound an alarm as well as send a message to an emergency contact with GPS coordinates. The contact can then get the appropriate help for the person. SafeSmart could have a wide range of applications. For example, it could be particularly useful for the elderly, who often live alone and are especially susceptible to accidents. In other cases, it could also be useful for outdoor enthusiasts who go out by themselves and have limited options if they are injured.\n2 minute promo video: https://youtu.be/FbzyOpAig5U\n4 minute technical video: https://youtu.be/s4A96KpadxE\nNote: SafeSmart does its best to send as much information as it can. In the video, we demonstrate how the email looks like if the GPS lookup fails. Please check out the image gallery for an example of an email when the GPS lookup succeeds.\n",
        "hackathon_id": "ese111f15",
        "winner": false
    },
    {
        "description": "\nABSTRACT:\nHave ever had those days when you can\u2019t get up for your morning class? As college students ourselves, we believe that all of us have those bad mornings and that is why we bring to you the Wakey Blankey. We propose a special blanket designed to wake someone up by movement and vibration. We look to build this project through the use of the Arduino UNO, Ethernet Shield, LCD, buzzer, servo motors and a pulling mechanism. We connect the Arduino UNO is connected to LCD and Ethernet shield which fetches the GPS universal time via Ethernet connection and displays it on the LCD with a 10 seconds update rate. How it works is when the real time reaches the alarm time, the Arduino commands the connected buzzer to sound and the connected servo motor to spin half a revolution. This spin pulls the wire attached to the servo motor which triggers our blanket pulling mechnism, snatching away the user's blanket and forcing the user to wake up as one cannot simply sleep in the cold without a blanket. This project will use the skills we have acquired so far in the labs such as the servo motors, internet connection, LCD and Arduino. It will be beneficial for people who have difficulties waking up for early appointments, and that\u2019s the majority of college students. \nHere is the link to our Introduction Video:\nhttps://www.youtube.com/watch?v=n2-cZYqnxvk\nPROBLEM:\nThe Wakey-Blankey is a special blanket designed to wake up someone, by pulling itself away at a specified time that one would wish to wake up. For most college students, it is extremely difficult to get off bed to go to an early morning class when sleeping in a warm fluffy blanket, even with the loudest alarm. In my case, when the alarm rings I snooze it or turn it off, then go back to sleep. Consequently, most college students including ourselves have missed those early morning classes, because getting out of bed was extremely difficult. Therefore, we were self-inspired to make a blanket that could actually wake one up by exposing you to the cold, hence solving the problem of missing classes. With the blanket pulled away, and one\u2019s body exposed to the cold in the morning, one would not have a choice but to wake up.\nAPPROACH:\nFor the Wakey-Blankey to work, we used the Ethernet cable to connect the Arduino to the internet, then the internet sends time signals to the Arduino Uno which in turn receives the time and displays it on the LCD shields. Continuously, the Arduino Uno commands the servo motor to rotate when the specified time is at hand, and the buzzer pin starts ringing. As the Servo motor rotates, it triggers the wire to press the mechanical button of the Dog leash (our blanket pulling mechanism). Finally, the Dog leash pulls the blanket and the goal is achieved, no more sleeping!\nIn the implementation, we strived for simplicity of the system, considering that it would be used on the bed, hence needed to be practically convenient.\nThe Wakey-Blankey project was implemented by constructing a connected system of the following subsystems:\nArduino Uno & LCD shield: This is the command engine of the Wakey-Blankey. The Arduino-Uno receives time signal from the internet, display it on the LCD shield. Then use Arduino to send signal to the servo motor to rotate, when the time to wake up is at hand, and making the buzzer pin to start ringing. \nEthernet cable: In this system, we are using the Ethernet cable to connect the Arduino to the internet. The Ethernet is connected to the internet server in the lab, then connected to the Arduino to make the whole system work.\nA servo motor & Wire: A wire is connected to both the servo and the mechanical button of the dog leash, so that when the servo motor blades rotate, the wire presses the dog leash button, making the chain of the dog leash retract.\nWe made the servo motor fixed to the Dog leash handle using glue tape so that the servo remains still during rotation of the blades, hence not altering the whole system.\nDog leash: This is a simple material that is used to pull the blanket. The dog leash has a small hook, which is attached to one end of the blanket. The dog leash has a mechanical button which makes its chain loose or still when pressed.\nBuzzer pin: The role of the buzzer pin in this system is to ring at the same time the servo motor starts rotating. So it acts as an alarm, giving warning that the blanket is about to retract, and continues sounding after the blanket is pulled away. It can stop ringing by pressing a button. \nA Blanket: This is the main part that the project is centered on, it is the final tool in the system that actually makes somebody wake up. The blanket retracts itself, hence exposing the person sleeping in the cold. \nCHALLENGES:\nDuring the implementation of the project, we could not use a real blanket because the dog leash we used didn\u2019t have enough force to support the weight of the blanket. Therefore, we used a pillow case as a prototype, but the process of the system is the same, we would just need to get a more powerful dog leash to support a blanket. \nTo implement it as an everyday tool, we would have to get Arduino to connect to the internet with Wi-Fi without having to use an Ethernet cable.  Furthermore, we would implement a button device to be used to set the alarm time and to stop the buzzer in order to make the Wakey-Blankey more user friendly.\nThe Wakey Blankey is not only for college student, but for anybody who faces waking up problems. Make sure you get one!\nCODE:\n// the code for the wakey-blankey project is adapted from the codes from\n// lab 6 (the internet lab) and lab 4 (the servo & dc motor lab)\n// last modified by Patadon Kongsoonthorn on December 10th 2015\n\n// the code below will fetch the time from the \"time.nist.gov\" and convert it \n// into 6 digit integer (taking out the colon - hh:mm:ss --> hhmmss) because\n// we can then set the alarm time as another 6 digit integer. \n// So, when the 6 digit real time passes the 6 digit threshold, the arduino starts\n// its waking up operations. The servo turns to the right to trigger the\n// blanket pulling mechanism and the buzzer will sound at the same time.\n// At the same time, the buzzer will sound just like a traditional alarm clock.\n\n#include <SPI.h>\n#include <Ethernet.h>\n#include <EthernetUdp.h>\n#include <LiquidCrystal.h>\n#include <Servo.h>\n\nServo servo1;\n\nconst int servoPin = 3;\nconst int left = 0;\nconst int right = 180;\n\n// MAC address printed on a sticker on the Ethernet shield\nbyte mac[] = {\n  0x90, 0xA2, 0xDA, 0x0E, 0x9D, 0x0B\n};\nunsigned int localPort = 8888; //local port to listen UDP packets\nchar timeServer[] = \"time.nist.gov\"; \nconst int NTP_PACKET_SIZE = 48;\nbyte packetBuffer[NTP_PACKET_SIZE]; //buffer to hold incoming and outgoing packets\nEthernetUDP Udp;\nLiquidCrystal lcd(8, 9, 4, 5, 6, 7); //for DF robot\nIPAddress ip(192, 168, 1, 111);\n// Initialize the Ethernet client library\n// with the IP address and port of the server\n// that you want to connect to (you must change this!):\nEthernetClient client;\n\nvoid setup() {\n  servo1.attach(servoPin);\n  Serial.begin(9600);\n  // Open serial communications and wait for port to open:\n  while (!Serial) {\n    ; // wait for serial port to connect. Needed for Leonardo only\n  }\n  lcd.begin(16, 2);\n  lcd.clear();  \n  lcd.print(\"Welcome...!!\");\n  delay(500);\n  lcd.clear();\n\n  // setup the pin for the servo motor\n  pinMode(2, OUTPUT);\n\n  Ethernet.begin(mac, ip);\n  // print your local IP address:\n  //Serial.print(\"My IP address: \");\n  for (byte thisByte = 0; thisByte < 4; thisByte++) {\n    // print the value of each byte of the IP address:\n    //lcd.print(Ethernet.localIP()[thisByte], DEC);\n    Serial.print(Ethernet.localIP()[thisByte], DEC);\n    Serial.print(\".\");\n    //lcd.print(\".\");\n  }\n  Serial.println();\n  Udp.begin(localPort);\n}\n\nvoid loop() {\n  sendNTPpacket(timeServer); // send an NTP packet to a time server\n\n  // wait to see if a reply is available\n  delay(1000);\n  if (Udp.parsePacket()) {\n    // We've received a packet, read the data from it\n    Udp.read(packetBuffer, NTP_PACKET_SIZE); // read the packet into the buffer\n\n    // the timestamp starts at byte 40 of the received packet and is four bytes,\n    // or two words, long. First, extract the two words:\n\n    unsigned long highWord = word(packetBuffer[40], packetBuffer[41]);\n    unsigned long lowWord = word(packetBuffer[42], packetBuffer[43]);\n    // combine the four bytes (two words) into a long integer\n    // this is NTP time (seconds since Jan 1 1900):\n    unsigned long secsSince1900 = highWord << 16 | lowWord;\n\n    // now convert NTP time into everyday time:\n    // Unix time starts on Jan 1 1970. In seconds, that's 2208988800:\n    const unsigned long seventyYears = 2208988800UL;\n    // subtract seventy years:\n    unsigned long epoch = secsSince1900 - seventyYears;\n\n    // print the hour, minute and second:\n    lcd.setCursor(0,1);\n    Serial.print(\"The time is \");       // UTC is the time at Greenwich Meridian (GMT)\n    lcd.print(\"Time: \");\n    Serial.print((epoch  % 86400L) / 3600 - 5); // print the hour (86400 equals secs per day)\n    lcd.print((epoch  % 86400L) / 3600 - 5);\n    Serial.print(':');\n    lcd.print(\":\");\n    if (((epoch % 3600) / 60) < 10) {\n      // In the first 10 minutes of each hour, we'll want a leading '0'\n      Serial.print('0');\n      lcd.print(\"0\");\n    }\n    Serial.print((epoch  % 3600) / 60); // print the minute (3600 equals secs per minute)\n    lcd.print((epoch  % 3600) / 60);\n    Serial.print(':');\n    lcd.print(\":\");\n    if ((epoch % 60) < 10) {\n      // In the first 10 seconds of each minute, we'll want a leading '0'\n      Serial.print('0');\n      lcd.print(\"0\");\n    }\n\n    Serial.println(epoch % 60); // print the second\n    lcd.print(epoch % 60);\n\n    long theTime = ((epoch  % 86400L) / 3600 - 5) * 10000 \n      + ((epoch  % 3600) / 60) * 100 + epoch % 60;\n    // print the 6 digit integer time in the serial monitor\n    Serial.println(theTime);\n\n    // Set the time for the alarm here as a 6 digit integer\n    long wakeUp = 182000;\n\n    if (theTime >= wakeUp) {\n      // servo rotates right to trigger the blanket pulling mechanism\n      servo1.write(right);\n      Serial.println(\"Wake Up!!\");\n      lcd.setCursor(0, 0);\n      lcd.print(\"Wake Up!!\");\n      // sound the buzzer as an alarm\n      digitalWrite(2, HIGH);\n\n    }\n    else if (theTime < wakeUp) {\n      // servo rotates left to reset the pulling mechanism\n      servo1.write(left);\n      lcd.setCursor(0, 0);\n      lcd.print(\"Zzz...\");\n      Serial.println(\"Zzz\");\n      digitalWrite(2, LOW);\n    }\n\n  }\n  // our clock updates its time from the server every ten seconds +- 2 secsonds\n  delay(10000); // wait ten seconds before asking for the time again\n  Ethernet.maintain();  \n}\n// send an NTP request to the time server at the given address\nunsigned long sendNTPpacket(char* address) {\n  // set all bytes in the buffer to 0\n  memset(packetBuffer, 0, NTP_PACKET_SIZE);\n  // Initialize values needed to form NTP request\n  // (see URL above for details on the packets)\n  packetBuffer[0] = 0b11100011;   // LI, Version, Mode\n  packetBuffer[1] = 0;     // Stratum, or type of clock\n  packetBuffer[2] = 6;     // Polling Interval\n  packetBuffer[3] = 0xEC;  // Peer Clock Precision\n  // 8 bytes of zero for Root Delay & Root Dispersion\n  packetBuffer[12]  = 49;\n  packetBuffer[13]  = 0x4E;\n  packetBuffer[14]  = 49;\n  packetBuffer[15]  = 52;\n\n  // all NTP fields have been given values, now\n  // you can send a packet requesting a timestamp:\n  Udp.beginPacket(address, 123); //NTP requests are to port 123\n  Udp.write(packetBuffer, NTP_PACKET_SIZE);\n  Udp.endPacket();\n}\n\n\u2003\n",
        "hackathon_id": "ese111f15",
        "winner": false
    },
    {
        "description": "\nBuilt With\narduinomatlab\n",
        "hackathon_id": "ese111f15",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe Adruino board! \nWhat it does\nUsing the Adruino board, the user is able to play a game of Simon-Says. When a light flashes from the board, the user must swipe their hand over the corresponding sensor. \nHow I built it\nBuild using the Adruino board and the Adruino application\nChallenges I ran into\nAccomplishments that I'm proud of\nIt works!\nWhat I learned\nI learned more about hardware engineering and the various languages that we used. \nWhat's next for Arduino_Wave_Game\nGetting a score board by communicating with multiple ports. \n",
        "hackathon_id": "5chackathon2015f",
        "winner": false
    },
    {
        "description": "\nInspiration Pop culture\nWhat it does Drakes you\nHow I built it Love\nChallenges I ran into Never giving up, never letting you down\nAccomplishments that I'm proud of Facebook API\nWhat I learned literally all the things we needed for this\nWhat's next for Drake Yourself App store and world domination\n",
        "hackathon_id": "5chackathon2015f",
        "winner": false
    },
    {
        "description": "\nBuilt With\nunreal-engine\n",
        "hackathon_id": "5chackathon2015f",
        "winner": false
    },
    {
        "description": "\nInspiration\nAudible is currently the most popular audiobook playing application for android, however, it only plays audible type formats, which restricts us audiobook listeners from listening to the most common media files (like .mp3)! We wanted to set out and create an android app that can play more common audiobook files (such as .mp3) that has the features of audible (such as bookmarking, skipping tracks, fast forwarding, etc.).\nWhat it does\nPlay any .mp3 file; it is especially suited for large files, particularly those that are longer than 10 minutes.\nHow I built it\nWith blood, sweat, and tears.  Also a lot of caffeine, like 8 redbulls and 3 cappuccinos... \nChallenges I ran into\nAndroid app programming!  We had to learn how to read .mp3 files, load them, go to the next track, etc.\nAccomplishments that I'm proud of\nCreating an amazing app with great functionality. Pulling our first all-nighters.\nWhat I learned\nSo much, I can't even articulate....we learned how to create an android app, how to work with .mp3 files, and \nWhat's next for AudioBib - the audiobook and podcast player!\nWe're going to continue development and put it on the android app store so that other people won't have to deal with the horrors of the default android music player when playing large audio files!\n",
        "hackathon_id": "5chackathon2015f",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavajavascripthtml5cssbootstrap\n",
        "hackathon_id": "5chackathon2015f",
        "winner": false
    },
    {
        "description": "\nBuilt With\nswiftpython\n",
        "hackathon_id": "5chackathon2015f",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe just want to have a spy dance party.\nWhat it does\nYou're in a virtual reality world going through mazes.\nHow I built it\nWe used the Vizard platform and wrote Python code.\nChallenges I ran into\nLots\nAccomplishments that I'm proud of\nWe made a game!\nWhat I learned\nDuck dance parties are fun\nWhat's next for DuckSpyDanceParty\nThings!\n",
        "hackathon_id": "5chackathon2015f",
        "winner": false
    },
    {
        "description": "\nInspiration\nI like games\nWhat it does\nHow I built it\nChallenges I ran into\nAccomplishments that I'm proud of\nWhat I learned\nWhat's next for Gunned Down\n",
        "hackathon_id": "5chackathon2015f",
        "winner": false
    },
    {
        "description": "\nInspiration: We were inspired by the game QWOP and the Hackathon.\nWhat it does: \"Realistic\" simulation of the Hackathon experience.\nHow we built it: Using libgdx's game engine and box2d's physics engine.\nChallenges we ran into: Learning how to use a new library.\nAccomplishments that we're proud of: The ragdoll, the display, etc.\nWhat we learned: That sometimes the best way to figure things out is trial and error.\nWhat's next for Qwackathop: Full implementation.\n",
        "hackathon_id": "5chackathon2015f",
        "winner": false
    },
    {
        "description": "\nBuilt With\ndjango\n",
        "hackathon_id": "5chackathon2015f",
        "winner": false
    },
    {
        "description": "\nBuilt With\ndjangoangular.jsparticle-photonc++\n",
        "hackathon_id": "5chackathon2015f",
        "winner": false
    },
    {
        "description": "\nWe're currently working on developing a game called Capital. A hybrid deckbuilding/board game centered around on the spot creative thinking to craft the best deck to beat your opponents in phase 1, and a strategic showdown using your decks in phase 2. This is the prototype of the project, that focused on building the core for phase 2 as a standalone game for playtesting purposes. \nWe built in in Love2D, a nice graphics library for Lua. This was the first time with the programming language for most of the team.\nOne top priority is telnet support, which we built the game to support but haven't implemented yet. The game will also gain several keywords and special abilities on cards will get added in the near future. Full game and card design, along with support for phase one will get rolled out over winter break. \n",
        "hackathon_id": "5chackathon2015f",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtmlcssmeteor.js\n",
        "hackathon_id": "5chackathon2015f",
        "winner": false
    },
    {
        "description": "\nInspiration\nImagine you\u2019re waiting for a party to begin. You\u2019ve put on some fresh new threads, you did your hair, you look fantastic. The only thing that can derail this night is a lame DJ playlist. If only there was a way for people to collectively vote on which songs they want to hear throughout the night.\nWhat it does\nAllows user to vote on the order of a playlist using state of the art algorithms \n\nHow I built it\nTrial and error, probably 4-5 hours were spent trying to figure out how to write javascript and implement python code. Our fearless leader Shota San has done an amazing job building the web application that we wrote the back end for the list sorting and verification \n\nChallenges I ran into\nLearning how to work with API\u2019s none of us have any experience working with API\u2019s we sat down 11 hours ago and now we still don\u2019t know what we are doing but we were able to implement this well.\n\nAccomplishments that I'm proud of\nThere were times when I wanted to smash my computer, but I didn\u2019t, I took a shot of red bull and kept googling until I found the answer to my problems.\n\nWhat I learned\nHow much fun hackathons are, going into this I had no idea what to expect besides a sleepless night. I now know that a Hackathon is a rewarding, challenging experience.\n\nWhat's next for Gain Structure\nCatch us on Wall St. in a few months for our IPO. Dolla dolla bills yall!\n",
        "hackathon_id": "5chackathon2015f",
        "winner": false
    },
    {
        "description": "\nBuilt With\nprocessingminimmidibus\n",
        "hackathon_id": "5chackathon2015f",
        "winner": false
    },
    {
        "description": "\nBuilt With\nmeteor.jshtml5cssjavascripttwiliosendgrid\n",
        "hackathon_id": "5chackathon2015f",
        "winner": false
    },
    {
        "description": "\nInspiration\nMy younger sister is deaf and now has a cochlear implant in both ears. The thing she was most afraid of losing was music. We wanted to create an application that would make music enjoyable visually, so hearing or not, songs could be enjoyed with one's eyes.\nWhat it does\nThis app aims to visualize how music sounds & feels on the screen (almost like dancing!). It uses the Spotify API to connect a user to their large library of songs. The user can search and choose a song and then iterate through different visualizations until they find one they like the best.\nHow I built it\nWe used: the Spotify API, p5.js, Express.js, Node.js, jQuery, Ajax, React.js, JavaScript, HTML, Nunchucks, & CSS.\nChallenges I ran into\nIt was very difficult to implement the search functionality as well as link the visuals with the tracks from our requests to the Spotify API. We spent a lot of time working to pass the track's url to the p5.js visualization and also to implement the user's ability to go through different visualizations with the press of a key.\nAccomplishments that I'm proud of\nThis combination of art and technology brings something very important many communities that can appreciate it: artists, designers, technologists, musicians, etc. We managed to bring our idea to life with a lot of research and hard work.\nWhat I learned\nCollaboration is key & wonderful projects happen at the intersection of art & technology!\nWhat's next for HEART: hear art // experience music\nMore visualizations & more users! We want everyone to experience music in this new way. \n",
        "hackathon_id": "5chackathon2015f",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptcsshtml\n",
        "hackathon_id": "5chackathon2015f",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythondjangojavaandroid\n",
        "hackathon_id": "5chackathon2015f",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonhtmicss\n",
        "hackathon_id": "5chackathon2015f",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe most popular games nowadays are always incredibly simple. This is our take on a game fitting for today's state of gaming and the meme culture of the internet. \nWhat it does\nTests how fast the player can move the ice cream cone to prevent the faces from falling onto the ground. There are increasing levels of difficulty which increases the rate at which faces fall.\nHow I built it\nUsing Java, Eclipse and previous projects to refer to.\nChallenges I ran into\nHow to pass information through parameters most efficiently. \nAccomplishments that I'm proud of\nThe happiness and positivity that our game brings to players.\nWhat I learned\nThat teamwork, perseverance, and irrational confidence are all very important in producing a functional game .\nWhat's next for Scoop Me\nScoop Me: Hardened Edition w/ exclusive DLCs\nft. soundtrack by Future\np.s. Thank you for this opportunity, we really enjoyed this experience!\n",
        "hackathon_id": "5chackathon2015f",
        "winner": false
    },
    {
        "description": "\nBuilt With\nc++c\n",
        "hackathon_id": "5chackathon2015f",
        "winner": false
    },
    {
        "description": "\nBuilt With\njava\n",
        "hackathon_id": "5chackathon2015f",
        "winner": false
    },
    {
        "description": "\n\nLive Demo\n\nIntroduction\nDo you try to get something done before microwave timers finish? What about while waiting on water to boil? Lazy Chef takes those micro-optimization to the next level by providing the easiest, most time-efficient set of instructions to complete any sequence of tasks. \n\nWant to go grocery shopping with a list of ingredients sorted by aisle?\nWant to cook an awesome but involved recipe perfectly on your first try, and in the least amount of time?\nWant to make sure you're making use of time waiting on the water boiling or the chicken baking?\nWant to combine tasks shared across multiple recipes when preparing a multi-course meal?\nWant to have your employees replicate a recipe without having to learn it?\nWant to divide work efficiently between friends in a group cooking effort?\n\nLazy Chef solves all these problems my turning your end goals into a easy, timed, automated sequences of action items.\nSynopsis\nLazy Chef is a web application prototype that allows users to select recipes, from which Lazy Chef generates an ingredient shopping list and a sequence of micro-instructions to guide the user through completing all the recipes in the least amount of time. The interface for instructions features an array of timers, progress of action items (e.g. chopping mushrooms), upcoming tasks, and progress of background tasks (e.g. boiling water).\nLazy Chef features a robust recipe import system, that takes a simple, human readable file and adds it to a library of recipes. The library can generate a set of instructions for any set of recipes in the library whose prerequisite ingredients are listed. \nLazy Chef was implemented in Python and Javascript. Thorough documentation for the Python backend is provided via docstring.\nMore Screenshots\nRecipe Selection\n\nIngredient Finding\n\nUpcoming Features\n\nNutrition Fact Estiamtion: Know exactly what you get out of each portion!\nSocial Recipe Sharing: Create your own recipes and share them with friends!\nMulti-participant Optimization: Split the tasks among a team or group of friends!\nSkillwise Personalization: Specify how long it takes you to perform each task!\n\nCredits\nIcon made by Hand Drawn Goods from www.flaticon.com\n",
        "hackathon_id": "hackprincetonf2015",
        "winner": true
    },
    {
        "description": "\nTuition Hack \nCopyright \u00a9 hackPrinceton 2015\nRequirements:\nChoropleth maps to show current tuition costs from 1745 colleges & universities and:\nHave a choropleth map that increases with the tuition costs, higher tuition equals higher heat.\nHave an algorithm to determine future tuition costs\nUse past data from 2002-2015 to determine the algorithm\nHave a search bar to quickly find individual institutions\nHave a input field to determine which year to project tuition costs for\nCreate a database for the universities which includes:\nPrimary Key (Unit ID)\nInstitution Name\nInstitution (entity) name\nZip Code\nStreet Address or PO Box\nCity Location of Institution\nStreet address or post office box &\" \"&  City location of institution\nTotal price for in-state students living on campus 2014-15 \nTotal price for out-of-state students living on campus 2014-15\nTotal price for in-state students living on campus 2013-14\nTotal price for out-of-state students living on campus 2013-14\nWebsite Purpose:\nThe purpose of this site is to develop a valuable set of choropleth maps to determine which universities, states, and regions are more expensive than the average university. \nThis website and mobile applications will also serve as a point of reference for future increases in tuition for both in-state and out-of-state students per university.\nAlgorithm:\nThe quadratic regression formula:\n\nThe formula projects future data points by using the previous data sets, A,B,C. \nOur logic for the formula:\na = (( \u03a3 x2y * \u03a3 xx ) - (\u03a3 xy * \u03a3 xx2 )) / (( \u03a3 xx * \u03a3 x2x2) - (\u03a3 xx2 * \u03a3 xx2))<\nb = (( \u03a3 xy * \u03a3 x2x2 ) - (\u03a3 x2y * \u03a3 xx2 )) / (( \u03a3 xx * \u03a3 x2x2) - (\u03a3 xx2 * \u03a3 xx2 ))\nc = ( \u03a3 y / $numValues ) - ( b * ( \u03a3 x / $numValues )) - ( a * ( \u03a3 x2 / $numValues ))\nwhere:\n\u03a3 xx = ((\u03a3x^2) - (($\u03a3x)^2 / n))\n\u03a3 xy = ((\u03a3xy) - ((\u03a3x* $\u03a3y) / n))\n\u03a3 xx2 = ((\u03a3x^3) - ((\u03a3x^2* \u03a3x) / n))\n\u03a3 x2y = ((\u03a3x^2y) - ((\u03a3x^2* \u03a3y) / n))\n\u03a3 x2x2 = ((\u03a3x^4) - ((\u03a3x^2)^2 / n)))\n",
        "hackathon_id": "hackprincetonf2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWatchOut is a system designed to help people get help when they're in danger. We were particularly inspired by the idea of helping victims of domestic abuse -- in many cases, it is difficult for them to get help before and during an attack, and we thought of WatchOut as a way to help these people get the help they deserve. What's more, we were also inspired by how WatchOut could be used to make people feel more safe in general. As four women, we have all had uncomfortable experiences when having a wearable tech system, quite literally watching out for us and contacting appropriate people should there be an emergency, would have been so, so welcome. Introducing WatchOut!\nWhat it does\nWatchOut is a safety system with a Pebble smartwatch watchapp, iPhone app, external sensor (microphone)/circuitry, Firebase database. Since smartwatches come with accelerometers, we tapped into that data to code an app that can sense when an arm (that the watch is on) moves upward into a defensive position. In addition, we have a microphone that can sense when a loud distress noise is made. Together, these two data points in the app will be able to send a distress signal through the app and connect to third-party apps to send emergency messages to emergency contacts. \nHow we built it\nWe built it by integrating the different components together through connecting the PebbleWatch to the companion app on the phone using Objective-C on XCode to program the app and C to program the watchapp. Furthermore, we designed a microphone circuitry that connected to the online database Firebase as well as the companion iOS app developed. Finally, we developed a button that could connect to a third-party to send emergency messages automatically when triggered by motion and microphone.\nChallenges we ran into\nWe ran into problems with the limited capabilities of PebbleWatch firmware, especially since firmware 1.0 does not contain real-time bidirectional communication capabilities, which would have been helpful for sending accelerometer data from the watch to the companion app on the phone. Furthermore, we ran into problems with the limited possibilities within iOS software development, specifically because Apple does not allow you to send automated messages using iMessage, meaning we would have had to use another application and performed authentication (which would have stretched much beyond our timeline). On the hardware side, the microphone sensor's voltage range did not match that of the Electric Imp. Also, dealing with the frequency of the audio signals and connecting the Elctric Imp to a Cloud database proved to be difficult. \nAccomplishments that we're proud of\nWe are proud of the social reach of our app - with some fine-tuning, it may prove to serve incredibly beneficial for the safety of people in dangerous situations, particularly with respect to young girls and women facing threats of sexual assault and domestic violence. This was also our first hackathon and we were proud, as an all-girl team, to focus our efforts on expanding the rights and protection of women, especially in light of rampant university sexual assault cases and worldwide gender discrimination. \nWhat we learned\nMuch of what we implemented was new to us -- as a team, we learned to design an iOS app, interact with Pebble smartwatch, use electric imp to collect data from a microphone, send to a Firebase database, and collaborate together as a team while dividing tasks to make deadlines.\nWhat's next for WatchOut\nFuture steps for WatchOut revolve around increasing the sophistication of the integration. This includes moving it to a newer version of the firmware that would allow for easier data transfer from the smartwatch to the iOS app (and would specifically allow for the use of AppMessage that would facilitate bidirectional communication), using more information from the database, using the SOS button to text emergency contacts, expanding the software to other platforms (including the Android, which might prove friendlier to our project), transmitting GPS coordinates for the purpose of distribution to emergency contacts, and establishing a connection to Nest through which we would place markers in the footage if GPS coordinates showed the potential victim to be at home. \n",
        "hackathon_id": "hackprincetonf2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe wanted to find some way, some how to reverse wireless charging. There are energy waves surrounding us at all times, so how cool would it be to leverage that!? PowerGrab uses one form of energy available - vibrations - and converts it in to a DC power supply. \nWhat it does\nA piezoelectric transducer captures the vibrational energy from a Pebble watch. The Pebble and transducer are tuned so that their natural frequencies are as close as possible and a rectification circuit converts the output of the transducer in to usable DC power.\nHow I built it\nWe spent many careful hours characterizing the piezo and finding its natural frequency, and then doing the same for the Pebble. Next we attached the piezo to the Pebble and began tuning the Pebble's frequency to achieve resonance (a very tricky process). As we approached resonance, the piezo's output voltage increased, so we continued until we got to a usable amount of voltage output with the Pebble vibrating. Next up was the rectification circuit. We needed to convert the AC signal to a DC supply so we implemented a wheatstone bridge with four diodes for full-wave rectification. Next, we tested varying smoothing capacitor values and picked the best of what we had. Finally, we were able to power an LED! \n(We would have loved to boost our DC voltage up to 4 V and feed it back in to the Pebble, but alas, we were missing a few critical hardware components for that.)\nChallenges I ran into\nFrequency tuning is a difficult process with the right equipment and piezo's do not give out too much voltage without resonance. Therefore, we had to spend hours upon hours trying to bring down the frequency of the Pebble to get closer to the natural frequency of the piezo. \nWhen we finally got that working, the struggle continued in to the rectification circuit: we lost any voltage that we thought we had (we were getting less than 0.2 VDC, yikes). We had to take a step back and debug the circuit step by step, try out different hardware components, re-tune the frequency, change components, re-tune, and on and on. \nWe weren't able to get the measly 0.2 V up to a usable 1.85 V until late in to the night. \nAccomplishments that I'm proud of\nWE POWERED AN LED WITH A PIEZO! (and we're excited about it =) ) This project idea was ... a stretch, to say the least. We couldn't find any examples of this being done online and thought we might be crazy to be embarking on a project that might be truly impossible scientifically. BUT, we saw a small opportunity for crazy cool power harvesting and the math said it was possible (though highly implausible), so we dove in. It took days of frustration and seemingly thankless hardware tuning, but in the final hour... WE POWERED AN LED WITH A PIEZO!\nWhat I learned\nTuning natural frequencies is quite challenging and piezos are incredibly sensitive. A lot of variables need to be in line perfectly for this to work. Also...you can indeed get free power from the environment if you have a lot of patience and hot glue. \nWhat's next for PowerGrab\nWe need to get our hands on a charge pump and boost this sucker up to 4.0 V (the minimum for charging a Pebble battery), just to see once and for all if we can get that beautiful charging icon to light up. Then we need to manufacture this piezo setup in large quantities, place them around noisy cities and construction sites, and grab some power. =)\n",
        "hackathon_id": "hackprincetonf2015",
        "winner": true
    },
    {
        "description": "\nPANDA\nPersonal\nAutomated\nNetworked\nDrug\nAssistant\n\nPANDA is a smart pillbox that reminds you when to take your medicine! Using the web interface, you can tell PANDA when to remind you. PANDA can take either a list of times or set period between reminders.\nOnce it is time to take your medication, PANDA will start beeping and light up the indicator next to the medicine you need to take. The only way to quiet PANDA is to open the box, so there is no chance you will forget to take your medicine. Also, PANDA remembers if you took your medicine already. If the light is red, you know you don't need to take the pill again.\nMotivation\nRegardless of how careful doctors and pharmacists are at prescribing medicine, the responsibility of actually taking the correct medication at the right times still falls on the patient. Despite how important it is to take the right medication at the right time, pharmacists still have to give instructions verbally to patients and these instructions grow increasingly complex as the number of prescriptions increase. Using PANDA, patients can bring a pharmacist home with them. Pharmacists are able to fill out an online with drug administration instructions and that information is then transmitted via Wi-Fi using Electric Imp to PANDA, which is fitted with two LEDs per prescription. One that lights up green which means take and one that lights up red that means do not take. The PANDA beeps when it\u2019s time to take medicine and the beeping only stops when a light sensor detects that PANDA has been opened and thus medication has been taken. Because the PANDA is battery-operated, it can be put in the most convenient location. PANDA is great for patients who have to take medicine daily, from those taking Lipitor after a heart attack, to women on birth control.\nHardware\n\nPANDA is built around the Electric Imp platform. PANDA uses a CdS photocell to detect if the lid is open or not based on the brightness change. This photocell is read using an analog input on the Electric Imp using a 1k\u03a9 resistor on the high side in a voltage divider configuration. There are two red/green LED's (Newark 20K5342) indicating which medicine to take. These LED's are bidirectional, so they emit green light when biased in one direction and red light when biased in the other. The LED's are controlled using two pairs of digital output pins. The final pin is used to drive the piezo speaker (Sparkfun COM-07950) using a fixed frequency PWM signal. PANDA is powered by a 4xAA battery holder hooked into the battery input (P+/-) pads on the Electric Imp.\nSoftware\nPANDA can be configured using a web interface, created using Bootstrap and Javascript. The web interface communicates with the Electric Imp servers using standard http requests. Timekeeping and alert triggering are managed by polling loops in the server side of the Electric Imp. The device is notified of alerts using the standard message passing functionality built into the Electric Imp platform. Source code is available on Github.\n",
        "hackathon_id": "hackprincetonf2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nI was #1 on Twitter--and heading over to the detriment of America!\nWhat it does\nNO! Let's Make America Great Again! Must read that \"Trump won the debate stage and there's a BIG differences between Ben Carson in order to salvage hope! Sad.\nHow I built it\nRight after he left he went to work and I had zero interest and lobbyist & special interests & donors that are support! #Trump2016 Remember, Univision. MAKE AMERICA GREAT AGAIN!\nChallenges I ran into\nI will make this right now on C-SPAN 1 Druggies, drug dealers, rapists and donors--are trying to hit back at me because I exposed the terrible at business--the last two times!\nAccomplishments that I'm proud of\nNice! Thank you note? #CNNDebate Winning the debate was really dumb puppets, Chris Stirewalt of @FoxNews keep George Will spoke at Mar-a-Lago years ago. I didn\u2019t!\nWhat I learned\n@ZachJohnsonPGA You're one of the most dishonest!\nWhat's next for Trumpr\nMakeAmericaGreatAgain merchandise.\n",
        "hackathon_id": "hackprincetonf2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nOnline facial authentication is tricky, considering the ability of anybody with a Facebook account to pull a picture of your face at any time. We wanted to take a stab at a scheme that is resistant to these types of attacks without resorting to transferring video over the network.\nWhat it does\nP-Auth allows users to authenticate based on eye movements using the face recognition API of Project Oxford. Users first register by training a face with a single picture. They can then login by sending two pictures of their face that differ only through pupil movement in a random direction as dictated by the server.\nChallenges we ran into\nWe originally wanted to authenticate based on head position, but unfortunately the Project Oxford API was both unable to determine pitch (as opposed to roll and yaw) as well as distinguish between a rotated head and a rotated picture, defeating the purpose of facial authentication. So we resorted to using pictures of moving pupils to avoid this particular vulnerability.\nAccomplishments that we're proud of\nWe are most proud of the snappy response time and overall usability. \nWhat's next for P-Auth\nAs a big next step, we think we can further leverage the rich data provided by Project Oxford to create a \"password face,\" which is held on the server and completely prevents to use of photoshop.\n",
        "hackathon_id": "hackprincetonf2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe felt unsafe of our home back in Canada as we came to HackPrinceton.\nWhat it does\nStalls to watch for intruders - once an intruder is detected, the robot will take a picture of the intruder and tweet to its owner. It will then bravely follow the intruder to make sure he does not get away, while insulting at the intruder to inflict emotional damage. When the intruder shows a sign of submission, it will notify the owner once again on twitter with a picture.\nHow I built it\nWe mounted Rasberry-pi on the robot for control, using the ROS framework with subscriber model. Intruder detection logic is written in C# with heavy use of Kinect object/human detection. \nIntruder detection logic runs on a laptop, which is attached on top of the robot. It will then use Ethernet and HTTP to communicate with a server running on the Rasberry-pi, which interfaces with robotic control logic controlling physical parts of the robot. The laptop also sends notification to our web server written in node.js, which handles making API calls to Twitter.\nChallenges I ran into\nRasberry-pi being a tough beast, lack of experience with Kinect.  \nAccomplishments that I'm proud of\nWe have a whole intruder compliance undertaker (I.C.U.) system that utilizes Kinect, IoT and Web Server, and they work seamlessly together.  \nWhat I learned\n\nSolid understanding of Kinetic from ground up,\nArchitecting communication between logical components\nExperience with numerous APIs\nLow-level robotic control \n\nWhat's next for ICUbot\nIt will be bigger faster stronger to better take down intruders\n",
        "hackathon_id": "hackprincetonf2015",
        "winner": true
    },
    {
        "description": "\nMany of us like to keep track of sensitive information including passwords, credit card numbers, social security numbers, addresses, and other information on our mobile phones that, if found, pose a major risk to our security. How can we make this information safer? How do we prevent someone who is snooping on our phone from finding it?\nCloak is our solution.\nOur \"Cloak\" hides your textual information by storing an encrypted version into an existing photo of your choice. Type in your text, upload a photo, and Cloak will encrypt and hide your information in that photo using our steganographic algorithms such that no one can tell that it is there. Whenever you wish to retrieve that information, upload the image with your data and Cloak will \"decloak\" it and display the hidden text. \nCloak is unique amongst information security applications because it is:\nSeamless - Back up your data while backing up your photos\nTransferrable - Easily send hidden information to friends/family or to a new, upgraded phone\nImpervious - Hard for snoopers to find the correct image and find and decrypt your data\nIn the future, we hope to customize our \"Cloak\" for Desktop (Windows, OS X) and other mobile platforms such as Android.\n",
        "hackathon_id": "hackprincetonf2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nNetwork security is becoming more and more opaque. Most ordinary internet users, while they may not be aware of network security problems, are not protected against unknown users connecting to their internet. This is both a security and a privacy concern for internet users. Our inspiration for this project was originally to help people protect against potential robberies by detecting bluetooth or wireless connection signals from the would-be robbers' phones. However, after starting the project and considering different ideas, the team switched to a device that would help network security. \nWhat it does\nOur WiFi/Bluetooth honeypot is a Raspberry Pi (RasPi) that passively detects unknown devices within a well-defined area. The user can register known devices that to ignore while focusing on the unknown devices. Once the RasPi detects a MAC address of an unknown device within the radius trying to connect to its sandboxed wireless access point, Home Honeypot will send a push notification to the user's phone. The user registers the known devices using a locally hosted website on the RasPi, so the device is very easy to set up. The RasPi simply has to be connected to a router using ethernet and it will immediately start to detect devices around it.\nHow we built it\nWe used a Raspberry Pi (RasPi) to set up the honeypot that detects MAC address of devices in a given area. The RasPi has both a Bluetooth and WiFi adapter connected to it, so it detects both signals. The known devices can be inputted into Home Honeypot using a locally hosted website containing a form which stores data as a JSON file containing known users of the network. The website is hosted using a Python server running locally on the Pi and is not visible from either the unsecured network or the internet. All data is also stored locally, reducing the attack surface for attackers, as there's no central service to be hacked. The MAC addresses of the devices around the RasPi are then compared the to the MAC addresses of the known users. If there are any unknown devices connected to or near the network, the RasPi will send out a push notification using the Pushbullet API for Android and the unknown users are shown the user on the website.\nChallenges we ran into\nOne major challenge that the team faced was finding hardware that would fulfill the needs of the project. The initial bluetooth and the wifi adapters did not provide enough configurability. A great deal of time was spent trying to solve this problem using the initial adapters, but eventually the team decided to go out and purchase better hardware. Another problem that the team faced was thinking of a practical idea for the hackathon. The team wanted to spend the time at the hackathon creating a project that would be pragmatic and useful for the world, but also feasible to make in the 36 hours of the event.\nAccomplishments that I'm proud of\nBeing able to sniff for valid MAC addresses and parsing through them was a big accomplish for the team. Additionally, most of the team had not worked on a hardware hack before, so setting up the correct kernel modules for the RasPi and getting the adaptors working were accomplishments for the entire team. \n",
        "hackathon_id": "hackprincetonf2015",
        "winner": true
    },
    {
        "description": "\nUsing Microsoft Band technology to revolutionize enterprise security;\nusing a v1 Band, provided a new way of third factor (know, have, are) authentication to the user. Briefly, we store real time heartbeats per minute and skin temperature to an online DB and compute averages for them every single login           attempt, if the very last readings show something above or lower than average plus threshold then the user is logged in to a honeypot instead of real system (Anomaly detection), to protect the system from gun point logins, disgruntled employees who usually become nervous when doing internal attacks,resulting in detectable spikes, or even hacking attempts, as different people have different averages and metabolic rates. However, if this was just a false positive, maybe the user was just running to work, the user could whisper a passphrase to the system in the first 90 seconds he/she was logged to the honeypot, to get access to the real system and log this event for review by admin. On            the other hand, upon testing we found that as we compute the average real time if the user was running then his averages should slightly be changed for the last few hours and training mode would be activated on the band using calories burned and running motion which in this case will result in a successful login to the real system directly, omitting the false positive detection. System will not process the login attempt if the band isn\u2019t in 10 feet range or if it is not worn, making brute force attempts harder. This is just 3rd factor  authentication that for best results should be used with a strong password and a verification code sent to the user\u2019s cell phone when the correct credentials are submitted. This solution costs the same as an average access key but it is unlikely that someone would lose his Band compared to a  smart access card or key, and even if that happened the connected device would notify you, moreover it promotes a healthy life style for employees making them feel better. I worked on Azure Mobile Services, Web APP, and Tables, C#, Windows 8.1 desktop & phone (Universal) App Dev, Bing Voice, Microsoft Band v1 SDK, JavaScript, Html, PHP, IIS & Apache Servers.\nInspiration\nWatchdogs\nWhat it does\nSecures network based on real time data\nChallenges I ran into\nreal time and delays \nAccomplishments that I'm proud of\nit works lel\nWhat I learned\nc# and different microsoft technologies \nWhat's next for Security - Filter\nmore development on security and voice aspects \n",
        "hackathon_id": "hackprincetonf2015",
        "winner": true
    },
    {
        "description": "\nThis weekend, we developed an n-body simulation\u2014think galaxy simulation\u2014from scratch and deployed it in the cloud.\nN-body simulations are cool; they are widely used in astrophysics to study the formation of stars and galaxies.  However, n-body simulations are very resource intensive and require a lot of processing power to compute and render.\nAt HackPrinceton, we hacked up two algorithms for running n-body simulations, the Barnes-Hut algorithm and the naive algorithm.  We started from scratch and used C/C++ and Cairo for rendering.  We used OpenMP for parallelism.\nTo deploy our software, we used Linode, running our simulations and rendering across a couple of beefy 20-core, 96 GB nodes.  We deployed two simulations, one of a 10,000 body system and another of a 100,000 body system.  This took overnight, so the total cost of deploying these models stayed within the handy $50 Linode voucher.\nThe impact of deploying our simulation in the cloud was significant.  Each timestep of the 10,000 body system took approximately 23 seconds to perform on a mid-2012 MacBook Pro, but only 0.7 seconds to perform when deployed on Linode.  This helped keep the time of the simulation down so we could get some sleep Saturday night.\nCheck out video from our 10,000 and 100,000 particle simulations.\n",
        "hackathon_id": "hackprincetonf2015",
        "winner": true
    },
    {
        "description": "\nWhat we do: #realtime is a visual search engine. Our goal was to give people access to #realtime buzz on topics they care about. We were inspired by how social media is driven by trending news and the possibility for an optimized search engine that recommends articles based on trends. Regular search engines only give information with a direct link to the input - we focused on connecting people to peripheral, yet equally important topics.\nThe Twitter REST API is used to gather tweets associated with a user's hashtag of preference. We then aggregate all the other hashtags used in these tweets and present a visualization of these hashtags based on their frequency (and therefore relevance). The user can then click on the visual to search Twitter for the different phrases, thus finding relevant, trending news. They are exposed to information they care about, but might not know about.\nWe\u2019re proud of accomplishing this project within the given time frame, especially considering this was our first hackathon. We learned a lot about web development, data visualization and leveraging APIs. Our next goal is to expand #realtime to synthesize data from multiple social media sources. Eventually, it will be one of the most comprehensive and diverse places to explore trends and topics you care about.\n",
        "hackathon_id": "hackprincetonf2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nnode.jsbitcoinblockchainiosparse\n",
        "hackathon_id": "hackprincetonf2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nAs university students, shopping for a group of items under a budget is tedious and unnecessarily time consuming. With this algorithm, staying under budget has never been easier. \nWhat it does\nThis website takes a proposed budget for a list of items needed and computes the top combinations of purchases while staying within budget. Items are considered according to their ratings and number of review.\nHow we built it\nThe front end was built using Angular.js using a two column responsive design.\nThe backend was built using the Node.js framework with one main endpoint supporting a GET request. This GET request has query parameters specifying the categories of items we are searching for (e.g. phones, computers, tables, etc.), the quantities desired for each of them, and the price budget for all of them together. It then makes a call to the Walmart API to gather all appropriate items and returns 20 of the best combinations, best taking into account the rating and number of reviews. \nChallenges we ran into\nWriting an efficient algorithm so that we can return the needed data in an appropriate amount of time\nAccomplishments that we're proud of\nDespite numerous challenges along the way, we got a working prototype that handles most cases and also isn't too hard on the eyes.\nWhat we learned\nAngular, Node, Linode and setting up an API\nWhat's next for SmartShopper\nWorld domination\n",
        "hackathon_id": "hackprincetonf2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nandroid-studio\n",
        "hackathon_id": "hackprincetonf2015",
        "winner": false
    },
    {
        "description": "\nDoc Louis's Training Program (Dance like a fly, bite like a mosquito)\nDoc Louis's Training Program is your personal coach who's mission is to make sure that you do not have to remember the exact details of your workout. Simply type in your workout program, and the coach will let you know what step to do, when and for how long.\n",
        "hackathon_id": "hackprincetonf2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nTo increase awareness about secured browsing.\nWhat it does\nChecks your chrome browser history and return a graph of how many secured and unsecured sites you visit. \nHow I built it\nI used a chrome extension to get a list of websites visited and mark them as secured or unsecured connection based on http or https request.\nChallenges I ran into\nI also wanted to monitor the network encryption type for a better analysis, but integrating chrome extension, beaker and extracting client side SSID turned out to be extremely challenging. Unfortunately, this made the entire project be seperated into parts not integrated with each other but working independently.\nAccomplishments that I'm proud of\nWhat I learned\nI learned how to create and run Chrome extensions!\nWhat's next for SecuredHistory\nPerhaps integrate the modules and figure out a way to analyze it better. It will eventually act as a personal analysis tool to check how much a user needs a proxy or VPN client for future browsing.\n",
        "hackathon_id": "hackprincetonf2015",
        "winner": false
    },
    {
        "description": "\nStarCatcher\nIoT device that entertains your cat (and by extension, you!). All you have to do is start it with your phone!\nInspiration\nMy friend happened to have a laser pointer in his jacket pocket, and for some reason, I was more entertained that I should have been. And boom. StarCatcher was born! I've always wanted to do a hardware hack, yet at every hackathon I went to, somehow I ended up going with software. Well, I finally did it. Here's my first hardware hack. Enjoy!\nWhat it does\nHave you ever wanted to make sure you could keep your cat out of trouble while you were gone? Well, now you can. StarCatcher is a little device that keeps your cat entertained and occupied when you're not home to take care of him/her. It uses hardware to move around a laser pointer, and it randomly changes direction, position, and other things to keep your cat excited! Since the device is connected to the internet, all you need to activate or deactivate it is to turn it on or off with an android app. Or just on the web. Couldn't be simpler!\nHow I built it\nI used Electric-Imp's interface and hardware for most of it. I also used a continuous rotation servo for moving the light source around, as well as a portable pocket laser pointer. The battery supply for the laser was replaced with a connection to a transistor testing circuit with 2 variable resistors. This connection allowed the power supply to be supplied and withheld dynamically by the state of the pin running into the transistor base junction.\nChallenges I ran into\nThis was the first time I've had a hardware hack at a hackathon, and I ran into a whole lot of things that I didn't expect. My main challenge was time, especially since I only started this project at around 3:30 PM or so on Saturday. I also had significant trouble with interfacing with the laser. Since the laser pointer was a full product I was just utilizing for this project, I blackboxed much of the electronics inside of it. When setting up the transistor circuit, it was really difficult to get the resistances right, so I had to use variable resistors and play around with them for a while to get everything working.\nAccomplishments that I'm proud of\nThought of an idea last minute, decided to go for it, and I stuck with it and stayed up the entire night so I could finish it, but I'm really happy I was able to get a working demo for this. I'm also really proud of how in spite of limited materials (beyond hardware, for the mechanical parts), the structure held together more or less (most  of it is wire just tied together!).\nWhat I learned\nHardware is hard-ware. There were so many things I didn't think would take long that actually were very difficult to get working. I also learned how important it is to read data sheets for electronic components.\nWhat's next for StarCatcher\n\nWell, the first thing is a more sturdy frame! The current frame is just made of \"hackathon materials\": lots of wire wrapping instead of hot glue or solder or anything sturdy, and nothing strong to glue or solder anything to!\nSo that's the first step. Once I have that going, the next step would be to mount a camera on it so that I can make sure the light never shines on anything the cat could damage. No more scratched chairs or ripped clothing.\nThen, I really want to implement a more sophisticated moving mechanism for the laser. That would make it more interesting both for me and I assume for the cat too. If I put wheels on it and have it be a mobile vehicle, that would be optimal.\nUltimately, with a pointer that a cat will follow and a mobile mechanism, the thing that springs to mind for me is Classical Conditioning. If I had some intelligent behavior in the device, the device could train the cat by creating a following pattern for the laser pointer, for instance, training a kitten to use a litter box.\n\n",
        "hackathon_id": "hackprincetonf2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nRecently in the news there have been several stories about the fa\u00e7ade of social media and how it affects mental health. Since people only publicize primarily positive aspects of their lives on social media, there is a huge skew in what is actually presented to everyone. After we heard about Microsoft's machine learning Emotion API as a part of Project Oxford and Indico.io (a text interpretting machine learning API), we knew we could combine the two into a test of how accurately social media depicts our friendships.\nWhat it does\nAfter connecting to Facebook, Relationboat allows you to pick one of your friends, finds all of the pictures that the two of you are tagged in together, and parses all of your message history. It then determines how happy each of you are in the picture using Project Oxford and compares that to the positivity rating of your message history. \nHow I built it\nChallenges I ran into\nAccomplishments that I'm proud of\nWhat I learned\nWhat's next for Relationboat\n",
        "hackathon_id": "hackprincetonf2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nPlay music on a Queue.\nWhat it does\nHow I built it\nChallenges I ran into\nAccomplishments that I'm proud of\nWhat I learned\nWhat's next for MuQ\n",
        "hackathon_id": "hackprincetonf2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtml5css3node.jsexpress.js\n",
        "hackathon_id": "hackprincetonf2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nnode.jsexpress.jsjqueryjavascript\n",
        "hackathon_id": "hackprincetonf2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nswiftparsefacebook\n",
        "hackathon_id": "hackprincetonf2015",
        "winner": false
    },
    {
        "description": "\ntransmissor\nTransmissor entre coletor e o Zabbix\n",
        "hackathon_id": "hackathon-inmetrics-fiap",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtmlrcssangular.jsnode.js\n",
        "hackathon_id": "hackathon-inmetrics-fiap",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonshellluac\n",
        "hackathon_id": "hackathon-inmetrics-fiap",
        "winner": false
    },
    {
        "description": "\nHackathon Inmetrics FIAP\n",
        "hackathon_id": "hackathon-inmetrics-fiap",
        "winner": false
    },
    {
        "description": "\nInspiration\nSistemas e processos antiquados de comunica\u00e7\u00e3o de problemas dos clientes para as empresas\nWhat it does\nAn\u00e1lise de m\u00eddias sociais para aproximar a empresa do cliente.\nHow I built it\nProcessamento de massas de dados do twitter e facebook com linguagem R e apresenta\u00e7\u00e3o das informa\u00e7\u00f5es em dashboards criados com PHP e Bootstrap\nChallenges I ran into\nIntegra\u00e7\u00e3o dos sistemas, velocidade de processamento, implementa\u00e7\u00e3o de solu\u00e7\u00f5es de Big Data (Spark)\nAccomplishments that I'm proud of\nIT WORKS!!!!\nWhat I learned\nBusiness Modeling, integra\u00e7\u00e3o com time, capacidedes tecnol\u00f3gicas, entre outros...\nWhat's next for R2-D2\nAnalise de BI e BA, aumentar obten\u00e7\u00e3o de dados por outras m\u00eddias sociais e processamento e apresenta\u00e7\u00e3o diferenciados.\nLink Canvas:\nhttps://canvanizer.com/canvas/Mh1iaeJyjto\n",
        "hackathon_id": "hackathon-inmetrics-fiap",
        "winner": false
    },
    {
        "description": "\nBuilt With\njsonjavascripthtml5phpbootstrap\n",
        "hackathon_id": "hackathon-inmetrics-fiap",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptamazon-web-services\n",
        "hackathon_id": "hackrpi2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtmlnode.jsexpress.jsmysqlejspassport\n",
        "hackathon_id": "hackrpi2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nEmoji Coder was inspired by other esoteric programming languages like whitespace (programmed in spaces, tabs, and newlines) and Chef (programs are written like recipes) that explore creative methods of programming. While esoteric programming languages are by definition impractical, the development and use of them encourages logical thinking about what actually occurs in the computer when you enter a command.\nWhat it does\nEmoji Coder is an esoteric programming language that uses emojis to represent commands and arguments. Lines of code are formatted as [command][modifier][parameter][new-line], where command and modifier are single emojis and parameters are 8 emoji strings that represent a number in binary.  We created a proof of concept online compiler and several sample programs to show programming in emojis is possible, if inefficient.\nAbilities of our language\n*Stack Modification\n*Output\n*Basic Arithmetic\n*Basic Variable Storage\n*Random number generation\n*Basic comparison logic\n*Basic loops\nFor more information on the structure and syntax of the language, our documentation is here.\nSample Programs\nExample programs that demonstrate stack manipulation, string building, arithmetic, looping, and comparison logic can be found here.\nHow I built it\nWe implemented the compiler for this language as a javascript web app. We used jQuery for event-based functions and styled our website using html and css. \nChallenges I ran into\nWhile emojis are uniform, they are not as uniform as alphanumeric characters so string manipulation was sometimes difficult. Mainly, it was difficult to conceptualize how to create a working language based on emoji input and how to implement our ideas.\nAccomplishments that I'm proud of\nI'm proud of creating a language that can actually be used to create programs. While creating sample programs in emojis, I found the process was slow but still doable and more fun due to the novelty of it. I hope some people try out my language and find it as entertaining as I do.\nWhat I learned\nHow to go about designing a programming language, how to upload and download files using javascript/jQuery, and a better understanding of how javascript interacts with html.\nWhat's next for Emoji Coder\nI would like to add multi-line if statements, more complex loops, user defined functions and variables, and user input.\n",
        "hackathon_id": "hackrpi2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe've both built quite a bit of web software and understand that performance is key. However, we also noticed that in the era of minifying JavaScript, CSS and even HTML, the heavy bandwidth offenders, images, seemed essentially left out. We realized that to have a truly snappy page (and one without blurry, mis-proportioned images), something needed to be built.\nWhat it does\nImccelerate intercepts all GET requests and inspects them for known image types. If imccelerate detects a request for an image, it will then scale the image appropriately based on the users screen size and screen density. Then, the resulting image is dropped into an LRU cache to let others with the same screen resolution enjoy a massive speed boost in page loading, up to 90% faster with 90% less bandwidth in some of our tests. Furthermore, imccelerate features a proper image sizing system. Why request a massive, 3x page filling image if its just for a thumbnail? We took a cue from Bootstrap and added a variety of sizes ranging from extra small to extra large. These sizes can seamlessly be appended to each image request. Even better, some of our sizes (including a custom profile image size) feature vision logic from Microsoft Oxford. Finally, we attempted to solve one last issue. What happens if a site comes under heavy load and still needs to deliver lots of content? To attempt to solve this, we built a dynamic CDN offloading system. If an image resource becomes too heavily requested to continue its successful delivery, imccelerate will offload the image to Azures high powered content delivery network and seamlessly move clients to it, all without any interruption in service.\nHow We built it\nWe used the Express middleware model to intercept and filter GET requests. Once we were sure we had an image, we used Graphicsmagick to process the image and send it for further processing with Oxford if needed. Once we had our image in the form of a buffer, we dropped it (along with a few other pieces of statistical information) into a least recently used cache. The cache takes care of dropping resources that are infrequently queried, while keeping those that are fresh. We then send out the processed image to any future clients with the same resolution and device display density.\nChallenges We ran into\nConfiguring the live offload CDN was particularly difficult as the documentation pertinent to storage services with Node was a bit lacking.\nAccomplishments that We\u2019re proud of\nWe were able to built something that reduces the required image bandwidth up to 90%. 90%! That's incredible! Using this technology a site could go from slow and blurry to speedy and sharp in a matter of minutes. Furthermore, imccelerate could enable easier development, as all image sizes originate from one resource. No need to design 15 images for 300 different screens.\nWhat We learned\nWe learned a ton about Azure, network performance monitoring and Express middleware. Also learned how to use GraphicsMagick, an awesome image manipulation library.\nWhat's next for imccelerate\nWe'd like to make imccelerate more stable and efficient in the future, as well as to incorporate a dynamic quality algorithm to save just a bit more bandwidth. At some point, we'd like to be able to achieve a 95% reduction in bandwidth over our raw images.\n",
        "hackathon_id": "hackrpi2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nManaging finances as a student is important, creating an app that would enable users to keep a track on expenditure and analyze spending patterns\nWhat it does\nThe basic idea of the application is to allow users to take pictures of their receipts to record data about their purchase. This data is transferred to a database where it is analyzed to find patterns.\nHow I built it\nInitially, we started this is an Android application, due to some compatibility issues we decided to first make a web app using python and later port it to iOS and Android\nChallenges I ran into\nLost files after moving to Android Studio, had to restart \nAccomplishments that I'm proud of\nNothing significant so far, due to an incomplete app we were unable to achieve our task. However, we would be finishing this project in the coming days.\nWhat I learned\nTo use Google API for image processing, the algorithm behind the image to text conversion \nWhat's next for Imex\nCreate a functional app on Android, perform tests using various types of receipts. Create options to scan receipts sent via email as well. \n",
        "hackathon_id": "hackrpi2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaspringandroid\n",
        "hackathon_id": "hackrpi2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptchrome\n",
        "hackathon_id": "hackrpi2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nI used to play this game with friends, be it in real life or on forums, as long as people were bored enough to even try. Doing it on paper in the former ensured it would be lost to the bowels of one's household, and the latter often took too long to read once the thread reached several pages. Now, we have it in an easier, and still online format.\nWhat it does\nSo here it is, One Word Story -SMS edition-. Get matched up with people who have as little of a life as you, and play to your heart's content (or until the normie decides to opt out).\nJust text the special snowflake number right here (518-312-4106), create an account that's tied to your phone until you delete it (\"create account \"), rev up your engines (\"start game\"), and destroy everything society holds dear by tossing out a word salad that happens to not be any of the key phrases... together! (You should only be sending one word at a time, anyway, you filthy cheaters.)\nWhen you're done with your unmentionably vile toy of a random person, you can opt out (\"opt out\") of the story and be done with it! It's over between you two, you heartless bastard! Also, if you would be a dear and save me some HD space and get your caca out of my database (\"delete account\"), that would be sweet.\nBut by all means, keep playing. I'm lonely. ;u;\nHow I built it\nI programmed this in Python, with the Twilio API. Lots of info is stored on a sqlite database; account info (just your username and phone number), game instances (which are saved when the session ends), and all that good stuff.\nChallenges I ran into\nCrafting the matchmaking system from scratch was a foobar and a half, although the algorithm itself was fairly easy to come up with in the first place. Other than this, though, the only things stopping me were distraction and sleep deprivation.\nAccomplishments that I'm proud of\nThe matchmaking system, of course. Rito plz hire me Kappa\nWhat I learned\nPretty much everything? There's so much one could do with Twilio (between the REST client and TwiML), and all with relatively ease. I also learned how to juggle two phones for testing, both figuratively and literally.\nWhat's next for One Word Story lite\nI feel like I could clean up the code and optimize the database significantly (not to mention, well, not hosting it somewhere decidedly unsafe). Also, since I couldn't build a site for it like I'd originally hoped, I'm stuck with sending the stories straight to users; if that's a lot of clutter, well, sorry! I'll deal with it next time, honest!\nAnd who knows, I might actually be inclined to shell out another dollar a month if people happen to like it.\n",
        "hackathon_id": "hackrpi2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe all take a class at our high school called \"C & Data Structures\". For the first two months of this class, we learned 6502 Assembly programming as a way to explore what happens at the lowest level of the computer, and to understand the concept of a stack. Unfortunately, however, there's only one online 6502 compiler and it's pretty ugly and not beginner friendly at all.\n\nWhat it does\nWe've taken the existing compiler, which is open source, and modified it to be a lot easier to understand and have a much nicer interface. On top of that, we've added the ability to log in and save your code, a feature that was sorely lacking from the existing one. \nHow I built it\nWe used the open source compiler and placed it into a new website which we created using HTML/SCSS/JS, and edited the compiler and what it outputted to match our new, simplified, and slightly more beginner friendly UI. We then added Microsoft Azure integration to allow a user to login and then save their programs for later once they were done. \nChallenges I ran into\nPorting the open source compiler over was very frustrating, but we managed to get through it. Styling the elements and creating a visual stack, etc. was also challenging. \nAccomplishments that I'm proud of\nWe'll be able to put this IDE on the internet, and anyone will be able to use it. We're especially proud that it will likely be used in our school to teach future years of students about 6502 Assembly.\nWhat I learned\nWe learned a lot about Javascript and Microsoft Azure.\nWhat's next for 6502 IDE\nWe'll be fixing any bugs and making sure it stays up.\n",
        "hackathon_id": "hackrpi2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nunity\n",
        "hackathon_id": "hackrpi2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe moment I got off the bus from Philadelphia, my nose started running. I had never been in such a cold region before, and thus doubts started appearing in my mind that I might have caught some infection. I started searching the web for conditions associated with (excess) mucous production. \nAfter spending almost 4 hours reading articles and papers (long after my nose stopped running), I found that amount and color of mucous corresponds to critical parameters related to respiratory diseases (including but not limited to sputum bacterial counts, sputum leukocyte elastase, interleukin-8 and proteinase inhibitor levels). \nI also noticed the fact that a lot of people visit healthcare providers for minor issues, waste precious resources and time of both themselves and their healthcare providers \u2013\u00a0an issue that can be easily mitigated with a personalised diagnosis tool.\nI had an idea that building this would be a great experience \u2013 in terms of learning as well as its potential implications \u2013\u00a0and thus decided to build SnotShot.\nWhat it does\nSnotShot analyses images of phlegm/sputum, analyses them with a (predominantly) computer vision algorithm and yields recommendations about appropriate treatment to you/your healthcare provider. \nSteps:\n\nBlow Nose on a paper tissue.\nTake picture of the tissue and upload it on the SnotShot website.\nGet almost-instant results.\n\nWhy\nConditions like COPD (Chronic Obstructive Pulmonary Disease) are very common, with the US amounting for over 3 million cases each year. \nIn traditional medicine, it is not possible for an individual to go to the healthcare provider's office (every time they feel something is wrong), blow nose at the spot and get a qualitative diagnosis done \u2013 for the evident risk of infection. It is also highly impractical for the individual to bring mucous samples from outside to their primary physicians \u2013 as the samples degrade rapidly over time.\nBy analysing mucous, SnotShot gives a precursory indicator whether one shall visit their healthcare provider or not, and thus significantly reduces the time and resources wasted in such cases. \nHow I built it\nThe algorithm is implemented with the help of Open Computer Vision Library in Python, based on a test called \"BronkoTest\". I wondered how I could deploy it as a usable web application, and finally settled on using a Node.js wrapper along with some Jade/Bootstrap for the front-end.\nChallenges I ran into\nI had some difficulty in explaining people why I am trying to work on a topic that is so much looked down upon in the society (\"Eww! That's gross\" \u2013 a participant said). On the technical side, I faced some challenges in trying to get the OpenCV Library up as it comes with a huge list of dependencies.\nAccomplishments that I'm proud of\nI was successful in building something that would help healthcare professionals deliver better, more insightful care to their patients.\nWhat I learned\nI learned a great deal about how Computer Vision works (using the Open Computer Vision library). I also gained an understanding of K-means clustering \u2013 a simple unsupervised learning algorithm. \nWhat's next for SnotShot\nImproving and porting the algorithm from web app to a mobile app.\n",
        "hackathon_id": "hackrpi2015",
        "winner": false
    },
    {
        "description": "\nUnknown To Me\nUnknown To Me is a web application that provides a dynamic experience when visiting a new place. Targeting college campuses, Unknown To acts as a personal concierge, filling you in on quirks as well as ins and outs of the campus. Additionally, it assists you in locating the nearest bathroom, water fountain, meeting place, or vending machine.\nInspiration\nAs students new to a college campus, we were, and still are eager to discover the small, quirky things that set our campus apart from others. Of course any given tour guide can spit out a list of scripted facts, but we want to hear it from the students themselves.\nWhy\nUnknown To Me allows for a faster assimilation into campus culture, making the transition from high school to college much smoother. For prospective students, this introduces a more in depth glimpse of what the college they are looking at has to offer. For current students or visitors, this provides a fun tour of student approved quirks. Not only does this help with your exploration of campus by providing you with a list of liked places, but it's also convenient, especially when you're looking for a bathroom or water fountain.\nFeatures\nUnknown to me will calculate the shortest straight line distance to your desired destination. Furthermore, it will provide a brief description of your destination, for quirks this mean what's unique and for bathrooms this consists of how many stalls there are or how clean it is.\nWhat's Next for Unknown To Me?\nWe hope that Unknown To Me will expand to more college campuses and even become an add-on for existing map applications such as Google Maps or Waze. We want to increase the number of existing locations by allowing users to add places, contributing to content generation. The quality of any location will be determined by user reviews. However, to prevent users from hating on any given location without reason, we will impose a minimum number of words for the review, forcing the reviewer to give reasons for his/her opinion.\nSo far this idea is only 24 hours old, so we'll see where it goes...\n",
        "hackathon_id": "hackrpi2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonleap-motionbose-soundtouch\n",
        "hackathon_id": "hackrpi2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nOur project was inspired by the Microsoft's Project Oxford Emotions API. We were very excited about using this technology, and after discussing some ideas with the Microsoft team we began implementing it to collect data on popular movie trailers.\nWhat it does\nComma is a web application that can determine the emotions shown in a video, such as a trailer for a movie, allowing for movies to be ranked based on their emotions. This allows for further analysis, where videos can be ranked and categorized based on the emotions expressed in the trailer.\nHow we built it\nWe used OpenCV to process the videos into frames. We then dropped half of the frames to reduce the calls needed. To further reduce the amount of calls needed we used OpenCV to stitch frames into a 2 x 5 array to batch them into one request. We then submitted this batched request to Microsoft's Project Oxford Emotion's API which gave us the confidence index of each face. We then took all the faces that it found and averaged these values together to get the average emotions in the video.\nChallenges we ran into\nProject Oxford only allows 10,000 requests per month, with a limit of 20 requests per minute, which would normally be a problem if we made a single request for each frame in the trailer. With each trailer consisting of upwards of 4,000 frames, this would quickly run through our API limits and prevent other movies from being analyzed. In order to get around this issue, we processed a limited selection of frames and made batch requests, allowing us to reduce the number of requests made by 40x.\nThe API returns a neutral rating a vast majority of the time. We believe that this is partially due to the api having a preference for rating neutral as well as the fact that most of the time we have more neutral faces rather than exagerated emotions.\nAccomplishments that we are proud of\nIn a short amount of time our team was able to utilize an new API to get biometric data, create a database to store the data, and design a webpage to demonstrate the technology. Everyone from our team is leaving having learned something new.\nWhat we learned\nOur team varied in software and Hackathon experience. Some of the technologies that were new to the team included NumPy, OpenCV, Git, Flask, and SQLite. No one on the team had prior experience using the Emotions API and we enjoyed using this unique technology to create tangible data.\n",
        "hackathon_id": "hackrpi2015",
        "winner": false
    },
    {
        "description": "\nCourseLoaded\nCourseLoaded is a HackRPI 2015 project with the intention of refining the experience of using the internet in the classroom. \nWhen a teacher presents to a class using the internet, they have to be extremely cautious about what they click. When a student navigates the internet in class, they are constantly bombarded with content that is often distracting or not acceptable for the classroom. The information provided by the internet is often ignored in the classroom because of the minefield one must navigate to find it, and those who fight through often find themselves displaying questionable content they did not intend.\nCourseLoaded, a browser extension for Google Chrome, aims to be a suite of tools aimed at providing a better browsing experience for using the internet in the classroom. With CourseLoad, any internet user can browse in an intuitive way while worrying less about stumbling upon unwanted content. \nFEATURES\n- A basic website blocker, blocking sites from a pre-defined list\n- A basic content blocker, blocking malicious content, ads, and content from the sites in the pre-defined list\n- Google Search refinements, including\n    - More clear \"visited before\" indication\n    - Ability to hide search results determined as irrelevant or not acceptable\n- Comprehensive personal information hiding\n    - Disables sign-ins on all social networks\n    - Hides revealing content on common websites, i.e. recommended videos on Youtube, recommended follows on Twitter\n- Improved \"new tab\" page\n    - No \"recently visited pages\" window\n    - Search bar that goes directly to Google Safe Search\n\n",
        "hackathon_id": "hackrpi2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nRecover Rochester is a club at our school that collects and distributes food to reduce food waste in the area. One in six Americans are food insecure, meaning that they do not have the resources to have reliable access to food. As a chapter of the Food Recovery Network, they help collect food that would otherwise go unused and make it accessible to food-insecure individuals. They have a database of what food they have collected and distributed, but no way to easily process that data. \nWhat it does\nFood Circulation Network is a tool for chapters of the Food Recovery Network to keep track of the food they have collected and distributed. Chapter members can record deliveries and pickups as they happen. From there, members can produce analytics to see their chapter's impact.  \nHow we built it\nOur application runs on a PHP webserver. We built the PHP from the ground up. To get some design aspects out of the way, we built our HTML off of HTML5 Boilerplate and use PureCSS.io for some CSS. We used Chartist, a JavaScript library, to generate infographics for our analytics. \nChallenges we ran into\n\nSending emails\nCSS\nTrouble setting up Laravel (eventually we abandoned this)\nWe are waiting for other Recover Rochester members to send us the database so we can test the analytics stuff.\n\nAccomplishments that we're proud of\n\nNot crashing and burning\nBeing able to help a local organization with our technical skills\n\nWhat I learned\nOnly one of our team members was experienced with PHP coming into this event. He was able to teach us how to use PHP. \nWhat's next for Food Circulation Network\nWe would like to set up FCN so that Recover Rochester can use it. From there, we would like to scale up our application so that the Food Recovery Network can distribute it to all of their chapters. From there, maybe even expand it to similar movements.\n",
        "hackathon_id": "hackrpi2015",
        "winner": false
    },
    {
        "description": "\ninspiration\nMy original plan was to make this application for veterans, but it could be used by many more people.\n",
        "hackathon_id": "hackrpi2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe had minimal hardware and wanted to be creative with it!\nWhat it does\nGolfVR is a VR simulation of golf where the player uses a selfie stick and a iPhone as a club to hit the virtual golf ball!\nHow we built it\nWe built it with the iPhone accelerometer which was sent to a Node.js websocket server which communicated with the Unity client. This allowed for seamless data transfer between the selfie stick and the VR simulation. Next we utilized different physics algorithms that took the raw data and processed it into virtual physics in Unity. Lastly, we hooked up the Oculus Lift and truly created an awesome VR experience.\nChallenges I ran into\nXcode is very buggy. The swift socket client was a hassle to figure out. But after that, it was even a lot more difficult to have the data pass through a server and to the unity client. There was very little documentation which was a rough change. Developing the physics algorithms for smooth gameplay was also difficult because we had to normalize the values and do a lot with little data.\nAccomplishments that I'm proud of\nWe did a lot in twenty-four hours!\nWhat I learned\nUnity scripts, Xcode debugging, Physics, WebSockets\nWhat's next for GolfVR\nA full fledged golf game.\n",
        "hackathon_id": "hackrpi2015",
        "winner": false
    },
    {
        "description": "\nWe used the LeapMotion API to count fingers and track gestures to operate a statistics calculator.\n",
        "hackathon_id": "hackrpi2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nPollr.us lets you vote on current issues and visualize how others vote on the same issues.\nWhat it does\nTracks how users vote on  issues and lets you visualize how the issues are voted on.\nHow I built it\nThe back-end is Flask and I'm using Mongolab for my database. First time using chart.js, which ended up being quite simple for my purposes.\nChallenges I ran into\nSpent a lot of time trying to decide what I wanted to do.\n",
        "hackathon_id": "hackrpi2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroid-studio\n",
        "hackathon_id": "hackrpi2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njava\n",
        "hackathon_id": "hackrpi2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaslick2d\n",
        "hackathon_id": "hackrpi2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe wanted to create an artistic and interactive project that featured an interesting use of audio and color in order to awaken a state of inspiration, trance, and euphoria in all players and participants. We also wanted to personalize gaming in a way by giving users the ability to choose their own background music for the game - but beware, your favorite song might just generate the most difficult level! How long can you last? \nWhat it does\nProcedurally generates a \"soundscape\" in which you navigate a spaceship to \"beat the song.\" y\nHow I built it\nHTML5 Canvas and a lot of patience. Using the WebAudio API we were able to analyze the frequencies and bands of the music and generate graphics for it. The Soundcloud API enabled us to dynamically acquire music without needing to store any audio on our local server. \nChallenges I ran into\nThe WebAudio API is extremely new with minimal widespread use and documentation. Audio analysis itself is incredibly challenging and one of the major endeavors in modern computer science research. Therefore we needed to try a more simple approach. The Soundcloud API also presented challenges as there is a yet unfixed bug in their API that creates an extra challenge for us. \nAccomplishments that I'm proud of\nThe entire project was beyond our comfort zone. Using Canvas to this extent an animating so many different, layered components, and keeping track of the collisions and monitoring for different conditions was brutal. Ultimately worth it. \nWhat I learned\nJavaScript, jQuery, HTML5 Canvas, WebAudio API, Soundcloud API\nWhat's next for SoundScape\nMore game mechanics, better animations and graphics!\n",
        "hackathon_id": "hackrpi2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nMany of our users are hackers who maintain their own portfolio, r\u00e9sum\u00e9, etc. and would love to query Devpost for the projects they maintain here. \nWhat it does\nThe Devpost Portfolio API returns all published projects for a given user account in json format. Each entry would include info like a project's name, tagline, description, and thumbnail image.\nStill under discussion, but the hypothetical endpoint would be: https://api.devpost.com/users/rossta/software\nChallenges I ran into\nStill in development, I'd like developers to have a way to register for authenticated access. We may want to rate-limit public access to encourage users to make good use of the endpoint. I'd love to see us add more useful endpoints to the API paving the way for suitable client libraries in JavaScript, Ruby, Golang, and other languages.\n",
        "hackathon_id": "devpost-hackathon-2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nJust wanted to mess around with the google maps api. Also I thought it would be nice to visually see how many hackathons we have going on and where they are in the world.\nWhat it does\nThis hack shows the location of all the in person hackathons happening right now. Hovering over the pins will display a little bit of information about the hackathon and clicking on it will take you to the hackathon page\nHow I built it\nI used the location information for Devpost hackathons and returned it from a control via an ajax call. The result was then used to construct all the pins and info windows in the google map\nChallenges I ran into\nThe google maps API requires a key to use and I'm not paying anything so this is just for personal use for now. Also, I probably broke every page that doesn't have a map because of the way I implemented the javascript. Oops...\nAccomplishments that I'm proud of\n\nI got the route to return JSON\nI didn't exceed the limit of calls I'm allowed to make with my key\n\nWhat I learned\nHow to use the google maps javascript API and how to have controller actions return JSON.\nWhat's next for Hackathon Map\n\nIntegration with the search. \nCentering on the location of the user.\nOptimization for browsers\nA map for where a user has attended a hackathon\n\n",
        "hackathon_id": "devpost-hackathon-2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nzurb-foundationjqueryruby-on-railsfireflyflexboxcss\n",
        "hackathon_id": "devpost-hackathon-2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\npolymercssjavascripthtmlweb-componentssuperagentgitgithub\n",
        "hackathon_id": "devpost-hackathon-2015",
        "winner": true
    },
    {
        "description": "\nJacquelyn Emma Chu\nBorn:  November 12th, 2015. 8:06 PM\nWeight: 6 pounds 10 ounces\n",
        "hackathon_id": "devpost-hackathon-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nAlthough we've made good progress against spam on Devpost, it's a never-ending battle between the forces of good and evil. Software built by villains is sold to sleazy marketers who post ads on thousands of legitimate sites with the click of a button. We wanted to look further into what spammers do, and how we can fight them.\nWhat it does\nWe researched spam on Devpost, wrote up some summary points, and made concrete suggestions for how to improve our efforts to fight it.\nChallenges we ran into\nWe did this research using exports and analytics, but did not access the database, which hampered our efforts to get a representative sample. However, the tools we have did give us adequate insight into what's going on, we think.\nAccomplishments we're proud of\nWe now better understand how they're using the platform, and we identified some additional steps we can take to stop spam. We also learned about many nutritional supplements, free torrents, and other things we're ashamed to mention.\nWhat's next for Cash Money Live Sports Episode Download NOW!!!!!!!!!!!\nWe're not going to tell you, unless you're a Devpost employee with access to the google doc. Sorry! (However, if you know a lot about fighting spam, please let us know and please flag any bad content you come across. Thanks!)\n",
        "hackathon_id": "devpost-hackathon-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nDevpost has a seriously awesome set of values and culture that we should be sharing and celebrating!\nHow I built it\nI created a series of images that reflect the fun and creative culture we have here. \nWhat's next for Show off the Devpost culture\nExpect to see regular updates that give you a behind-the-scenes look at who we are and what we do. Follow us on Instagram to check it out: https://www.instagram.com/devposthacks/\n",
        "hackathon_id": "devpost-hackathon-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nbalsamiqcssjavascript\n",
        "hackathon_id": "devpost-hackathon-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nDevpost works with tons of cool companies and attends hackathons all over the place. Laptop stickers are one of our favorite things, but we ran out of room on our laptops. \nHow I built it\nDoes it count as a 24 hour project if I've been hoarding laptop stickers for 18 months? I attached a few sheets of posterboard, measured and sketched out the letters, then filled them in with a lot of stickers.\n`\nChallenges I ran into\nThe robot in the P tried to rise up against me and tore the paper between the S and T. I put him back in his robot place so we're all safe. You're welcome.\nWhat's next for Devpost Sticker Wall\nHopefully, it will hang in our office and remind us of all the great people we've worked with and the amazing stuff our users have built. If your sticker is represented in here, you are obligated to vote for me.\n",
        "hackathon_id": "devpost-hackathon-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nAt one of our previous Devpost internal hackathons, Brian created the ultimate office hack. Our kitchen was too small to fit our growing team during lunch time. Sandwich making was chaos. So Brian built a sandwich cart:\n\nAnd today, on yet another internal hackathon, we decided to appropriately commemorate his contribution:\n\nWhat it does\nMemorializes our (now remote) co-worker Brian for creating one of the best hack day projects of all time. He may work far from us in miles, but he is always close to our hearts (and sandwiches). \nHow we built it\nWith love, Photoshop, a printer, and some scissor/tape skillz.\nAccomplishments that we're proud of\nAttaching it to the cart went pretty smoothly.\nWhat we learned\nHack day projects don't have to involve code!\nWhat's next for Brian Koles Memorial Sandwich Cart\nThe sandwich cart will continue to be an integral part of lunch time activities, and live on forever in our hearts.\n",
        "hackathon_id": "devpost-hackathon-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWhat it does\nIt helps people live a happier life \nHow I built it\nChallenges I ran into\nGit problems\nAccomplishments that I'm proud of\nWhat I learned\nWhat's next for Hop-n\n",
        "hackathon_id": "socialhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\nrubyhtmlcssjavascriptcoffeescript\n",
        "hackathon_id": "socialhack",
        "winner": false
    },
    {
        "description": "\nHackPSU, 11/7-8/2015, Studee App\nCreated by Caleb Kitchen, Tyler Moser, Venu Mulane\nHave you ever found yourself stuck and feeling hopeless when it comes to learning a subject?\nHave you wanted to make money tutoring others but haven't been able to find the client\u00e8le?\nHave you ever wanted to meet more people in your major and collaborate on projects or homework?\nStudee looks to solve many of the hardships of attempting to find people to study with & create a community based around helping each other. \nStudee has the potential to become a globally used app to get students thinking about how to help others and be better students. \nMain Concept\nStudee works by first creating a user account: In the account the user may then set their major, minor, classes they need help with, classes they are willing to help with, and school. \nThe app then takes this information and feeds it to our LAMP stack. This stack will be doing most of the heavy work by taking query requests and turning them into match data based on what people will teach and what they need help with.\nCurrently our database is populated with a small amount of test data that can be accessed and modified by our android app. \nStudee is built to connect users together based on classes and major to help users find others to study with in each class and get the help they want and need. \n",
        "hackathon_id": "hackpsu-fall-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\niostvosswiftparseios-charts\n",
        "hackathon_id": "hackpsu-fall-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nprocessing-idejavaarduinoprocessing-serial-librarymindflex-eeg\n",
        "hackathon_id": "hackpsu-fall-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nThis mobile app was created during the fall HackPSU 2015 at University Park, PA. During this 24-hour hackathon, Invent Penn State presented the challenge of solving a problem or building a resource for incubators and co-working spaces.\nWhat it does\nMotivation usually comes in short bursts for many people at  non-predictable times. \nWhen this moment in time arrives, we want people to have a chance to act on this feeling before it becomes a missed opportunity. A missed link between interesting projects and prospective individuals is a total loss on both sides. We aim to solve this problem by expediting the initial interaction between these parties. A person that's either looking for collaborators to their own project or to join another person's project may use People2Projects to instantly start the search for existing endeavours or available expertise in their surrounding area, and commit to their motivation pretty much on command.\nThis app will allow individuals to search up local projects at any time, which makes it a potential utility to many groups of people including college campuses, larger companies, and one's surrounding community in general.\nHow we built it\nWe started to form our idea while attending the mobile app development workshops offered at the hackathon, where we walked through the basics of developing software in Android Studio. At the end of the workshops we had agreed on a challenge, and started developing something originally envisioned as a \"Tinder-style matching application\" between people and projects. Equivalent efforts were spent in both iOS and Android by different team members through the night, with the intention of eventually adding a multi-platform aspect to our application and reach out to as many people as possible.\nChallenges we ran into\nThe main problems we spent a lot of time on mostly involved the compatibility and cooperation between different programs we used. Figuring out how to collaborate on Github as a 5-person team through Android Studio took a lot of time, as well as creating and integrating a back-end for the application in Firebase.\nAccomplishments that we're proud of\nWe experienced what it's like to successfully collaborate in a 5-man team solely through version control, and we were able to join together our work from \nWhat we learned\nWe learned techniques for efficient team collaboration in Github, as well as the basics of how to link together work developed in different languages.\nWhat's next for People2Projects\nIntegrating the iOS and Android parts of our application through a common back-end would be the next big step in the development of People2Projects.\n",
        "hackathon_id": "hackpsu-fall-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nCreating a hack which incorporates both hardware and software. We wanted to create a mechanical simulation of a real life situation.\nWhat it does\nIt allows to user to pick up or move around object with 180 degrees of motion using an interface that accurately and smoothly mimics the dexterity of the human hand.  \nHow I built it\nWe used four servo motors to give us diversity of range and position. The motors react to a variable resistor flex sensor and a joystick shield. We used bass wood as the main structural material for the arm. \nChallenges I ran into\nIt was difficult to balance and maintain the structural integrity of the design because of the added weight of the motors and the torque it caused on the base. In addition, the motors were sometimes unstable and difficult to program smoothly.\nAccomplishments that I'm proud of\nWe were most proud of the original design that we developed which was both structurally sound and mimicked with good precision the flexibility of a human finger.\nWhat I learned\nWe learned how to use the Joystick Shield made for Arduino, and also learned about using Servo motors in a design.\nWhat's next for The MAD Arm\nIn the future we would like to add more structural support for the MAD Arm in order to keep it more consistent and stable.\n",
        "hackathon_id": "hackpsu-fall-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\namazon-web-serviceslampmap-boxcsshtmlbootstrap\n",
        "hackathon_id": "hackpsu-fall-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtml5javascriptcss\n",
        "hackathon_id": "hackpsu-fall-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nAfter talking to workers from Erie Insurance, we began to get a picture of some of the challenges facing the insurance industry currently.  We wanted to create a product that utilized internet of things, big data, and app development that would not only provide a service to the insurance company, but would provide a useful service to the insured and help build a strong relationship between the insured and the insurer.\nWhat it does\nOur hack is a web application template that can would be custom made by the insurance company for their unique customer.  We chose a mock company called Good Buddy Truckin' that is a medium sized trucking/freight business.  The trucks would be outfitted with various IoT-style sensor systems that would send meaningful data to a database not only relevant to company performance but to the insurance agency as well.  The webpage is a tool to display and analyze the data for managers at Good Buddy to keep track of their progress and possibly create a reward system for good employee performance.  This data, we hope, will be shared with the site creator, the insurance company, and allow the insurance agency to provide rewards as well based on low accident/ticket rates, etc.\nHow I built it\nWe started by installing Node.js onto our server in combination with Express.js. We used MongoDB as a database with Mongoose as our wrapper. Express.js acts as our API to our web application that populates all of its data from the server. Front end was built with HTML, CSS, and JavaScript with BootStrap.js to aid with styling.\nChallenges I ran into\nObstacles we ran into included: \n - incorrect formatting of our http request to the server\n - general css \n - learning bootstrap\n - Cross Origin Resource Sharing\n\nAccomplishments that I'm proud of\nI'm particularly proud of the look and feel of the site. This is one of the first site's that I've worked on that is not purely data.\nWhat I learned\nWe each learned new technologies that we didn't know before. Chris was able to teach more of the back end work that we were not confident with. Cole and myself, Scott, were able to complete the front end development partially at the same time as Chris was working on the back end.\nWhat's next for Integrated Insurance Platform\nWe hope to expand the program to have more options such as update and create options from on the site. Currently, we can only read the data from the database with the app. We also that the data will be real-time sensor and not mock data.\n",
        "hackathon_id": "hackpsu-fall-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe wanted to provide some medium through which people with communication disorders could indicate their emotions and have fun doing it. \nWhat it does\nIt uses the Microsoft Band sensors as a modified polygraph in conjunction with our neural network implementation \nHow I built it\nI created a neural network abstraction to create neurons dynamically for every new song played. The android app reads in sensor input from the Microsoft Band, gets a user's saved songs through the Spotify Web API, runs the sensors through the neural network which outputs a song name or random, plays the song with the Spotify Android SDK, and then waits for the user to let the song play or skip in order to train the neural network for that song. \nChallenges I ran into\nFuck Spotify, fuck Microsoft, fuck Android. That is all. \nAccomplishments that I'm proud of\nSpotify, Microsoft, Android. \nWhat I learned\nDon't use Spotify, don't use Microsoft, don't use Android\nWhat's next for Intelli-DJ\n",
        "hackathon_id": "hackpsu-fall-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe wanted to help food-insecure households/people who needed food that most people were taking for granted and throwing away.\nWhat it does\nLets you discover free food around you.\nHow I built it\n1 person front-end, 1 person backend\nChallenges I ran into\nWorking on a team with only 2 developers was extremely challenging. \nAccomplishments that I'm proud of\nAt the end of the hackathon, we had an actual working prototype of the application. It was no longer an idea, our idea had become reality and we plan to demo it in action on stage.\nWhat I learned\nThat trying to build an actual working prototype of your idea is a ton of hard work. But it was a much better experience than if we simply built a demo app that did nothing.\nWhat's next for Food Watch\nFinish the app, and ship it!\n",
        "hackathon_id": "hackpsu-fall-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroidandroid-studiojavanfc\n",
        "hackathon_id": "hackpsu-fall-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nmean-stacknode.jspythonangular.jsmongodbexpress.jsazure\n",
        "hackathon_id": "yhack2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nSupreme brings spreadsheets into the modern era by enabling seamless interaction between spreadsheets and Python, D3, and other data science tools.\nExcel is the most widely-used programming language in the world. While it doesn't look like other languages which developers use, its accessibility allows non-programmers to develop complex applications and models within spreadsheets. Its ease of use and discoverability is unparalleled and Supreme leverages that by building a full data science toolkit around Excel.\nHow I built it\nSupreme is built on top of the Beaker Notebook, which enables interactive computing with Python, JavaScript, and other languages. I built a plugin for Beaker Notebook which makes spreadsheets a full-fledged \"language\" on the platform, enabling data to seamlessly move between spreadsheets and programs.\nUse case\nTo demonstrate the power of this system, I did a sample analysis of FINRA short data which combines Supreme spreadsheets, Python, and D3.\n",
        "hackathon_id": "yhack2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\npythonnltkhtml5d3.jsjavascriptbeaker\n",
        "hackathon_id": "yhack2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nFor the last 4 years of being a college student, I've often wandered across some leftover food from an event (or worse, empty boxes that used to have Panera in them!) and wanted an app to let me know when there was free food near me. As an event organizer, I've also desperately tried to get people to eat all the free food at my events when they are woefully under attended. We've been meaning to make this app for years, and have even said to each other \"shoulda FoodReconned that!\" to our friends when we get to the extra food before they did. It was James Whittaker who gave us the idea for the special sauce we could add to FoodRecon to make it an app for the future.\nWhat it does\nFoodRecon not only shows you all the places around you with free food at the moment - it notifies you as soon as you walk in the vicinity of free food without you ever having to look at your phone.\nHow We built it\nFoodRecon is a Windows 10 Universal app. It will run on any phone, PC, tablet, or DeLorean running Windows 10. It also can pair with a Microsoft Band to send notifications directly to your wrist when you enter the geofence of a free food location. FoodRecon uses an Azure database on an Azure Mobile Service with push notifications on the back end. FoodRecon is even accessible to Master Chief via voice commands to Cortana.\nChallenges I ran into\nStitching Azure Mobile Services, push notifications, Windows 10 Universal apps (without full documentation yet), Microsoft Band SDK, geofences, and Cortana was mainly the difficult part. Eating cookies was the easy part.\nAccomplishments that I'm proud of\nFinishing.\nWhat I learned\nAll hail Visual Studio 2015.\nWhat's next for FoodRecon\nMaking iOS and Android clients soon, all with the same back end.\n",
        "hackathon_id": "yhack2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavajavascriptangular.jsactionscriptpython\n",
        "hackathon_id": "yhack2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascriptpythondjangohtml5cssjquerymongodb\n",
        "hackathon_id": "yhack2015",
        "winner": true
    },
    {
        "description": "\nWhat is yHaCkSlAcKpAcK?.\nA collection of slack integrations to make your life easier and your work flow-ier.\nInteractions with the external services are text-based, via a bot. \nThere are 3 integrations provided out-of-the-box, but they're all built on a framework that makes it easy to add more. All you need is an API (and some python)!\nP.S. working code is in the working branch on our repo\nVenmo\nVenmo...through slack. \nIt works.\nYou have no excuse for not paying your boss for lunch.\nTinder\nSwipe right without taking out your phone.\nUses Facebook for authentication.\nUber\nIt's like Uber for Uber, through Slack.\nThis feature is still under development\nAuthors and Contributors\nSanders Lauture @golf1052\nAndrew Knueven @knuevena\nTevin Otieno @tevin-otieno\nCreated at YHACK 2015\n",
        "hackathon_id": "yhack2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWanted to simplify the interaction between recruiter and student using HPE haven on demand APIs\nWhat it does\nBuilds sentiment score using a video interview, checks for fraud using face detection and parses resume to get most out of entity extraction\nHow I built it\nBuilt API's to talk to Haven and process data in async fashion\nChallenges I ran into\nHP TTS engine was hard to process data\nAccomplishments that I'm proud of\nUsing multiple HP Haven on demand APIs \nWhat I learned\nHPE haven-on-demand API using angularjs\nWhat's next for HireMeNow\nAdding more Machine Learning techniques for calculating sentiment scores and a better TTS engine\n",
        "hackathon_id": "yhack2015",
        "winner": true
    },
    {
        "description": "\nGet the Flight Out helps you GTFO ASAP\nInspiration\nConstantly stuck in meetings, classes, exams, work, with nowhere to go, we started to think.  What if we could just press a button, and in a few hours, go somewhere awesome? It doesn't matter where, as long as its not here.  We'd need a plane ticket, a ride to the airport, and someplace to stay.  So can I book a ticket?  \nEvery online booking site asks for where to go, but we just want to go.  What if we could just set a modest budget, and take advantage of last minute flight and hotel discounts, and have all the details taken care of for us?\nWhat it does\nWith a push of a button or the flick of an Apple Watch, we'll find you a hotel at a great location, tickets out of your preferred airport, and an Uber to the airport, and email you the details for reference.\n",
        "hackathon_id": "yhack2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nDespite the fact that there are a greater number of airlines than most people can count, very few seem to differentiate themselves in regards to pre-purchase interaction with the customer. This results in the rise of middle-man sales dealers (expedia, travelocity, etc) willing to fill this void. \nWe believed that by designing a search methodology that is built from the ground up, predicated on how consumers approach planning a vacation, we could yield a win-win scenario; first, being able to enlighten travellers to the many options they have based on their personalized constraints (schedule, price) and preferences (general geographic location, type of vacation, specific city preference), and second, to allow airlines to better market their reduced fare, last minute getaway packages in an attempt to minimize the cost of empty seats on flights.\nWhat it does\nOn the topic of impacts, North Star does two things. It helps consumers plan travel in a more intuitive and natural way than ever before, and it helps prevent unnecessary losses for airlines.\nAirlines participate by allowing us access to their data or APIs (JetBlue and priceline supplied us with data sets here), and consumers benefit by using our site. \n*TL;DR: People can take more vacations. Airlines lose less money. *\nHow we built it\nSo many of these things were done concurrently, but if we were to break them up into individual actions, they'd be as follows.\n\nDownloaded data sets from JetBlue and Priceline\n1b. Parse wikipedia for accessory data (Flight code --> Airport Name --> Airport City --> City Longitude/Latitude)\nSet up server on Azure\nPopulate SQL server\nIntegrate facebook\nWrite search algorithm / build front end for user inputs\n5b. Design all static images (radio button icons for flight properties, company logo, etc).\nDesigned map interface, planned how the data would influence dynamic changes in the map\n6b. Used beaker and Priceline data to show analytics on charts so that consumers can have a better idea of how the current flight prices compare to the historical values, or to compare prices by airline.\nBuilt the 'infinite scroll' functionality and polished up front end\n\nChallenges we ran into\nNot having an API to dynamically call information makes for a lot of wasted time when we consistently need to remake/repopulate the database.\nWe messed up with how we imported the dates and times of flights in our SQL database. This was huge, since times and dates are 2 out of the 3 most crucial pieces of information (after location).\nPython really really really doesn't like unicode. Our parser broke 2-3 times when it encountered hyphenated airport names or accented letters.\nAccomplishments that we're proud of\n1. Scalability *(Database layout, algorithm efficiency)\nThis is our team's third consecutive data hack submission at a hackathon, so concepts like efficiency and resource utilization are things that are prioritized whenever possible. We believe that after multiple projects that utilized 'bandaid' fixes under the 'Fuck it, ship it' mentality, we've finally started to do things the 'right' way, and in a way that is scalable.\n*2. Innovation\nWe were able to attack a seemingly stale methodology from a fresh perspective. Disruption is cool, and being the new kid on the block is always fun.\n*3. We learned a lot. *\nBeaker, Facebook API, Microsoft Azure, and tons of SQL troubleshooting. Despite the fact that we all have very distinct and unique skills with a bit of overlap, we all ended up doing far more work that was outside of our respective comfort zones than ever before for this multi-leveled hack.\nthis memorable quote summarizes it pretty well: \nBrian Chen: \"Please, no more SQL. I can't handle any more.\" \nNick: \"You gon' learn today, you gon' learn real good about SQL, inside and out\".\nWhat we learned\nTake care of your most important data points/structures first. Data is love, data is life - except when it takes a combined 6 hours to repeatedly repopulate your database after improper planning. ALWAYS think your database through ahead of time!\nBeaker is awesome. Nick loves working with data, and for him, Beaker is a gift from the heavens. He wishes it could work with MATlab too, but he doesn't want to push his luck. \nWhat's next for North Star\n1. Increase the amount of data that we have!\nWe were given finite data sets by sponsors, so by having live access to either APIs or more time to parse websites, the data would only further serve to increase the effectiveness of North Star.\n*2. Continued Brand Differentiation *\nDespite the fact that many other travel sites supply tons of functionality with their seemingly endless filters, it all comes across in a very cold and emotionless way. For most people, travelling is a fun (or at least emotional) experience, and we believe that the process leading up to it should be no different. If North Star were to be continued, it should embrace its different style of approach by getting user feedback and continuing to make things 'shiny' and 'more polished'. Although it's not frequently spoken about, user experience on a travel site could be the difference between a consumer packing their bags for an overnight getaway or sitting home on their couch to Netflix and chill.\n3. Innovative Data Processing/Empowerment\nBy incorporating Priceline data (which contains data from a multitude of airlines) and combining it with Beaker, we have the power to offer a platform with a stronger price analysis tool than any other competitor. \n4. Integrate Consumer Behavioral Science\nBeyond conscious preferences of the consumer, a multitude of market research papers reveal trends that differentiate spending patterns within the airline industry. By having access to more data from our users (geographic location, approximate income level by zip code, race, age), we could use these demographic values to alter the meta-rankings generated by our database search algorithm, showing results that are more in line with what the consumer ultimately will be interested in considering. One example of this, is that millenials are 60% more likely to book a flight that is discounted than nonmillenials. Another, comparing the same two groups, is that millenials are significantly more likely to pay a premium to upgrade to an airline seat with more leg room, while also disproportionately prioritizing budget-oriented airlines. We successfully integrated the Facebook API to easily get demographic information about our consumer, however, without a significant amount of time (or money) to access these market research studies, we didn't have much to work with during the time of the hackathon to implement justified meta rankings. We were mindful of this though, and set up our database in such a way that we could easily implement these factors as multipliers/scalars if continued.\n",
        "hackathon_id": "yhack2015",
        "winner": true
    },
    {
        "description": "\nOrigins\nInspired by our own struggles of finding and buying cheap airfare, while maintaining reasonable constraints. Flights are still a hassle to find and purchase, even with tools such as Google Flights, Kayak, and Skiplagged. All travel apps use the same sets of input from users: destination, dates, and times. We've taken it a step further and catered flights to find your next trip by using a custom algorithm that analyzes your social media. Flights come paired with hotels as a package. Save more money by sharing the trip with your friends.\nWhat it does\nOur custom algorithm analyzes your past behavior, your friends' trends, and what you're looking for, to provide you with only the best results. Forget about comparing a slew of numbers and words and focus on finding your next trip. \nWe've revamped the buying experience; share select trips with friends to let them know about great deals and future plans. Sharing a trip kickstarts an auction process - as the trip grows in popularity, the price decreases accordingly! MetBlue combines a ranked infinite scroll with interactive tickets.\nIt's a win-win for both the consumers and airlines: buyers receive discounts while airlines can fill flights on short notice. By increasing social proof and popularity, we fill empty seats at competitive prices.\nHow I built it\nWe rely on MongoDB and Ruby to reference our data and provide your next trip. Our UI and UX heavily emphasizes a more minimalistic and fun experience over the commonplace arduous ticket hunting process. A combination of front end development tools creates a streamlined searching and check out flow. \nChallenges I ran into\nMapping and developing connections based on social data and individual search filters was a major hurdle to creating a smooth experience. Developing a high-speed infinite scrolling interface and integrating data to MetBlue's unique ticket system was also a major concern. \nAccomplishments that I'm proud of\nOur design has come together very cohesively, and our search functions are efficient and quick.\n",
        "hackathon_id": "yhack2015",
        "winner": true
    },
    {
        "description": "\nOverview\nWe made a gorgeous website to plan flights with Jet Blue's data sets. Come check us out!\n",
        "hackathon_id": "yhack2015",
        "winner": true
    },
    {
        "description": "\nObjective\nJetBlue Flight Deals (JFD) provides an intuitive viewer powered by efficacious algorithms to surface the best deals in an infinitely scrollable fashion that are relevant to your preferences. \nThe JFD Stack\nJFD is powered by the R statistical language, utilizing the R Shiny and R Shiny dashboard framework developed by RStudio to create an interactive, modular, fast, platform agnostic web application. Prototyping is made simple thanks to the speed of development in R, and the ability to use and distribute powerful statistical analyses packages on the central R repository, CRAN, enable R to do even more than just stats, with an infinitely scrollable table powered by the Javascript library DataTables.\nThe Dataset\nJet Blue provided a sample dataset consisting of their available flight offerings running from October 26, 2015 thru February 29, 2016. Each flight consists of the following information:\n\nOrigin, Destination : three-letter airport codes\nFlight Time : consists of departure date and time\nFareType : \"POINTS\" and \"LOWEST\" designated the type of fare described subsequently\nDollarFare, DollarTax or PointsFare, PointsTax : the cost of the given flight\nFlight Type : in this sample dataset, the only type available was \"NONSTOP\" \nisDomesticRoute, isPrivateFare : domestic and private flight designations\n\nAdditionally, a database of annotation corresponding to each airport was made available. Each airport is annotated with the following information:\n\nMarketGroupName, MarketGroupId : local market group that airport belongs to, whose values include the following: \"Mountain/Desert | Northeast | Caribbean | SouthSW | California | Mid-Atlantic\"\nGeographicRegionName, GeographicRegionId : a finer version of market, identifies the local geographic region/id that airport belongs to, whose values include the following: ANC | BOS Area | Colombia | Desert West | DR | FLL | Gulf | LA Area | MCO | MidWest | Mtn West | NE Islands | NYC | Other Carrib | Pac NW | PBI | PR | SF Bay | Texas | The South | Upstate | WAS\nDestinationTypeName : the getaway type, which includes: \"Family | Nightlife | Exploration | Romance | Beach\"\n\nIn this dataset, only nonstop, outbound flights were considered, however, all the methods below could be easily extended to account for inbound (return) flights - while multiple stops would require a not inconsequential effort to implement, this would certainly be an avenue worth pursuing for future development.\nThe Algorithm\nThe method behind the flight ranking takes into account a variety and multiples of inputs and their relative importance to one another, ranging from getaway types, specific or regional origin and destination sites and consideration of airports nearby, budget, and desired dates of travel. Our approach provides an infinitely scrollable list of options - but the secret sauce is in taking into account this multitude of potential preferences and weighing them against one another to surface the best possible flights.\nLogistic Scaling of Fuzzy Matches\nOur approach looks for exact matches when possible (as in the case of getaway type, region, airport codes), but there are cases where we need to consider the \"fuzzy\" matches, and how to weight these. For example, let's say we specify that we would like to fly between June 5th and June 10th. If we simply used a binary encoding, we would miss out on a potentially great deal on June 11th or June 4th. However, we don't really care to see anything on May 25th, no matter how good of a deal - that simply would be too far from our desired weights. Similarly, given a budget of $200, we would hate to miss out on a $225 flight that fits all the rest of our preferences! \nTo address this \"close but not quite\" problem, we implemented a logistic scaling function to allow for close matches in preferred dates and budgets. This logistic scaling function rapidly decays as it goes outside of the given boundaries - as in the case of preferred dates. For a given budget, this is modified slightly, such that for a cost that exceeds budget, the penalty grows slowly, but then rapidly increases as cost exceeds the budget by $50 to $100. Conversely, as cost goes below a given budget, at first it is of slow benefit, but then rapidly gets \"rewarded\" the lower the cost goes, representing a steal of a deal.\nOrder Importance Scaling\nAn additional factor to consider is when inputting multiple options, one needs to consider whether they are unordered (of equal importance) or ordered (ranked from high to low importance). Here, we have taken into account the order by which certain options, such as getaway type or to/from departure info (which could be specific airport codes or geographic regions).\nTo account for ordering of such preferences, we applied an order importance function which weights the first to last preferences of a given field (such as to or from or getaways) from high to low importance. To do this, we add together a uniform and exponential distribution, each scaled by (1 -) parameter Order Importance (OI). This parameter, filed under Advanced Options, determines whether the preferences should be treated as unordered (OI = 0) thus resembling the uniform distribution, or exponential (OI = 1), where the first preferences are highly weighted and lower preferences are heavily penalized. By default, OI is set to 0.7, to allow for a moderate weighting of higher preferences, and thus is represented by a mixture of exponential (70%, with a rate of 3) and uniform (30%) distributions.\nNearby?\nSometimes, your favorite airport might not be the best place to go for the best flight deals - for example, from New Haven, it is equally easy (or difficult) to navigate to either BDL or JFK or LGA. To address this, we have added an option to include nearby airports, leveraging the local geographic region each airport is classified under to cluster them together.\nPreference Importance - Coefficients\nFor cases where some preferences may be more important than others, the Coefficients under Advanced Options allows for the ultimate tweaking of our algorithm. For cases where the departure date is an absolute must, and everything else is secondary, the user can tweak up the coefficient for Depart Date, or if budget is of no concern, this can be set to 0.\nInfinitely Scrollable & Rapidly Updateable\nAny good algorithm must provide results post haste, and to that end, our solution provides an infinitely scrollable ranking of pertinent flight results, and rapidly updates upon any tweaks to the settings made therein.\nHappy Deal Hunting!\nThanks for trying our app!\n",
        "hackathon_id": "yhack2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavamicrosoft-bandjetbluewindowsandroid\n",
        "hackathon_id": "yhack2015",
        "winner": true
    },
    {
        "description": "\nInspiration: As per the Stats provided by Annual Disability Statistics Compendium, 19,344,883 civilian veterans ages 18 years and over live in the community in 2013, of which 5,522,589 were individuals with disabilities . DAV - Disabled American Veterans organization has spent about $ 61.8 million to buy and operate vehicles to act as a transit service for veterans but the reach of this program is limited.\nFollowing these stats we wanted to support Veterans with something more feasible and efficient.\nWhat it does: It is a web application that will serve as a common platform between DAV and Uber. Instead of spending a huge amount on buying cars the DAV instead pay Uber and Uber will then provide free rides to veterans. Any veteran can register with his Veteran ID and SSN. During the application process our Portal matches the details with DAV to prevent non-veterans from using this service. After registration, Veterans can request rides on our website, that uses Uber API and can commute free.\nHow we built it: We used the following technologies:\nUber API ,Google Maps, Directions, and Geocoding APIs, WAMP as local server.\nBoot-Strap to create website, php-MyAdmin to maintain SQL database and webpages are designed using HTML, CSS, Javascript, Python script etc.\nChallenges we ran into: Using Uber API effectively, by parsing through data and code to make javascript files that use the API endpoints. Also, Uber API has problematic network/server permission issues.\nAnother challenge was to figure out the misuse of this service by non-veterans. To save that, we created a dummy Database, where each Veteran-ID is associated with corresponding 4 digits SSN. The pair is matched when user registers for free Uber rides. For real-time application, the same data can be provided by DAV and that can be used to authenticate a Veteran.\nAccomplishments that we're proud of: Finishing the project well in time, almost 4 hours before. From a team of strangers, brainstorming ideas for hours and then have a finished product in less than 24 hours.\nWhat we learned: We learnt to use third party APIs and gained more experience in web-development.\nWhat's next for VeTransit:  We plan to launch a smartphone app that will be developed for the same service.\nIt will also include Speech recognition. We will display location services for nearby hospitals and medical facilities based on veteran\u2019s needs. Using APIs of online job providers, veterans will receive data on jobs.\nTo access the website, Please register as user first.\nDuring that process, It will ask Veteran-ID and four digits of SSN.\nThe pair should match for successful registration.\nPlease use one of the following key pairs from our Dummy Data, to do that:\nVET00104    0659\nVET00105    0705\nVET00106    0931\nVET00107    0978\nVET00108    0307\nVET00109    0674\n",
        "hackathon_id": "yhack2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nHave you ever had to wait in long lines just to buy a few items from a store? Not wanted to interact with employees to get what you want? Now you can buy items quickly and hassle free through your phone, without interacting with any people whatsoever.\nWhat it does\nCheckMeOut is an iOS application that allows users to buy an item that has been 'locked' in a store. For example, clothing that have the sensors attached to them or items that are physically locked behind glass. Users can scan a QR code or use ApplePay to quickly access the information about an item (price, description, etc.) and 'unlock' the item by paying for it. The user will not have to interact with any store clerks or wait in line to buy the item.\nHow we built it\nWe used xcode to build the iOS application, and MS Azure to host our backend. We used an intel Edison board to help simulate our 'locking' of an item.\nChallenges I ran into\nWe're using many technologies that our team is unfamiliar with, namely Swift and Azure.\nWhat I learned\nI've learned not underestimate things you don't know, to ask for help when you need it, and to just have a good time.\nWhat's next for CheckMeOut\nHope to see it more polished in the future.\n",
        "hackathon_id": "yhack2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nI was inspired to make this device while sitting in physics class.  I really felt compelled to make something that I learned inside the classroom and apply my education to something practical.  Growing up I always remembered playing with magnetic kits and loved the feeling of repulsion between magnets.\nWhat it does\nThere is a base layer of small magnets all taped together so the North pole is facing up.  There are hall effect devices to measure the variances in magnetic field that is created by the user's magnet attached to their finger.  This allows the device to track the user's finger and determine how they are interacting with the magnetic field pointing up.\nHow I built it\nIt is build using the intel edison.  Each hall effect device is either on or off depending if there is a magnetic field pointing down through the face of the black plate.  This determines where the user's finger is.  From there the analog data is sent via serial port to the processing program on the computer that demonstrates that it works.  That just takes the data and maps the motion of the object.\nChallenges I ran into\nThere are many challenges I faced.  Two of them dealt with just the hardware.  I bought the wrong type of sensors.  These are threshold sensors which means they are either on or off instead of linear sensors that give a voltage proportional to the strength of magnetic field around it.  This would allow the device to be more accurate.  The other one deals with having alot of very small worn out magnets.  I had to find a way to tape and hold them all together because they are in an unstable configuration to create an almost uniform magnetic field on the base.  Another problem I ran into was dealing with the edison,  I was planning on just controlling the mouse to show that it works but the mouse library only works with the arduino leonardo.  I had to come up with a way to transfer the data to another program, which is how i came up dealing with serial ports and initially tried mapping it into a Unity game.\nAccomplishments that I'm proud of\nI am proud of creating a hardware hack that I believe is practical.  I used this device as a way to prove the concept of creating a more interactive environment for the user with a sense of touch rather than things like the kinect and leap motion that track your motion but it is just in thin air without any real interaction.  Some areas this concept can be useful in is in learning environment or helping people in physical therapy learning to do things again after a tragedy, since it is always better to learn with a sense of touch.\nWhat I learned\nI had a grand vision of this project from thinking about it before hand and I thought it was going to theoretically work out great!  I learned how to adapt to many changes and overcoming them with limited time and resources.  I also learned alot about dealing with serial data and how the intel edison works on a machine level.\nWhat's next for Tactile Leap Motion\nCreating a better prototype with better hardware(stronger magnets and more accurate sensors)\n",
        "hackathon_id": "yhack2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nYou don't have Internet connection, but you want to use Bing anyway cuz you're a hopeless Internet addict. \nOr you want to find cheap hotel deals. HotlineBing can help.\nWhat it does\nAllows you to use Bing via text messaging, search for hotel deals using natural language (that's right no prompts) using HP-HavenOnDemand Extract Entity API\nHow I built it\nNodejs, Express, HP-HavenOnDemand, BrainTree API, Bing API, PriceLine API\nChallenges I ran into\nTwilio Voice API requires an upgraded account so this is not really a hotline (*sighs Drake), general asynchronous JS flow conflicts with our expectation of how our app should flow, integrating Braintree API is also hard given the nature of our hack\nAccomplishments that I'm proud of\nGet some functionality working\nWhat I learned\nJS is a pain to work with\nWhat's next for HotlineBing\nMore polished version: improve natural language processing, allow for more dynamic workflow, send Drake gifs via MMS??\n",
        "hackathon_id": "yhack2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe love the playing the game and were disappointed in the way that there wasnt a nice web implementation of the game that we could play with each other remotely. So we fixed that.\nWhat it does\nAllows between 5 and 10 players to play Avalon over the web app. \nHow we built it\nWe made extensive use of Meteor and forked a popular game called Spyfall to build it out. This game had a very basic subset of rules that were applicable to Avalon. Because of this we added a lot of the functionality we needed on top of Spyfall to make the Avalon game mechanics work.\nChallenges we ran into\nBuilding realtime systems is hard. Moreover, using a framework like Meteor that makes a lot of things easy by black boxing them is also difficult by the same token. So a lot of the time we struggled with making things work that happened to not be able to work within the context of the framework we were using. We also ended up starting the project over again multiple times since we realized that we were going down a path in which it was impossible to build that application.\nAccomplishments that we're proud of\nIt works. Its crisp. Its clean. Its responsive. Its synchronized across clients.\nWhat we learned\nMeteor is magic. We learned how to use a lot of the more magical client synchronization features to deal with race conditions and the difficulties of making a realtime application.\nWhat's next for Avalon\nFill out the different roles, add a chat client, integrate with a video chat feature. \n",
        "hackathon_id": "yhack2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nI'm interested in NLP, so I wanted to work with one of the provided APIs that were related. Nuance had such a toolkit and they talked about how you could use it to order food. While talking with a friend, we realized that it was always difficult to keep track of coffee orders, so it would be possible to train a model to recognize the different parts of a coffee order.\nWhat it does\nFor everyone who struggles to understand what an \"iced coffee with two pumps of caramel and one scoop of macha powder\" is or to remember that their friend asked for \"a venti pumpkin spice latte with no whipped cream and skimmed milk\", this app will help them remember all of their friends' orders, and it tags the important parts of each order.\nSo, it recognizes orders of coffee and tags the different concepts (drink, size, milk-type, amount of sugar, etc.)\nHow I built it\n\nran through an iOS tutorial to make a basic list app\ndeveloped a model using Nuance's toolkit to have it recognize the different orders\ncombined list application with sample app provided by Nuance\n\nChallenges I ran into\n\ncoming up with a way to break down coffee order\nmaking iOS work, debugging errors in code (!!)\n\nAccomplishments that I'm proud of\n-having a functioning mobile app\nWhat I learned\n\nlearning Objective-C\nhow to train and test a model\n\nWhat's next for CoffeeRun\n\nFixing minor bugs on app\nCalculating prices for each order: parsing order info and comparing against a menu\nRequest for payments from friends\n\n",
        "hackathon_id": "yhack2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\npythonpulse-audiogoogle-web-speech-apigttssoxespeakbashbing-translatormicrosoft-speech-apigoogle-translatesplitvtvoipnuance\n",
        "hackathon_id": "yhack2015",
        "winner": true
    },
    {
        "description": "\nBasicSloth\nBasicSloth came with the recognition that there needs to be an effect ground communication method for people in unstable situations. BasicSloth attempts to tackle this issue in a few ways including:\n\nUsing technology which allows for simple PGP encryption and decryption. This allows messages to only be unlocked by those intended.\nUsing cheap radio systems that cost thousands of dollars less than \"safe\" military methods, which may have more vulnerabilities than our system.\nUsing radios that can be used on a huge variety of frequencies, preventing blockers from hindering the transferring of information.\n\nImplementation\nBasic Sloth consists of four main components, which are:\n\nData entry and encryption - This was done using TK for the gui, and Keybase for data encryption.\nSpeech to Text - This was accomplished using Nuance speech to text technology.\nSending - This was accomplished using a simple file read of the information input, as well as frequency modulation.\nReceiving - This was accomplished using GnuRadio, as well as demodulation and 'segmentation'\n\nThanks\nWe give a special thanks to the Nuance team for their assistance with speech to text. We also give a large thanks to the FSF and the GnuRadio team for continuing to support open source tools that allowed us to continue this project.\nResources\nFrom Baseband to bitstream\nUS Frequency Allocations\n\n",
        "hackathon_id": "yhack2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavaandroid-studiobing-mapsbing-search-apigoogle-mapsyelp\n",
        "hackathon_id": "yhack2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nEach of us uses speed reading tools on the daily for online news articles and such, so it's always been a pain transitioning to printed media. We wanted a tool that would enable us to read as efficiently as we do online, in real life.\nWhat it does\nThis program recognizes words on a physical page using nothing but a phone's camera. It displays it back to you rapidly, word by word, in order to prevent you from reading the word out loud in your head. There's a lot of research behind this speed reading technique, and it can result in crazy fast comprehension speeds.\nHow I built it\nIt's all client side, including \"uploading\" and all of the algorithms we used to segment words and process the image. All in vanilla Javascript, using no external libraries.\nChallenges I ran into\nWe wanted to submit this to Datto's 4K, and keeping the project small turned out to be the hardest part of this project. Coming up with algorithms that were short and space efficient (no, not memory, but rather characters of source code!) was an interesting creative challenge. It was also hard figuring out how to iterate the words in the proper order -- left to right, top to bottom. In the end, we managed to figure it out.\nAccomplishments that I'm proud of\nThe algorithms we implemented worked! We didn't use any external resources to figure out how to solve the problems we needed to. Building this project under the space constraints we were under was a tremendous learning experience and a fascinating puzzle. We wanted a challenge, and we conquered it.\nWhat I learned\nWe taught ourselves a lot about the intricacies of processing textual images. We saw firsthand how frustrating it can be to teach computers to perform the simplest of tasks. Once we figured out how to locate words, it literally took us six plus hours to figure out how to list them in order. Real world images are noisy and bendy and not at all nice to work with... but we did it.\nWhat's next for Reedr\nWe had plenty of ideas that we didn't have the time or space to implement: ways to improve the speed reading process, other algorithms to segment words, etc. Also, there are a bunch of general usability improvements that would make this much better for users.\n",
        "hackathon_id": "yhack2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\ngoogle-web-speech-apijavascriptjqueryhtmlcss\n",
        "hackathon_id": "hackduke2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nNo more asking \"what is available.\" It's time to ask the real question: \"where is it available?\"\nStarvation is one of the most dehumanizing consequences of income inequality. Within just the past 3 years, an estimated 50 million Americans are suffering from malnutrition. They lack not only the income to purchase meals but also the resources to discover where food may be served around them. PantreePal was inspired to put an end to the inhuman, unjust, unacceptable reality that we as a society often overlook.\nWhat it does\nPantreePal provides numerous user interfaces for individuals to log food inventory. Users [volunteers at a food bank] can either manually create entries through a web or mobile UI, or they can simply take a picture of multiple items through the mobile interface, which will automatically log all the food items in the picture. The web interface provides visual displays of the makeup of the food inventory, which updates in real time as users add and remove from it. \nHow I built it\nWithin the app, when a user takes a picture of a food item, the image is processed using OpenCV and Tesserate. We used the Neumann & Matas algorithm to form our classifiers. The extracted words from the image are sent back to the app so that the user can validate the number and type of items that will be added to the food bank's inventory. \nThe backend is primarily Java/Spring/AWS cloud processing with MySQL for the database. The front end is an Android app and web app. HTTP requests are managed using Square's OKHTTP api. The Web app is backed by bootstrap, using bower as a package manager.\nChallenges I ran into\nAccomplishments that I'm proud of\nWhat I learned\nWhat's next for Foodbanker\n",
        "hackathon_id": "hackduke2015",
        "winner": true
    },
    {
        "description": "\nCoding for Good: Health and Wellness\nOver 20 million American adults have some form of vision loss, and the WHO estimates that at least 280 million people are visually impaired worldwide. Currently, most buildings and campuses are not disability-friendly and do not allow for easy navigation for those with vision loss. Assistive devices can call unwanted attention or can be limited to a small range of movement. In addition, these products also rely on the user's intuition or inference and can be less helpful in new environments where the user is not familiar with the layout of the building.\nProject Tango \u201csees how we see\u201d\nThis Google smartphone/tablet project uses a Point Cloud Library to map a space based on xyz coordinates of each point in the device's range of vision. It has applications in virtual reality, area learning, and indoor wayfinding. \nVisualizing Unfamiliar Environments\nOver the course of 20 hours, we created an android app utilizing Project Tango's Point Cloud Library that was able to differentiate between obstacles, walls and corners, and ascending and descending staircases using depth patterns. We designed this app with the visually impaired in mind and used text to speech to give auditory directions to the user to help them navigate new buildings. \nImplementation\nUsing the Point Cloud Library, we created a digital representation of the immediate physical space around the user.\nWe then extracted coordinates from the Point Cloud Buffer and clustered depth readings into different sectors. By analyzing the relative and absolute depth of different sectors, we were able to establish threshold values and algorithms to differentiate between various obstacles and determine the commands that were given (left, right, wall, obstacle, upstairs, downstairs, okay). Voice commands were implemented using Android's Text to Speech. \nChallenges\nExtracting depth values from Point Cloud Buffer, setting accurate threshold values for different objects, and\nimplementing a \"slope\" threshold for staircases that would set them apart from walls or simpler obstacles.\nAccomplishments\nUsing our application, a blindfolded person was successfully able to navigate staircases and obstacles (see video).\nIn the future, this app could be utilized by the visually-impaired to walk through buildings and receive real-time, predictive, auditory aid without having to rely on other people, animals, or tools. \nWhat's next\nApply the app to a smaller device such as an Android smartphone in order to minimize hassle.\nRefine communication from device to user to make the device more subtle, possibly using bluetooth bands to vibrate based on the next steps the user should take.\nImplement location-based services to give directions from room to room within a building that the user has never visited using a combination of satellite GPS and provided floor plans.\nUse area learning to store and refine routes over time if the user revisits the same place for future reference.\nDeal with challenges such as sunlight interference and crowded spaces.\nDesign a practical physical implementation of the app that the user could wear in a hands-free manner.\n",
        "hackathon_id": "hackduke2015",
        "winner": true
    },
    {
        "description": "\nIf every commuter were to decrease their carbon dioxide emissions by just 10%, there would be a decrease in carbon dioxide emissions by hundreds of pounds. However, it has been shown that simple tracking does not encourage alternative methods of commuting - traditional tracking requires input from the user, however minimal. Thus, we wanted to target this issue and while requiring no user input to the application.\nIn order to raises awareness of day-to-day subconscious decisions that detrimentally affect the environment. Footstep tracks movement and GPS location and predicts the likelihood of being in a vehicle. If the prediction is positive, Footstep will automatically run in the background and track GPS location until a final destination is reached, which it will intelligently stop recording if so and organize commute by \u201ctrips\u201d based on start/end time and location. The results are displayed on a day-to-day basis for a user to view, and each route is accompanied by alternative walking/biking routes that can be taken. Footstep in the future can be extended to intelligently predict when a user will be taking a common commute route and immediately suggest an alternative walking/biking route that matches with a user\u2019s schedule/linked calendar. \n",
        "hackathon_id": "hackduke2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nAs our group brainstormed, we thought of all of the problems we could address, such as what we saw in our day to day lives. At some point or another, we began to discuss the homeless and the adversities they faced. While thinking about how we could tackle the issues of the homeless and low-income, we stumbled upon data showing the low access to food and groceries that many American families faced. For some, not having a car made it difficult for people to go grocery shopping and get food and necessities they might need - especially if they had to work many hours of the day. We decided that we could address this problem with a tool that we used when we needed things from places not immediately available to us on campus - Postmates. The intersection of the two resulted in CrowdNine.\nWhat it does\nCrowdNine a web-based crowdsourcing platform, connecting people from low-income areas with people who want to help them out by funding them for individual baskets of groceries and food. Users sign in through Google and Facebook Authentication to maximize security. Donors perform transactions through the Stripe API, and recipients request and receive their baskets through Postmates and the Postmates API. We used Google Geocoder to give local results and options to donors and recipients. \nHow we built it\nWe built the front end of Crowd Nine using Jade, an HTML template language, and used JavaScript to get data from the site to the Node.js server. The server communicates with MongoDB to store basket data, including all of the items in it, and the total price. When users find baskets to donate to, they simply pay with a credit card through the Stripe API.\nChallenges we ran into\nWe faced many challenges along the way in the creation of this project, as none of us had ever worked with Jade, MongoDB, and we had very little to no experience in JavaScript. Most of our problems occurred with learning these new technologies and making the API calls despite the adversity, however our most challenging problem was making the final connection between the variables stored locally client-side and the database.\nAccomplishments that we're proud of\nGetting the stack to work in the first place was a huge achievement, considering we had never done it before. After getting something running, we started tackling the different API calls, and were able to successfully get data from all of the ones we tried. While it seems relatively simple, some members of our group have struggled to deal with this portion of the development cycle beforehand, making our success even more incredible. \nWhat we learned\nBefore this project, we really didn't have much experience working with Javascript or any of the related libraries or environments. So, building CrowdNine served as an incredible learning experience, as we figured out how to create a novel application in a short period of time while familiarizing ourselves with the technology. We also found ourselves greatly enjoying creating an application that can actually have a significant impact on the world. In the end, the most important thing that we learned was that, we can make a difference, and this motivated us more than ever before.\nWhat's next for CrowdNine\nWe hope to build the CrowdNine platform to be more robust and be able to handle a significant amount of users. Furthermore, we hope to increase the amount of products that we can offer low-income families beyond basic groceries and necessities.\n",
        "hackathon_id": "hackduke2015",
        "winner": true
    },
    {
        "description": "\nEcodiversity\nBiodiversity is a key indicator of the environmental health of an area. By allowing people from around the world to contribute to our database of animals in a simple, well-validated way, we can compile and visualize the biodiversity in various regions throughout the United States. Ecodiversity is catered towards all people, and its simplicity allows AP Environmental Science classes to use it as an educational tool. \nTechnology\nWe used Polymer to lay out the front-end with some CSS modifications, and we implemented the ESRI Javascript API to create feature layers on top of our map and to embed it into our website. \nFuture\nOur next steps include:\n\ncreating options for multiple visualizations, such as choropleths or heat maps, that could be based on whichever environmental statistic is most appropriate for that type of visualization\nadjusting our map so it displays aggregate sums of biodiversity factors in granular ecoregions\ncontacting the EPA to learn what best animal tracking techniques can account for duplicate animals and invasive species\n\n",
        "hackathon_id": "hackduke2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nLearning languages is hard, and it doesn't have to be that way. Spaced Repetition Software (SRS) have made tremendous progress in making learning more efficient, but there's still a lot of work to be done. If Memrise says that you need to water your memories in 14 hours, most people won't actually review them on time.\nWhat it does\nFlashCardKitties is an immersive learning experience. Whenever its learning algorithm detects you're about to forget a memory item, the Pebble Smartwatch it's running on will fire a quick vibration, and present the user with a vocab word and definition. The user then self-evaluates how well he or she knew the answer, and that information is sent to the server at flashcardkitties.com.\nHow I built it\nI built an WatchApp for the Pebble that functions a lot like a WatchFace. The goal is to be unobtrusive while still providing very useful functionality that will help them learn better. In this case, less it more, as constant alerts and vibrations can get annoying. The UI Elements on the watch are controlled by code written in C. Some JavaScript running on the mobile phone connected to the watch interacts with the C code to provide access to networking. The website allows the user to register with Facebook to add vocab words to their account on FlashCardKittens. The settings section of the Pebble App allows the user to view their vocab words they've stored through the web interface, which uses a PHP backend to store the vocab in a MySql database.\nChallenges I ran into\nPebble documentation is ehh, imho. There were a lot of different aspects of the project to work on, and we were a small team of two.\nAccomplishments that I'm proud of\nI created a functioning web interface to a smartwatch app! That integrated the Facebook API! A lot of technologies came together to make something that is, at the very least, a nice prototype of a much more sophisticated application.  Even though I didn't quite get around to implementing all of the SRS aspects I wanted to, I'm happy with what I was able to get done in the little time I worked on it.\nWhat I learned\nI learned about developing for Pebble Smartwatches and how to set up Amazon Web Services to host a website.\nWhat's next for FlashCardKitties\nBig things. \nFlashCardKitties has a lot of potential. To be specific though (and less dramatic) FlashCardKitties will have persistent login that couldn't quite get ironed out on the Pebble side of things, as well a MUCH better algorithm for scheduling review sessions.\n",
        "hackathon_id": "hackduke2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nnode.jsjadejavascjavascripthtmlcsshtml5css3plaid\n",
        "hackathon_id": "hackduke2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nunityoculus-gear-vrjava3ds-maxblender\n",
        "hackathon_id": "hackduke2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nLong lines anywhere can be a frustrating experience, but they can be a life-threatening one in the emergency room.  Even with the use of triage, a minority of hospitals meet recommended wait times for admitting patients to their emergency departments and fewer than half of hospitals consistently admit patients within 6 hours.  This is a situation with poor outcomes for everyone.  Patients do not expediently receive treatment and the quality of that treatment drops when hospital staff are inundated with a demand that they cannot meet.  For this very reason many hospitals publish live ER waiting times, but this information is often scattered across many different websites.  In emergencies, inconvenient access to information might as well be no access at all.\nWhat it does\nTo solve this problem, we designed VitalTimes, a service that conveniently directs patients to hospitals with the smallest combined wait time and drive time from their current locations.  We also direct patients to urgent care facilities, which can handle lower priority cases that might normally clog up lines at the ER.  This way, patients can quickly and easily identify which facilities to choose without having to look up them up information.  The total time to treatment is conveniently displayed on a side bar right next to the map.\nHow we built it\nWe identified databases with accurate ER and urgent care live waiting times. We then wrote python scripts to scrape these websites and parse the data.  This data was then pushed onto Firebase, which served as our back-end.  We then utilized a variety of Google APIs\u2014including Maps, Places, and Distance Matrix\u2014to build an interactive map that displays hospitals near patients, ranked with a sorting algorithm based on total expected time from their current location to an emergency or urgent care facility.\nChallenges we ran into\nThe main challenges involved understanding the transition from assignments in the classroom, which often rely on sample data made specifically for the purpose of the homework, to utilizing live, dynamic, data samples often built for a completely different purpose. The challenge is in learning how to best integrate and consolidate all the available resources, varying from new languages and frameworks to novel APIs, that best suit our goal. \nIn our case, this specifically involved learning how to use a variety of python libraries to scrape data and integrate this with the Firebase API. We then utilized Google APIs to parse this data and display it in an interactive and easy to understand format for the user. The main challenge was learning how to consolidate these various resources. \nAccomplishments that we're proud of\nThe first moment when we saw the interactive map populated with actual, live ER waiting data was a very rewarding experience. Being challenged to learn and pick up so many new frameworks and resources helped develop our abilities as not only coders but also as problem solvers. We chose to work within the Health and Wellness track so that we could ensure that our product would make a tangible improvement in people's lives. \nWhat we learned\nWe learned how to use Python to scrape websites and use XPath database querying commands to extract key information.  We also learned how to work with a variety of APIs and tie them all together.  Finally, we learned how to divide work and accomplish goals under stress and time constraints.\nWhat's next for VitalTimes\nWhile what we currently have is a proof of concept, we hope to continue expanding our project.  We will work to accrue more live wait time data from emergency and urgent care facilities in order to ease hospital traffic and improve patient outcomes across the country.  We also recognize that VitalTimes is more effective as part of a larger navigation tool.  We hope to partner with an existing navigation service, allowing VitalTimes to become more convenient for the average person to access and use.\n",
        "hackathon_id": "hackduke2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nRecycling cans is a huge source of income for many people that displaced or homeless; they might make up to $70 in a single day.  However, looking for cans and can-dense areas can be challenging, especially for some that are more physically disabled, thus making them less efficient.  In addition, upon receiving their payment, many homeless people will spend their money unwisely, not considering a long term plan.\nWhat it does\nTo assist our friends, we built sCANvenger that does two things:\n1) It generates predictive models of aluminum can concentrations, depicted as a heatmap.  We can guide users to areas that have the most cans, and with the least amount of pickers.\n2) The ecosystem also automatically deposits into a Capital One bank account, created for pickers using our system for the first time.  Depositing and withdrawing money comes with advice to encourage smart spending.\nWe envision our application being primarily used in two locations, respective to the functionalities described above:\n1) By placing a large screen monitor in a homeless shelter, we hope that having a source of information that optimizes their day and income flow will also encourage seeking out shelter as opposed to living on the streets.\n2) We hope to create a partnership with recycling centers, which would have a way to access our recycling center/picker portals, which allow for depositing their income into secure bank accounts as well as providing information about their money flow.\nHow I built it\nAs it is hard to build such a system without adding a lot infrastructure (e.g. smart trash cans) to keep track of number of aluminum cans in different areas, we take advantage of other accessible data sources such as population density, supermarket distributions, and household distributions. With the power of HTML5's geo-location, we are able to locate the device's current geological location. By mining data from heterogeneous data sources and using statistical inferences based on demographic models, we are able to infer the density of aluminum cans over an specific area as well as the amount of money a picker can make in that area per hour.\nWe then used Capital One's Nessie API to facilitate bank transactions.\n",
        "hackathon_id": "hackduke2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nibm-watsonpythonraspberry-piarduino\n",
        "hackathon_id": "hackduke2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nHackDuke is all about coding for good, and their prizes are donations to a charity of the winners' choice. This got us thinking about how a lot of people want to donate to charities or find a way to help others, but they just feel like it's more work than it is worth. That is when we thought of Give A Yeet.\nWhat it does\nHow great would it be if, every time you purchase an item, a little bit of that purchase gets donated to a charity of your choice. With such little effort, people now have the opportunity to contribute to the causes that they care about.\nHow we built it\nWe built this website mainly using AWS, express.js, and html. We started by setting up express on AWS, and then divided the work into front-end and back-end tasks based on our team's previous experience.\nChallenges we ran into\nSome teammates were not as familiar with the technologies we were using, so catching them up to speed while building the app was a little stressful at times.\nAccomplishments that we're proud of\nWe all learned something new and designed an app that can help both charities and people achieve their goals of generosity.\nWhat we learned\nWe learned a lot about middleware and how much of a struggle it can be. We also learned how to make the most out of bootstrap without looking like just another bootstrap site.\nWhat's next for Give A Yeet\nGive out more yeets. YYYAAAAASSSSSS!!!\n",
        "hackathon_id": "hackduke2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe wanted to solve the problem people have when it comes to meeting new people and chatting in a casual setting.\nWhat it does\nLatte\u00b0tude matches you up with another user based on age, distance, gender, and other personal preferences. Once you're matched we'll set you two up with a date and time to meet at a local coffee shop to chit chat and brew up a conversation!\nHow I built it\nUsing html and css\nChallenges I ran into\nOur team had challenges creating the backend of this project\nAccomplishments that I'm proud of\nWhat I learned\nHow to build the front-end of a website from a blank page.\nWhat's next for Latte\u00b0tude\nLots of work. It's a work in progress....clearly\n",
        "hackathon_id": "hackduke2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe all have had our share of hospital visits or visits to the doctor. Every time we visit one, there is a requirement of filling out all the details , basic repetitive details like name, date of birth, blood group and emergency contact etc. So we were inspired to create an application which would help the patients and not require them to fill these details every time. This would be particularly helpful for patients coming to the emergency room.\nWhat it does\nSo the patients and the doctors both are registered to the app. Whenever the patient visits the hospital or the doctor, the doctor or the hospital just sends a push notification to the patient with the message \"send details\". When the patient registers for the app, he/she can fill in the information which gets saved in the phone as a json file. So when the patient receives the notification from the doctor, the patient sends the message back with all the information from the json file as a Json string and the doctor has an interface which automatically gets filled by all the information received from the patient. This ensures easy autofill of information and no wastage of time for the patients or the doctor\nHow I built it\nWe used Google Cloud Messaging with Android to accomplish the task of interaction between the doctor or the hospital and the patients. We also used json as the data format , so the data passed from the patient is passed as a json object and we parse this data at the doctor's end to extract the necessary field information.\nChallenges I ran into\nIntegrating Google Cloud Messaging with Android. It requires configuration, consistent wifi connection since we are hosting it on a local server for the demo.Running a local server like Tomcat and interpreting what messages are being exchanged in between the patient and the doctor.\nAccomplishments that I'm proud of\nSuccessfully integrating the Google Cloud messaging with Android app. This avoids the need for the patient and the doctor to be in close proximity and avoids the use of bluetooth or any other such methods of interaction which requires proximity. Successfully building the prototype of the main application which accomplishes the main concept and the functionality with certain limitations.\nWhat I learned\nOur Group consisted of variety of people with little to some knowledge of Android. We successfully learnt how to build an android application from scratch to integrating google apis like google cloud messaging with Android. Also learnt a good deal about Json parsing.\nWhat's next for QuickFill\nThe QuickFill is a quickfill app which can be not only used in the medical field , but can be enhanced to be used in any field which requires immediate communication between any two parties and requires automatic filling of information\n",
        "hackathon_id": "hackduke2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtml5css\n",
        "hackathon_id": "hackduke2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptangular.jsleap-motionpure.cssfirebasegithubtravis-cinode.js\n",
        "hackathon_id": "hackduke2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe realized as college students that half the battle during our education is learning how to use our timely. While the internet has been great with helping us find all the knowledge we need to learn a subject, it's also filled with distractions that keep us from actually utilizing that knowledge. This is why we created an extension that holds us accountable for our procrastination.\nWhat it does\nBefore starting a homework assignment (a research paper about volcanoes for example), we'd click on the Flow icon in Chrome, type in the research topic we have to work on (volcanoes), and then click Start Flow. From this point on, the extension runs a acquires synonymous words and relevant topics for \"volcanoes\" and comparing the words with the ones found on all the webpages visited from the time we Start Flow to the time we click End Flow. If the percentage of words found on the page that are equal to the words acquired from our topic is low, it means we are not on a productive part of the web and we are notified to get back on track.The comparison between the words and the time spent gives us a data visualization of our productivity over the period of time we were on the web. \nHow I built it\nWe used Google's Chrome extension documentation in javascript for the back end. The front end uses html, css, and javascript.\nChallenges I ran into\nIt was challenging trying to get the Flow extension to continue comparing words when a new tab opens so that one wouldn't have to restart the extension any time a new url was visited.\nAccomplishments that I'm proud of\nThis was our first time doing a web application like this and building a Chrome extension. It went so well, that it encourages us to make other Chrome extensions to tailor our web browsing needs.\nWhat I learned\nLots of javascript. \nWhat's next for Flow\nWith what can be gathered in this extension,  we can begin to implement a series of rewards for good productivity and penalties for poor productivity.  If productivity reaches a certain low point,  it will notify you locally reminding you to get back on task.  We have begun looking into implementing monetary incentives.  For example,  if it is linked to your bank account,  once your productivity has been low for too long,  a dollar will be transferred from your account into a charity. \n",
        "hackathon_id": "hackduke2015",
        "winner": false
    },
    {
        "description": "\nInspiration\n  20.6 million Americans 18 and older reported vision loss.\n  Vision problems are among the top 10 disabilities as reported by the American Foundation for the Blind.\n\n Worldwide, the World Health Organization estimate 285 million people are visually impaired.\n\n  Think about the family or friends close to you with visual impairment. We want to keep them out of danger while avoiding drawing attention to their disability. \n\nWhat it does\nGoogle Tango knows where it is and how it is moving through space. \nTango Vision guides users past close objects within 1.5 meters with turning, warning and vibration cues.\n\nHow I built it\n   We explored the Tango API and its libraries and utilized them in conjunction with Android Studio to create the app.\n\nChallenges We ran into\n   Memory issues where the Tango was storing data locally and had to be restarted every ~20 debug cycles.     \n\n   Instabilities in the API and Tango device: https://developers.google.com/project-tango/apis/known-issues?hl=en \n\nAccomplishments\n We wished to use Project Tango by Google to address a social need. We implemented an app to help the visually impaired to navigate buildings and avoid obstacles implementing haptic and audio feedback.\n\nWhat I learned\nWhat's next for Tango Vision\nDuring the Hackathon we got to work with the tablet, but we would like to use the phone armband with the smaller phone sensing device to make Tango Vision more portable.\n\nTango Vision would expand to the many environmental factors as \"Self-Driving People\" to take human error out of the equation. \n\n",
        "hackathon_id": "hackduke2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaandroidandroid-studiogoogle-mapsparse\n",
        "hackathon_id": "hackduke2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtmlcssswift\n",
        "hackathon_id": "hackduke2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroid-studioxmljavagoogle-maps\n",
        "hackathon_id": "hackduke2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtmlcssbluemixgooglealchemyapijquerywebtrcparse\n",
        "hackathon_id": "hackduke2015",
        "winner": false
    },
    {
        "description": "\nHackathon_2015\nAwesome\nTECNOLOG\u00cdAS IMPLEMENTADAS\njavascript\njquery\nCSS\nHTML\nJSP\nJava\nLibreria iText\n",
        "hackathon_id": "hackathon-coparmex-2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nandroidgradle\n",
        "hackathon_id": "hackathon-coparmex-2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nIncentivar a personas no donantes\nWhat it does\nP\u00e1gina web, Video juego, Aplicaci\u00f3n m\u00f3vil, Base de datos / Web page, Video game, App mobile \nHow I built it\nCombinando creatividad, dise\u00f1o, programaci\u00f3n colaborativa, conocimientos. \nChallenges I ran into\nTiempo de desarrollo ya que se ten\u00edan mas modos de llegar al publico pero solo se desarrollaron las ramas mencionadas\nAccomplishments that I'm proud of\nDesarrollo en distintas plataformas m\u00f3viles Android, iOS, Windows Phone, Fire OS, BlackBerry OS\nWhat I learned\nTrabajo en equipo, Relaciones cliente - programador\nWhat's next for SaveMe\nImplementar con la sociedad y ver resultados \n",
        "hackathon_id": "hackathon-coparmex-2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nla necesidad de inspirar a las futuras generaciones\nWhat it does\nes un juego bastante simple que  nos permite relacionar la donaci\u00f3n de \u00f3rganos con la diversi\u00f3n\nHow I built it\nlo desarrollamos con Unity en windows\nChallenges I ran into\nel tiempo, el hambre y el sue\u00f1o\nAccomplishments that I'm proud of\nEl funcionamiento del juego y la aceptaci\u00f3n de las personas\nWhat I learned\nMuch\u00edsimo que no puedo mencionarlo todo\nWhat's next for Unity\nSeguir desarrollando m\u00e1s y m\u00e1s en esta plataforma\n",
        "hackathon_id": "hackathon-coparmex-2015",
        "winner": true
    },
    {
        "description": "\ninspirada creada a base de la concientizaci\u00f3n de las personas\n",
        "hackathon_id": "hackathon-coparmex-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nCompetir y aprender m\u00e1s.\nWhat it does\nUna aplicaci\u00f3n web con base de datos con un servidor y web y una aplicaci\u00f3n m\u00f3vil de igual forma enlazada a la base de datos.\nHow I built it\nEn equipo, nos logramos administrar y repartir las tareas y as\u00ed lograr mejores resultados.\nChallenges I ran into\nEncontrar una soluci\u00f3n innovadora y llamativa.\nAccomplishments that I'm proud of\nCumplir con una aplicaci\u00f3n de gran avance en poco tiempo.\nWhat I learned\nTrabajar en equipo y apoyarnos mutuamente.\nWhat's next for TrasplantesAmorelos\nSeguir aprendiendo y conocer m\u00e1s temas para mejorar nuestros conocimientos.\n",
        "hackathon_id": "hackathon-coparmex-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nphphtml5css3\n",
        "hackathon_id": "hackathon-coparmex-2015",
        "winner": false
    },
    {
        "description": "\nLa inspiraci\u00f3n viene del deseo de hacer lo mejor de cada uno en el equipo.\n",
        "hackathon_id": "hackathon-coparmex-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtml\n",
        "hackathon_id": "hackathon-coparmex-2015",
        "winner": false
    },
    {
        "description": "\nVivir la experiencia de el primer HackAthon fue \u00fanica e inspiradora, son increibles los resultados obtenidos de la organizaci\u00f3n del equipo y de la constante hambre de querer mejorar, lo que acabas de mejorar.\n",
        "hackathon_id": "hackathon-coparmex-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nseaunheroe\n",
        "hackathon_id": "hackathon-coparmex-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaandroidandroid-studio\n",
        "hackathon_id": "hackathon-coparmex-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaphotoshop\n",
        "hackathon_id": "hackathon-coparmex-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtmlcssjavajavascriptjqueryandroidandroid-studiophpmysqlbootstrapxmlhmtl5\n",
        "hackathon_id": "hackathon-coparmex-2015",
        "winner": false
    },
    {
        "description": "\nPRJT\nInspiration\nYou know how to code and have cool idea, but your app looks really bad. Turns out you should have a designer's help, but you are a student, so you can't afford one. You go find your friend's friend's friend's friend's who is artist. You lost her contact somehow so you have to do this all over again.......\nSTOP THIS MESS\nThis is not just one example of college students with skills, idea, and motivation. There are a lot of SNS these days, but ultimately they are for socializing. \nWhat it does\nPRJT is a tool that helps finding people in professional manner.\n\nYou can sign up with your skillset, and create a project. Add the talents you need to get your project going. PRJT will broadcast your project to people who have the talents you need. \nWhile people sign up, add some ideas to TODO list and add some due dates to the calendar.\nWhen people join, say hi to them using embedded chat * system.\nUpload files and share them with your group *.\n\nNo idea, but you have some urge to do something awesome? No problem.\nPRJT also lets you find projects.\nJust browse DISCOVER tab to:\n\nView recently added projects \nAll projects\nHot projects\nProjects that matches your skill\n\nHow I built it\nThis prototype webapp was built at HackUCI alone using Twitter Bootstrap, Google Material Design, MAMP (Mac OSX, Apache2, MySQL DB, PHP) Stack, CODA2 IDE. \nChallenges I ran into\nSleep Deprived Some fundamental challenges like designing table schema, technical challenges like javascript syntax, and maybe hunger..?\nWhat's next for PRJT\nWithin timeframe, only fundamental functionalities such as \"login\", \"signup\", \"create a project\", \"join project\" have been implemented. It may sound simple (as they only count 4), but they are indeed more than a thousand lines of code with some serious schematic designs for optimized and scalable application.\nI'm planning on taking this further to finish up all the functionalities I have mentioned above, and polish business idea with mentors. I've been asking this idea to random students around my beautiful campus UCSD, and I'm almost certain that students would enjoy this. (Still need some real data like survey, etc)\n",
        "hackathon_id": "prom-nov15",
        "winner": true
    },
    {
        "description": "\nInspiration\nWhen I studied in India, my college was quite far from home (70 miles away). I had to wake up at 5:30 Am to catch a 6:00 am bus that would reach my college campus at 8. I would be sleep deprived at the end of it, inevitably, because i didn't know when to wake up and mostly woe up too early or too late. So I thought of designing an APP that would alert me when I was , say, 2 miles from college rather than when I was 15 minutes away from college or at 7:45 AM. (Maximizing my sleep :P). Also, I thought of how this could be useful for people new to a place and are using public transport (they will be alerted when and where to get off) and for drivers going on long drives with the car is on cruise control. They won't overshoot their location when alerted within the correct range. Overall, it seemed like a problem that could be addressed efficiently by my simple solution - A location based alarm.\nWhat it does\nGPSBUZZ provides location based alarms for all modes of transport (Driving, Transit, Walking and Bicycling). It suggests multiple routes and allows the user to choose the route and add the location where he/she wants to be alerted, the range within which they would want to be alerted and any reminders they would want to have.\nHow I built it\nI have developed a couple of Apps on the android platform and found it to be the easiest platform to implement my idea. I have used the Google maps API as well.\nChallenges I ran into\nMaking the response time quick (especially when in a poor connectivity area)\nmaking sure reverse geo coding (gps coordinates to addresses) maps correctly\ntesting and establishing lower and upper bounds for the alarm range\ntesting alarm sensitivity in real life by using it myself in day to day commutes.\nAccomplishments that I'm proud of\nThe alarm is fairly accurate. Beta testing has been positive and I am proud that what started as a small question now has an answer - an answer, which, if developed better, can be a game changer. (Also happy that now I can sleep a bit longer while travelling :P )\nWhat I learned\nI learnt many different android hacks and how crucial responsiveness and low battery consumption are important to any APP, especially one working on location tracking.\nWhat's next for GPSBUZZ\nI will be releasing it on the Google Play platform shortly, after few tweaks. I am considering making a standalone version for public transportation which will have a on-phone database of the locations and doesn't depend extensively on the use of mobile internet and can work even in regions of poor network strength. This would be suitable for countries like India, where the network coverage is quite poor and mobile internet is quite slow.\nI am sharing a screen recording of the APP and a google drive location of the APK file. Please download the apk, install on any android device and see it work. for the sake of the demo, I had set the alarm close to my home in the screen recording (so that it would alert me immediately).\n",
        "hackathon_id": "prom-nov15",
        "winner": false
    },
    {
        "description": "\nThe Story of a Data Evangelist\nOpportunity is Found in Chaos\nAmidst the perpetual strife and intermittent friction of two schools in SD\n\nA nationally high-ranking research institute, where prestige and tenure positions are continually coveted. Even at the expense of an undergraduate educational focus, or so it may feel at times\nThe ever ambitious and underdog rival, eager to find certain human resource talents from its more established neighbors, yet seemingly reserving most of the credit alone\n\nand caught in-between, one young boy found love in Data Science\n\nart by CocoMilla - find on Etsy!\nSeeds of Change\n\nHow long will convoluted bureaucracy and policy keep undergraduate students from learning a worthy Data Science education they deserve?\nWhy didn't one of the first Datathons even take place in the city's acclaimed flagship research university - a place where some students would loyally call homebase, or more affectionately their very own alma mater?\nWhere exactly can knowledge-thirsty students seek their rightful undergraduate Data Science program?\n\nQUESTIONS DEMAND AN ANSWER\nCuriously enough, it lies in you\nYes, You\nThe power of Data Science is in your hands. It has been said \"The worst decision is indecision,\" so stop hesitating, relying on the proverbial system to supply you with your healthy desire, curiosity, and passion for data. From this day on you are in command, front-and-center, of your respective Data Science education\n\nphoto by CheetahLearning\nData Science Student Society at UCSD\nA History We're Proud of, and the Community that Binds Us\nThe Society's foundation started up from a question: What does it mean to be a Data Scientist? While there has always existed an interest in this field among UCSD students, a few brave souls dared to investigate deeper\nNow, with the advent of 3 never-before offered Data Science courses across a trifecta of renown departments - Cognitive Science, Mathematics, Computer Science - and one unifying student organization numbering at nearly ONE THOUSAND general members strong that has already successfully claimed 5 competitions\n\nThe Mathematical Contest in Modeling\nData Science FunConference\nBig Pixel Hackathon\nYelp Dataset Challenge\nTeradata Hackathon\n\nwithin the unbelievable timespan of merely a single year alone, the Data Science community at UCSD is unleashing the monolithic might of analytics and actionable insights to secure its position as a top institution and leader in Data Analysis at a global scale\nTeamwork: the Data Scientific Spirit of the 21st Century\nThe ever-knowing wisdom as spoken by the very words of the Data Scientist's co-coiner himself, one of UCSD's greatest and finest alumni who has been heard across our nation under God\n\nData science is a team sport, and we can't do this without you... We really need your help\n\nDr. DJ Patil\nFirst Chief Data Scientist of the White House, of the U.S. Office of Science and Technology Policy\nWe Need You - Will You Join Us?\n\nMirror by CountryByTheBumpkins - find on Etsy \n",
        "hackathon_id": "prom-nov15",
        "winner": false
    },
    {
        "description": "\nInspiration\nI often sell my UCSD books for the quarter through the Facebook group Textbook Exchange and it had been extremely difficult to sell or even buy a book using that platform. You constantly have to check and keep scrolling down to find the book you want to buy, and then on top of that, you have to message that message not guaranteeing if that book has already been bought or not. Hence, I created Acebooks that makes buying and selling books much faster and efficiently. \nHow it works\nYour profile is linked through Facebook, therefore minimizing fishy or phony interaction between people who may not want to really sell or buy anything. In order to sell your book, all you have to do is scan it and enter the price. You do not have to enter the name of the book, the course number, or the isbn. And in order to buy a book, you just enter the number of the course number and the app pulls all the relevant books that are in the database. A buyer can discreetly make a offer without letting everyone know what their offer is; this solves the issues of privacy where the seller doesn't want an offer to effect their end sale of their book. The app's goal is to make the user do as less things in order to buy/sell a book. When a buyer has brought the book, both the seller and the buyer can contact each other.\nChallenges I ran into\nThe design of the app is very critical to how the user feels about using the app, hence I tried various designs of the app to figure out which one makes the most sense how the user would want to navigate it. The efficiency of the app is also one challenge I had to sort because the app utilizes the user's profile data very minimally so it doesn't make sense to pull up the data overtime the transaction needs to be made. Thus, I decided to have a local database and a remote database that the app connects. Local pulls data that needs to be used frequently and remote data pulls is pulled whenever a book is searched for. \nAccomplishments that I'm proud of\nI am proud that I was able to aggregate all of the information and successfully create this app. The app utilizes a lot of diverse material such as web scraping using python and Parse cloud API to bring to the user the most efficacious experience.\nWhat I learned\nI learned how to work with the cloud and handle it different from how a developer would treat a database. Most of the heavy duty things in the app are sent to the cloud to computer so that the user has all the data in few seconds after they request for it. I also realized that this app can be a powerful tool for the students to buy/sell things. It is the most simplest way I believe there is out currently. It involves crowdsourcing because as a lot of students start utilizing this platform, we will have a hub of promising buyers and sellers where one is dependent on the other to provide the services. We can incorporate buying of Amazon books right into the app late in the versions so that the user doesn't leave the app. \nWhat's next for Acebooks\nI would like increase the compute time for Acebooks, listen to user feedback and continue to update the app according to user experience and requests. \n",
        "hackathon_id": "prom-nov15",
        "winner": false
    },
    {
        "description": "\nInspiration\nWhat it does\nHow I built it\nChallenges I ran into\nAccomplishments that I'm proud of\nWhat I learned\nWhat's next for Guerilla Computer Cluster\n",
        "hackathon_id": "hacknjit",
        "winner": false
    },
    {
        "description": "\nInspiration\nMy friends and I love to hang out at night. With so many options it can be difficult to decide where to go eat dinner.\nWhat it does\nIt finds all of the restaurants with in a fixed distance from you, and it randomly selects one of them. The app will mark the restaurant and display information such as address, name, ratings, and whether or not its open.\nHow I built it\nI used geolocation api to find the location of the user. That data was passed off to the google maps api. I developed a query that consisted or the type of establishment that I wanted to request, as well as the range in which to search for the restaurant.\nI used javascript for a bulk of the computing. CSS was used to format certain elements. and HTML was used sparingly to make sure that all of the pieces worked together.\nChallenges I ran into\nSince I am not experienced in JavaScript (I learned it on friday night), I ran into problems that people with more experience would not have. I had issues with global variables getting erased, I had problems with variables not getting recognized. This was also my first time working with an API. So I did not know how to use it. I had to learn about the API on the fly. This slowed me down considerably. Some of the syntax was difficult to understand since it was relatively advanced, so it took a lot of time to decipher what all of the forums and articles where trying to teach.\nAccomplishments that I'm proud of\nDespite all of the frustration, I managed to keep a level head and figured out how APIs worked and how to use java script. I am proud of the fact that I did this project without a team. This is my first semester of being in a computer science student. That decision was more reassuring now that I know that I have what it takes to surmount obstacles and challenges. his was the first significant development project that I have undertaken, and I feel like I did a really good job.\nWhat I learned\nI learned about APIs, I learned about JavaScript. I also learned a lot about the development process. I learned about the whole development process. I learned about planning out a system, and how to research what tools would be the most helpful in building that system. I also learned about how different languages interpret  code differently. The logic that would be valid in one language, isn't alway valid in another. (This was another problem that I ran into working with JavaScript)\nWhat's next for Munchie's Map\nThe next step for Munchie's Map is to allow users to enter address or gps locations and suggest restaurants. Munchie's Map should also expect an update that will allow user to select option such as type of cuisine, range, and price point.\n",
        "hackathon_id": "hacknjit",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavac++jsondolphin-emulator\n",
        "hackathon_id": "hacknjit",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe want to help students find it easier to connect with students online, form study groups, and study together.\nWhat it does\nStudyBuddy helps students form study groups, find study groups near them by location, discuss questions and answers, share files, and study together. Upon creation of a new group, a unique online HipChat customized for enhancing the study experience, is created for that group. Users can search for groups as well.\nHow I built it\nStudyBuddy is built on HTML5, CSS, JavaScript, with Node.JS, PHP, MongoDB, and MySQL on the backend integrating with Google Maps APIS for location and maps and HipChat APIs for customization of HipChat chat rooms. \nChallenges I ran into\nDevelopment went rather smoothly and our biggest challenge was actually catching little bugs and handling transitions smoothly when we moved between programming languages or platforms. But that we learned to fix well.\nAccomplishments that I'm proud of\nMaking this app was a lot of fun and an enriching experience and I'm really proud that we made this together.\nWhat I learned\nWe honed our technology skills, learnt new technology tools and tricks, and enhanced our ability to work well as a team.\nAwards\nStudyBuddy is the winner of the Best Use of HipChat API from Addteq!\nWhat's next for StudyBuddy\nWe'd like to add more features and make the app scalable.\n",
        "hackathon_id": "hacknjit",
        "winner": false
    },
    {
        "description": "\nInspiration\nDo I look like I know what a JPEG is? https://www.youtube.com/watch?v=QEzhxP-pdos\nWhat it does\nAs you run, it taps into your accelerometer and calculates your current velocity. It then classifies it into 1 of 4 categories and plays no audio if you're going too slow, really awful quality audio if you're going slightly faster, a kinda crappy quality version if you're going at an okay speed, and full quality if you're going at your best speed.\nHow I built it\nWe used Xamarin to build an Android app that leverages its accelerometer readings and native audio playback capabilities. We built it using C# and NAudio with our signal processing going through Mathematica on an AWS server where the audio is stored and retrieved.\nChallenges I ran into\nOur Android Emulator didn't work. It was awful. So we had to recreate it as a Windows application, but the code is nearly 100% portable since shit's native.\nWhat I learned\nI now know what a JPEG is.\nWhat's next for CardiAudio\nTesting and making the app work, but only if we're not lazy (Spoiler: we're lazy).\n",
        "hackathon_id": "hacknjit",
        "winner": false
    },
    {
        "description": "\nI wanted to read manga more easily and also support creators.\n",
        "hackathon_id": "hacknjit",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroidjava\n",
        "hackathon_id": "hacknjit",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaandroidparsecloudgoogle-maps\n",
        "hackathon_id": "hacknjit",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtml5cssbootstrap\n",
        "hackathon_id": "hacknjit",
        "winner": false
    },
    {
        "description": "\nBuilt With\nnode.js\n",
        "hackathon_id": "hacknjit",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhipchatandroid-studiojavanetflix\n",
        "hackathon_id": "hacknjit",
        "winner": false
    },
    {
        "description": "\nBuilt With\nnode.jswebtorrentangular.jsbootstrap\n",
        "hackathon_id": "hacknjit",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptlinodemysqlhtml5\n",
        "hackathon_id": "hacknjit",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe wanted to know how a system like Linode's Longview monitor works - so we made our own.\nWhat it does\nThe server daemon records load statistics at an interval into a local MongoDB to be picked up by the web client, which displays them graphically.\nHow We built it\nWe began using the source code for Linode's Longview as a guide, and implemented a simpler version that records CPU and memory in real time with minimal host impact.\nChallenges We ran into\nLearning systemd, Angular, and getting the client-server architecture working without being able to test locally.\nAccomplishments that We're proud of\nThe realtime updating of data from the server is quite satisfying\nWhat We learned\nA lot of work goes into tools like this, and realtime is harder than it can seem.\nWhat's next for ShortView\nCollecting more data, application-specific data, and providing more granular/historical data retrieval.\n",
        "hackathon_id": "hacknjit",
        "winner": false
    },
    {
        "description": "\nInspiration\nI took a shower at 11AM, and was thinking about some things.\nHow I built it\nUsing a custom-built javascript engine.\nChallenges I ran into\nWhat kind of game I wanted to make.\nAccomplishments that I'm proud of\nI made a game just using javascript :D\nWhat I learned\nStick to an idea from the start.\nWhat's next for The Cycle\nMaking it have actual choices.\n",
        "hackathon_id": "hacknjit",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaxmlandroid-studio\n",
        "hackathon_id": "hacknjit",
        "winner": false
    },
    {
        "description": "\nBuilt With\nstack-exchangestack-overflowphpjavascript\n",
        "hackathon_id": "hacknjit",
        "winner": false
    },
    {
        "description": "\nInspiration - Need to hangout with nearby friends\nWhat it does - Finds nearby available Facebook friends\nHow I built it - In a hackathon in 24 hours\nChallenges I ran into - Used APIs and Parse for the first time\nAccomplishments that I'm proud of - Shows all the friends' location in the map, and hopeful of adding features like chatting with them in near future\nWhat I learned - APIs are not that difficult to use after all\nWhat's next for Find Buddy - Only gets better!\n",
        "hackathon_id": "hacknjit",
        "winner": false
    },
    {
        "description": "\nOur inspiration\nCasinos\nWhat it does\nPlays the game (supposed to)\nHow we built it\nWith Java in Eclipse\nWhat we learned\nHow to think at a Hackathon\nWhat's next for Blackjack\nMore work\n",
        "hackathon_id": "hacknjit",
        "winner": false
    },
    {
        "description": "\nBuilt With\nphpmysqlhtml5jqueryjavascript\n",
        "hackathon_id": "hacknjit",
        "winner": false
    },
    {
        "description": "\nBuilt With\njava\n",
        "hackathon_id": "hacknjit",
        "winner": false
    },
    {
        "description": "\nBuilt With\noculus-gear-vrleap-motionunity\n",
        "hackathon_id": "hacknjit",
        "winner": false
    },
    {
        "description": "\nBuilt With\noculus-gear-vrleap-motion\n",
        "hackathon_id": "hacknjit",
        "winner": false
    },
    {
        "description": "\nInspiration\nCommunication has always been a part of everyones' lives, no matter who you are, or where you come from. However, even in the year 2015, we still have an extremely difficult time communicating with the rest of the world. This app was inspired by the desire to be able to communicate with people who we might otherwise find impossible to communicate with. \nWhat it does\nHello-World is a mobile application that detects your speech and displays subtitles over a live stream. The app opens up to a live video stream and will detects when someone is speaking. As soon as it detects speech, it translates that speech to the subtitles in the language of your choice. In addition, we used sentiment analysis on the content of the speech to determine whether the speech was positive, negative, or neutral. \nHow we built it\nWe built it using Android Studio and Microsoft Translator libraries to build the android app and translation functionality. We utilized Indico API's for the sentiment analysis.\nChallenges we ran into\nOne big challenge we ran into was getting the translation to work. After we had gotten the speech recognition, we needed to translate that data into the desired language, but doing so proved difficult because of the complexity of various API's we've tried to use. We did eventually find a solution with a library based on Microsoft Bing Translator.\nAlso, we could only implement speech recognition of English, and not other languages.\nAccomplishments that we are proud of\nAfter having four people work more hours than I can count on the same problem, we found a solution to translating the speech. \nWhat we learned\nWe learned about how to send HTTP GET requests from android, various Android development, how to use Indico API's, and how difficult some API's can be to use.\nWhat's next for Hello-World\n-Support for detection of more languages\n-Support for displaying more language-subtitles\n-Continuous detection of speech.\n-Creating this app on other platforms- Oculus, AR, etc.\n",
        "hackathon_id": "hackholyoke-2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nOne of the team members had become really ill due to really bad food allergies to Mustard seeds that he was not really aware of at the time. Since he had to be rushed to the emergency room teammate Kyle had to sit with a UMass dietitian and she just went through a list of the meals for the weak and listed off what he could and could not eat. It came to Kyle that very day that instead of people having to deal with this problem, they should get the information sent directly to them and filed into their inbox on a daily basis. This is all done with no blockage on the the part of the email client. \nWhat it does\nSends a daily digest of all the possible foods the user can safely eat given their proposed allergens. \nHow I built it\nWe used several web scrapers to get the ingredients and food data from the respective schools. Then we used spring to abstract the process for our database and we wrote programs to make sure that the email digest is sent directly to the user's inbox and not in their spam folder. We then spent time building the interactive UI portal for user Registration and modification of their preferences. \nChallenges I ran into\nWe had issues building the scripts to deal with email, since email is very wonky. Also, scraping the data was either very fast or very slow at times. One of our biggest issues was dealing with the dependencies and we had messy time with handling the work for the UI from the back-end when in hindsight in would have been better to handle everything on the client side, which we eventually did.\nAccomplishments that I'm proud of\nAs a team we cam together and changed what looked like would be a mess, into a tangible product that we ourselves would even use, this is a really exciting experience\nWhat I learned\nI learned a lot about the necessity of scraping data for application purposes as well as the differences between various forms of programming the back-end. I personally am a Javascript - node.js guy so my teammates really taught me a lot throughout the working stages of the project.\nWhat's next for Nectr\nNectr can be scaled not only to the Five Colleges, but also to campuses across the nation\nIf Nectr can keep even one person out of the ER, we believe that we will have accomplished something meaningful\n",
        "hackathon_id": "hackholyoke-2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nThrough other hackathons, I've thought of using AI to efficiently scheduling massive computing jobs for cloud computing services. Figured it would be nice to start simple with an easy scheduling Java application!\nWhat it does\nIt will take the times you are available to work and a list of jobs to complete, and it will generate a schedule optimized for minimal lateness. Based off your real time completions for assignments, it better predicts how long later assignments will take!\nHow I built it\nUsing standard greedy algorithms for the scheduling and java.swing for the graphics, we had all resources available to fully develop this java app.\nChallenges I ran into\nConnecting the front end user interface with the back end scheduling. This required a lot of effort to get communication going.\nAccomplishments that I'm proud of\nOur mix of experience has allowed for great teamwork and has made this project considerably enjoyable to work on!\nWhat I learned\nA LOT of Java graphics.\nWhat's next for Cuckoo\nMake it more intelligent with scheduling, allowing for different scheduling options ranging from minimal lateness to weighted importance of assignments. There is also more to expand on the user interface and provide analytics for rates of completion. \n",
        "hackathon_id": "hackholyoke-2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\narduinoparticle\n",
        "hackathon_id": "hackholyoke-2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nmbed\n",
        "hackathon_id": "hackholyoke-2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe were inspired by the hardware available and the opportunity to use microcontrollers and LED's, such as Spark Core.\nWhat it does\nThe O watch stylishly keeps track of time using three different LED colors, with a blue second hand, a green minute hand, and a white hour hand. The watch is attached to the user's wrist for ease and comfort of use.\nHow we built it\nWe used a 5V power supply to power the Spark Core. We then coded the LED's using C++. This involved importing the neopixel library, and syncing the watch to real-time as well as creating a delay between groups of LED's, with each group representing a different number on a traditional watch.\nChallenges we ran into\nWe were challenged by importing particle libraries and figuring out how to control hardware using microcontrollers, such as in our original idea, which involved a Grove 3-axis accelerometer. Because we were less familiar with the exact specifications of Spark Core, using this hardware was a challenge as well.\nAccomplishments that we're proud of\nWe're proud that we were successfully able to use Spark Core to communicate between our software and hardware. We're also proud that we were able to successfully overcome significant errors and work as a team to debug code and work to everyone's skill sets.\nWhat we learned\nWe learned how to coordinate and build a project as a team, as well as important coding skills, such as coordinating hardware and software using a microcontroller.\nWhat's next for O Watch\nIt will be able to calculate how correct your posture is at any given time using an accelerometer.\n",
        "hackathon_id": "hackholyoke-2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nobjective-c\n",
        "hackathon_id": "hackholyoke-2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\njquerycsshtml5\n",
        "hackathon_id": "hackholyoke-2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\npythonindicoflaskjquery\n",
        "hackathon_id": "hackholyoke-2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nAll three of our team members met at the Unity workshop earlier on Friday at the start of HackHolyoke. None of us had any experience in using Unity, and the Google Cardboard integration with Unity seemed really cool. We decided it'd be awesome to try and recreate an \"Escape the Room\" type of game that implemented the augmented reality capabilities using the Andriod phone camera\nWhat it does\nFind a bat!\nHow I built it\nWe used Unity and the Andriod SDK packages along with assets from the Unity store\nChallenges I ran into\nPointing and clicking using Raycasts and deltatime ALMOST worked\nAccomplishments that I'm proud of\nThere's no augmented reality or room... but it ended up being a more reasonable task for us to get some sort of product up and running on an Andriod device within 24 hours and learn a lot about how powerful Unity can be for game development.\nWhat's next for Find the Bat!\nWe'll find the bat a home by making it a room...\n",
        "hackathon_id": "hackholyoke-2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nandroidnode.jsmongodb\n",
        "hackathon_id": "hackholyoke-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\n285 million people are estimated to be visually impaired worldwide, we saw this need gap in our society and would like to create something to improve people's life.\nWhat it does\nBlind Alert has three main functions so far.\n\nDetects temperature. If the user would like to touch objects in the world, but is afraid to touch something hot, the user can use our tool to test its environment first.\n\nHow I built it\nWe build the simple app interface using Ionic platform and worked with XDK from Intel.\nChallenges I ran into\nUnfortunately, although we were able to build each component, we were not able to combine everything together.\nAccomplishments that I'm proud of\nWhat I learned\nWhat's next for Blind Alert\n",
        "hackathon_id": "hackholyoke-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaazurenatural-language-processingmachine-learningindicotwittermicrosoftsentiment-analysis-online\n",
        "hackathon_id": "hackholyoke-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe were all in one of our most stressful semesters, flying in and out constantly in between school assignments and major cramming for technical interviews. One of the biggest pains was having to carry around heavy books or always have 50 tabs open for practicing our programming skills. What if we had a super simple and straightforward app for easy interview prep? So easy that you could practice your coding skills in line for coffee, waiting for your airplane, or even minutes before you step into that interview room. Thus HacklineBling was born. \n(~~Shout-out to Drake for the name inspiration~~)\nWhat it does\nHacklineBling will generate a programming question based on your preferences such as \"Anything,\" \"Arrays,\" \"LinkedList,\" etc. Then, the user will type in their pseudocode and/or hardcode into the app. After the she's done, HacklineBling displays the answer next to your own answer, allowing her to easily compare and learn!\nHow I built it\nRetrieved sample questions and answers online\nStored them into a hashtable (Java)\nAndroidStudio to create the front-end of the app\nChallenges I ran into\nFiguring out how to use the hashtable\nTranslating questions online into Java-friendly format\nAccomplishments that I'm proud of\nLearning how to use AndroidStudio\nWhat I learned\nAndroidStudio \nWhat's next for HacklineBling\nIn the future, HacklineBling will be able to update the user's progress, give suggestions, offer hints and additional complexity questions, and hopefully one day accurately analyze the user's answer.\nPossible \"Premium\" option that offers access to a much larger database of coding questions\n",
        "hackathon_id": "hackholyoke-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nHalloween\nWhat it does\nThe user has to use the mouse and arrow keys to move the character around. The goal is collect as much candy one can get before the zombies can attack and kill.\nHow I built it\nWe built it through Unity and Javascript.\nChallenges I ran into\nWe wanted to add sound when the candy is hit by the user\npart of the zombie would be in the wall, all disembodied \nAccomplishments that I'm proud of\nWe got the zombie to follow the user\nMaking the game feel creepy\nWhat I learned\nHow to use the Unity API\nAnd the first person motion\nHow to make things move\nAs newbies, we learned that we can do anything that we set our minds to\nWhat's next for Candy Hunt\nAdd power ups like cars and plants, where the plants would give life and the car would give the user speed. \n",
        "hackathon_id": "hackholyoke-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtmlcssbootstrapsocket.ionode.jsexpress.jsleap-motion\n",
        "hackathon_id": "hackholyoke-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWhat it does\nHow I built it\nChallenges I ran into\nAccomplishments that I'm proud of\nWhat I learned\nWhat's next for HouseOfKards\nCOMING SOON\n",
        "hackathon_id": "hackholyoke-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nOur goal was to build something awesome and learn about cool new APIs!\nWhat it does\nOur web app, Sentinmental.ly, shows a histogram of all posts in a certain page with a sentiment value between -1 and 1. \nHow I built it\nWe used Facebook's Graph API to collect public posts from Facebook pages. We then used the indico api and d3 to analyze and visualize the positivity in the different posts on a page. \nWhat's next for Sentimental.ly\nAggregating the sentiment in the comments in each post, as well as incorporating Facebook's search plugin.\n",
        "hackathon_id": "hackholyoke-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonarduinohtml\n",
        "hackathon_id": "hackholyoke-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\narduinoledssensor-sheild\n",
        "hackathon_id": "hackholyoke-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nunityjavascript\n",
        "hackathon_id": "hackholyoke-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nThis project sparked from a real-world problem from a college campus. The initial goal for the project was to create a simple, electronic app that could track college bikes.\nWhat it does\nGoBike allows you to see available, unavailable, and broken bikes on a college campus. Users can check in/out bikes, reserve bikes, and report broken bikes.\nHow I built it\nHTML and CSS were written from scratch using Sublime Text. Graphics were created using GIMP and the Noun Project. Javascript was then implemented into the HTML.\nChallenges I ran into\nThe team had a background in front-end developing but not back-end development. They discussed the use of database using Parse, Java, or PHP. The team then decided to learn and use Javascript for simplicity.\nAccomplishments that I'm proud of\nEveryone learned Javascript!\nWhat's next for GoBike\nTransforming it into a template which services and events can use to organize large quantities of hardware.\n",
        "hackathon_id": "hackholyoke-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythond3.jshtmljavaswingtkinterjsoncsv\n",
        "hackathon_id": "hackholyoke-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nevercamstripe\n",
        "hackathon_id": "photohackday",
        "winner": false
    },
    {
        "description": "\nInspiration\nUgly security cam photos and the urge to learn photo editing.\nWhat it does\nIt takes photos from evercam registered  cameras, which are not setup to make pretty photos. And your task is to edit the photo with the adobe creative sdk, so that the resulting photo has an higher aestheticsScore (via EyeEm Vision) than the original. Try to push boundaries and learn image editing while doing so. \nHow I built it\ntyping keys on my keyboard ;)\n  plain html with some jquery using evercam, adobe creative sdk and EyeEm Vision\nChallenges I ran into\nTime\n  using eyeem vision api with javascript and remote images\nAccomplishments that I'm proud of\nIt works, even having only less then the half of the time for it. :)\n  I used javascript for it.\nWhat I learned\nTry harder and rest\nWhat's next for TryYourBest\nmake it stable and pretty.\n",
        "hackathon_id": "photohackday",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavajavascriptbashpython\n",
        "hackathon_id": "photohackday",
        "winner": false
    },
    {
        "description": "\nsome data\n",
        "hackathon_id": "photohackday",
        "winner": false
    },
    {
        "description": "\nInspiration\nI was developing my side project called fotofall for quite some time and published it two weeks ago. It's basically a TweetDeck for images but it wasn't anything more than just a more complex pictures aggregator. PhotoHackDay4 presented itself as an opportunity to hack in an upload functionality and also to try reimagine what it could be.\nWhat it does\nThe upload photo feature provides you with \"Sparrow\" like approach to composing your edits. On your left side you'll have a pane with an overview of all you drafts (sent/scheduled etc). Right pane will give you all the details. The killer feature is \"COMPARE\" option, where you can iterate over your edits with the power of Aviary & EyeVision combined. Each edit gets its own aesthetics score and the best scored edit will get uploaded to EyeEm.\nHow I built it\nI used mjolnir library for networking, potato for dynamic, persistent & observable storage. Communicated EyeEm's vision for the image recognition & scores. Aviary provided the editing suite. Rest was just a matter of translating ideas to the working code.\nChallenges I ran into\nI've spent 6 hours trying to fruitlessly integrate 50 MB of Creative SDK with my App. Apk size increased from 5MB to 55 MB - it would compile but it would not run due to some linkage error. In the end I avoided putting the whole SDK with a sneaky 4 line intent call. Still loving the Aviary product though :*\nAccomplishments that I'm proud of\nTrying out edits and getting instantly scored teaches you what to do and what not to. Some results might really be surprising. It's a machine deep learning from humans and then teaching other humans!\nWhat I learned\nDon't sleep. Sleep is for the weak.\nWhat's next for fotofall-upload\nYou can see the SADTROLL tabs, no?\n",
        "hackathon_id": "photohackday",
        "winner": false
    },
    {
        "description": "\nWhy\nWe like pictures and we like music and our pictures and music say something about ourselves, which we often want to share with our friends. What better way to share feelings with our friends than to share our pictures and music...\nHow\nWe were quite excited about the possibilities that open up when we can connect our music and our pictures. If a picture is worth a thousand words, how much then a picture with a soundtrack! Seeing how we might be able to have an easy way to have the mood and atmospehere from a picture extracted and then put into music, we had to think about how awesome it would be to share this with people we care about.\nThis is how Moodifi was born. It allows us to either take a picture when we feel like it, or select one that we already have, have it analysed and have a playlist suggestion created for us, which we can then share.\nWhat now\nWe are now exploring the viability and the limits (or the limitlessness) of this idea and turn this into something that we love to use - and which others will love to use.\n",
        "hackathon_id": "photohackday",
        "winner": false
    },
    {
        "description": "\nBuilt With\nlovesweatunityeyeem-apigoogle-cardboard\n",
        "hackathon_id": "photohackday",
        "winner": false
    },
    {
        "description": "\nAndroid prototype version available (see download link below)\nInspiration\nNovember 13th, local crime, board games, video games.\nWhat it does\nMakes people share their knowledge of their area and document the area's \"weaknesses\" or \"hacks\" via photo.\nThe photos will be shared publicly, stripped of location information (blurring identifiable signs and landmarks), providing examples of unsafe or crime-attractive locations and situations.\nThe Berlin Polizei clearly prefers disclosure over obscurity when it comes to showing what to watch out for. I'm all in for demystification.\nHow I built it\nUsing what I use for gamedev prototyping: the open source L\u00d6VE 2D game engine.\nChallenges I ran into\nFirst I wanted it to contain actual crime data like type of crime, mugshots/phantom drawings of suspects, description. Then I got sick and anxious just summarizing actual police reports and putting them in a list.\nAccomplishments that I'm proud of\nKeeping it simple after all.\nWhat I learned\nYet again, I learned to downshift a little more.\nWhat's next for FAHNDR\nAlpha-testing.\n",
        "hackathon_id": "photohackday",
        "winner": false
    },
    {
        "description": "\nInspiration\n\nI wanted to remove distraction of taking selfies from the precious travel experience.\nI wanted to change photo documentation from fake and posed to candid and genuine\nI wanted to provide photographers with subjects to photograph without a hassle of complicated arrangements.\nI wanted to offer unique experience of re-living the event from the 3rd person perspective.\nI was inspired by evercam's idea of passive observer and EyeEm's creative community.\n\nWhat it does\n'Photoopp App' provides opportunity for pro- and mid-level photographers to connect with people who want to have a photo taken while they enjoy the place and moment they are in. Photos produced by Photoopp are truly unique as they are mostly candid, always genuine as opposed to selfies.\nApp enables subjects of photographs to relive the events from 3rd person perspective. Infrastructure ensures that subjects are photographed only in designated places and at specified time.\nApp also provides very convenient way for photographers to sell their work. Directly via Stripe or indirectly via EyeEm Marketplace. Transfer of ownership is done using ascribe's IP transfers using blockchain.\nSubjects (models) can set permanent landmarks and and engage with photographer some time in the future. They don't need to limit themselves to specific timeframe. Same thing with photographers. They might just act on the notification about someone near by, pull out the phone and shoot.   \nTRY IT OUT: https://invis.io/WH53WHRU5 **\n**SEE MAKING OF VIDEO: https://youtu.be/68ZevWWa3hw\nHow I built it\nI used Sketch to design it and inVision to assemble as a clickable prototype.\nChallenges I ran into\nIt was important to ensure that the subject (model) is not being distracted by the messages from the photographer. I also wanted to make sure that Photoopp will not turn in to 'Tinder'. Therefore I limited all communication to the minimum. I also ensured that subject will not be stoked by the photographer. \nAccomplishments that I'm proud of\n-Privacy control and integration with Evercam thanks to which subject will get visual record even if there were no photographers available.\n-I also like the fact that buyer gets legit Proof of Authenticity recorded on the Blockchain (thanks to ascribe). Not just a photo.\nWhat I learned\n\nI have learned a lot about APIs and how they can co-exist.\nIt was great to create within 24h boundaries. Organise myself to get it all done within this limit. \n\nWhat's next for Photoopp\n\nI would like to enable the 'game mode' which would turn the platform to world-wide hide and seek experience.\nWebapp. Photographers will be able to create public galleries and upload photos they already have and match them up with subjects on them. Webapp will also enable DSLRs.\nI would like to introduce additional modes of arranged photoshoots as opposed to candid photos idea.\n\n",
        "hackathon_id": "photohackday",
        "winner": false
    },
    {
        "description": "\nInspiration\nmy need for a stylish tablet bag\nWhat it does\nMost people either don't like to take pictures with a tablet or don't like the people taking pictures with a tablet. I actually do like to take photos and shoot videos with my tablet, an iPad mini 2 to be precise.\nHere a some of my personal requirements:\n-water resistant\n-padded\n-cable management\n-power bank \n-wireless backup hdd\n-apple watch charger\n-add on lenses\n-supports a water bottle\nDesignt as a fanny pack with robust material.\nHow I built it\nwith Crumpler Challenges\nChallenges I ran into\nnothing\nAccomplishments that I'm proud of\nto specify the requirements\nWhat I learned\nI need a bigger bag.\nWhat's next for The Photo Tablet Bag\nprototyping the bag\n",
        "hackathon_id": "photohackday",
        "winner": false
    },
    {
        "description": "\nInspiration\nThere are so many images taken with any kind of devices including IP cameras and Narrative clips, but none of them are searchable.\nWhat it does\nThe BigBrother-hood brings the concept of being able to discover content produced by all these monitoring and logging devices.\nHow I built it\nUsing PHP scripts for indexing the Evercam.io and the Narrative APIs, then tagging with the Imagga and EyeVision APIs and finally processing the tags, generating tag-clouds and search boxes and visualizing the results in Imagga Norris.\nChallenges I ran into\nTimeouts and empty responses with some of the APIs.\nAccomplishments that I'm proud of\n\nIndexing a lot of data (~1000 cameras and ~5000 narrative frames)\nTagging using Imagga and Eyeem\nTag cloud generation using Wordcloud2.js\nFunny homepage design and brand\nBeing an all-nighter\n\nWhat I learned\nUsing new APIs\nWhat's next for BigBrother-hood\n\nContinuous indexing\nNotifications subscription\nDeeper linking in the Narrative web app\n\n",
        "hackathon_id": "photohackday",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavapythonjavascripthtml5\n",
        "hackathon_id": "photohackday",
        "winner": false
    },
    {
        "description": "\nBuilt With\nruby-on-rails\n",
        "hackathon_id": "photohackday",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe were curious to see what EyeEm's machine learning thought was beautiful and ugly so we wanted to prod the API til we found out\nWhat it does\nUsers with passwordless membership upload photos from their phone or their computer to the site. we store the photo on amazon and then check eyeem's aesthetic rating and rank the photos accordingly.\nHow I built it\nWe split into front end and backend. backend uses cakephp for rapid prototyping and easy launch. front end uses  javascript and sass\nChallenges I ran into\nrenaming files during upload to amazon was a larger problem than we thought it would be. we ended up having to save the file to our server temporarily under a desired name and then moving it to amazon.\nAccomplishments that I'm proud of\nbeing able to use the camera directly in a web app\nWhat I learned\nhow easy it was to use a remote db on local development\nWhat's next for float.photo\nwe're in talks with investors...\n",
        "hackathon_id": "photohackday",
        "winner": false
    },
    {
        "description": "\nIn the early days it was really popular to get the Plastiskop as a souvenir from Holidays. It showed famous landmarks from a city or region in 8 to 16 photos. By clicking you switched through the pictures.\nWe built a digital version of the Plastiskop using Google Cardboard and photos from Eyeem. Klikki is not limited to 16 pictures. You can discover all popular albums or featured photographs.\nFirst you are in a gallery with selected albums. By turning around you can discover them. If you want to explore the pictures of the album you are looking at, just \u201cclick\u201d and you are browsing the photos of that album.\n",
        "hackathon_id": "photohackday",
        "winner": false
    },
    {
        "description": "\nInspiration\nChristmas is right around the corner\nWhat it does\ndonate for people in Need\nHow I built it\nJS\nChallenges I ran into\nAPIs in general\nAccomplishments that I'm proud of\nmost APIs work the way I want\nWhat I learned\nAPIs\nWhat's next for XMSMXR\nparty for a good cause\n",
        "hackathon_id": "photohackday",
        "winner": false
    },
    {
        "description": "\nInspiration\nSomething fun and different\nWhat it does\nWill answer any one of your questions\nHow I built it\nAndroid Studio\nChallenges I ran into\nAccomplishments that I'm proud of\nWriting the app in 4 hours\nWhat I learned\nHow to use a hybrid frame work to push apps onto two platforms \nWhat's next for Gnome Child\nTo rule the world?\n",
        "hackathon_id": "astonhack",
        "winner": false
    },
    {
        "description": "\nInspiration\ncode.org\nRecently i became a code.org volunteer and they have a interesting way of allowing teachers access talented coders and volunteers\nWhat it does\nConnects talented volunteers with teachers\nWhat's next for OpenTeach\nOpenTeach will be run in beta as a technology only service in birmingham and we will aim to provide it overseas to developing countries so that teachers and schools can access talented volunteers or teachers for other subjects like math, science, english etc \n",
        "hackathon_id": "astonhack",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe wanted to make an amazing product, more accessible to people not familiar with it.\nWhat it does\nGraphical representation of data acquired from the majestic api and sourcing it to gather interesting information regarding a user's site.\nHow I built it\nWe used php back-end to collect, store and manage data which we implemented in our web service using JavaScript.\nChallenges I ran into\nWe created our own graphical representations which were time consuming, but provided us with the flexibility that we needed for implementation.\nAccomplishments that I'm proud of\nWe have a program called Stitches that collects screenshots of the linked sites from the url entered, and creates a interesting collage of all the screenshots.\nWhat I learned\nWe learnt cross-platform collaboration which is beneficial to our skill sets and something that we could use for implementation in future hackathons/projects. \nWhat's next for OperationRedBrick\nSleep, but after that we are thinking of expanding the capabilities of our system to reach our vision that we had in the beginning.\n",
        "hackathon_id": "astonhack",
        "winner": false
    },
    {
        "description": "\nMy dad said he wanted an easy way of remembering loved ones after they pass away and a cheeper alturnative to burrying/cremating someone\nit allows custom grave plots for family members to veiw and walk around there graves and other peoples public graves\nwe made it using putty and filezilla \nwe had a great time i learnt alot about making a website\n",
        "hackathon_id": "astonhack",
        "winner": false
    },
    {
        "description": "\nInspiration\nAfter watching a fellow hacker using Pusher for a cool real-time application, it inspired us to create a football game, allowing users to use their smartphones as virtual controllers to control an individual football player.\nWhat it does\nWhen connected to the URL, the system will detect whether you are using a smartphone or a computer to connect to it. If you are connecting using a smartphone, It will redirect you to a \"controller\" page which has a virtual joystick and a \"Kick\" button. The computer will be redirected to the game display where the actual game will be shown as the users control the players with their phones.\nHow I built it\nWe had built the entire system using a mix of JavaScript and css, whilst using the Pusher API. The controller and game scene were built in JavaScript whereas the website layout is in css.\nChallenges I ran into\nWe had problems coming to terms with how to integrate Pusher into our system as it was a completely new API for us to learn. We had all also lost a bit of proficiency when it came to JavaScript, so we had to brush up on our skills!\nAccomplishments that I'm proud of\nAs a whole team, we were able to overcome the daunting Pusher API and made a very impressive game (at least in my opinion ;) ). Also, I and my team had amazing teamwork as we worked to each other's strengths and helped each other out when we could.\nWhat I learned\nI had learned how to use the Pusher API to create a JavaScript game.\nWhat's next for AstonBall\nWho know's what the future holds? ;)\n",
        "hackathon_id": "astonhack",
        "winner": false
    },
    {
        "description": "\nHashtag Trending Internet\nA tool which tries to visualize the dynamic structure of the internet based on trending twitter tags. Using Majestic API and data the tool finds websites related to trending twitter tags and visualize new backlinks added to the site during the trending time frame of the tag.\n",
        "hackathon_id": "astonhack",
        "winner": false
    },
    {
        "description": "\nInspiration\nThought of the pun \"Tweat\" of the word \"Tweet\" and thought of Twitter user data visualisation using an Agar.IO like game environment.\nWhat it does\nPlayers are represented as 'blobs', these blobs have a size proportional to the influence of a Twitter user. When one user tweets another in the game they will being travelling towards them. When a user sends a tweet they grow in size. When a player encapsulated another it gains the others influence.\nHow I built it\nTwitter as a backend, Java as a back/frontend.\nChallenges I ran into\nTwitter API usage limitations, rather obscure bugs.\nAccomplishments that I'm proud of\nGraphics.\nWhat I learned\nThe value of planning and scrum meetings.\nWhat's next for TwEAT\nOpen source on GitHub (as soon as we remove API keys...)\n",
        "hackathon_id": "astonhack",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe were fed up with how slow email clients are at searching through emails, especially when you have thousands in your inbox. There were no alternatives that we are aware of, so we decided to make our own!\nWhat it does\nYou can bring up a command palette to quickly perform functions on your emails. For example, to search for every email that contains the phrase \"twitter\", in the subject, sender, or body, case sensitive or not.\nHow we built it\nSublime Text, Atom, Node.JS, Electron, jQuery, HTML and CSS.\nChallenges we ran into\nIMAP is a right pain. Especially in javascript! Some inboxes still don't even work, and some stop half way through, for some unknown reason that we will fix in the future.\nWhat's next for Email CMD\nAdding multiple accounts, OAuth login, sending emails (no time to add this! :c), draggable panes, etc. \n",
        "hackathon_id": "astonhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\nbottlepythonjavascripthtml5\n",
        "hackathon_id": "astonhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\npython\n",
        "hackathon_id": "astonhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\njava\n",
        "hackathon_id": "astonhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\nc#xna-game-frameworkmajestic-apigoogle-social-graph-api\n",
        "hackathon_id": "astonhack",
        "winner": false
    },
    {
        "description": "\nInspiration:SAfety is the best word to discribe it!\nWhat it does:Shows your location and directions to your custom location where you want to arrive.Also,will send a text message to a phone number when reaching that location.\nHow I built it:Using telerik UI for adapting javascript in a Android app.\nChallenges I ran into:Making my team work...\nAccomplishments that I'm proud of EVERYTHING!\nWhat I learned\nWhat's next for SafeDrive\n",
        "hackathon_id": "astonhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\nd3.jsvis.js\n",
        "hackathon_id": "astonhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaandroid-studio\n",
        "hackathon_id": "astonhack",
        "winner": false
    },
    {
        "description": "\nInspiration\nInspiration came from Cookie clicker game and Severn Trent company itself\nWhat it does\nGamifies user experience, saves money\nHow I built it\nWe have decided not to use Agile since we work next to each other\nChallenges I ran into\nMaking all components work together. \nAccomplishments that I'm proud of\n80 percent of features we planned are working\nWhat I learned\nAlikhan : Angular.Js\nBrandon : He needs sleep\nCallum : Server side on Flask and Python\nWhat's next for Severn Trent\nImproving code, adding features such as deleting adding records etc\n",
        "hackathon_id": "astonhack",
        "winner": false
    },
    {
        "description": "\nInspiration\nWhat it does\nDashboard for customer feedback\nHow I built it\nNode.js, Express.js, MEAN, etc.\n",
        "hackathon_id": "astonhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtml5cssjqueryphpmysqlbootstrap\n",
        "hackathon_id": "astonhack",
        "winner": false
    },
    {
        "description": "\nDropbox link to PowerPoint presentation: https://www.dropbox.com/s/6u7niytw9idh0y6/Aston.ppt?dl=0\n",
        "hackathon_id": "astonhack",
        "winner": false
    },
    {
        "description": "\nInspiration\nWhat it does\nAllows users to submit pictures of potential leaks they identify and earn points for, weekly highscores with prizes.\n",
        "hackathon_id": "astonhack",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe difficulties that there are from building on top of an archaic water system.\nWhat it does\nSurveys the water system by allowing you to analyse the time take for the beacons to reach different points across the network.\nHow I built it\nUsing A mixture of cheap Arduino Hardware and A simple Python API.\nChallenges I ran into\nCommunication between the front-end and back-end system was not possible to achieve in the time frame.\nAccomplishments that I'm proud of\nThe design suits that of Severn Trent water and everything is as simple as possibly can be.\nWhat I learned\nSometimes it is best to drop a lot of useful features in the pursuit of something that works.\nWhat's next for SevernTrentWater\nScaling up and finishing the interface to make the entire system simply work.\n",
        "hackathon_id": "astonhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\nc#unity\n",
        "hackathon_id": "astonhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\nmajesticjavascript\n",
        "hackathon_id": "astonhack",
        "winner": false
    },
    {
        "description": "\nWe were working on the project \"Gamification\", created by \"Severn trent\"\nInspiration\nWe as a team were inspired to come up with an interesting educational and entertaining idea for this so important problem that should be given more attention.\nWhat it does\nIt is a location-based game app. The player will have an office in the centre of the map and some randomly generated leakages will appear in the area. Then the player will have to send their plumbers to fix the problem. There are mainly 3 types of plumbers: normal, quick, efficient. The bigger leakages are be fixed only if you have certain tools. A really important thing to mention is that the player will also be given the opportunity to win big prizes and bonuses in game, whenever they report a real leakages. \nHow I built it\nFor my first time, I was mostly focusing on the front-end. Helped develop the login, options, register, loading forms. My main focus was the user friendly interface to engage people into playing more and more. I enjoyed writing C# in Unity in a really fun way.\nChallenges I ran into\nI ran into challanges mostly in the begining, when I had to watch loads of tutorials about using the Unity's API and that of C# as well. It was hard for me to build the location based map, but finally managed to take the Google Maps api working on our app.\nAccomplishments that I'm proud of\nI am proud of the work me and my team have put into this project. I really enjoyed the idea and mostly enjoyed its implementation.\nWhat I learned\nI have learned new languages and more about the Unity game engine. I am also planning to create my own mini projects in the future as well.\nWhat's next for Fix My Link\nIf the app is approved I would like to have it go to the next level. For example, multiple minigames between players. real time reports, interesting communication system, more and more upgrades and tools.\n",
        "hackathon_id": "astonhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\nmongodbexpress.jsangular.jsnode.js\n",
        "hackathon_id": "technica",
        "winner": false
    },
    {
        "description": "\nBuilt With\nnode.jsjavascripthtmlcssnpmbootstrap\n",
        "hackathon_id": "technica",
        "winner": false
    },
    {
        "description": "\nA tragically unfinished event planning web application for Technica. Would offer up venues, restaurant and catering options, etc based on zip code input using geographical search data from the Yelp API. Our first time using node.js, so things were more than a little rocky.\nWith two hours left and our parts not really linking together, we created this prototype instead: http://devpost.com/software/planit-fv6pos\nDeveloped with Channing Kimble-Brown from JHU and Jasmine Quindala from Stony Brook University.\n",
        "hackathon_id": "technica",
        "winner": false
    },
    {
        "description": "\nPLANIT\nInspiration\n\nEvent planning is really hard!!! We've had trouble with planning events for family and friends/college events in the past. We wanted to make it simple. \n\nWhat it does\n\nPlanIt tracks all the details of your event in one place, so you can find it later. It also suggests venues, vendors, food, activities, and next steps based on the area you input on the landing page. \n\nHow I built it \n\nWe used a prototype (for now) just to prove the concept. \n\nChallenges I ran into \n\nWe couldn't come up with an idea until last minute. We also had a limited knowledge of the code we needed. We also didn't have time to link the pages we did come up with.\n\nAccomplishments that we're proud of \n\nWe built this in two hours :D\n\nWhat I learned\n\nPlan ahead of time, stop changing your plans and ideas. STICK WITH SOMETHING!! We also learned a variety design concepts, how to make/design a logo, how to design a prototype, and UX principles. Additionally learned how to utilize instapage, weebly (attempted to), gimp, etc. \n\nWhat's next for PlanIt\n\nTo actually code it. \n\n",
        "hackathon_id": "technica",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtml5javascriptcssflashbamboo-paper\n",
        "hackathon_id": "technica",
        "winner": false
    },
    {
        "description": "\nInspiration\nInitially, the idea was to create an application to help low-income farmers fund their student tuitions, but the idea expanded into an application that would help anyone, particularly those belonging to the low-income bracket, to find different options to fund their college tuition, whether from federal aid, private student loans, or familial contributions.\nWhat it does\nUniFund helps the user find different options to fund their college tuition by narrowing it down according to school and eligibility for various student loans or aid.\nHow I built it\nWe plan to implement this app as an Android app, so we have a few programs in Java that will sort and output the data we'll need. However, due to time constraints, we built a mobile responsive web page. \nChallenges I ran into\n**Figuring out how to link the Java code we wrote to our mobile responsive web page\nAccomplishments that I'm proud of\n**FAFSA and FriendFund\nWhat I learned\nSorting algorithms \nWhat's next for UniFund\nImprove UX/UI, improve algorithms, \n",
        "hackathon_id": "technica",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtml5css3processing\n",
        "hackathon_id": "technica",
        "winner": false
    },
    {
        "description": "\nBuilt With\nobjective-cjavascriptnode.js\n",
        "hackathon_id": "technica",
        "winner": false
    },
    {
        "description": "\nInspiration\nWhat it does\nHow I built it\nChallenges I ran into\nAccomplishments that I'm proud of\nWhat I learned\nWhat's next for Ios app game \"Coin World\"\nMy inspiration was creating something for my portfolio that reflects what i want to study in college \"Game development\". (Still in progress) Collect coins in the world and make sure you watch out for the monster or Game OVER. Understanding a new software. Designing the game. I learned that there are so many different software that all use different scripts and coding. \n",
        "hackathon_id": "technica",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptcsshtmlmeteor.jsmongodbnode.jsibm-watsonnpr\n",
        "hackathon_id": "technica",
        "winner": false
    },
    {
        "description": "\nInspiration\nPopunation is for the person that has ever driven to a restaurant but then decided to leave because their wait times were too long. Or for the quiet soul who wants to check out a new bar. And especially, for the life of the party who doesn't want to waste their time at a sub-par club.  Popunation allows you to decide where you're going before you leave you're front door. \nWhat it does\nAllows business's to interact with customers in real time and gauge customer satisfaction.\nAllows customer's to preview a business's atmosphere through a profile including current/average population, ratings, seating times, etc.\nHow we built it\nWe started with a simple landing page template from Bootstrap. From their we built it up using Meteor, Node.js, and JavaScript.\nChallenges we ran into\nThere were many steps to implementing geocoding. We had to get an API key and had to hook into user creation to geocode the profile address. \nIn addition, we built the prototype fast and then had to go back and secure the application. This proved to be very tedious because we had to configure filtered channels from the server side to the browser side.\nAccomplishments that I'm proud of\nWe are proud of the progress we made in developing our app despite lack of Java Script experience.\nWhat I learned\nWhat's next for Popunation\nFurther development alongside entrepreneurs via Venture Storm including expanding the user/business profiles and improving the overall user interface.\n",
        "hackathon_id": "technica",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtmlcssbootstrap\n",
        "hackathon_id": "technica",
        "winner": false
    },
    {
        "description": "\nVoice Activated Vibration Control Infinity Mirror:\nInfinity Mirror allows user to see endless image of the mirror that reflects the LED lights within the mirror.\nReactive Infinity Mirror has sensors which reacts to the vibration of the surrounding area, LED reacts according to the 'g' strength of vibration detected in the area.  Mirror will darken/turn off automatically when there is no sound or vibration detected (energy saving mode), LED brightens according to the pitch of the sound and if certain pitch of the sound is detected, Reactive Infinity Mirror will reverse the flow of rainbow LED lights' direction.  Sensor detection works for human voice interaction, music or in air/ground vibration.\n",
        "hackathon_id": "technica",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe were inspired by the Technica gradient and our love for strategy games. \nWhat it does\nOur game engages users by letting them organize circles in order to create a gradient of colors.\nHow I built it\nChallenges I ran into\nAccomplishments that I'm proud of\nIt was exciting to see our idea come to life from paper to phone.\nWhat I learned\nAs beginners, we learned basic code for html, javascript and css. \nWhat's next for Gradient\nWe hope to expand this app by creating challenging new levels, helpful hints, new color palettes, a moves limit, and an opening page.\n",
        "hackathon_id": "technica",
        "winner": false
    },
    {
        "description": "\nInspiration\nHoped the scientific method and some fun brain mapping could be of use in finding a solution to my growing non-profit.  Inspired by the potential in the talent young women can have in the tech world, but at times are not offered the opportunity to showcase their abilities and determination.  I arrived with an opportunity, I just needed the instruments to manifest my idea into a tangible reality for use in the real world.\nWhat it does\nMakes it easy for college teams, student organizations interested in a multi-cultural, educational eco-travel experience to organize a trip representing their school in other communities\nHow I built it\nWith an amazing team!  A 17 year old high school student, a U Maryland Computer Science Major, a U Maryland Chemical Engineering Major, and an American University Computer Science rising senior\nChallenges I ran into\nSwift is supposed to be simple but if the code is not anchored well in git hub all your work will disseappear\nAccomplishments that I'm proud of\nFinding fragments of a puzzle, identified individual talents and abilities and allowed others to envision my solution creatively\nWhat I learned\nWe just can't hack it alone!  Our hack only works as well as the team we attract!  Once we work together, we were a symphony of ideas just waiting to be heard.\nWhat's next for Island Corps Mobile Application\nMechanizing it for deployment to be used in the real world - my wishful, hopeful thinking - need to have it up and running by next week so our Spring trip gets going!  My team helped me have a great start - feeling blessed!\n",
        "hackathon_id": "technica",
        "winner": false
    },
    {
        "description": "\nBuilt With\nc\n",
        "hackathon_id": "technica",
        "winner": false
    },
    {
        "description": "\nInspiration\nDuring the \"How to Think About Your Career by KPCB\" workshop, we were told that the best ideas help small businesses strive and gain exposure. For some reason, I then remembered how accustomed I am to getting bored so I thought why not create a website that connects me to local events that are not greatly publicized?\nWhat it does\nEventable is a new and innovative solution to solve everybody's common problem: boredom. By providing local businesses the chance to publicize their small events, we not only help create exposure, but we also make sure the community is informed. Whether you're looking for a night out to party or a motivational speech, Eventable connects you to the adventures that are ignored. So if you ever feel as if your town is too ordinary, don't worry: Eventable is just a click away!\nHow I built it\nWe used Notepad++ to compile our data and code. We mainly coded in HTML/CSS with the occasional PHP and JavaScript. We also made our logo and buttons on Adobe's Photoshop.\nChallenges I ran into\nCentering our text and images was definitely one of our biggest issues.\nAccomplishments that I'm proud of\nNone of us had prior experience with HTML/CSS. We visited a Web Development workshop but that was really it. We designed an entire website in about 14 hours and managed to do so with minimal knowledge of the language.\nWhat I learned\nHTML/CSS\nWhat's next for Eventable\nLinking the website to a database to actually store the events posted onto the site. Also, adding more categories available and creating a complete Calendar page. This is just a work in progress so we just designed the interface. \n",
        "hackathon_id": "technica",
        "winner": false
    },
    {
        "description": "\nInspiration: Our college announced that it was closing in March, but our fabulous alums saved our school!  We now have a problem attracting prospective students, so we wanted to develop an app that would entice students to consider Sweet Briar College\nWhat it does: Gives information about Sweet Briar College\nHow I built it: Using Android Studio\nChallenges I ran into: We had a lot of issues\nAccomplishments that I'm proud of: The buttons and the map work!\nWhat I learned: We learned how to program an app\nWhat's next for Sweet Briar College App: Continuing to add more information and linking it to our website\n",
        "hackathon_id": "technica",
        "winner": false
    },
    {
        "description": "\nBuilt With\narduino\n",
        "hackathon_id": "technica",
        "winner": false
    },
    {
        "description": "\nAbout Me:\nI am a writer, crafter, artist, and marketing professional. I grew up playing with Barbie dolls while never quite accepting the commercial and superficiality of the doll and all of her pink accessories. Since the age of 8, I've been designing and sewing clothes for my dolls and creating furniture and other accessories by hand. As an adult this has blossomed into a passion-filled hobby.  \nInspiration:\nI love working with miniatures and re-purposing objects. One thing I've noticed is how hard it is to find modern and innovative furniture for Barbie-sized dolls. Today's doll furniture is either too expensive or too cheap and boring. Learning about product design and 3D modeling during Technica's design workshop, I was inspired to explore furniture design. I 3D printed a doll bed with the help of the awesome instructor Syed Rahman and I also drafted an idea for an accompanying dresser in the program Sketchup.\nWhat it does:\nServes as an alternative to other doll furniture on the market and explores the possibilities of miniature creations for Barbie. \nAccomplishments that I'm proud of\nI was able to turn an idea into something tangible. \nWhat I learned\nThe importance of prototyping. I went through a lot of iterations before coming up with my final design. \nWhat's next for \"Inno-varbie: 3D printed Barbie furniture\"\nI think 3D printed doll furniture is the future. I'm excited to explore future projects after I leave Technica! \n",
        "hackathon_id": "technica",
        "winner": false
    },
    {
        "description": "\nInspiration\nOne of our members' younger sister has been experiencing frequent and debilitating harassment at the hands of her co-ed hockey team. This inspired us to create a place where women and girls facing similar situations can go for help.\nWhat it does\nOur site is a tool to inspire, encourage, and guide women through bad situations.\nHow I built it\nWe built it on the cloud9 platform using, jquery, html5,css3,javascript, and the Capital One API Nessie.\nChallenges I ran into\nMany aspects of the html would not work well at first and the API Nessie is very difficult to figure out, especially after the capital one api went down. \nAccomplishments that I'm proud of\nWhat I learned\nWhat's next for Girls Are Here\nFully integrating the capital one api,creating further pages, and extending and refining our videos.\n",
        "hackathon_id": "technica",
        "winner": false
    },
    {
        "description": "\nWe wanted to do something fun with Leap Motion, and Charmi is a fan of electronic music\nYou can spin turntables while playing music\nWe used the Leap Motion assets on Unity\nIt took a surprisingly long time to figure out how to make objects move with out hands. We also had issues playing sounds as a result of touching things.\nWe are super proud that we ended up with a complete project after not using Unity before\nWe learned how to use Unity and Leap Motion\nWe'd like to add more sound effects\n",
        "hackathon_id": "technica",
        "winner": false
    },
    {
        "description": "\nInspiration the internet\nWhat it does answers yes and no questions\nHow I built it with javascript and html\nChallenges I ran into the images wouldn't show up sometimes\nAccomplishments that I'm proud of it works!\nWhat I learned some things require effort. This is one of those things.\nWhat's next for 8 ball 8ball 2.0\n",
        "hackathon_id": "technica",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe game Deeper Sleep on Armor Games Inspired this Game\nWhat it does\nIts a framework for a larger point and click adventure game\nHow I built it\nPython and pygame\nChallenges I ran into\nObject oriented design\nAccomplishments that I'm proud of\nIt WORKS!!! Design, compatibility \nWhat I learned\nOOP, Python, Friendship\nWhat's next for Bad Toy\nIt Will become a finished project and eventually a Fanished Game \n",
        "hackathon_id": "technica",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonjavascriptcsshtml\n",
        "hackathon_id": "citrushack-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nHelp the environment and give students an initiative to recycle\nWhat it does\nAllows UCR students to recycle plastic bottles or cans for rewards\nHow I built it\nA raspberry pi receives input from a magnetic card reader or keypad as well as a bar code scanner. Information is sent to a secured server that contains their information and records. \nChallenges I ran into\nCompleting the task in a short amount of time. \nAccomplishments that I'm proud of\nI was able to implement communication from the raspberry pi to multiples ICS.\nWhat I learned\nI learned that it is very important to communicate and work with a team in order to accomplish tasks. \nWhat's next for Rcycle\nHopefully Rcycle can be implemented in other UC schools. \n",
        "hackathon_id": "citrushack-2015",
        "winner": false
    },
    {
        "description": "\nUCR Schedule Visualizer\nThe raw class list from GROWL is pretty ugly and hard to read. UCR Schedule Visualizer interprets your schedule into something actually understandable.\nLink\n\nThis project is a website written in HTML, CSS, and JavaScript that generates an\nhour by hour view of your schedule as well as provide links to each class location\nfrom the schedule you get from GROWL. Your security and privacy is maintained because\nall of the schedule interpreting and viewing is done client side. No personal schedule\nrelated information is sent over the web.\nGitHub Pages\nThis project is hosted on GitHub pages. You can check out the current stable release\nof our website using the link above.\nBecause the GitHub pages branch is the equivalent of a master branch, the gh-pages\nbranch is our master branch.\nWe are using the Akari Link Shortener to shorten our link. The link is: https://waa.ai/ucrsv with the\nfirst three characters \"ucr\" referring to our school name, and the last 2 characters \"sv\" being short for \"schedule visualizer\". We also have a QR code\nwhich you can find here.\nCredits\nCoded with love by Bradley Cai and, Ammon\n\nLots of inspiration from pomf\njQuery\nBootstrap\nFileSaver.js\nCanvas-toBlob.js\nBlob.js\n\nContact us! We have a twitter, or you can email us at bradleycai24@gmail.com (Bradley) or ammon.i.smith@gmail.com (Ammon) if it's something more\ndetailed. Our public keys are located in the etc directory of our github repo.\nLicense\nMIT License: Do whatever you want with our code so long as you give attribution . This project is intended for public use and for personal learning and enjoyment. You can find our license here.\nWe also have a few dependencies that make this project work. They're all free software,\nand their licenses are listed inside the files themselves.\n",
        "hackathon_id": "citrushack-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nI have never built a hardware project before and I wanted to try something new.  To really learn hardware, I decided to dive in the deep end by building a robot from scratch.\nI didn't know that building a robot would be this challenging. Because of my inexperience and the scope of the project, I only got 4 hours of sleep the entire weekend! I had to work constantly to assemble the electronics, code, and hardware myself.\nWhat it does\nThe robot processes accelerometer data and balances on two wheels.  This is MUCH more difficult than it sounds.  \nHow I built it\nEvery part of the assembly is 3D modeled by me in Onshape CAD software.  I had to wire and assemble the IC's together, and design algorithms that parsed accelerometer data and translated it (with very complicated math!) to roll, pitch, and yaw values.  These values would then go through a PID algorithm to output motor speeds such that the robot can stay balanced on two wheels.\nI had to go to a hardware store to buy the screws and bolts.  Aside from this hardware, I modeled and printed every part.\nTwo of my parts wouldn't mold together 2 hours before the deadline.  I had to run to home depot and walmart looking for good super glue and rush back quickly to finish.\nChallenges I ran into\nNo matter how precise your CAD measurements are, the 3D printer's variability causes the models to print incorrectly.  I had to print over 4 different version of each part until I nailed the exact measurements that make the parts fit.  All this iteration meant staying up and printing all night, both nights.\nAccelerometers only return acceleration values, so calculating for position change is a very difficult math problem.  I had to read up on Madgwick quaternion filter source code to solve this.\nThere is also a lot of unexpected friction between the bushings and the gears.  This causes the robot to stall often.\nAccomplishments that I'm proud of\nI've never built a hardware hack before!  It was a ridiculous amount of fun.  I want to become a mechanical engineer now o_o\nWhat I learned\nEverything!  Electronics, c++, 3D printing, modeling.  I have never done hardware before and I wanted to learn electronics and 3D modeling.  \nWhat's next for 3D Printed Balancing Robot\nBluetooth remote control.  Download an app to drive the robot around.\n",
        "hackathon_id": "citrushack-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nunityaudacityvisual-studiophotoshoppaint\n",
        "hackathon_id": "citrushack-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhardwarearduinoanalog-circuitunity\n",
        "hackathon_id": "citrushack-2015",
        "winner": false
    },
    {
        "description": "\nMediBook+\nMediBook+ is a secure medical document application. Featuring end-to-end encryption, it allows you to securely store important and sensitive medical information. In the case of an emergency, emergency response can view your medical profile and history via a medical card.\nFeatures:\n\nEnd-to-end encryption. All personal information is only visible on a device on which you enter a custom crypt code.\nEncrypted cloud storage. Allows you to access your medical information anywhere with your crypt code.\nEmergency card printout. Allows you to store an emergency card in your wallet with a url to access all of your details for emergency responders.\nSearchable text and image upload. You can store text along with images, all of which can be searched.\n\nMediBook+ is fully functional on a mobile device with our Android app (live, but older) or iOS app (pending App Store approval).\nhttp://medibookplus.com/apk/v0.2.apk (Google Play Store apk is old version, but pending update)\nThere is a desktop version at http://www.medibookplus.com/#/app/emergency for emergency use only. This is for doctors and medical responders to access if a user carries our emergency access card.\nEmergency access card template: http://medibookplus.com/docs/template.docx\n",
        "hackathon_id": "citrushack-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe wanted to work with unfamiliar technology in order to challenge our skills in learning and team management.\nWhat it does\nIt allows users of Pebble watches to conveniently track their daily calorie intake on the fly. For experienced fitness enthusiasts, it offers a streamlined experience for their busy lives. The app can record your daily calorie intake, calculate your average number of calories consumed over the course of a period, and allow you to set your maximum amount of calories per day. For those with weird work hours, it allows changing the time of the daily reset timer.\nHow I built it\nOur goal was to design a simple, but effective Pebble watchapp that a wide variety of users can incorporate into their daily lives. We brainstormed features that we believed would be easy to use and pickup. We utilized javascript as our main programming language, CloudPebble, an online IDE built for Pebble app development, and Pebble.js, the API for programming Pebble apps in javascript. \nChallenges I ran into\nOur entire team was new to programming hardware applications and more than half of us were new to programming in javascript. It was difficult to learn javascript and produce the result that we desired. Also, much of the Pebble documentation was not as thorough as it could have been. Pebble only recently began developing the tools for developing apps in javascript rather than C, so it was a challenge to put together the scarce information that was available. \nAccomplishments that I'm proud of\nWe managed to create a fully functional app and knocked off most of the features that we had wanted to include. Also, many of the obstacles we encountered in programming with javascript and using Pebble.js were overcome due to our patience and persistence.\nWhat I learned\nWe learned that producing software for hardware can be a very challenging task, especially if there is a lack of developers for that hardware. We learned a little bit about the nuances of javascript and its benefits and downsides compared to other languages. We learned to adapt the different platforms and conditions that we were limited to.\nWhat's next for Pebble Calorie Counting WatchApp\nWe would like to be able to allow users more freedom in customization of notifications. We want to provide more phone integration so that users can access more information about their calorie intake. We'd like to eventually expand to different platforms such as other smartwatches. \n",
        "hackathon_id": "citrushack-2015",
        "winner": false
    },
    {
        "description": "\nSo, whether you've done it, you do it often, or you'll do it in the future; Imagine yourself working on your programming assignment and you are just so concentrated. All your ideas are coming to your head when suddenly, your doorbell rings. Oh no, that means you have to get up, run to your door, at 'worst' case allow the person inside, run back to your room and hope that all your thoughts were intact by the time you get to your chair. If not programming, then picture your favorite hobby being unfavorably interrupted.\nWe've all been there; Pebble Sesame is here to help!\nPebble Sesame: Once your doorbell is pushed, a webcam located in a safe place near your door takes a picture. The picture is then sent to the owner of the Pebble watch. The owner is then able to unlock and lock the door appropriately from their Pebble watch.\nHow it Works\nRaspberry Pi to Pebble Watch: The button pushed calls fswebcam, which then takes a jpeg image and stores it in the current directory. The image is then converted, compressed, and resized to a png 144x168 gray scaled image to be displayed on the pebble watch. Once it\u2019s converted, it is then uploaded to imgur and the URL of the image is stored in a text file in the current working directory. The URL and the watch notification signal are then sent to an AWS(Amazon Web Service) server that is the center of communication for the entire project. A python script on the server is called that downloads the image from imgur. The pebble watch is listening for a notification and once it hears it, the user is able to see the image taken. Also, it displays text for the user on the screen as part of the notification.\nPebble Watch to Raspberry Pi: Once the user receives the notification, Up button on the pebble sends a command to unlock the door, and Down button locks it. The signal sent from the pebble is '1' for unlock and '0' for lock. The signal is sent and stored in the AWS server. The Raspberry Pi is constantly listening for a change in state and once it hears it using UART(universal asynchronous receiver/transmitter), it sends the state data to an Arduino UNO. The arduino then interprets it and controls the servo motor(lock and unlock demo) appropriately.\n",
        "hackathon_id": "citrushack-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nunityc#photoshopyoutubeacm\n",
        "hackathon_id": "citrushack-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nxcodeswiftparseviewcontrollersimulatorparseuixcode.storymode\n",
        "hackathon_id": "citrushack-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe wanted to solve the issue of creating and organizing study groups for our courses. Getting together for study groups is a common issue many students face.\nWhat it does\nThe user can log in and create events. Other students can then view and join events. There is also a message option to leave notes on events. Participants for events are able to view comments on events and add to the conversation.\nHow I built it\nWe developed Circles using Android Studio. \nChallenges I ran into\nWe faced several obstacles in our development process. These include working on a project more advanced than our knowledge span, understanding the complexities of Android Studio, and solving logic errors. Circles required several classes and advancement of our skills in Android Studio.\nAccomplishments that I'm proud of\nWe are proud of fully developing the Circles Android application. This feat required critical thinking, planning activities, and many hours of coding. The finished product operates exactly as we intended and we were able to integrate the specified activities into the application.\nWhat I learned\nWe were able to gain extensive knowledge of how Android Studio operates. In the time span of this hackathon, we were able to learn more about Android development than the handful of hours we had spent working with the software in the past. 50% of our team was introduced to Android Studio in the process.\nWhat's next for Circles\nWe will integrate web-based aspects of Circles in the future. The option for instructors to create class groups and a database of user information and messages will be created in the Cloud. Users will be able to directly communicate with the instructor and other students in their classes through a messaging system and reminders will be pushed to inform users of upcoming events they have joined.\nDomain Name: circles.ninja\nCategories: Best Beginner Hack, Best Software Hack, Best Domain Name, First Place\n",
        "hackathon_id": "citrushack-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nraspberry-piandroid-studiojavac++xmlsamsung-mobile-sdk\n",
        "hackathon_id": "citrushack-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroid-studiojava\n",
        "hackathon_id": "citrushack-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroid-studio\n",
        "hackathon_id": "citrushack-2015",
        "winner": false
    },
    {
        "description": "\nWe really liked the mechanics of Megaman Battle Network for the Gameboy Advance and felt that no games ever revisited the real-time grid fighting genre since it's release. \n2 players battle head-to-head casting spells in real time to stay alive and deplete their opponents health\nWe scaled two 3 by 3 grids and wrote a function that allowed our sprites to move within the boundaries of their respective grids. \nWe used a Wacom tablet to create sprites for the game which were then animated and given attack and defense capabilities.\nAlmost no one in the team has had a great deal of experience working with Unity or game development in general. We ran into many time consuming issues caused by no more than lowercase function calls and not labeling a particular game object as 2D.\nWe learned that hackathons are a very good opportunity to learn platforms and be exposed to things we wouldn't normally try ourselves or have time for in the real life.\nThe entire project will be hosted on Github. Anyone in the group may work on it but we probably will move on to other projects after this Hackathon.\n",
        "hackathon_id": "citrushack-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe wanted to develop a robot that could help firemen survey a room or building and record the different temperatures. \nWhat it does\nFlame Fighter records the temperature at different areas of a confined space and at the end of surveying it goes to the the point with the highest temperature.\nHow I built it\nWe used an arduino tank bot and attached sensors to it to record the temperatures.\nChallenges I ran into\nCreating the different algorithms to record temperatures at specific points of the room. Also to create code to combine all of the senors.\nAccomplishments that I'm proud of\nBeing able to use the ultrasonic sensor to record its position in the room.\nWhat I learned\nWe acquired intuition on how to begin a prototype and how to carry it out until the end.\nWhat's next for Flame Fighter\nAllowing it to adapt to rooms that don't resemble a polygon.\n",
        "hackathon_id": "citrushack-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nunreal-enginehtml5javascriptapacheamazon-web-servicesamazon-ec2\n",
        "hackathon_id": "citrushack-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nInspired by a love for bicycling we wanted to create a way to make pedaling easier and more efficient.\nWhat it does\nGo Shift measures your cadence, that is how fast you're pedaling, and tells you when to shift gears and in which direction for an optimal speed to force ratio. Go Shift works like an automatic transmission by choosing the best gear for your current speed.\nHow we built it\nWe use an Arduino, a vibration sensor, an LCD display, and some math to calculate the revolutions per minute.\nWhat's next for Go Shift!\nIn the future Go Shift can be a complete automatic bicycle that shifts your bike for you while you pedal so you are always getting the best efficiency while you bike.\nWe hope you enjoy Go Shift and remember to bike smarter.\n",
        "hackathon_id": "citrushack-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nSuper Mario Galaxy, Planetary Gravity, Ninjas, Naruto, Robots, Future, Parkour.\nWhat it does\nA game about a robot ninja trying to save his Dyson Sphere.\nA 2D Platformer with Wall Jumping and Obstacles.\nHow I built it\nUsing Unity, C#, Trigonometry, Piskel, and a whole lot of food and caffeine.\nChallenges I ran into\nRotational Physics, Trigonometry, Lack of Sleep.\nAccomplishments that I'm proud of\nAnimations, Wall Jumping.\nWhat I learned\nRaycasting, Importance of Sleep, Design Process, Animation.\nWhat's next for Robot Ninja Parkour\nFinishing the Game with Rotational Physics, a Fully Drawn Dyson Sphere, and GUI.\nWill complete project.\nDropbox Link Info\nThe Dropbox Link will let you download the build.\nThe Controls for the Build are : ;\nA - Left;\nD - Right;\nSpace - Jump.\nHave Fun.\n",
        "hackathon_id": "citrushack-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nOrganizations often need volunteers, but it can be hard both for organizations to find enough volunteers, and for volunteers to quickly find causes that match their schedule and interests.\nWhat it does\nThis web app will allow organizations to post events and tag it with a category, e.g. environment or healthcare. Users can find these events based on category as well as distance from their location. Users can also subscribe to categories to find upcoming events that match their interests. Organizations can also send email notifications to users.\nChallenges I ran into\nTime. Didn't get to implement full functionality.\nWhat's next for VolunteerMe\nImplementing the rest of the features.\n",
        "hackathon_id": "citrushack-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njava\n",
        "hackathon_id": "citrushack-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe all can write higher level languages but without a hardware that can support it, we can't really do much.\nWhat it does\nMIPS implementation is simplified to contain only: \n \u2013memory-reference instructions:  load word, store word\n \u2013arithmetic-logical instructions:  add,sub,and,or,shift if less than\n \u2013control flow instructions:  branch if equal to, jump\nHow I built it\nI used Structural Verilog to build the modules\nChallenges I ran into\nsimulating the processor as a whole.\nAccomplishments that I'm proud of\nI built a freaking CPU!!\nWhat I learned\na whole lot of verilog!\nWhat's next for CP\u00dc FROM SCRATCH\nI would like to add Pipelining to make it faster\n",
        "hackathon_id": "citrushack-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nAll of us love travelling to different places and meeting people who share similar ideas. But when you are new to a place or have even been there for a long time how do you know what the people around you are doing? Hence we thought of SPOTNDROP -a social networking site based on location. A user who is new to say Riverside could use our app and get chat feeds categorized based on interests. When you\u2019re new to an area, you want to be able to rapidly connect with people in the area. Being able to create a virtual application where like minded people in an area can talk and interact with each other.\nWhat It Does\nSPOTNDROP is primarily a web application which connects people based on their location. On the web app, a user can see all posts from people within a certain radius of his or her location. If the user desires, he may drop (or post a message) to the feed of a specific location. Our app currently records the name and a text message as a post. However, we wanted to incorporate  additional features like, using data sets to create population clouds where certain conversations could be categorized and let users from areas away from population clouds participate by entering the coordinates of the cloud. But due to lack of time we could not implement the features on to the application.\nPebble Extension\nAs a crucial differentiating feature, we incorporated the Pebble watch with the web app. Because people are constantly on the move, it becomes difficult for people to connect on a computer, and for this reason the Pebble brings convenience. Through the SPOTNDROP application, the Pebble is able to display all feeds within a location organized by time. When a new drop has been added to the feed, a notification will pop-up on the Pebble. \nHow I built it\nSPOTNDROP consists of 3 unique and different parts; the server; the web client and the pebble client. The server acts as a middleware between the clients and the data.\nThe server is the main hub for all of the components of SPOTNDROP. The responsibilities of the server are to store data, receive new drops, and send drops within an area. The server is written in Go, and is hosted by IBM\u2019s Bluemix technology. We are using a MYSQL database and the database is primarily being used to store drops. The server also handles websocket connections from the client and pebble to send and receive updates; the server also handles GET requests from clients for retrieving drops within a specified radius of coordinates. The GET request returns a JSON array of drops given a longitude, latitude, and a radius in kilometers.\nThe pebble client is written in javascript. The pebble uses javascript libraries to make JSON data requests from the server; to listen on a websocket connection for updates and various internal libraries for user notification and interaction.\nThe third and final component of SPOTNDROP is the web client. The web client allows users to submit drops via a websocket connection, to view preexisting drops via a JSON GET request (the same api call that the pebble uses for its data). The client also features a google map that displays the current GPS position of the user, and displays \u201cpins\u201d for nearby drops. The client also features a \u201cdata\u201d option that enables the user to display important social media data. Currently this data analysis uses machine learning to keep track of \u201chappy\u201d and \u201csad\u201d posts.\nChallenges\nIn a project like this you end up running into roadblocks. Finding and creating a connection an online database took us some time. Learning JQuery for pebble was also slightly difficult. But are main challenge was structuring and delivering our data.\nWhat's next for SPOTNDROP\nSPOTNDROP has huge potential. The best thing of such a project is that a product like this has not been launched into the market yet.The UI has to be improved, and we want to automate the categorization of data based on population clouds using machine learning. Thus guaranteeing a manageable amount of categories and not leaving creation of categories to the users. We want to also integrate a voice to text api into our app.\nAs Robert Frost famously said\u201d We have miles to go before we sleep and miles to go before we sleep.\u201d\n",
        "hackathon_id": "citrushack-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nRecent Plane crashes and missing victims motivate us to build an application that aids in finding these downed planes and help curb the agony that people feel for their loves one who died in plane crashes that were not reached in time.\nWhat it does\nReading the x, y and z coordinate values from an accelerometer built into the phone, the app can check for if these values pass a threshold.  If they do, their x, y, and z values along with latitude, longitude, and altitude, obtained by using the geo-location api for android, are sent to our syncano server for rescue \nHow I built it\nWe first protyped and tested accelerometer and gelocation output apps to know the kind of data that was going to be encountered for the application.  When that worked, we then incorporate the alogrithms into one application.  We then registered a synaco server and sent our data to it.\nIndividual accomplishments:\nTom - Android Application\nKunal - Synaco server\nParker - Graphics designer\nTien - Tester\nChallenges I ran into\nCommunication between the app and syncano server were encounter\nAccomplishments that I'm proud of\nBuilding a client-server application that utilizes a background thread, using android apis fully, minimal user-interface with huge effects\nWhat I learned\nAccessing android sensors, better development methology, geolocation, synaco server setup\nWhat's next for Crash Alert\nBetter precision from app to server, IOS development, graphing on website\n",
        "hackathon_id": "che",
        "winner": false
    },
    {
        "description": "\nInspiration came from my bubble screensaver. Shout out to Aaron Kau for figuring out all the bugs overnight. :)\n",
        "hackathon_id": "che",
        "winner": false
    },
    {
        "description": "\nBuilt With\ngamemaker\n",
        "hackathon_id": "che",
        "winner": false
    },
    {
        "description": "\ncant be blank\n",
        "hackathon_id": "che",
        "winner": false
    },
    {
        "description": "\nBuilt With\njava\n",
        "hackathon_id": "che",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtml5css\n",
        "hackathon_id": "che",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe saw a flaw in the way teachers got feedback from their students in a classroom\nWhat it does\nLets a teacher input a learning goal, then the students can rate themselves on a 1-4 scale with a comment.  Then the teacher will see these reviews to be able to plan their lessons based on student needs.\nHow I built it\nWith HTML, JavaScript, CSS, Bootstrap\nChallenges I ran into\nWe had trouble accessing a database and using it for changing inputs.\nAccomplishments that I'm proud of\nusing a database for the first time, linking an app with a website to work together, getting much of what we had planned finished.\nWhat I learned\nHow to use Firebase, HTML, CSS, JavaScript, and Bootstrap\nWhat's next for MarzTracker\nBeing able to have more classes and more teachers use the databases.  Also make it more aesthetically pleasing.\n",
        "hackathon_id": "che",
        "winner": false
    },
    {
        "description": "\nInspiration\nI saw a teaser for a new Hunger Games movie some time ago and decided I would base my project on it\nWhat it does\nA Hunger Games mini-game that's playable in Minecraft\nChallenges I ran into\nHad trouble with getting map to restore to state before game started when a game ends\nAccomplishments that I'm proud of\nFinishing a semi-working mini-game\nWhat I learned\nWorking as a team to finish a project\nWhat's next for MC_HungerGames\nRestoring a map w/o breaking half of the plugin\n",
        "hackathon_id": "che",
        "winner": false
    },
    {
        "description": "\nInspiration\nA jump game\nWhat it does\nEntertains people\nHow I built it\nUsing Scratch by MIT\nChallenges I ran into\nLack of expertise and computer neophyte\nAccomplishments that I'm proud of\nTeamwork\nWhat I learned\nHow to use Scratch\nWhat's next for Penguin Jump\nLaser Battle 1.0\n",
        "hackathon_id": "che",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtml\n",
        "hackathon_id": "che",
        "winner": false
    },
    {
        "description": "\nInspiration: Mario knockoff turned into kind of a geometry dash style game, but not really\nWhat it does: You play as a block, and you jump over other blocks.  If you hit them, your health goes down\nHow we built it: html, css, and javascript on c9.io IDE\nChallenges we ran into : We accidentally saved a javascript file that was broken, and had to completely rewrite it, because nobody could figure out what was wrong.\nAccomplishments that we're proud of: We made the health bar change color as it gets lower, and added sick beats\nWhat we learned: how to add audio to a javascript program, and on an unrelated note, we learned how to use arduino at the hardware workshop\nWhat's next for Revenge of the Block: The powerup update, and maybe we will attempt to add multiplayer through firebase if it is possible.\n",
        "hackathon_id": "che",
        "winner": false
    },
    {
        "description": "\nCouple edited tags for the age project in the javascript course\n",
        "hackathon_id": "che",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe wanted to make a program that when you would type a name in, it would give you a little bit of (silly) information about that person. \nWhat it does\nThe program checks a whole bunch of names and when it corresponds to one of those names, it displays the information that that specific person has. \nHow I built it\nWe built it based off a previous project of Elan's: The same idea but we made it better, nicer, and easier using html, css, and javascript. \nChallenges I ran into\nWe ran into some challenges: Whether to implement the if/else if/else statement or the switch/case statement. After a while, we chose that if we are going to do a million names, we need the switch/case statement. Also, it was tough trying to get the button \"Get Results\" to actually get results.  But after a while, we finally got it. Also, it took forever to input every single name and its specific property.... took us till 4 in the morning... We probably should have used a database.\nAccomplishments that I'm proud of\nFinishing the project and it actually looking nice. Also, the breakthrough of getting the button to finally work!\nWhat I learned\nWe learned how to organize html, css, and javascript and connect them. Also, how to attach links to functions of javascript to html. \nWhat's next for The JEEN Name Tester\nGet more names and their properties down! (:\n",
        "hackathon_id": "che",
        "winner": false
    },
    {
        "description": "\nBuilt With\nkpcbhtml5cssc9\n",
        "hackathon_id": "che",
        "winner": false
    },
    {
        "description": "\nInspiration\nI've actually been building this project for about a week now. At the beginning of the hackathon I started working on a different site where you could run code by texting a phone number, and then decided to write a Role Playing Game in the programming language \"Brainfuck\". I ended up deciding that I'd have the most fun at this hackathon by just working on BizSMS.\nWhat it does\nBusiness owners can register an account and provide information such as their names, company names, and phone number. Their password is stored with very secure encryption (15 rounds of bcrypt). The business owner can then share their business ID with their customers, who join the business owner's message list by texting 'JOIN X' (replacing X with their business ID). The business owner can then, using the website, send a text message to anyone signed up on their message list.\nHow I built it\nI used the Python framework web.py to build the backend for the site and the SMS API Twilio to send and receive text messages. Payments are fully functional and are handled with the payment processor Stripe. The layout for the homepage, as well as the header on the dashboard, is from a free Bootstrap theme called devAid.\nChallenges I ran into\nNot anything too serious. Just some bugs, which I was usually able to solve fairly quickly.\nWhat you learned\nI learned how to dynamically generate QR codes in Python. By scanning this QR code, an SMS draft is opened on the user's phone with the number and message body (e.g. \"JOIN 3\") pre-filled-out.\nWhat's next for BizSMS\nI'm planning on turning it into a sellable product. I have compared it to other similar services and believe it has better features, and much better pricing. I plan on starting with local businesses to test if my idea has potential to be successful. BizSMS is a temporary name.\n",
        "hackathon_id": "che",
        "winner": false
    },
    {
        "description": "\nInspiration - To help the blind.\nWhat it does - It uses sunglasses to with an ultrasonic sensor and a buzzer to beep based on how close you are to an object in front of you.\nHow I built it - An Arduino Nano, ultrasonic sensor, and a Piezo buzzer were used to measure distance and create audible beeps, and then that was duct taped to a pair of Microsoft sunglasses.\nChallenges I ran into - Changing the interval of beeps based on distance.\nAccomplishments that I'm proud of - Being able to change the interval of beeps based on distance.\nWhat I learned - How to use if else statements.\nWhat's next for Blind Spot - So far, no plans.\n",
        "hackathon_id": "che",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtmlcss3javascriptkpcb\n",
        "hackathon_id": "che",
        "winner": false
    },
    {
        "description": "\nBuilt With\njqueryjavascriptphphtml5bootstrap\n",
        "hackathon_id": "opportunity-hack-2015-blr",
        "winner": false
    },
    {
        "description": "\nCurrent Problem\n\nNo/ very less communication post donation\nDonor looses the contact with the NGO/child\nUnaware of child\u2019s how-abouts and progresses\n\nProposed Solution\n\nImprove the communication between child and donor by using calls and Whatsapp integration.\nProvide an admin android application where all children\u2019s donor details are provided.\nProvided support for sending messages, reports, meal plans and calling the donor periodically.\n\n",
        "hackathon_id": "opportunity-hack-2015-blr",
        "winner": false
    },
    {
        "description": "\nBuilt With\nethereumnode.jsmeteor.js\n",
        "hackathon_id": "opportunity-hack-2015-blr",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe wanted to make a impact at @OpportunityHack 2015 and we got the chance to do a complete solution as per the NGO request. \nWhat it does\nProvides a platform for easy donation payments, social presence and create campaigns for emergency money requirements.\nHow I built it\nWeb Solution --> Using Wordpress, PHP, MySql, Payu Money Gateway\nWeb Services --> Nodejs\nHybrid App --> Cordova, Crosswalk, HTML5, Jquery, Underscore\nChallenges I ran into\nIntegrating the payment gateway\nAccomplishments that I'm proud of\nWe were able to provide a end to end solution in web\nWhat I learned\nWhat's next for KSSTrust-avengers\n--> Long term support from my team to push the web, mobile apps to the hands of NGOs\n",
        "hackathon_id": "opportunity-hack-2015-blr",
        "winner": false
    },
    {
        "description": "\nWelcome to bloodcare\n\nWhy?:\n\nOn an average India needs 1.2 crore units of blood annually\nWe are in a short supply of 30 lac units\nOur Per capita blood donation is just 1/5th of developed countries\nLack of healthy stock levels across locations translates to risk of life, and great inconvenience to patients & thier family \n\nHow?:\n\nbloodcare is a mobile solution to crowd-source help from its users to drive blood donations in times of need\nOnce installed, users create their profile and indicate their blood type and willingness to donate\nWhen a person in need places a request in the app, users in the neighbourhood would receive blood alerts through the app indicating the specific blood type needed, with a map function to find the location\n\nHow to inceltivize /encourage blood donors:\n\nThe app allows users to check-in their donations by scanning a QR code on posters at the blood banks. This allows the user to track the number of lives she/he has helped save through blood donation\nMerchant and partner tie-ups to reward active members with special offers and discounts.\n\n\nTech Stack\n\nApis/Services built with: Go\nDatastores: Mysql & Redis\nAdmin dashboard: Go \nMobile App: Android\n\n",
        "hackathon_id": "opportunity-hack-2015-blr",
        "winner": false
    },
    {
        "description": "\nBuilt With\nwordpressjavascriptmysqlhtml5php\n",
        "hackathon_id": "opportunity-hack-2015-blr",
        "winner": false
    },
    {
        "description": "\nBuilt With\nmeteor.js\n",
        "hackathon_id": "alphahack",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonalchemyapibluemixflasknoderedtwitter\n",
        "hackathon_id": "alphahack",
        "winner": false
    },
    {
        "description": "\n[Type of the project]\nWindows Universal App\n[MVP] \n\nSend money from one of your configured bank accounts to another bank account.\nReceive money on one of your bank accounts.\nBank transfer information (between sender and receiver) is transferred using NFC (Near Field Communication).\n\n[Target Group]\nEveryone who uses online banking and user's which are in possession of a NFC enabled device.\n[Use Case]\nProblem: I'm in debt to a friend and want to transfer money without forgetting it and getting it done quickly.\nSolution: Use SmartBump to exchange bank account information and get the transfer done with save and quick.\nAssume this situation:\nYou don't like carrying hard cash in your wallet. You like handling all your money transfers via bank transfers. And you tend to easily forget to pay your debts.\nYou are going out for lunch with your friends or colleagues. In Germany it is uncommon to pay via bank card in a restaurant. So you would have to either borrow money from your friends/colleagues or go to an ATM. In our case we want to avoid using hard cash or visit an ATM, so we ask for some friend/colleague to lend it to us. Smart Bump would now allow us to repay the debt by just typing in the amount of money we were lent and chose a suitable bank account we want to transfer the money from. Then you just hold your NFC phones against each other and the account data is being transfered. Now the process for the Receiver of the money is already completed, since he already transfered his bank account data. The sender on the other hand has now only to complete the tan verification (i.e. enter tan from mobile tan) and then you're also done.\n[Challenge & solutions]\nIn order to use the figo .net sdk we had to fix some minor bugs in the sdk (code provided).\nDue to some problems with the pre-release of windows mobile 10 we had to reset and reinstall our windows mobile devices.\n[Scalability]\n\nextend userbase (make this app available for ios and other platforms)\nimprove security (i.e. authenticate user via fingerprint or others)\nadd functionality enable user to do common bank transfers (maybe without using nfc) => all in one app\n\n",
        "hackathon_id": "unicredit-appathon-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nangular.js\n",
        "hackathon_id": "unicredit-appathon-2015",
        "winner": false
    },
    {
        "description": "\nWe provide a app to manage private wealth for individuals (liquidity, investments, property, holdings, ...) where they have an overview of all their assets. In addition, they can easily chat/videochat with their private banking advisor.\nWe also built the backend that allows the private banking advisor to keep track of all client relationships, sell products, and monitor her client's finances.\nType of the product\nA mobile web for the private banking customer as well as a web application for the private banking advisor was developed. The web application backend makes extensive use of automation technologies.\nMVP\nThe mobile app shows all current balances from checking accounts, investments, properties, holdings, loans, insurances as well as succession plans. It enables the banking customer to use a communication channel (chat/videochat) to communicate with the private banking advisor. The web application targeted at the private banking advisor shows these statements as well and also includes further information. With the integration of IBM Watson machine learning technology, the web application assists the banking advisor with information based on the current communication context.\nTarget group\nWe target at high net work individuals as well as investors.\nUse Case\nThe banking clients wants to have an overview over his current account status as well as review and accept suggestions by his or her private banking advisor. All necessary information are available in the application, further information can be obtained by using the provided chat function.\nChallenges & Solutions\nTo create context sensitive information for the bank advisor in the chat interface, a natural language processing framework was required. IBM's Watson technology was used to extract the meaning of messages and display information on the go. For example, if the user wants to invest into certain stocks or funds, the engine displays options to buy these stocks directly to the advisor. Portfolio rebalancing and property reevaluation are also easily possible. \nScalability\nThe product is a niche app for private banking customers, but it provides the private banking experience to lower profile customers since it increases the scalability of private banking. \nTechnology\nWe developed a native iOS App for the banking customer with Obj-C. The app interfaced a web view, developed with bootstrap and mainly jQuery. We used the UniCredit API for account data (we will use it for securities data as well once securities are available via the UniCredit API). Finance Quotes come from Yahoo Finance. We used IBM Watson Keyword Extraction and Named Entity Recognition as well as Concept Discovery to extract Company Names from Messages of the users.\nThe backend is hosted on IBM bluemix.\nThe Team\nKorbinian Breu, Frederic Lapatschek, Thomas Pischke, Alexander Uhlig\n",
        "hackathon_id": "unicredit-appathon-2015",
        "winner": false
    },
    {
        "description": "\nType of the project\niOS App and Android App with data visualization\nMVP\n\nConnect to UniCredit via the UBIS API\nMatch existing transaction amount and merchants with products in our database to create a personal user profile\nRecommend products to based on affordability, taste, and recent purchases\nFacilitate the purchase of more expensive goods through UniCredit Instalment Plans. \n\nTarget group\nYoung, consuming mobile users: the next generation of banking clients\nUse Case\n\nThe user can load all his transactions via UBIS API from UniCredit into the app\nThe user receives suggestions for products with discounts and offers based on his consumption.\nThe user, alternatively, can scan his receipts to include the transaction (amount and merchant) via OCR from Gini.\nThe user can connect to organize.me API to pull all previous Amazon.de transactions into the app.\nThe user can benefit from UniCredit instalment plans if he wishes to purchase more expensive goods.\n\nChallenges & solutions\nChallenge\nSearch a wide range of popular products and suggestions based on the consumer's profile\nSolution\nWe've aggregate transaction data for a user through the banking interfaces from UniCredit (UBIS API). \nTo enrich the user's profile, we make use of the Gini OCR API for scanning and analysing cash-only payments.\nScalability\nInitial scale will be achieved through UniCredit's existing customers. Later on, the app can be adapted to a wealthier segment of the bank's clients and offer a more suitable range of products and services (e.g. private banking needs). To ensure a smooth process of complex back-end operations and heavy user load, the app is hosted on IBM Bluemix, which offers a stable and secure server infrastructure.\nTechnology\nAPIs\n\nUBIS by UniCredit\nGini\nIBM Bluemix\norganize.me / xtractor\n\nFrameworks\n\nSwift iOS client\nAndroid client\nRuby-on-Rails backend\nRuby-on-Rails recommendations, products, transactions API\n\nLink\nAndroid Demo (via YouTube)\nTeam Members\n\nDevran 'Cosmo' Uenal, [Backend], @maccosmo\nAlex Amin, [Android], @alexamin93\nBilal Reffas, [iOS], @bilalreffas\nMarc Seitz, [Backend], @mfts0\n\n",
        "hackathon_id": "unicredit-appathon-2015",
        "winner": false
    },
    {
        "description": "\nProject name\nCouchBanking\nElevator pitch\nWorlds first AppleTV app to bring banking to your couch\nType of the project\nApple TV app \nMVP\nThe minimal viable product would be a app a user can visualize the current bank account information in one view and get a list of transactions. \nPerforming transactions is a service the user expects, but probably wont use often. So thats not necessary needed for a MVP.\nThe information about stocks is something the user not naturally expects as a nessesary feature. The next step would be a secureSo that would be a \"nice to have\" feature for future releases. \nTarget group\n\nAge 28 - 45\nnot gender specific\nprobably wealthy\nbusiness or financial background or interest in stocks\nexperienced with stocks and maybe even day trading\n\n\nUse Case\n\nUC1: User starts AppleTV app and takes a look at his current account balance and stocks\nUC2: User can see a history of transactions\nUC3: User can perform a new transaction via manual data input\nUC4: User can perfrom a new transaction with prefilled form based on an image stored in the iCloud\nUC5: Show the distribution of your money for all your accounts\nUC6*: User can use the magicBanker for a smart data preprocessing\nUC7: User can see trends of his currents stocks\n\n*planned\nChallenges & solutions\nMain challenge:\nNew environment with new requirements for a good and reactive user experience for banking.\nChallenges:\n\nUser Interactions must be limited to a minimum\ncurrently limited voice processing if TV iOS\ncomplex user interactions needed for a smart banking app\n\nSolution:\n\nA well structured app for minimal user interactions \nA voice enabled service to process the user account data and stock information called MagicBanker\n\nExplanation:\nThe first Apple TV supporting community apps was just released just a week ago. The TV iOS has complete different strategies for user interaction and visualization and is yet unexplored. It\u2019s impossible to create the same user experience than we are used to do for iPhone apps.\nFor Apple TV the main user interaction is meant to be via voice, but currently the functionalities are very limited. A voice command selects/interacts with a certain entity in the UI. It binary - Its currently not possible to handle further information for further processing from the spoken words like it\u2019s possible in native apple TV apps. The App was designed to create yet a smooth user experience. We reduced the interactions needed to a absolute minimum and split every functionality to its own tab selectable via an voice command.\nThe voice functionalities of Apple TV are expected to be extended by Apple during the next months. Its a crucial point zo process voice commands for smart interactions to create the best user CouchBankin experience. Since there is no service offering smart functionalities like we expected - we create it ourselves. The MagicBanker. The MagicBanker performs a map reduce of a given database due to given (future:spoken) user inputs. Its using a MongoDb database and a self written map reduce algorithm in NodeJS.  \nScalability:\nSky is the limit\nTechnology\nDeployment link/source code\nGITHUB: https://github.com/DanXMuc/Cobegido/blob/master/README.md\nTeam (name, skills, e-mail, mobile, Twitter handles)\nName: Daniel Peter\nSkills: iOS Engineer, IoT \nmobile: +49 176 80395475\ntwitter: @oh_its_daniel\ngithub: DanXMuc\nName: Marco Cancellieri, \nSkills: iOS Engineer, UI/UX \nmobile: +49 163 6644752 \ntwitter: @marcocanc \ngithub: Marcocanc \nName: Vadym Yatsyuk \nSkills: Backend, Frontend, iOS, IoT \nmobile: +49 175 6976839 \ntwitter: @vadimdez \ngithub: vadimdez \nName: Sven Eliasson \nSkills : IoT, Backend, today: Backend, Outreach \nmobile: 017630638775, \ntwitter:  @cominous \ngithub:  comino\nName: Dali Zheng \nSkills: Backend (Node.js), Web Frontend \ntwitter: @0x8890 \ngithub: 0x8890  \n",
        "hackathon_id": "unicredit-appathon-2015",
        "winner": false
    },
    {
        "description": "\ngit link:\nhttps://github.com/JulianKling/doNationAppathon.git\nTeam members:\n\nCarina Saliger, designer, carina.saliger@live.de, +4915150712118\nSascha Rothe, developer, sascha.rothe@live.de, +491714009514\nSebastian Ebert, developer, buckel@mailueberfall.de\nJulian Kling, jkling@students.uni-mainz.de\nKatharina Kann, katharina-kann@gmx.de, +4917672257319\n\n** Type of the product **\nMobile App\n** What it does **\ndoGood is a donation app that makes donating easy and personalized. Instead of giving plain money, people who want to help others (donors) can now donate products or activities they really enjoy. And since some enjoyments might be too expensive for a single person they also have the option to donate parts of it and wait for others to complete their donation.\nHow does doGood work? After you enjoy a product from a participating shop or location (cafe, cinema, etc.) you scan the doGood logo printed on the product or receipt. After deciding how much of the product you want to pay, the entire payment process is done via figo\u2019s hassle-free and fast in-app payment services. All that can be done with a mobile device on-the-go in the course of a couple of seconds.\nThe app is designed to be easy, motivating, and to facilitate further donations. The effort for donors is reduced to a minimum. Receiving a notification, such as \u201cthe coffee you paid has been enjoyed by James\u201d gives donors a good and warm feeling, motivating them to donate again \u2013 no matter how much they spent. And moreover, by giving donors the possibility to pay for products or activities they enjoy themselves, it's a very personalized experience.\nBy supporting this humanitarian project, UniCredit shows awareness for social needs and is associated with charity whenever someone sees a doGood logo, which is designed in a similar way to the UniCredit logo and mentions UniCredit as a sponsor.\nThe benefit for participating shops is two-fold. First, revenue increases when donors buy two instead of one coffee or movie ticket. Second, they themselves get positive publicity by supporting this project and helping people. Again, they are having as little effort as possible. After registration, participating stores have access to a dedicated web interface showing the type and number of donated products. An employee simply inserts the receiver's name. The donor immediately receives a \u201creward\u201d in form of a personalized notification.\nReceivers feel more integrated into the society and might finally be enabled to enjoy activities they were not able to afford on their own.\n** Use case **\nAnne waits for a coffee in a cozy little cafe just around the corner of her home. She really likes this cafe and the baristas there. As she lets her thoughts wander around, she feels like sharing this experience with someone who is not as fortunate as she is. How can she connect to someone? The solution is doGood. She quickly scans the doGood logo and donates a coffee within a few seconds. Only a couple of minutes later, James comes into the shop after a cold night on the street. He's incredible thankful when taking the free coffee from the smiling barista. Anne, already at work gets notified that James enjoys her coffee. That's a good start for a day.\n** Target group **\nPotential users of our app are all smartphone users who would like to help people in need. They don\u2019t need to be especially rich, because it is possible to select only a percentage of a product for donation.\nHowever, beneficiaries are not only the users, but also everyone who is eligible to receive the donations, the participating shops which will have more customers and will improve their image and UniCredit that, as the sponsor, will be present through the icons in many stores and products.\n** Technology **\nWe used Android studio to create an Android application for mobile devices. Additionally, we made use of the following APIs:\n\n  Gini for scanning our logo and extracting the code representing store and item.\n  Figo for in-app payment for the donation.\n  IBM Bluemix to deliver push notifications to thank the user when a person in need collected a donation.\n\n** MVB **\nThe minimum viable product consists of one sticker per participating shop which can be stick to, for example, the shop's door. It can be scanned by customers in order to donate one selected product from this store. The payment function works via figo. Shops get access to the web interface, which has been already implemented by us, where they can see the pre-bought products as well as mark and delete collected items. \n** Scalability **\nThe most important aspect in terms of scalability is the fact that all the needed infrastructure for running this proposed service is already given. Only minor changes in terms of the shops product design have to be made to integrate the logo which has to be scanned in order to donate, but no cost intensive investments regarding hardware (smartphones are widely available) or human resources (employees) are needed. Shops will get doGood logos with an identifier indicating the shop and the product. Since they can decide to hang a single logo over their products instead of directly putting it on a product, the costs can be kept at a minimum. A simple webservice allows shop employees to see how many and which products have been payed for.\nDonors simply need to download the app and register for the service. All payment is done by the app.\nReceivers do not need an app to use the service. They simply go to the shop of their choice and ask if there is, e.g., a coffee for free, bringing some proof of need.\nSince some cities or some districts of cities might need more donations than others, donations can be distributed. For instance, paying a coffee in your favorite cafe chain can enable someone in another district to make use of it.\nThere is no additional effort for UniCredit.\n** Challenges and solutions **\n\n  Several hours after the start, we were told that our planned app name (\u201cdoNation\u201d) was already in use for an app in development. This second app is not publicity available right now but being the nice guys we are, we decided to change name and logo, which allocated time and resources. \n  Payment will be done via figo. However, after talking to the team, we found out that there is no special screen that would be seen in the app. Therefore, implementing the API would have been useless for a first demo version. We decided to keep figo in mind for usage in case the app goes into production.\n  The gini API is used to scan products. This API is designed to use for documents so we had to modify it for ordinary OCR. However precision was very small in our experiments. This can be solved by changing the design of our product codes or by fine tuning the backend system of gini.\n\n** User feedback **\nWe conducted some interviews concerning the product. The feedback we got was overall very positive and we think that users might use our product. The main concern was if we would actually be able to get something into production. We guess that was because our paper-on-coffee-cup-or-musli-bar prototype did not seem professional enough. \n",
        "hackathon_id": "unicredit-appathon-2015",
        "winner": false
    },
    {
        "description": "\nHomeRun\nLink to Prototype\nlink\nElevator Pitch\nOur core mission is to transform residential real estate by making it simple and transact.\nHomerun gives home owners the ability to go online and sell their home with a few clicks.\nHomerun takes this very inefficient, long, intransparent and painful process of selling real estate (typically 126 days) by bringing it online we streamline a lot of the processes. \nType of the project\nWeb app\nMVP\nHomerun gives home owners the ability to go online and sell their home with a few clicks.\nTherefore selling real estate is faster, more efficient and simply beautiful for the seller. \nCore-Product: Great and simple UX for real estate selling platform.\nIn order to benefit from more transaction firsthand, we implemented a wide-label solution for Unicredit, which integrates the Unicredit API. \nTarget group\nIn general: every home owner, who thinks about selling his house/apartment.\nIn particular with integration of Unicredit API: A premium service for clients, who consider to sell their real estate.\nUse case\nIt's simple: A faster and more efficient sales process of real estate is benefitting not only the emotional side of the seller, but also the bank (reduce time of sale process leads to more transactions).\nChallenges & solutions\nChallenge: Integration of Unicredit API to access the client's information to aggregate and pass on user information to client side javascript. Solution: cloudbased middleware to surf client side code.\nScalability\n1) Cleaning the codebase: A prototype is not a product.\n2) Fully integrate with current real estate portal of Unicredit / Hypovereinsbank.\n3) Also consider streamlining not only the selling process, but also buying process of real estate (metric again time to transaction).\n4) Automating so far manual processes to become more efficient and transparent in order to turn the whole process of selling real estate into a beautiful and simple experience for the parties involved.\nTechnology\n\nHTML, JavaScript, JQuery, Bootstrap, .net, , C#, azure, asp.net\nUnicredit API, Gini, IBM Bluemix\n\nLink\nDemo Link\nSourcecode\nSource Link\nTeam Name\nSpectre\nTeam Members\n\nOlcay Buyan\nMichael Strobl\nChristian Strobl\nMoritz Kaminski\n\n",
        "hackathon_id": "unicredit-appathon-2015",
        "winner": false
    },
    {
        "description": "\nUniCreditAppathon2015\nThe UniCredit, better the local HypoVereinsbank, was closing many Branches all over Germany. This is for their customers really a pity. Many of the customers who was effected on this closing are small business or private customers, which now not can get easily to do their all day business. \nFor the app I decided to make, it is also a infrastructure invention necessary. The bank has to build mobile branches, like a truck with an office desk, a safe, a ATM and a account balance printer.\nWith this concept it is possible to all customers to get their known service and the bank don\u2018t need to provide everywhere branches but get the services they need.\n",
        "hackathon_id": "unicredit-appathon-2015",
        "winner": false
    },
    {
        "description": "\nElevator pitch\nmottoinvest is an easy way to select and invest in a diversified portfolio of stocks, linked to an investment theme. you can connect your bank account and invest directly into the selected investment theme, a so called \"motto\". Examples: home entertainment, healthcare facilities, robots & drones and many more. mottoinvest provides a package of stocks that fit right into the selected investment theme.\nType of the project\nmottoinvest is a mobile investment app for private customers.\nMVP\nYou can log into your bank account via the mottoinvest app, select a motto of your interest and buy or sell it. Furthermore you find background information regarding the mottos, index members, charts, weightings and performance data. The community can rate each motto, so you see how popular it is.  \nTarget group\nPrivate customers who are interested in certain fields and look for a way to invest into their hobby, their business or their passion.  \nUse Case\nYou can use the app whenever you want to buy or sell your investment.\nChallenges & Solutions\nThe challenge was to develop an easy-to-use interface (app), the integration of the APIs (Figo) and the connections between the app during the given time.\nScalability\nNext step is to allow customers to generate their own mottos. Besides, plans are to suggest mottos based on the customers' interests by analyzing their account transactions or their Facebook account etc. Implementing the possibility to trade the mottos fully integrated within the app.\nTechnology\nxcode, django, sql, figo, restkit, objective-c\n",
        "hackathon_id": "unicredit-appathon-2015",
        "winner": false
    },
    {
        "description": "\nTeam \u201cOsiris\u201d\nTeam members\nChristine\nTheresa\nAchim\nArmin\nChristian\nEugen\n\nProject name\nElevator pitch\nScreenshots\nType of the project\nMVP\nTarget group\nUse Case\nChallenges & solutions\nScalability\nTechnology\nDeployment link/source code\nTeam (name, skills, e-mail, mobile)\nProject name\nOsiris (/o\u028a\u02c8sa\u026a\u0259r\u0268s/, seat of the eye) was an Egyptian god, usually identified as the god of transition, resurrection, and regeneration.\nElevator pitch\n\u201cOsiris\u201d is an Application for the developer edition of SonySmartEyeglass. \u201cOsiris\u201d shall provide first banking features on this new \u201cwearable\u201d device by providing access to the own account and an overview over the account balance as well as the last transactions executed. \nScreenshots\nA binocular see-through eyewear with a wired controller that connects to your smartphone\n\nA transparent lens eyewear that superimposes information onto the wearer\u2019s natural field of view.\n\nType of the project\n\u201cOsiris\u201d is an Android enduser Application for personalized banking information on wearable devices such as Smart Eyeglasses, based on Sony Smarteyeglass(tm). \nMVP \u2013 Minimum Viable Product\nThe minimal features of \u201cOsiris\u201d are: Providing the user a real-time view on the personal bank account balance and on last transactions. \nTarget group\n\u201cOsiris\u201d is being designed as an application destined to adopters of SmartGlasses and in particular the Sony SmartEyeglasses as early adopters. Assuming the expansion of the use of Smart glasses in future, \u201cOsiris\u201d might turn into a mainstream application for SmartGlasses.  The market for Augmented Reality devices is estimated in reaching a volume of 7,5bn Euros by 2020 (DB Research, p.14)\n\nHence, the use of \u201cOsiris\u201d is contingent on the possession of smart eyewear as device. By implication, users of smart eyeglasses anticipate getting access to information services and apps in a similar way to what they experienced via Smartphones (see also \u201cAugmented Reality, DB Research, 20. August 2015, S.3). HVB as a premium service provider is expected to full fill these requirements.\n\nUse Case\nThe need for \u201cOsiris\u201d is the need for privacy and control in mobile banking. Whilst former banking applications were limited to devices where the screen had a size that could easily get insight, SmartGlasses provide the user with the advantage of unique and private insight of information. Personal (e.g. financial) information is limited to the person carrying the SmartGlasses only \u2013 this guarantees personal and data privacy in public environments and former impediments due to devices are being resolved.\nFurther, the SmartGlass provides handsfree and instant access of data. First, the access to messages or information is not contingent on prior extraction of the mobile device any more. Secondly, data is (if wished) displayed in the moment of arrival by the user. \nConsequently, with information only being displayed on the glasses, intrusion of ongoing processes (such as a working process, a conversation, telephone conference, etc.) can be avoided. The user receives information without any changes of the entourage. \nAs such, \u201cOsiris\u201d is the first application for clients for HVB using SonySmartEyeglass available on the market and the first banking application that was developed for SonySmartEyeglass globally.\n\nThus, a typical customer journey could be: \nJoey, 36, married and 2 children, living in Munich gets up at 6:45 am\nWhen being ready for work he leaves the house at 7:30 \nAs this is his first time alone this morning he accesses his personal bank account whilst going to the S-Bahn in the morning \nThe first information for him to be retrieved is the actual account balance  - for more information he clicks through to his last transactions as he wants to know whether the withdrawal for his daughter\u2019s school has already been effectuated\n\nChallenges & solutions\nImpediments due to technical issues:\nThe preset display settings of SonySmartEyewear is limited to a 4bit green scale and a 138x419 resolution which cannot be obviated.\nFunctioning of the application is limited to the battery. Thus, battery consumption might become an issue for future applications that are high in battery consumption. \nUnfamiliarity of users with smart eyeglasses might impede intuitive use of \u201cOsiris\u201d. Problems of usability were solved by limiting command options to scrolling and the \u201cbackward\u201d button. Slides/navigation within the application was adjusted likewise.\nFurther problems that arose are: Incompatibility between the software releases, e.g. Java and Android in conjunction with the developer edition glasses.\nScalability\n\u201cOsiris\u201d shows the initial set of functions for a SmartGlass Application. Further features that could be added are transactions execution via SmartGlass, read and pay bills via QR code, calculate credit profitability and the current credit account, etc. to reach to full banking functionality. Command of SmartGlasses shall be extended to its full range (e.g. eye tracking, speech recognition, gesture recognition). Further development of banking applications for wearables is highly recommended. German leadership in automation technology is to be used in developing strong strategies for augmented reality software as backed by DB Research (p.13).\nTechnology\nFirst banking app for Sony SmartEyeglass \nAndroid mobile phone is used as bridge device complementary to SonySmartEyeglass \nAPI \u201eTransactionList\u201c as an access point to HVB banking data\nSDK \u201esmarteyeglass-sdk\u201d developer kit for Sony Smartglasses\nNFC chips for personal authorization\nDeployment link/source code\nSony SmartEyeGlass SDK\nhttps://developer.sony.com/develop/wearables/smarteyeglass-sdk/\n\nFrom Appathon API Playground we have used the \u201cTransactions List\u201d API\n\nTeam (name, skills, e-mail, mobile)\n\nFrom left to right\nTheresa Seidl, Business and IT Student, Finance Advisor \nseidl.theresa@web.de\n+49 176 5786 1476\nChristian M\u00fcller, Student System Design\nchristian_mueller_91@gmx.de\n+49 170 225 3991\nAchim Lehmann, Industrial Engineer\nachim.lehmann@gmail.com\n0176 2282 1005\nEugen Stein, Student System Design\neugen27stein@gmail.com\n+49 174 377 5873\nChristine Koppelt, Consultant, Developer \nchristine.koppelt@innoq.comm\n+49 170 786 0189\nArmin Loeffler, Consultant, Project Manager\nal@thinking-machines.com\n+49 160 4711 131\nAnnex: \nYou can find more information online: \nhttp://unicredit-appathon-2015.devpost.com \nAuthors of this document: Theresa Seidl, Armin Loeffler\nDate: 8, November 2015\n",
        "hackathon_id": "unicredit-appathon-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nswiftobjective-c\n",
        "hackathon_id": "unicredit-appathon-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nOur team shares the belief that money management in young families (couples that are early in their relationship) can be improved. Also, according to a US divorce study (held in 2012) - \"financial arguments early in relationship may predict divorce\" (http://www.k-state.edu/media/newsreleases/jul13/predictingdivorce71113.html).\nWe believe that this issue can be addressed with a modern and easy-to-use app, that can help young couples / emerging families, together take care of future financial events. \"TWOPLAN\" tackles this problem with glance!\nWhat it does\nTWOPLAN is mobile app that is particularly designed for couples (people that plan or have a family) to make their shared financial planning easy, accessible and even delightful. Twoplan's innovative technology (based on Unicredit's API and IBM Bluemix) helps people predict their financial future and avoid negative financial events (make better financial decisions).\nTarget group\nMillennials (25-35) that start planning their future together.\nMVP\nThe current version of the TWOPLAN app is an MVP that allows couples to:\nA) connect their bank accounts together and see the \"shared account\" data;\nB) share current expenses and plan future goals (track the plan progress);\nC) classify previous expenses in a \"Tinder-like\" way (with left-right swipes gestures), so that the app learns;\nPlanned features:\nD) create shared budgets that make sense today and set you up for success tomorrow (together with an on-demand concierge service from the bank);\nE) receive alerts for unusual or unwanted account changes, and get customized tips for saving money;\nF) get a free credit score and learn how to improve it.\nBenefits for the bank\n1) Attraction of new clients: when 1 of 2 people is an existing Unicredit client\n2) Lower risk profiles emerge: \u00abfamilies\u00bb as clients VS. \u00absingles\u00bb as clients\n3) Additional scoring opportunities (shared budget): improvement of individual credit scoring \nHow we built it\nUsing the Unicredit API + IBM Bluemix technology. Likewise with node.js, android, heroku, python. javascript and html5.\nChallenges we ran into\nThe night was short :D But thanks for supplying us with energy!\nWhat's next for Twoplan\nTesting with the first pool of users to reach proof on concept!\n",
        "hackathon_id": "unicredit-appathon-2015",
        "winner": false
    },
    {
        "description": "\nName of the project What\u2019s the working title of your project?\nmyshare\nElevator pitch In three sentences - what\u2019s your idea?\nInterested in Profiting from Global Capital Markets? Ready to Buy Shares at Your Local Grocery Store? Looking for a Unique Gift?\nmyshare will change the investing landscape in brings the Global Capital Markets as voucher to your doorstep!\n1.Large barriers of entry for new and small investors exclude a large number of people from participating in the securities market - one of the few options to make money in the low interest financial environment. \n2.There are also plenty of potential clients who would prefer to give the gift of shares but who hand out money or retailers\u2019 gift cards for the same reason.\n3.myshare makes it easy and affordable for our clients to buy shares by the euro, or give gifts of shares by the euro to family or friends. \nScreenshot Please make a screenshot of your project and insert it here (use markdown)\nSee screenshot and Video below.\nType of the project web app, mobile app, data visualization?\nMobile app (online & offline link) \nMVP What\u2019s the minimum viable product? Which features does it have?\nThe minimum viable product includes functions for signing up of customers to open a free trading account and trading 30 shares from the German DAX \u00ae Index (execution-only-basis). The payment account collects the funds for investments. \nThe deposits are initially being done through electronic e-gifts or physical gift cards purchasable in shops redeemable for shares. In addition, direct electronic transfers into the depository will be feasible. In case of a gift the giver just chooses a particular share and the euro amount one wants to give (say, \u20ac50 of Siemens shares), inform myshare who the recipient is, and pay using a debit or credit card. The recipient gets the card by email, and redeems the card by clicking on a button in the email and logging in or signing up for a free myshare account. \nThe gift cards will be available in denominations of \u20ac25, \u20ac50 and \u20ac100, meaning the purchase will often be a fractional share of the share. For example, if Siemens is trading at \u20ac100 per share, one doesn\u2019t need to come up with \u20ac100 to get started. Clients can spend \u20ac50 to buy 0.5 shares of Siemens shares. There is a small transaction fee on the gift cards as well as on each share sell transaction. \nTarget group Who should use your product?\nmyshare will be useful to a very large variety of investors who are seeking capital gains but cannot afford to hold safe or well-diversified portfolios due to a lack of financial literacy or access to services. We believe that we can make investing attractive and fun to first time investors (most of whom, we anticipate, will be millennials). Our ideal client is a non-savvy investor who is able to put aside at least around \u20ac25/month. We are not targeting large multimillion-euro investors since such individuals can easily afford personal asset managers or buy into expensive portfolios. In 2014, an average of around 4.14 million direct shareholders were registered in Germany down from a high of of 6.21 million in 2000. Our rough calculations show that we can expect to obtain approximately 100,000 clients over a five-year period after launch. \nUse Case How will users typically use this product? \nmyshares\u2019 business model provides an easier and more cost effective way to begin growing the savings of our clients. Plenty of people would happily become shareholders in companies like BMW and Siemens if the process of buying stock were simpler. Also many of people would prefer to give the gift of shares but who hand out money or retailers\u2019 gift cards for the same reason. Everything in our brokerage is purely digital. All the confirmations and statements are in PDF form, so we do not have the legacy cost of paper and can lower the costs and barriers to entry. \nChallenges & solutions What was the most difficult part of the project? What problems did you encounter? How did you solve them?\nCurrently, there are no APIs for stock trading on mobile platforms available in Germany. Therefore, we had to built the MVP with our own mock-up system. We still need to iron out some regulatory issues such as the obtaining a license as a broker-dealer or how to collect information on the knowledge and experience of the investors (according to \u00a7 31 Abs. 5 WpHG). \nWe are confident that the contemplated fee structure, interest earned on the pre-paid cards as well as other potential revenue sources will make myshare a viable business model. The operating margin assumptions as well as the likely client acquisition costs versus their life-time value need to be further validated.\nScalability How can the project be further developed?\nOnce we have a working prototype running we will be able to show the feasibility of myshare on a small scale in Germany. We finished designing the basic front end of our Mobile app and started with the initial development of our backend for a fully-fledged Beta-Version to be tested with a select initial test user base. First of all, we need to integrate real time prices into our Mobile app. This a problem many trading Apps are facing at the moment. The investable shares portfolio has to be enlarged by shares from outside Germany and Europe. Clients may want to invest into a diversified portfolio not only consisting of shares. We plan to offer several ETFs that cover fixed income bonds and physical assets such as gold. . \nmyshare will be working closely with banks, where one will be able to easily buy or sell stock from those financial institutions. myshare will be behind the scenes, but one will see \u201cpowered by myshare.\u201d myshare\u2019s aim is to become a platform service, meaning clients can come through a third-party app or partner site or application or through a physical retailer because the platform is open. myshare can connect with anyone anywhere anytime: Consumers, employees, and enterprise customers can send any amount of stock to almost anyone, anywhere using myshares platform services.\nBringing this concept even further, it might even be considered to allow the transaction of shares between myshare users. This enhances the mobile character of this app and continues the path of rethinking online trading myshare is following.\nTHE CODE\nTechnology Which frameworks and solutions did you use?\nIconic (for Hybid App) & Scala (Serverside logic) & Figo API\nLink Please insert the deployment link. This is crucial. Try not to host things just locally\nlink\nSource code (optional) Please insert the link to your project\u2019s gitHub / Axway / Bluemix repository\nApp: \n[Link] https://github.com/igorzg/Appathon_app\nServer:\n[Link] https://github.com/igorzg/Appathon_server\nTHE TEAM\nTeam members name & last name, skill, e-mail, mobile number, Twitter handle\nAndreas Hendel, FinTech specialist, andreas.hendel@fine-fair-trading.com, +49 170  9148176\nIgor Ivanovic, Coder, igor.zg1987@gmail.com\nArjan Vlaskamp, Marketing specialist, arjanvlaskamp@gmail.com, +49 173 3293109\n",
        "hackathon_id": "unicredit-appathon-2015",
        "winner": false
    },
    {
        "description": "\nTime Donator\n\nSpend less time on your smartphones and use that time with your family, friends\nPunish yourself if you can't resist using your smartphones by donating to your favourite organisations (UNICEF ....)\nSee/Manage your all donation activities in one place\n\nType of the project: mobile app\nMVP: What's the minimum viable product? Which features does it have?\nTarget group: People who want to spend more time with family and friends\nUse Case: \nChallenges & solutions: Unicredit API not stable at this moment\nScalability: further integration of payment services as well as further sensor trackings (smoking cigaret, running)\nTechnology: iOS, Android, Gini, Unicredit API\nTeam members\nAn Tran, Manager\nMinh Nguyen, iOS\nCuong Hoang, Android\n",
        "hackathon_id": "unicredit-appathon-2015",
        "winner": false
    },
    {
        "description": "\nElevator Pitch\nTinder for investment deals. Digital portfolio agent suggests optimal financing mix. Meet the deal provider.\nTINVEST in a few sentences\nTINVEST is a unique and fresh way to approach the world of investments. The app offers you a list of investment opportunities (TINVESTments) based on your personal preferences and geolocation. Furthermore, a digital portfolio agent proposes the optimal financing mix for your investment by taking into account your account details. If you choose to do the TINVESTment, the app will trigger the payment transactions in your accounts.\nWhat it does - the typical use case in detail\nTINVEST suggests a TINVESTment based on your location and your personal investment preferences defined by categories such as fun, social, culture, technology or real estate. Each TINVESTment has a location and one of the categories. Furthermore, each TINVESTment requires a fixed amount of money to be invested by you.\nYou have three options to deal with the TINVESTment:\n\nIf you don't like it, swipe left.\nIf you do like it, swipe right. (You will hereby do the TINVESTment.)\nIf you are not sure, get further insights using the innovative digital portfolio agent (DPA). Not only, will the DPA suggest the optimal financing mix based on your account details, but it will also predict the change to your TINVESTment portfolio. Of course, you can always call your personal assistant directly from the TINVEST app to get an even more customized support.\n\nThe optimal financing mix will be calculated by an algorithm that optimizes the amount of money taken from each of your account types (i.e. checkings/savings/investments). In case you cannot convert enough assets into cash the bank can offer conditions for a loan directly in the TINVEST app.\nOnce you choose to invest, the TINVESTment provider still has the opportunity to decline your investment. However, if the provider agrees, he or she can schedule a meeting or business dinner with you.\nType of the project\nTINVEST is a hybrid mobile app supported by a middleware that in turn connects to the UniCredit Users, Accounts, Payments and Business Financial Management APIs.\nMVP\nThe minimum viable product has the following functionalities:\n\nYou can browse TINVESTments in an intuitive way.\nTINVESTments are recommended based on personal preferences and location.\nAn optimal financing mix is proposed by the digital portfolio agent.\nYou can contact your personal assistant directly from the app.\nYou can do a TINVESTment.\nYou can view your TINVESTment portfolio.\n\nTarget group\nTINVEST is aiming at wealthy customers that like to take a unique and fresh approach to investing.\nHow we built it\nThe TINVEST middleware provides a REST API that can be used by any kind of application (web app, mobile app, wearable app). Our prototype is a mobile web app. \nFurther details can be found in the technical documentation attached. \nChallenges we ran into\n\nCurrently there is no API available to request conditions for a loan from the bank.\nWe ran into problems setting up our project in the Bluemix default PHP app because some requirements were missing and we did not have a docker system for deploying it more quickly. We fixed that using other technology (Vagrant).\n\nScalability\nWe are using a middleware layer that can be easily scaled in the cloud using balancers. The more sensible operations are translated to the Unicredit API.\nDeployment Link\nlink\nUser: mario.rossi@hvb.de\nPassword: Tamismyfather\nTechnology\nThe middleware layer is developed with the Laravel framework using a LAMP solution (Ubuntu/Apache/MySQL/PHP) for designing a RESTful API. The prototype frontend was developed using ReactJS. The most relevant developer tools were Postman (in order to test the API) and Vagrant/VirtualBox/Puppet (enviroment).  \nWhat's next for TINVEST\nIn order to provide added value to the bank TINVEST would also require an API to request conditions for a loan from the bank. \nTeam The Bee(r)s\n\nMarkus (Marketing)\nLars (FinTech)\nDailos (Coder)\nCarlos (Coder)\nMartin (Coder)\nVeronika (Designer)\n\n",
        "hackathon_id": "unicredit-appathon-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe would  like to make the handling contract life easier. 3 clicks are enough to manage your correspondence concerning  your financial transactions.  So you can save money and time to use it in a meaningful way.\nWhat it does\nProvides you a simple opportunity to get  in contact with your financial partners. So you can make quicker and easier decisions about your contracts.  Get in contact within 3 clicks!\nHow I built it\nIt's build for mobile application (esp.  IOS). It's coded in C - objective. With interfaces to API from Gini and UBIS.\nChallenges I ran into\nThe main topic is  premium services with mobile app for private banking.\nAccomplishments that I'm proud of\nA great idea, team and a easy simple app application.\nWhat I learned\nGreat people and the easy way is the best solution. A simple working app!\nWhat's next for ReplyTiger\nSharing with the bank users!\nVideo: https://drive.google.com/file/d/0B7peEhytjDFOU1NGSUhCbnVwU2s/view?usp=drive_web\n",
        "hackathon_id": "unicredit-appathon-2015",
        "winner": false
    },
    {
        "description": "\nThe project\nName of the project / \nTeenWallet\nElevator pitch / \nHelping teenagers to manage their spending and propose targeting offers. Protect the kids by allowing parents to check their consuming behavior. Making it easier for parents to give money to their children\nScreenshot /\nType of the project / \nMobile app + wearables \nMVP / \nAn app which allows parents and children to log in to their accounts and manage their finances in the simplest way. The app creates a feeling of family with his colorful interface and it also motivates children to save and to use their money wisely. The MVP will include these features:\n\nRequest money from parents\nSend money to kids\nView the transactions list of each child\nSet a monthly allowance for each child (automatic transfer at the beginning of each month\nBlock or report lost debit card (children tends to loose lot of things)\n\nTarget group / \n7-16 years old teenagers and their parents.\nUse case / \nGiving pocket money to the children. Overseeing the children\u2019s consuming behaviors. Challenge them to reach specific goals to teach them how to manage their spendings. Children can request money from their parents (for example: books school supplies etc..)\nChallenges and solutions / \n\nOnly one developer for the entire iOS development. We solved it by using as many native iOS elements as possible.\nNo previous knowledge of the Ubis API\nGetting the SDK to work correctly, some errors with cocoapods appeared.\nDesign and conceive the UI and UX in this short amount of time.\n\nScalability / Steps for scaling the project\n\nApple Watch app for the parents\nAndroid app for parents and kids\nImprove backend using IBM Bluemix solutions\nConnecting the app with any bank account in Europe\nAdd ability to scan invoice\n\nPrototype videos are here: link\n\nInspiration:\nAccording to the latest survey by GfK, many teenagers in Germany are getting into the debt position or heavily indebted since most of them do not know how to get control on their financial spending. In worse case their parents have completely to be liable for for their debt. \nWhat it does:\nTeenWallet is an app for both parents and teens, which teaches teenagers to manage their daily spending on the one hand as well as informs the parents about their kid's financial situation in real time so they can preventive help the kids avoiding a debt position.\n Finance provider such as banks and insurance can eventually create the suitable products such as short term refinancing credit and/or further solutions for those customers\nHow I built it (Perjan, Quentin, Maxime, Minh Tri)\n\nA general meeting was done\nWe assigned the tasks\nEvery 90 minutes we would do a small status update\nMaxime took care of the prototypes and the UI\nMinh Tri focused on the research, market analysis and interview\nPerjan focused on the UBIS API study, SDK integration and putting together the initial Native App\nQuentin took care of the Keynote presentation, along with the animations\nWe did another big meeting when we had the UI designs ready, Perjan started to integrate them on the app\nAfter that Maxime and Quentin worked on the Apple Watch prototype\nMinh Tri and Quentin prepare the keynote facts and numbers\nPerjan integrated the Accounts API, TransactionsList API, Cards API\nPerjan worked on making the API work and managed to achieve successful payments between accounts.\nWe prepared the whole documentations and presentation.\n\nChallenges:\nOur team was set up by 4 persons with different backgrounds those met each other for the first time so we needed more time for team building, brainstorming, and task assignment. We are also not really familiar or gained any experience with provided APIs before. \nAccomplishments that I'm proud of team spirit and satisfaction in order to make our idea comes true.\nWhat I learned\nWe learn how to communicate to both technical and non-technical person in order to get the same understanding of the challenge, also to carry the idea out and to provide the product in the short time schedule\nWhat's next for TeenWallet\nThe possibilities are endless and we see a huge market for the app.\n",
        "hackathon_id": "unicredit-appathon-2015",
        "winner": false
    },
    {
        "description": "\nReality\nLandlords rarely provide their tenants with receipts when paid.  If your landlord loses your transaction data - it may be their word against yours.   \nTenants need an app that can record the details of transactions they make including:\n\nWho payment was made to (the payee)\n  Payment amount\n  Payment type (instrument)\n  Purpose of payment\n  Date payment was made\n  Who accepted the payment\n\nSolution: paid it!\nA mobile app for clients facing eviction due to lack of evidence to present in legal cases.\nHow?\n\nTenant gets a check, money order, etc.\n  Tenant fills out the necessary information, such as the payee (the landlord or property agent), the purpose (rent, security deposit, utilities), and endorse it.  \n  Tenant opens **paid it!** and snaps a photo of the check, etc.\n  Tenant uses the app to enter information about the transaction, such as:\n    the payee\n    the amount\n    the purpose of the payment\n    the date\n    the type of payment.\n  Tenant uses the app to get a signature of the person accepting the payment.\n  Tenant saves the transaction information.\n\nHow we built it\nWe identified key technical issues and created a proof-of-concept using iOS and Android platforms.  We then developed personas, created user flowcharts, and white-boarded the application process.\nWhat's next for paid it!?\nWe'd like to explore the needs of our target audience in greater detail, and create more detailed personas for our test scenarios.\nCloud storage is also in this app's future, which would allow greater support for our users on whatever platform they pick up.\n\nHave questions, or want to get involved?\nDestinee Evers, Project Manager: destinee.evers@icloud.com\n\n",
        "hackathon_id": "ssjhackathon",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascripthtmlcssc#asp.net\n",
        "hackathon_id": "ssjhackathon",
        "winner": true
    },
    {
        "description": "\nInspiration\n\nThe 36 million self-represnted litigants who have difficult access to legal services\n\nWhat it does\nOur app addresses the challenges and barriers to access, reduces the time required to enter the forms, and presents the information in the form to the user in a more understandable format.\n\nSo we\u2019ve built a mobile app provides personal access anytime anywhere you need it. (Mobile View)\nWe auto-populate repetitive form questions (Show a form item)\nAnd let you literally say what you mean using voice-to-text built into the majority of smartphones\nFinally, we improve understanding by providing questions in plain english\n\nHow we built it\n\nWe divided the project work into our areas of specialization. Walked through the customer's journey to understand the challenges and we divided the work so that each person could begin work. Dan, Judd, and Taylor developed the app architecture, Bob and Mathias studied the user flows and interface requirements, while Katherine provided the overall subject matter guidance and project inspiration.\n\nChallenges we ran into\n\nThe technical challenges provided some surprises and unexpected delays, but our devlopers worked as a team to solve them.\n\nAccomplishments that we're proud of\n\nWe designed a scalable design that addresses the challenges presented\nComprehensive deconstructed of the overall solution to understand the solution in context\nDevloped a solution that integrates into existing systems\nThat we're making court forms more accessible\n\nWhat we learned\n\nWe learned that this system could be implemented locally as well as nationally\nSome simple technology development can have a tremendous impact on society\n\nWhat's next for Court Whisperer\n\nSharing with non-profit technologists\nSharing with government agencies\nFind supporters to develop and deploy the system \n\n",
        "hackathon_id": "ssjhackathon",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascriptnode.jsmeteor-framework\n",
        "hackathon_id": "ssjhackathon",
        "winner": true
    },
    {
        "description": "\nInspiration\nThere are thousands of legal resources available to people with their legal problems. \nWhat it does\nLawZing curates online legal self help resources, grading and promoting the best sites to get people the help the need. \nHow I built it\nDeveloped a rubric and designed a webpage\nChallenges I ran into\nTime to validate the project and back end developer support\nAccomplishments that I'm proud of\nThe QRater rubric that objectively evaluates the quality of websites.\nWhat's next for LawZing\nExpand the jurisdiction scope, automate the ranking rubric and open source the tool.\n",
        "hackathon_id": "ssjhackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\nwebpress\n",
        "hackathon_id": "ssjhackathon",
        "winner": false
    },
    {
        "description": "\nConflict Hacking Guide\nThe Vision. \nWhen people are experiencing a conflict with someone else, they often feel alone and don't know what to do or to whom to go for help. The Conflict Hacking Guide is a starting point for them. Whether it is a conflict at home, work, or anywhere in between, the Conflict Hacking Guide will triage the conflicts and point people to resources and people that can provide helpful information, coaching, legal advice, or even legal representation. It would help with resources for interpersonal conflicts, family and work conflicts, and even when suddenly faced with a subpoena, summons or threat of a lawsuit.\nThe Prototype.\nAt least that is the vision. We started out strong, but ran into some speedbumps. Our goal was a very simple, web-based question and answer tree design. We used QNA Markup and started developing the content. Jim developed the initial structure for the tree and the conflict coaching branches, while Tom developed the legal assistance branches. Ket was developing the site, UI, and plugging the text content into the QNA Markup.  Late in the day of the hackathon, about an hour before final submission, our tree cracked. To get the UI to work again in time to submit something for the judges, we had to amputate large branches (think the fight with the Black Knight in Monty Python and the Holy Grail...). \nThe Need for Iteration.\nThat is where we are now. The judges' questions pointed to a need to rethink the project somewhat, specifically how we get people to use the Guide in the first place. Definitely, getting people to the information is an important factor that would need to be included in the redesign of the Guide (or something similar).\n",
        "hackathon_id": "ssjhackathon",
        "winner": false
    },
    {
        "description": "\nWhat it does\nHelp police departments/areas measure their impact by creating effective visualizations of crime statistics and police reports. \nHow We built it\nWe used Seattle 911 police calls and police report data to create our own metric for determining the effectiveness of police departments. With the datasets, we separated data values corresponding to their respective date and precinct groups; we then compared computed a mean percentage value of phone calls that corresponded to a filed police report. This data can be seen on the donut chart. Additionally, we used overall crime data to plot the total number of reported crimes throughout Seattle from 2008 - 2014, and included data about the 2014 Seattle Endorsed Budget in a table.  \nWhat I learned\nThroughout this process, we learned to look at data and practice manipulating variables to engineer new metrics for finding new trends and displaying the same information in a more effective way. We also learned new ways to display and design data results that are more communicative to a wide audience.  \nWhat's next for Police Assessment Tool\nThe goals for this project include engineering new features to measure police department performance and creating new data visuals for all features. Using more datasets, we also hope to plot crime rates/statistics and budget spending grouped by different precincts in the Seattle area. Our overall goal for the project is to help users assess how police departments are performing and determine if any areas of funding can receive more attention in order to reduce crime rates all throughout Seattle. \n",
        "hackathon_id": "ssjhackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\nrelayr\n",
        "hackathon_id": "ecomhack-berlin",
        "winner": true
    },
    {
        "description": "\nInspiration\nNot knowing your way around a supermarket or warehouse can greatly slow you down when you are planning on buying some goods. You end up running from side to side trying to find that very well hidden item, as if you were on a quest for the Holy Grail. So why don't we turn Augmented Reality on and directly visualize where those items are?\nWhat it does\nJust fill your shopping cart with everything you need via any of our multiple channels (we are omnichannel, you can fill it anywhere!). Once you arrive to the place, just open the Shopiway app in your smartphone and enter your customer email: you can quickly see those items in your shopping cart around you.\nHow we built it\nWe used an Augmented Reality framework for iOS that can display geolocations around you and we connected Commercetools Platform as a provider for those geolocations. Therefore every product has a coordinate associated that represents where it is located.\nChallenges we ran into\nThe major challenge (for half of the team) was dealing with Augmented Reality and iOS for the first time, without any previous experience; especially when you have to use a programming language with quite a peculiar syntax such as Objective-C.\nAccomplishments that we are proud of\nWe managed to build a completely functional and eye-catching application in just one day, as we didn't plan to participate from the beginning.\nWhat we learned\nOur way around Augmented Reality, which is just the beginning of more awesome things to come ;)\nWhat's next for Shopiway\nIn order to increase accuracy of the products location and allow the user a faster recognition, the current location-based Augmented Reality can be enhanced using markers. A more sophisticated solution can also involve using beacons to report the location to the device at short distances.\nBut the functionality can also be extended: currently Shopiway is just showing you the last cart you used, but it can easily support your own shopping lists, so that you can select the one you wish to display. Besides that, the way the products are displayed can be improved with more information (e.g. pictures) that allows the customer to identify faster the items. Selecting a product to receive additional information should also be possible.\nA greater improvement would also be to implement payment, so that the customer can finish the order on the way and simply go to the store to pick up the items him/herself. This would allow merchants to offer this kind of service without extra costs of staff.\n",
        "hackathon_id": "ecomhack-berlin",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe wanted to bring back the customers to the shops.\nWhat it does\nIt connects the brand with its customers.\nIt add the fun in shopping.\nHow I built it\nWe created :\n\na booth composed of a screen, a beacon and a bt.tn\na mobile app\n-- using the commercetools API to provide product listing + cart\n-- Using estimote SDK to provide geolocalisation\nan API with golang\n\nThe screen is showing a countdown, either the time until next flash sales or the time remaining in the current flash sale.\nNear the screen we have a beacon to geolocalise the users. when a user goes into the range of the beacon and press the button, he'll get a discount on the current product shown on the screen.\nThe discount is automatically applied to his account without any action.\nWhen going to the cash register the customer is recognized with his mobile and the discount is applied when entering the order in the system.\nThe mobile application is showing a list of product and is scanning the nearby beacons.\nWhen one of our beacon is nearby the mobile app is sending this information \"customer near by beacon X\" to our API.\nThe button is linked to our API, when it's pressed it's sending the information to our API.\nThe API is recording \"button pressed\" events and \"customer near by beacon\" events and does the matching.\nIf a customer was near by when a button is pressed, a discount is added to his account.\nChallenges I ran into\n\nEstimote SDK\nAndroid programming\nFinding a good idea\n\nAccomplishments that I'm proud of\n\nTeam building\nBrainstorming\nwe got a prototype done\n\nWhat I learned\nThe possibilities of beacons are amazing, they can be used for many purpose.\nWhat's next for the flash\nThrow away the prototype, maybe build a real product out of it ?\n",
        "hackathon_id": "ecomhack-berlin",
        "winner": true
    },
    {
        "description": "\nBuilt With\nphpcssjavascript\n",
        "hackathon_id": "ecomhack-berlin",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroidsphere.ioestimote\n",
        "hackathon_id": "ecomhack-berlin",
        "winner": false
    },
    {
        "description": "\nMotivation\nNowadays, we live in a world of buyer markets. Nevertheless, purchasing items usually works like in vendor markets: the vendor gives an offer and any buyer can act upon it. This has to change.\nOn eCom Stock customers publish their willingness to pay. Every vendor can act upon this immediately because the customer committed to the potential purchase - also supplying his payment information.\nIn order to facilitate market transparency all past transactions are published anonymously.\nWin-Win-Situation\n\nCustomers win because they can potentially buy products cheaper.\nVendors win because they can easily act upon purchase offers in real-time - taking into account their individual stock levels and profit margins.\nIn a nutshell, the total market transparency improves the overall product allocation.\n\nHow to access the market place\n\nOnline: conveniently access our online platform via any internet device\nOffline: get a Beacon notification if you pass by an item that is available via the online platform\n\n",
        "hackathon_id": "ecomhack-berlin",
        "winner": false
    },
    {
        "description": "\nInspiration\nAs offline shop owner I want gather some data about popular goods and places where my customers are standing more then N secs, also I can build prediction how many persons are standing at venue each time. Each viewed product will be marked as suggested if my customer is leaving shop without any buyings.\nAs customer I will be glad to get some discount without begging - just for the fact I'm a permanent buyer here.\nWhat it does\nWe collect depersonalized  (until customer approves it to get extra discount) information about indoor location.  \nHow we built it\nWith iBeacons from estimote, the ecommercetools API, an php backend and leaflet.js for the map.\nChallenges we ran into\nWe chose one technology, but after some research we understand that we cannot get what we want in certain amount of time. So we decided to switch to fallback technology stack just 24 hours before hackathon ends. \nThe iBeacon data is jumping all over the place.\nAccomplishments that we're proud of\nFixing the jumping iBeacon data, tracking data in realtime and visualizing it on a map.\nWhat we learned\na lot how to handle iBeacon data and mapping.\nWhat's next for Watchr\nInject BI into collected data.\n",
        "hackathon_id": "ecomhack-berlin",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroidjavaparseyoyowallet.com\n",
        "hackathon_id": "playground",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtmlcsspythonneo4jtransaction-apiionic\n",
        "hackathon_id": "playground",
        "winner": false
    },
    {
        "description": "\nBuilt With\npusheriosnode.jsbootstrapestimote\n",
        "hackathon_id": "playground",
        "winner": false
    },
    {
        "description": "\nBuilt With\nnode.jsionic\n",
        "hackathon_id": "playground",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroid-studiojavaloveapi\n",
        "hackathon_id": "playground",
        "winner": false
    },
    {
        "description": "\nblank\n",
        "hackathon_id": "playground",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptnode.jspusherstripehtmlcss\n",
        "hackathon_id": "playground",
        "winner": false
    },
    {
        "description": "\nWho are we?\nFELLOWS; A high-end clothing subscription service for men who have the desire to be stylish with minimum effort involved. \nWhat do we do?\nRent clothing and accessories, with the option to purchase items that you would like to keep. You can have limitless access to our collections every month and never get bored with your clothing again. Packs are sent with a mixture of high-end designer brands and we will ensure you love the outfits that we sent.\nHow does it work?\n1)  Start by creating an account and complete the personal profile building upon the favourites you selected in your application. Then simply pick the collection(s) that satisfy your requirements and you would like to experience. \n2)  Receive an outfit to wear on loan that is a styled based on your preference.\n3)  Return by cut off to get your next pack, shipping is free both ways. \n",
        "hackathon_id": "playground",
        "winner": false
    },
    {
        "description": "\nBuilt With\njqueryhtmlcsswebapiphonegap\n",
        "hackathon_id": "playground",
        "winner": false
    },
    {
        "description": "\nInspiration\n\nPain point in ecommerce for retailers\nFuture of ecommerce moving to data driven, personalisation\nSupport in developing ideas by Nick, Hafez and all YoYo team\n\nWhat it does\n\nSave what you want to buy from multiple sites\nMake a single payment in our site, bypassing all registration required\n\nHow we built it\nStarting off with an Ionic/AngularJS/Cross-Mobile-device approach we quickly pivoted to a completely web-based app with a FuelPHP/MySQL [LAMP] backend and Bootstrap/Javascript frontend. A Google chrome JS based extension compliments our app and a Neo4j database helps us recommend products to users based on previous purchases of similar clients. The Pusher API makes the interaction between the Chrome extension and our servers easier and we've simulated the Yoyo endpoints that are currently private to meet our payment needs.\nWe've had to manually integrate through the extension into websites of suppliers.\nChallenges I ran into\n\nFinding a compelling use case\n\nAccomplishments that I'm proud of\n\nWe learn a lot, worked really fast and was a great team\n\nWhat I learned\n\nTechnical: Google chrome extension development, Pusher API\nNon-technical: Business model generation: user first\n\nWhat's next for uBasket\n\nSince we gather complete data on consumer's online shopping behaviour, we can do a lot with that\nAlso we can keep pushing boundary of ecommerce by solving the 68% shopping cart abandonment problem that cost the industry 4 trillion USD (growthhacker.com) using our data from understanding behaviour to increase start to purchase conversion\n\n",
        "hackathon_id": "playground",
        "winner": false
    },
    {
        "description": "\nInspiration\nOur dog Matilda stays at home while we're out during the day. We wanted to know what she does while she's at home. Does she sleep? Does she play with her toys? Does she pace around? That's why we built Matilda- telemetry for dogs. If we can use telemetry data to know what rockets are doing, why can't we know what our dog is doing?\nWhat it does\nMatilda monitors a dog's activity throughout the course of a day. It wears like a normal dog collar. Myo is a great fit for small dogs because it is elastic enough to fit around a dog's head. The accelerometer and gyroscope track x,y, and z dimensions. Myo also calculates pitch, roll, and yaw data for more useful movement data.\nHow we built it\nWe began by setting up a ConnectTheDots page on Azure. Next, we wrote a script for the Myo to transmit data up to the cloud to be graphed over time. Data points uploaded include x, y, z, pitch, roll, and yaw data points as recorded by the Myo. We also created an Android app to allow the user to start and stop recording data.\nChallenges we ran into\nOur first major challenge was setting up Azure and ConnectTheDots. Once we had that up and running, we ran into some problems with the speed at which data can be uploaded to Azure. Myo captures data roughly 60x/second. This produces a lot of data which needs to be transmitted to the cloud. We are considering storing the data in larger payloads rather than smaller ones.\nAccomplishments that we are proud of\nOur team began the weekend with no prior experience with Azure, Myo, or Android development. In just 3 days, we came up with a really cool concept, set up an Azure webpage, and started collecting Myo data with an Android app. \nWhat's next for Matilda\nWe want to create profiles of different types of actions a dog might be doing throughout the course of a day. For example, our dog loves to jump and twirl in the air. By collecting and analyzing enough data, we expect to find that the action of twirling changes particular data points. Once we have profiles of different actions, we can tell the user precisely what their dog is doing while they're away from home. The user won't have to read a bunch of numbers to understand whether their dog is happy or getting into trouble!\n",
        "hackathon_id": "wearhacksla",
        "winner": true
    },
    {
        "description": "\nInspiration\nDesigner, Writers and Coders Alike want to be able to take data from one application to another without the use of a mouse or tablet. Now take control with your hand\nIn addition we created a Motion Greeter, greet your guest before they greet you!\nWhat it does\nUsing only your hands and gesture you can move content within and between application.\nMotion Control Greets\nChallenges I ran into\nMapping 3D coordinates to 2D positions\n",
        "hackathon_id": "wearhacksla",
        "winner": true
    },
    {
        "description": "\nBuilt With\nkinectmayaunityc#mechanimwindows-8visual-studiovoice-recognitioncomputer-vision\n",
        "hackathon_id": "wearhacksla",
        "winner": false
    },
    {
        "description": "\nWe wanted to alert others of a fall.\nDetects a fall using  Photon and Internet Button, sends data to the cloud, and then notifies the correct party.\nIt is built using Particle Online IDE, Microsoft Azure, and IFTT.\nSelecting the right device was a major challenge. The configuration of Azure components was also difficult.\nWe are proud of the amount of work we put in in order to interface with the Photon with the cloud, and mobile devices. Also of the amount of information that we processed and learned was a huge success.\nWe learned how to code on Particle's IDE for photon, configuring Azure, and using IFTT.  We also learned how to work with metawear device, and SDK's in Android Studio which were not used in final project.\nImprovements to follow will be smaller form factor, and detection of other events such as seizures.\n",
        "hackathon_id": "wearhacksla",
        "winner": false
    },
    {
        "description": "\nInspiration\nRemember those cold days when you don't feel like getting off your comforter to turn on and off the lights in your room? And those days when you see that the lights in your room were on all day when you were off to work? \nWhat it does\nYou no longer have to be at home or anywhere near your device to control them. Just speak to your Pebble and it does it all for you!\nHow We built it\nWe used pebble dictate api to listen to the users request and transcribe it to text. We parsed this text in our android app and made UI changes. We further made POST calls to photon cloud which is connected to devices at home to turn them on or off according to the users requests.\nChallenges we ran into\nPebble Dictate api is very new and it was recently been released for third party app developers and we found it hard to work with it as it was still buggy and required a lot of work arounds. \nAccomplishments that we are proud of\nWe finished what we aimed at and came out with our first prototype within our goal time. This is our first pebble and photon app and this is the first of its kind app which uses pebble dictate to control devices.\nWhat we learned\nDeveloping apps with pebble, Photo and Android. And also how much fun it is work as a group:P \nWhat's next for Pebble_Dictate_IOT\nWe have a lot in mind. We plan to have a web portal using windows azure so that we can scale our product. We also plan to provide better hardware. May be make relay shields for photon to make it easier to control your devices easily. Also plan on making a better second prototype for our android app and also having a UI to show the status of the devices on the pebble app. \n",
        "hackathon_id": "wearhacksla",
        "winner": false
    },
    {
        "description": "\nInspiration\nFitness tracking has become a huge market, but most trackers only do steps and are not a good overall measure of activity. We wanted to extend the functionality of these trackers by being able to count reps of exercises like pushups, and pull-ups.\nWhat it does\nCounts pushups. First the user runs an application that collects the raw data from the myo, and that is dumped into a csv file in a folder. A script watching that folder executes a java program with the file as an argument every time a file appears. The java program smooths and analyzes the data for number of pushups and uploads that information to a parse database. A user can then go online and track their progress at the website.\nHow I built it\nWe started by collecting raw data from pushups, and loading it into Excel. Using Excel to graph the data, we could change it and see the results in real time. We used Excel to model the smoothing algorithms (a combination of 4 exponential smooths and 1 moving average). We rewrote the algorithm in Java and added a function to convert the data points into vector strings. Using excel again, we matched portions of the vector strings to the pushup motions. The Java program then scans the entire string for our model we defined using a fuzzy string matching algorithm.\nChallenges I ran into\nWe tried using azure to host the database but unfortunately we couldn't get it to work so we pivoted to parse, but used azure to host the website.\nWhat's next for Swole\nRight now, our demo only counts pushups, but we could add other exercises. Also Improving the algorithm recognition, as well as transitioning from the myo to Apple Watch, Pebble Time, or Android Wear. Could also crowdsource user data for some fun projects.\n",
        "hackathon_id": "wearhacksla",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe wanted to create an underwater game using virtual reality and some sort of interactive hardware.\nWhat it does\nInteract with your surroundings underwater while shooting at targets.\nHow I built it\nUsing the unity game engines coupled with the oculus rift and leap motions SDKs.\nChallenges I ran into\nGetting everything to work with one another, version crossovers were a big issue.\nAccomplishments that I'm proud of\nGetting a finished, working, really awesome product.\nWhat I learned\nMore about hardware hacking.\nWhat's next for The Last Frontier\nNothing.....it's The LAST Frontier.\n",
        "hackathon_id": "wearhacksla",
        "winner": false
    },
    {
        "description": "\nStorm Alert\nAn IoT Web-Based Application that uses the Particle Proton and the SparkFun Weather Shield to determine if there is going to be rain in your current location. Rather than checking a prediction by the news, this application uses more accurate data to get a better and more precise reading on the current weather. \nThis Weather Probability Algorithm uses Relative Humidity, Dew Point Depression, the Slope of Relative Humidity, and the Slope of Temperature to get a probability of rain. Research was done in 12 hours, so the algorithm needs to be refined with actual information from a meteorologist. \n",
        "hackathon_id": "wearhacksla",
        "winner": false
    },
    {
        "description": "\nInspiration\nHave you ever lost your items? Well, we have countless experiences where we have absentmindedly placed our possessions down and instantly lose track of them 5 minutes later. Is my wallet in the... kitchen? living room? my car? Well no more will we have to think about where we left our possessions because we are now able to track our possession with Estimotes and a pebble watch.\nWhat it does\nWhen we walk into a room, the room stands for Estimote beacons and stickers. It then sends a list of the items into firebase, an online database, where we keep track of where items that have stickers attached are located. When you are connected to your pebble watch, a list of the currently tracked items will appear on the pebble. Then, using voice commands on your pebble, one can locate an item that is being kept track of. \nHow I built it\nThis app was created through Android Studio using Estimote and Pebble APIs. \n",
        "hackathon_id": "wearhacksla",
        "winner": false
    },
    {
        "description": "\nBuilt With\ntwiliobingazurepythonhavenruby\n",
        "hackathon_id": "bostonhacks",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe sought out to solve the navigational problems faced by the blind and visually impaired people. The design was inspired by the fictional character Matt Murdock (Daredevil) who can \"feel\" his environment.\nWhat it does\nIt's a system that detects the surroundings using a 3D camera and alerts a blind person when there is an obstacle in front of them. It then allows them to sense their surroundings and guides them through it..\nHow I built it\nThe Kinect camera is used to detect the obstacles and perceive the surroundings. The Myo armband helps to give the user haptic feedback in the form of vibrations about their environment and find a safe passage.\nChallenges I ran into\nSetting up hardware, using unfamiliar language and frameworks, and lighting conditions affecting the 3D camera.\nFuture Endeavors\n\nProvide support for other 3D cameras\nFaster processing\nMore accurate sensor readings.\nPort the system to single board computers like Raspberry Pi\n\n",
        "hackathon_id": "bostonhacks",
        "winner": true
    },
    {
        "description": "\nInspiration\nOn the ride to Boston from Waterloo, I felt tired despite sleeping a good number of hours. Thus I came up with the prediction that sleeping positions play a large role in how we feel the next day and the years coming as it puts a strain on the body leading to other medical conditions.\nWhat it does\nIt determines the sleeping position of people who are sleeping in bed by finding out which position is most frequent it can show how the position affects your whole body.\nHow we built it\nWe used the kinect to find joint positions and machine learning to created  preset positions for sleeping positions. Whenever someone sleeps in a certain position, we can find the patterns and determine which position they are sleeping in then text to the phone.\nChallenges we ran into\nThe challenges faced were trying to use machine learning for the first time, creating classes with a lot of data, and integrating the whole system together. \nAccomplishments that we're proud of\nThe overall challenge of learning new languages and understanding different apis in order to create our project was a huge accomplishment.\nWhat we learned\nWe learned how to work as a team and integrate different computer languages together to complete one whole project. We also learned how to work under time constraints.\nWhat's next for Mobile Sleep Doctor\nThe next thing for Mobile Sleep Doctor are to be more accurate and have diverse sleeping positions. We hope Mobile Sleep Doctor will be the main tool for people hoping to learn about their sleeping positions.\n",
        "hackathon_id": "bostonhacks",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe wanted to spice up an ordinary jog where the only goal was for your own physical benefit into a competitive game where you can earn territory for your jog.\nWhat it does\nWe utilize the microsoft-band and android mobile device to track your route and verify if you are indeed jogging. After returning to your starting point, it will submit to the server the area you captured. You are able to capture your enemy's turf and unconquered turf. You forfeit your current route if you stop for 30s, so we make sure you are earning your turf.\nHow I built it\nWe used the microsoft-band to track if your heartbeat is high enough to be considered good activity and if you are jogging. This is utilized by the mobile app to determine whether it should continue polling and forfeit the route. The android app displays a simple map view that updates as you run your route so you can see how much territory you can capture on your current route. After returning to the starting point, you complete your route and the turf amount is submitted to the server and stored.\nChallenges I ran into\nWe had challenges integrating all the technologies together.\n",
        "hackathon_id": "bostonhacks",
        "winner": true
    },
    {
        "description": "\nInspiration\nAfter traveling so often we realized that getting directions and travel information was impossible without a data plan. Hence, we decided to create an app that uses SMS to get directions to a specified location, nearby wifi hotspots or restaurants.\nWhat it does\nUsing Twilio to connect the Android application to the server, you can still get directions to wherever you need to travel to without taking a hit on your data plan.\nHow We built it\nNode.Js, Twilio, Google Maps API and Android\n",
        "hackathon_id": "bostonhacks",
        "winner": true
    },
    {
        "description": "\nInspiration\nSage is built on the firm foundation to change the world of interactive technologies. The mobile personal assistant derives solely on the belief that life should be easier and knowledge should be accessible in the easiest of means. \nWhat it does\nThe mobile personal assistant acts as your know-everything best friend - from understanding the state of the current stock market to having foresight of a stormy weather to even having the capability to bring you to restaurants you have been craving for centuries, with just a simple text - one will always be well informed. Sage also has the fullest capabilities to sense the user's emotional state using sentiment analysis - so get ready for some emotional conversations! Sage is built for the sole purpose of having your right hand man where you are. Dedicated to perfection in your duties and ease of life. \nHow we built it\nThe unprecedented backend consists of Django, Python, and multiple dominant APIs (Yelp, Open-Weather Map, Luis (Microsoft), Wolfram, Markit-data, and HP-Haven sentiment analysis). Using Android Studio, the front-end is built with elegant design and smooth user interface. Awesome huh. \nChallenges I ran into\nDebugging + sleep deprivation. \nAccomplishments that I'm proud of\nLove and love. \nWhat I learned\nHow to love. \nWhat's next for Sage\nSage will be continuously updated and perfected. To infinity and beyond!\n",
        "hackathon_id": "bostonhacks",
        "winner": true
    },
    {
        "description": "\nInspiration, What it does, How we built it\nCompareMe is our solution for a quick and easy way to see what people think about certain topics. These topics can range from well-known people, organizations, companies, places, films, and universities.\nCompareMe takes in a search query and uses Haven on Demand\u2019s Entity Extraction API to identify the entities, or important topics, to use in its search. It then digs through the past week on Twitter to find all of the tweets pertaining to these entities, runs Haven on Demand\u2019s Sentiment Analysis on these tweets, and calculates the average sentiment for each entity per day. CompareMe also keeps track of the overall number of positive and negative tweets for each entity and displays this data as well.\nSoftware stack:\nNode.js, express.js, MySQL, jQuery, chart.js\nExperience\nThe Text Analysis APIs are actually quite powerful, which made achieving our end goal of creating a quick general opinion visualization tool much easier. The Entity Extraction API ultimately dictated what tags to search in Twitter, and the Sentiment Analysis API did all of the work in determining how people felt in the past week about these tags. All we had to do was create a way to put this data into intelligible graphics.\nWho we are\nEdward Yang - Last year at University of Waterloo\nDuring high school, an upper year recommended I try out an \u201cintroduction to programming\u201d class where the final project was building any game for fun. Fell in love with hacking stuff since then. Had a great time at Boston Hacks, spent 4 hours getting fried chicken with some friends in the area. Lots of swag, lots of food and great prizes! \nKylie Wu - Sophomore at Columbia University\nI think I can say that I first got interested in technology when I was a young child, while watching my dad tinker with the computer that he put together himself. From that point on, I was curious about learning how computers worked. My experiences at a robotics summer camp, and through my game creation group projects in my high school programming classes only furthered my passion for technology. I guess I can say I\u2019m addicted to solving problems and creating things.\nBoston Hacks was my first hackathon, so I came in not really knowing what to expect or what I wanted to build. I was able to put something together within those 24 hours and saw a bunch of other great projects, so all in all, I had a great time.\n",
        "hackathon_id": "bostonhacks",
        "winner": true
    },
    {
        "description": "\nBuilt With\nswift\n",
        "hackathon_id": "bostonhacks",
        "winner": true
    },
    {
        "description": "\nInspiration\nIn 2008, when the earthquake hit Sichuan, I feared for the lives of my relatives in China. They live in a province nearby and felt the effects. I remember me and my family worrying and constantly calling relatives in China to check up on them, scared that some of them would be lost. Due to this experience, my team and I came up with an idea to make spreading the notice of missing people and finding people much easier with our web application.\nWhat it does\nWe made an web application that allows people to look for loved ones whom they have been separated from due to a natural disaster of any kind, by simply posting a picture and filling out the full name of the person they are looking for and an email for notifications in the seeker section. Furthermore, our web app also allows someone who has found someone that needs help and they can post their picture, name and email on the website in the savior section and the picture will be cross matched with all the pictures in the seeker database and if there is a match, both party's will be notified.\nHow I built it\nThe front end was made with bootstrap with some editing. Node.Js was used to deploy a quick server and Kairo API was used for the facial recognition.\nChallenges I ran into\nJavaScript was a pain to use. \nThe time constraint. We needed more time to make everything fully functioning and to put everything together.\nAccomplishments that I'm proud of\nWe are proud that we did not give up despite being stuck multiple times and having such a short amount of time using things that we are not very familiar with.\nWhat I learned\nNot only that wasting time is terrible, but we learned alot about the various technologies that we used such as java script and jquery.\nWhat's next for Where Are You\nWe would definitely like to make it more user friendly and better to look at. Also, we would like to add location service to make it easier for people to meet up and to narrow down searches making it faster.\n",
        "hackathon_id": "bostonhacks",
        "winner": true
    },
    {
        "description": "\nBuilt With\npythontwilioflaskngrok\n",
        "hackathon_id": "bostonhacks",
        "winner": true
    },
    {
        "description": "\nInspiration\nFinancial companies often have large displays in their office space to monitor the stock market in real life. The problem with these large displays is that they consume an excessive amount of power to display a slow changing graph. We sought to create an energy efficient alternative method for financial companies to display the data they need.\nWhat it does/How it Works\nThe setup is a dry erase board with two stepper motors attached to the two upper corners. Fishing wires are attach to the motors via a machined pulley, and attached to the other end to a piece of plastic. The plastic acts as the mount to the dry erase marker, whose motions can be controlled by the motors. Stock market data obtained from the Market on Demand API, or personal accounting balances obtained from the Capital One Enterprise API in real time is converted to a coordinate system and sent to the Arduino to power the stepper motors and move the dry erase marker to the next point in the plot. \nChallenges we ran into\nMuch of the time was spent on making sense of the math behind the coordinate system. In the beginning, we got very jittery, unstable movement from the motors, and spent a lot of time calibrating the motors to work together perfectly. We are able to now get smooth, straight lines in the bottom half of the board, but because we're first years and fell asleep trying to learn multivariable calculus, lines plotted on the top half of the board are still imperfect.\nA few hours before pitch time, we accidentally blew the fuse in our circuit board and broke both our stepping motor drivers. We had only one backup. Luckily, we had enough resources to build our own stepping motor driver on a breadboard. \nAcknowledgements\nThank you to the mentors from Mitre and Capital One for their immense help. Thanks to the lovely volunteers for their encouragement throughout the night and providing an endless supply of candy and coffee.\nWhat's next for Dry Erase Plotter\nThe plotter can be used for a magnitude of other applications. For example, small businesses can use the plotter to plot income trends, and hackathons can use it to plot trends such as social media engagement or total hacks. Because of the small footprint, our plotter can be left on for days with very little energy consumption. It can also be scaled up easily; a large dry erase display will use the same mechanisms and the same amount of energy consumption.\n",
        "hackathon_id": "bostonhacks",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascript\n",
        "hackathon_id": "bostonhacks",
        "winner": true
    },
    {
        "description": "\nShadowRealmVR\nOculus Rift + Duel Disk + Unity3D + RFID/NFC Arduino Reader\nSo we have a plastic toy Duel Disk and some NFC chips on the backs of playing cards.\nWe have an NFC reader sending input to Unity3D where we've put 3D models of the monsters on the playing cards.\nAnd we've integrated the Unity game with the Oculus Rift so you can see your monsters come to life in VR.\nHere's a video of a duel disk: https://youtu.be/SR-F99N10Pc\nChildhood dreams accomplished.\n",
        "hackathon_id": "bostonhacks",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavamicrosoft-bandandroid-studio\n",
        "hackathon_id": "bostonhacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe should exercise more\nWhat it does\nDonates a dollar to charity if a step goal isn't reached on the Microsoft Band Pedometer\nHow I built it\nMicrosoft Azure cloud to make back end website (with Capital One Nessie API in order to charge dollar transaction), and XCode to make interface app for iOS in Objective-C\nChallenges I ran into\n-Website issues\n-Microsoft Band not responding\n-Project ot submitting\nAccomplishments that I'm proud of\n-Successfully created app using Microsoft Band SDK\nWhat I learned\n-Time management\n-How to use Azure cloud\nWhat's next for Steps4Charity\n-Improve UI\n-Improve sync capabilities\n",
        "hackathon_id": "bostonhacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavajavascript\n",
        "hackathon_id": "bostonhacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\nc++wiringpiraspberry-pi3dprintingspeakeramplifieretc\n",
        "hackathon_id": "bostonhacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nIt is easy for me to over sleep in the morning. After I asked my friend to wake me up, it changed my life, so I want to help people like me to wake up easily.\nWhat it does\n\"Sleep in and you'll go broke. Wake everyone else up and become rich.\" People get morning calls in the morning, if they don't wake up and pick up the phone, they will be charge money. On the other hand, people who have waken up can call others to wake people up and earn money.\nHow I built it\nI used Node.js as a server, and the Twilio service to call people.\nChallenges I ran into\nI was having trouble using Twilio for a while, until Sam, the Twilio guy helped me. Also, running a JavaScript app on a mobile platform is not convenient as I originally thought.\nAccomplishments that I'm proud of\nI'm proud of the idea. I can help many people, and a lot of people love the idea and want to help. Also I used Twilio for the first time.\nWhat I learned\nSteady Friendship and lovely experience.. alright, I learned How to use Twilio.\nWhat's next for BrokeMorning\nkeep building it and wake millions of people up bright and early in the morning. \n",
        "hackathon_id": "bostonhacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nAfter we got together, we realized that we're four people, born across 3 different continents and wanted to do something about making the world more open and connected.\nWhat it does\nSo far, this program has full customization features where you can feed it only parts of the language you would like to work o. There are easy to use features to add more information.\nHow I built it\nWe have an android app and a windows application which you can use to learn more :D It's pretty straightforward how we built it. We used Java and Android Studio for the android app and C#, .NET 4.5 using Visual Studio!\nChallenges I ran into\nWe wanted to do data mining with the information gathered by the user, but we couldn't for time reasons only.\nAccomplishments that I'm proud of\nI managed to overcome some fairly difficult technical challenges while writing the Windows platform program. I did a lot of work finding the royalty-free images and modifying them so they could fit in the context of the program.\nWhat I learned\nI learned a lot about managed .NET development. I did a lot of it before I came to college, but I hadn't in quite a while and it was nice to use what I learned so far in the awesome .NET environment.\nWhat's next for Langmatch\nGather data from the user and make the matching game independent, meaning that the user won't have to feed \"rules\" anymore, rather the program will scrape it off the internet by itself.\n",
        "hackathon_id": "bostonhacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nTo have one less thing on your mind and can fully enjoy that long road trip you've been thinking about\nWhat it does\nUtilizes the Microsoft Bing Maps API services to optimize a route, taking into account information about the user's car such as gas tank capacity, mileage, and percentage of remaining gas in tank to calculate when to get gas.\nHow I built it\nChallenges I ran into\nBing map\nAccomplishments that I'm proud of\nGot it to work\nWhat I learned\nJavascript, HTML, Bing maps API, bootstraps\nWhat's next for Full Tank\n\nGas price comparison\nDriving mode\nFind parking around destination\nBetter point optimization along the route\n\n",
        "hackathon_id": "bostonhacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\njava\n",
        "hackathon_id": "bostonhacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe came into this idea because we felt that our normal way of communication did not suit our need. We are really close friends who like talking to one another, but we didn't like to leave Skype connection open between all of us the whole time. It would be good if we just have a tool where we can talk to one another whenever we need to just by pushing one button. With this tool that we build, talking to close friends is easier that we have ever imagined!\nWhat it does\nTipTalk allows users to easily connect with their peers through voice communication. Users have their own landing page where they can see whether their friends are online in realtime (i.e. see instantly when a friend comes online or goes offline). If a friend is online, users can send a voice message in walky-talky manner by holding a particular key of the keyboard (or pressing the screen in case of phone) and speak.\nUnlike other voice-communication platforms like Skype or Google Hangouts, TipTalk aims to reduce frictions in voice communication. It's way easier to communicate via TipTalk with multiple your friends concurrently, as you do not need to commit to one particular call.\nTipTalk works in various platforms, including Destop clients (OSX, Windows, Linux) and major mobile platforms (Android, iOS) although mobiles apps are not full-featured yet.\nHow I built it\nWe use web technology to power our project. For the desktop client, we use Electron we a wrapper, and utilize PeerJS (WebRTC) as core library for voice communication. For server side, we use Express.js with PostgreSQL, hosted on DigitalOcean. On the mobile, both Android and iOS, we use Cordova.\nChallenges I ran into\nGetting webrtc to work on iOS is a litle tricky. We couldn\u2019t find any library that surely support WebRTC until pretty late in the game, and it\u2019s on Cordova. We decided to use Ionic framework for mobile app, and javascript + jQuery for the desktop electron app. We decided to finish the desktop app first, and reuse the code from there. However, the framework difference prevented a lot of code reuse. A lot of refactoring happened, and it slowed down the mobile development process by a lot, to the point that we couldn\u2019t finish the mobile app.\nAccomplishments that I'm proud of\nIt is the first time that we use Electron to build a desktop app. So far, we are extremely satisfied with it. With the tremendous amount of productivity that it allows us to do, we accomplished the impossible (for us). It is, with no doubt, the best thing we have built in the 24 hours time frame so far. \nWhat I learned\nWe learned to decide on tradeoffs. We were pushing towards native development, but we realized that incorporating WebRTC like that is too time consuming, and thus decided on Cordova instead. We also learned that the attention to little details on front-end development can improve the user experience quite significantly. On the other hand, this was pretty much the first time we used electron and we learned that this is definitely a go-to place to develop desktop application.\nWhat's next for tiptalk\nWe really need to push this project forward to the next step. Within the 24 hours of hackathon, we have built a fully working prototype, that will allow us to test with real world use. We know that this app has a lot of potential, and we are not going to let it go.\nVideo Demo\nhttp://screencast.com/t/ste8mtHsor\n",
        "hackathon_id": "bostonhacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroidazuremicrosoft-speech-apimicrosoft-face-api\n",
        "hackathon_id": "bostonhacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\narduinoraspberry-pic++swiftiosjson\n",
        "hackathon_id": "bostonhacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\nphphtmlcssandroid-studiojavascriptbootstrapmaterial-designmysqljsonvolleyandroid-speech-to-text-apijava\n",
        "hackathon_id": "inout",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe primary inspiration to build this is to bridge the gap between willing jobseekers in rural areas and the unfulfilled jobs in urban areas, mostly because is no means of communication between the employers and the jobseekers.\nWhat it does\nRuralFuse builds a database of jobseekers and employment opportunities, and then matches the jobseekers to potential jobs around their locality. We also have representative who would be gathering the initial data from the jobseekers, since not all of them would be able to work with a computer to fill in their data into the portal.\nEmployers can post their jobs on the portal. They can do this with the help of our representatives too.\nWhen skills of a jobseeker get matched with any of the active jobs, our representatives can queue calls to all potential \njobseekers.\nWe also give preference to differently abled people for job opportunities that might be suitable for them.\nHow I built it\nWe used Laravel to build the backend, and HTML, CSS and JavaScript to build the frontend. And since it is a web app, it does not require any expensive hardware and software to access it.\nChallenges I ran into\nA key issue that we ran into were getting the jobseekers' data into our database, because most of them aren't technically sound, some of them not even being able to read or communicate in English.\nWhat's next for RuralFuse\nWhat's next for RuralFuse is, we plan to actually deploy our service in one village to see how people actually respond to something like this.\n",
        "hackathon_id": "inout",
        "winner": false
    },
    {
        "description": "\nBuilt With\nphpexoteleclipse\n",
        "hackathon_id": "inout",
        "winner": false
    },
    {
        "description": "\nInspiration\nOur idea is about to create android application for farmers.These days farmers having problem to sell their product or grain.so in this application we provide the facility to farmer using that farmer can easily sell their grain.so in this application the role of farmer is farmer can upload their product details and vendors can check it.if both parties are agree they will make deal with each other.\nWhat it does\nHow I built it\nWe are developing this project using android application with back end SQL server2008.and we also have used web service for submitting data application data into database.\nChallenges I ran into\nwe have challenged the code with web service that is used to connect android and database.\nAccomplishments that I'm proud of\nMy idea about farmers problem will definitely go to top and solving the problem of farmers.\nWhat lwe have learned so many new things that I have never seen before.\nWhat's next for farmer's market\n1) We can implement transportation system between vendors and farmers : \n        In deep the transportation system will help more to both parties and never arise conflicts.\n2) Testing Seeds : we can test the seeds for vendors side that vendors can recognized the quality of seeds and it will purchase it from farmer.\n",
        "hackathon_id": "inout",
        "winner": false
    },
    {
        "description": "\nInspiration\nOur project is inspired by BlackoutBeeper ( http://blackoutbeeper.com/ ) that helps people report power outages in locality.\nWhat it does\nWith this simple web app you can put a virtual beeper on location which has garbage lying around. This crowd sourced information helps the municipal and communities like Social Workers to point out exact locations that need cleaning. This way no spot is left ignored, even the deepest corners of the city. Having beepers also creates a psychological effect that motivates people towards having less and less beepers on the map. Once an area is cleaned beeper can then be removed from that location.\nWhat's next for Garbage Beeper\nTo make it public with some extra features.\n",
        "hackathon_id": "inout",
        "winner": false
    },
    {
        "description": "\nInspiration\nFarmers face a lot of problems in transportation of their harvest, they are overcharged by middlemen and a fixed system is needed to stop the truck drivers and middlemen from extorting money from the farmers.\nWhat it does\nConnects farmers with logistics i.e we help the farmers by providing them easy to get and cheap transportation services, with a service similar to carpooling. We are using the exotel apis to make it easy for the farmers to know the truckers connected to us, in their location, with an offline payment system. We have also provided a feed wall system in which the truckers registered with us get to know through feeds about which  farmers need their services in a particular area.\nHow I built it\nFor frontend using html5,css3,javascipt,jquery and ruby on rails for the backend and exotel api.\nChallenges I ran into\nintegration of exotel apis and problems with ruby on rails.\nAccomplishments that I'm proud of\nused exotel service where customer who is illiterate can talk in hindi and directly use our service without internet access.\n\nWhat's next for HarvestHaulers.com\nproper implementation of wepay api , google maps integration and exotel api. \n",
        "hackathon_id": "inout",
        "winner": false
    },
    {
        "description": "\nBuilt With\nphpmyadmincssmysqlhtml5exotel-apigoogle-maps\n",
        "hackathon_id": "inout",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroid-studioandroid\n",
        "hackathon_id": "inout",
        "winner": false
    },
    {
        "description": "\nBuilt With\nphpphpmyadmintemplateshtml5htmlcss3cssjqueryjavascriptandroid-studiojavamysqlword\n",
        "hackathon_id": "inout",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtmlcssphpjquery\n",
        "hackathon_id": "inout",
        "winner": false
    },
    {
        "description": "\nBrief\nFree education for anyone and everyone\nThis project for InOut 2.0 hackthon. Education is the base for everything you can imagine. So let's connect India by giving everyone free, curated, customized Education Platform.\nSo let's start understanding how this functions. Internet today is full of contents for education, but very few of us know about where to get quality educational materials. Why not organise the whole and provide it to everyone. Let's translate all present content and make it available to everyone free of cost.It scrapes content from every popular educational sites such as youtube, khan academy and organises and translates it for everyone.\nIt's not limited to only scrapping. Users can upload their own videos and contents helping the cause.\nBenefits:\nDemo\nInspiration\nIndia has the highest human population. Educated India will eventually lead to the best India. In rural areas education is very unsystematic. So we thought to provide them with a platform to help them get educated in a language they wish to.This created EdFree.\nWhat I learned\nCollaborating using GitHUB in real-time. Machine Learning for live translation of videos.\n",
        "hackathon_id": "inout",
        "winner": false
    },
    {
        "description": "\nInspiration\nI was working in an NGO , which taught computer to student in government schools. The internet there was only available on one system. So when we needed to create a web quiz for the final review of the students knowledge , i had to use a totally offline version. I also saw that students were able to learn best by watching videos but they did that on the main system (which had internet). So i thought could there be a way to provide educational material using 2g internet or no internet. There i got the idea for edu-ral. \nWhat it does\nThe application has two servers. One is the main server , where professors and we will upload videos.\nThose videos will be pushed to the systems in the school which have internet. The system mentioned will act as a server to provide over local network to all the other systems.\nThis module for now just supports videos , but soon it will provide full pages and websites (eg wikipedia).\nthe videos when ever available will be downloaded and hence students can view that connect without any internet. \nHow I built it\nI modularised the project into 3 parts :\n\nmain server backend - the backend which will push the content.\nmain server frontend - the frontend which will provide the interface to upload data.\nclient server - the client server which will receive data from the main server and will have a minimal interface for performance. Students can view videos using the frontend.\n\nChallenges I ran into\nEach of the above module was developed by different people , one by me and other two by team mates. The problem arised in the integration of the modules.\nAlso streaming the videos was also a challenging task.\nAccomplishments that I'm proud of\nthe project is developing at a nice pase and will be hoping to complete it real soon.\nWhat I learned\nlearnt to use mongoose , express and angular through this project.\nWhat's next for rural-connect\nSoon the offline content will be including pdfs , ppts and html documents. In the 3rd iteration , students can request for specific content which will be downloaded over-time on the local server and they can view that content the next day or as its get downloaded depending on the local server's bandwidth.\n",
        "hackathon_id": "inout",
        "winner": false
    },
    {
        "description": "\nThe theme was solving rural india's problems , and we thought about connecting them through intranet .\nSo basically we are trying to solve the communication and education problems, using realtime video ,audio . Like a teacher and students connected to the same LAN network could interact even if they are in a different place, without external internet . The teacher could stream tutorials and the students can learn from it .  \nlogic\nsimple logic :- video -> frames( images ) -> dataURLS -> websockets -> server -> client  -> image -> canvas\nplay the frames fast enough so it feels like a video , similar to the audio \nhow we tried it\nI have used chrome's getUserMedia functionality to capture audio and video from user and then drawn it onto a canvas . This data is then sent to the server using websockets , which then sends it to all connected clients and the data is converted back to images.\nproblems\nWe tried using google's webRTC , but it requires internet connectivity AT LEAST ONCE, so we dropped it made our own mechanism from scratch .\nThe video frames were not being sent realtime , so the video on client side was lagging :(\nachievements\nWe basically were able to build a skype from scratch although a bit laggy :)\nTODO's:-\n-> Optimize the video quality\n-> Translate the video realtime ( which will be hugely beneficial we guess ) \n",
        "hackathon_id": "inout",
        "winner": false
    },
    {
        "description": "\nBuilt With\nphpbootstrapexotelmysql\n",
        "hackathon_id": "inout",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroidparsereactjshtmlcssjavascriptfabrictwitterbluemix\n",
        "hackathon_id": "inout",
        "winner": false
    },
    {
        "description": "\n\n",
        "hackathon_id": "inout",
        "winner": false
    },
    {
        "description": "\nViDo - Voice in Data out, a name inspired from the hackathon itself.\nInspiration\nDuring our journey from Delhi to Surat, the internet in our mobile phones was not working, we were completely disconnected from the world. So we thought how cool would it be if we develop a mobile service that answers our queries through phone, and even extended it to even answer some queries in Hindi.\nWhat it does\nThe basic service that our system provides is - People call on our phone number and ask their query in English or Hindi(this can be any question, generally fact based), once the response is calculated it is sent to their mobile number through SMS. We use various methods to cluster requests into various categories using natural language processing and machine learning and make the query to the right API like Watson, Wolfram Alpha, Duck Duck Go and google maps etc. to get the best answer for the user.\nOne can also try to go to (http://vidos.mybluemix.net/q/query) with a query and get a detailed answer, eg: (http://vidos.mybluemix.net/q/prime%20mininster%20of%20india)\nHow we built it\nWe used a lot of technologies to build this. First of all to receive a call from the general public we needed a public phone number and an API which transfers the voice query from the phone call to our web-server. Once we received the audio query, we first converts it to the default language English(en-US), then once we have the text for the query the possibility to do with it are endless. Like parsing it  and using various APIs like IBM Watson, Alchemy, Wolfram Alpha, Google Search, DuckDuckGo etc.\nChallenges we ran into\nWhen designing such a large system, it is obvious that there will be a lot of problems that we encounter in development phase. Like the IP being blacklisted on google after the trial period of the developer account was expired and showing captcha, every time we need to translate something, so we faced a lot of problems in automating the testing process. Another main challenge that we faced was when we were hosting our app in the cloud, we couldn't install a few things that we needed to convert audio files, send them etc, to solve this we planned to use our own RasPi server to process the speech input and parse and generate response on Bluemix, the best thing being that the RasPi can be configured for any language and used locally, like here we used Hindi, and it can be configured for something like French or Spanish. Also incorporating Hindi input and sending SMS reply back in Hindi needed a lot of research, as we have never worked on such kind of thing before, like working with audio codecs. Another problem that we faced like the audio file was not available for a few minutes after the call, so we needed to spawn a different thread for each response while managing load on the server, to wait for audio to be available. But as the speaker from TCS said 'Never Quit' and we kept working on solving the problems and finally managed to develop a working prototype, overnight.\nAccomplishments that we are proud of\nWith Zero experience in Audio encoding/decoding/manipulation, we were finally able to develop a system to  develop a system which takes queries in Hindi/English and answers them quite accurately.\nWhat We learned\nWe learned a lot of things today, like audio manipulation(i have said it a couple of time now), various google, wolfram, watson, exotel, APIs, get to know how to solve problems that you never thought can happen, interacted with such awesome mentors, who told us a lot of new things, that we didn't know before. \nHow we used IBM Bluemix\nWe hosted our parser and 'Problem Solver' on IBM Bluemix, which takes in the query after been translated to english and calculates the answer. All the data processing and APIs integration was done on Bluemix. We also incorporated other IBM APIs like Watson and Alchemy to get meaningful answers to questions on topics like travel and healthcare.\nEDIT: Our API keys have been expired so one might get empty response on questions on healthcare and travel.\nOur revenue model\nRevenue can be generated by giving advertisements when the user will call our number. We will collect all the data of the users and help advertisers give targeted advertisements. By the advertisements we can cover the cost of the phone calls and make the number toll free.\nWhat's next for ViDo\nWe have planned a lot of things for ViDo. We are planning to add a make a standalone one click installer for windows which uses windows API to control things in your computer and incorporate few commands like open start,  message someone on facebook through browser automation, etc the possibilities are endless. Also we can keep adding many more commands and APIs to make it better, which we cannot do now because of lack of voice training environment, and roaming on our phones.\nTry it\nCall us on  and see for yourself.\nEDIT: Sorry but we can no more support calling and getting answers, because of hosting and issues, but one can try testing our parser and problem solver on Bluemix, like the following queries and get a detailed response.\nhttp://vidos.mybluemix.net/q/prime%20mininster%20of%20india \nhttp://vidos.mybluemix.net/q/tell%20me%20about%20apple \nhttp://vidos.mybluemix.net/q/Who%20is%20Larry%20Page \nhttp://vidos.mybluemix.net/q/value%20of%20magic%20constant  \nEven calculations can be done  \nhttp://vidos.mybluemix.net/q/543+24\n",
        "hackathon_id": "inout",
        "winner": false
    },
    {
        "description": "\nBuilt With\njqueryphpjavascriptmysqlphpmyadminphp5apachecssbootstrapcss3html5htmlduckduckgoajaxcurlbashfont-awesome\n",
        "hackathon_id": "inout",
        "winner": false
    },
    {
        "description": "\nVirtualDoctor\n->Use symptoms to predict a disease ( ML classification ) \n->Location based instant message broadcast . In case of emergency , ask help by broadcasting a message to the users sharing the same nearby locations. (Incase of lowbandwidth broadcast the message by sms)\n->IBM -Watson integration provides an assistant cum Virtual Doctor which can answer questions like \"Is X the symptom of disease Y ?\" or \"What are the symptoms of disease X ?\" or \"How is X cured ?\". \n->Live assistance by registered Doctors, and incase of low bandwidth restrictions, speech to text conversion of patient's condition and dumping it into a patient log. \n->Save patient logs directly to dropbox.\nWe are developing a web application as a virtual doctor for rural people where medical facilities are not available easily. Rural areas usually lack some basic facilities like proper communication infrastructure, proper medical care etc. Sometimes its becomes very hard for the patients to get a proper treatment because of lack of awareness. So our application helps in overcoming all these challenges. Its very user friendly, easy to use and works in limited or slow connectivity.\nUsually the problem starts when the doctors are not available. In such cases, villages usually have some medical worker or a medical helper who provides them medical care. Village people can help each other as a community in the first place. Our application shows all the emergency messages posted by other users. Any person can also post his problem such that anybody can help him. HE can also send distress calls to any medical worker, which in turn can set up his meeting with a doctor. In case of slow connection, our application converts text to speech and sends it as a text message. If the doctor is unavailable, we can refer to a virtual doctor which can respond to a patient's problems and provide solutions. It uses machine learning for that.\nRunning Live on IBM Bluemix:\nLog on to : http://virtualdoctor.mybluemix.net/register/\nDefault Username : shantanu\nDefault Password : admin\nLog in and on the dashboard select \"Disease Prediction\":\nType your question and see the response. \nTechnologies used :\nIBM Watson \nIBM Bluemix\nPython-Django\nGoogle maps reverse geolocation \nDropbox\n",
        "hackathon_id": "inout",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroid-studiophp5material-designbootstrapjsonmysql\n",
        "hackathon_id": "inout",
        "winner": false
    },
    {
        "description": "\nFly-Events\nIdea : We are building an app that can make rural business more power full and Globalize in their local area. \nInspiration : Prem Ganpathy is our main inspiration. He came From a small village around tamil-nadu and became INDIA's World Best Dosha-king.\n-In Early stages he face many problem to make his stall more famous but luckily because of his good nature and awesome Doshas he made it.\n\nTechnologies That We Are Using :  \nParse  for Mobile Back end as a service . \nExotel for SMS Confirmation.\nP2i rest API to convert web to image.\nPython(Flask) to makeing Rest API for communication realted puposes . \nHeroku to Depoly python Rest API.\n\nWhy fly@events :\nproblem 1 : Small Business (For Business Owner)\nproblem 2 : Lack of Information(For Event Manager)\nproblem 3 : Time Saving(For Both Of Them)\n\nSolution : \nA platform where Event Organizer and Rural Business owners as well as Urban can connect and Transform their work to high level.\nSolution 1 : The Choice Maker\ufffd for Event Organizers\nSolution 2 : Product Launcher For Rural-Business & Small Start ups\nSolution 3 : Information Distributor For Both Of Us\n\nHow It\u2019s Connecting A Dis-connected INDIA ! : \n--Our platform can motivate Rural Business.\n--Without Internet Business owner can Easily Connect with the coming events using SMS facilities.\n--No Need For Fancy Smart Phones.\n--Globalization of Rural Products.\n--Remove third party Barrier From event organizers and Rural business.  \n\nMarket Validation :\n--FlatChat(Find a accommodation on chat) : Company valuation of flatchat is Install : 100,000 - 500,000 and they have Flatchat raises $2.5 M funding from Commonfloor, plans international expansion in 3-6 months.\n\n--Direct Market : \n-All the Flyers App \n-Event Management Companies\n-Product Launcher Apps\n\n--InDirect Market:\n-Olx \n-Quicker \n-E-commerce\nComparative Analysis:\n-Innovation Scale\n-SMS Event Notifications\n-Event Search\nBusiness Model :\n-We are also introduced Flyers @ your DoorSteps that Organization can also buy their digital flyers in a bulk.\n-Cost : INR 20 For each Flyer(If they Want 500+ print)\n\nDistribution of Cost per Flyers : \n15 INR \u2013 For Printing\n15 INR \u2013 Labour & Incorporation \n5   INR\u2013 Delivery Charges\n5   INR\u2013 Generated Approx. Revenue \n",
        "hackathon_id": "inout",
        "winner": false
    },
    {
        "description": "\nInspiration\nDelay in re-establishment of power grid.\nWhat it does\nPower grid will tell power station about the grid failure, power failure, live grid ratings and they can be activated/deactivated on the go. The Controller & Monitor device is WiFi enabled and pings the station on the predefined time. In the grid failure, intimidate contact will be made with the control station/power station.\nHow I built it\nEach grid have their own controller & monitor device. The device is based on the cloud concept so that any device that have access to the internet can access Smart Grid. Controller & Monitor device will have built-in WiFi accessibility. These devices will ping control server. The crucial parameter related to the grid will be available on the cloud. This will be beneficial in two ways, anyone have credential to monitor and control grid can control and monitor on the way and another one is to protect against the database server failure.\nChallenges I ran into\nCloud programming and cloud database.\nWhat's next for Smart Grid\n\nWeb portal\n\n",
        "hackathon_id": "inout",
        "winner": false
    },
    {
        "description": "\nBuilt With\nphphtml5css3javascriptmysqljquery\n",
        "hackathon_id": "inout",
        "winner": false
    },
    {
        "description": "\nOn researching about rural India, we learned a shocking fact - Technological penetration is very low. Personal computers are virtually non-existent and only 3% of the rural population of India has smartphones. So the first question in our mind was, \"how do we get important information from the Internet to the people who don't have connected devices?\"\n\n That's how we came up with Cohere. Cohere is, in essence, a star network of various hubs. Each hub connects multiple villages and has one internet connection. Each village has a \"receiver\", which receives important data such as alerts, news, weather forecasts, etc. and has the ability to transmit information such as temperature and pressure telemetrics and also inquiry and harvest data ( which crops were harvested and in what quantity ). The sensors data is a useful meteorological parameter for the government. The harvest data can be used to monitor produce and maintain prices.\n\n To simulate a part of a star network, we use two Intel Galileos. One of them is interfaced with temperature/pressure sensors and a 16x2 LCD display. This is assumed as a village kiosk. The other Galileo connected to laptop. It receives data from the kiosk Galileo via I2C and sends it to laptop through serial. \n\n There were quite a few challenges for us. For starters, we were unable to configure the main board which we planned to use- the Particle Photon. This was because the Hackathon's WiFi passed through a \"Captive Portal\", something which is always a hurdle for embedded systems. We tried various methods - setting up a hotspot, VPN, etc. but to no avail. After wasting some time on that, we opted for a Raspberry Pi. But that was quickly ruled out as it wasn't set up and required an HDMI display. So finally, we implemented our idea on the Galileo. But even here, we were unable to open the full Linux terminal ( with SD Card ) and that limited our applications. All these took up a considerable amount of time. \n\n During this Hackathon, I learned a few things - \n\n\nAlways have a backup system or hardware which you are comfortable with. \nRead the theme carefully and think broadly about it. Ideation takes time but a clear plan is well worth it.\nDon't rely on a hardware hack alone - software can vastly improve and complement your hack.\nAs for the forward path for Cohere, we would first of all make the whole system wireless. Due to WiFi issues it wasn't possible here but that would be the top-most priority. Apart from that, we would love to test it in a real-world scenario.\n\nEdit 1 - Nearing completion, laptop/Cloud integration and laptop to slave communication are left.\n",
        "hackathon_id": "inout",
        "winner": false
    },
    {
        "description": "\nInspiration\nCAPTCHA is a mechanism to verify that a user is actually human, and not a bot that tries to spam a website or an app, by asking the user the write the letters that appear on an image.\nCAPTCHAs suck. They often look like this:\n\nand it can be super hard for a legit user to pass CAPTCHAs.\nWhat it does\nIntroducing Bot or Not.\nBot or Not is the next generation of CAPTCHAs. Instead of showing a weird image with complicated letters, we just show 6 images of various products and items from eBay. The user simply needs to select the images that represent the same product. \n\nNote that 3 of the images in this example represent iPhones, and the rest of them represent different things. In this case, the user needs to select the 3 iPhone images. This is an extremely hard job for a robot, but a very easy job for a human. \n2 of the iPhone images in this example are images of items that we are sure that are actually iPhones. The catch is that we - and eBay - are not sure about the 3rd iPhone image. By using wisdom of the crowd, we're trying to classify the 3rd item.\n",
        "hackathon_id": "hackinggenerationyebay",
        "winner": false
    },
    {
        "description": "\nInspiration\nHelp the users of eBay to decide between different products.\nWhat it does\nePick helps to decide between a few products on eBay - you can share your dilemma with your friends and get their opinion.\nHow I built it\nclient side is Android, server side is Node.js . using the eBay API.\nChallenges I ran into\nworking in a team with git, merging our code.\nAccomplishments that I'm proud of\nCreating good software architecture.\nWhat I learned\nHow to work in a team, while keeping our minds open to everyone's ideas.\nWhat's next for ePick\nExpand to provide the eBay users more help in deciding between products, get statistics for each product. all with a beautiful UX and UI.\n",
        "hackathon_id": "hackinggenerationyebay",
        "winner": false
    },
    {
        "description": "\nInspiration\nwin-win-win situation\nWhat it does\nnew way to review a product with media and get discounts\nHow I built it\nusing Meteor and Android Native\nChallenges I ran into\nAccomplishments that I'm proud of\nThe final idea\nWhat I learned\nteam work and sharing ideas\nWhat's next for Buy-Bye\nWin the eBay Hackathon\n",
        "hackathon_id": "hackinggenerationyebay",
        "winner": false
    },
    {
        "description": "\nInspiration\nViral mobile games, data analysis, design,  \nWhat it does\nWe've created a viral android mobile game in which the user can compete against his friends in a 10-round price guessing match with bonus classification questions to spice up the game.  Coins, & rewards await the victor. The item listings in the game are provided to the app based on real live ebay data. The interesting data from the game is for analytics purposes.\nHow I built it\nServer: cloud infrastructure by AWS in python, data engine in java & ebay API, top notch design in Illustrator, app engine and development in Java Android, using libraries and services such as Google game services. \nChallenges I ran into\nLearning how to use the ebay API, get everything to work together. \nAccomplishments that I'm proud of\nWe've set up a beautiful, working app with real data from a never-used-before API and impressive cloud infrastructure in less than 2 days.\nWhat I learned\nWe've learned how to work together as a team, using complex APIs, developing good software in little time and setting up everything together.\nWhat's next for Guess the price\nTaking over the world. But seriously, continuing development to benefit ebay and it's many many users.\n",
        "hackathon_id": "hackinggenerationyebay",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe inspiration came from thinking about what service or game aggregates the most structured information in a fun way \nWhat it does\nBy communicating with a server, it gets 20 questions that the user needs to answer about his item.\nThen it sends the answers to the server, which guesses which item was chosen.\nWhether right or wrong, the server saves the users answers, so each time a user plays the server becomes more accurate\nHow I built it\nThe server was built with PHP, the app with Java\nChallenges I ran into\nThe massive back-end DB work\nAccomplishments that I'm proud of\nThat the overall product runs pretty smoothly\nWhat I learned\nPHP, and how to deal with JSON in android\nWhat's next for eBayNator\nMore interfacing with the ebay API\n",
        "hackathon_id": "hackinggenerationyebay",
        "winner": false
    },
    {
        "description": "\nInspiration\nInternt poker\nWhat it does\nIt's an new/old approch to an internet auction system. It's an addon mobile app that can reform the auction system in ebay.\nHow I built it\nMy team and I built in in android. Gon has created the animations, I wrote most the code and Roy also wrote a bit we created one app for the user and one app for the presntation.\nWe used firebase as our backend.\nChallenges I ran into\nThe api was a bit problematic but the mentors at the event helped a lot. I was sick for 4 days before the event and planned to not show up, but eventually did. \nAccomplishments that I'm proud of\nThe app looks really good considering the time we had, and so does the presentation. We got animations working aswell which was very nice.\nWhat I learned\nAnimating characters and designing UI - Gon; \nA lot of Android syntax, xml designing, team work - Roy;\nI learned the Firebase enviorment and how to animate views in android, turned out great! - Idan\nWhat's next for ebid\nPersonalization for the user experience- we would like the app to learn the users' preferences and to eventually route them to rooms that would interest them.\n",
        "hackathon_id": "hackinggenerationyebay",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroid-studiovisual-studiorestwebapi\n",
        "hackathon_id": "hackinggenerationyebay",
        "winner": false
    },
    {
        "description": "\nInspiration\nHaving a real motivation and retaliation for you tasks and goals by having the great things and goods you need in order to get your goals and dreams a reality.\nWhat it does\nHaviteBay is a RPG (Roll Playing Game) as a mobile app, which provides you drops from eBay auctions services when enough tasks has been accomplished. \nHow I built it\nwe build the app using JavaScript's Angular, node.js, express.js, css3, html5, mongodb and iconic.\nWhat's next for HabiteBay\nMaking the service smarter by built-in progresses, content about every task - tutorials and video guides and many more. \n",
        "hackathon_id": "hackinggenerationyebay",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe were inspired by the lack of easy accessibility of information to the blind. Over 200 million people have some form of visual impairment. 39 million of those are blind. And let\u2019s face the fact, while those visually impaired can use smart technology, their access to it is clunky and poorly done. Is there any reason why visually impaired people should have a harder time accessing knowledge? No, that is not a rhetorical question. The answer is no, and that is why we developed this app, called Voicepedia, to help the blind and the visually impaired.\nWhat it does\nVoicepedia is simple - you open the app, wait for the vibration, and then speak. It brings up the wikipedia article of your search, and reads it too you. Unlike other blind-friendly search engines, Voicepedia is completely hands free, and very easy to use.\nHow we built it\nWe wrote the app in Objective-C, using Xcode as our IDE.  To make the app, we had to use some really interesting technologies.  First, we implemented a speech-to-text engine so the app can understand the user.  Then, we developed a three-part algorithm to find, extract, and parse a Wikipedia article that most nearly matches what the user said.  Each part of the algorithm uses the Wikipedia API and JSON to extract information about the article.  The first part finds the title of the article, the second part finds the ID of the article, which is necessary to get text from the article, and the third part extracts the article itself.  \nChallenges we ran into\nThe main challenge that we ran into was to differentiate our app from the competition.  To do this, we implemented a system which lets users choose which parts of an article they want read aloud.  Other challenges included figuring out how to use the Wikipedia API to to get a parsable JSON feed, and streamlining the user experience.\nAccomplishments that we're proud of\nWe're proud of the fact that we've create the first mobile app focused on enabling easy and comprehensive Wikipedia access for the blind.\nWhat's next for Voicepedia\nVoicepedia is now live on the iOS App Store!  Click on the link below to download.\n",
        "hackathon_id": "ttglobal-civic-hackathon-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWhen we were barnstorming ideas, we did an empathy test where we blindfolded ourselves and tried to walk down the stairs and around the building. We then realized how difficult it must be for the blind or visually impaired to travel. So we created perCv.\nWhat it does\nperCv is two parts, the first being a bracelet, which will use an ultrasonic sensor to detect obstacles around the user. The bracelet would then alert the user via a vibration or beep. It would also implement 'recognition software,' which can detect and name common objects in the user's environment by comparing things it 'sees' with a database - for example, if the user was nearing a crosswalk, the bracelet would be able to detect the electronic STOP/WALK sign, and alert the user when it is safe to cross. Currently when many blind people cross the street on their own, they rely on the rush of cars on both sides of the road to determine traffic patterns so they know when to cross. However, when there are too many - or too little - cars on the road, it can be difficult and dangerous to cross. The bracelet will connect via bluetooth to an app that controls the bracelet. The app is replete with accessibility functions so that it can be customized to best fit the user's disability, and therefore help a wider audience of people.\nHow we built it\nWe used an ultrasonic sensor, an Arduino kit, Arduino coding software, and a computer program that allows us to create a mock up 'prototype' of our app. \nChallenges we ran into\nThere were certainly more than a few challenges we encountered during our 48 hours! As neither of us are experts in coding, we had to spend a lot of the time just figuring out how to use Arduino. Combined with the long process of bugging, de-bugging and de-de-bugging :) , we ran way behind our 'schedule'. It was on the second day, in the late afternoon, when we found ourselves in the 'omg where did the time go I need another latte,' which ran late into the night.\nAccomplishments that we're proud of\nFiguring out how to code Arduino (and actually getting it to work XD), creating our app UIs, and working hard. That is, if working is defined as: 60% work, 40% dance party! (Shoutout to Taylor Swift =D)\nWhat's next for perCv\nA list of features we plan to eventually implement into perCv:\n\u2022 Wearable as a bracelet with decreased sensor size\n\u2022 Integrated recognition software to identify common obstacles and warn     the user against them\n\u2022 Adapted interfaces for blind users\n\u2022 More features to accommodate a wider range of disabilities\n\u2022 Sensor is wireless/Bluetooth compatible with smartphone\n\u2022 Increased ultrasonic range for more accurate detection\n\u2022 Vibration setting for deaf blind users\n\u2022 Low battery sensor\nWe hope that perCv will continue to develop and change people's lives.\nThanks to:\nEnergySavvy (Facilities)\nBryn Clothier (Mentor)\nBrittany Walentin (Specialist)\nJoe Goldberg (Consultant)\nTaylor Swift (Musical Genius)\n",
        "hackathon_id": "ttglobal-civic-hackathon-2015",
        "winner": false
    },
    {
        "description": "\nThe Bike Guys\nMichael Bottone, Ryan Smith, Neal Thacker\nOverview: This is a virtual reality bike simulator that utilizes Oculus Rift, Wii-motes, and other hardware.  It places the user within an environment we created and measures their movement on our actual bike to simulate the same movements in the created world.  \nFunctionality: \n\nFull steering tracking\nHaptic feedback\nSpeed based off pedal movement\nFluid turning motions\nFull range of vision\nLow latency\nRealistic experience and high presence\nFriction algorithm\nCamera and position resetting \n\n",
        "hackathon_id": "ugahacks",
        "winner": true
    },
    {
        "description": "\nBuilt With\nandroidangular.jsseatgeekmlbstatshadoopjavascriptclarifai\n",
        "hackathon_id": "ugahacks",
        "winner": true
    },
    {
        "description": "\nAcapellago\nMotivation\nEveryday our team sees people mobile and web games on their way to class, in class, and back from class. We love playing games with each other, and want to bring the fun of social games that can be played with friends, or in order to make new ones, to others. Acapellago intends to bring together gamers and build social bonds.\nGood Things\nSound adds quirky element to game!\nMake yourself vulnerable and build bonds with your friends! \nHands free means you can play while eating hot pockets!\nHands free means you can play while being disabled!\nTechnical Facets\nPixijs Game Engine\nBeautiful and Cohesive Aesthetic\nIn-House Physics Component\nFrequency Analysis using Javascript Native Web Audio API\n\n",
        "hackathon_id": "ugahacks",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavapythoncss\n",
        "hackathon_id": "ugahacks",
        "winner": true
    },
    {
        "description": "\nBuilt With\nhtml5phpcssjavascriptbookscout-apiamazongoogle-charts-api\n",
        "hackathon_id": "ugahacks",
        "winner": true
    },
    {
        "description": "\nBusiness Tagging\n    An application that helps a business know more about its customers.\nLet us consider a restaurant as the targeted business\n    The application requires bunch of images that were taken in the restaurant. More realistically, images can be obtained from social media sites since people usually tag the restaurant while uploading the photos.\n    Once the application gets these images, it runs the images through Clarifia's API to obtain more detail about the image such as  age group of people found, whether it attracts more of a lone customer or families or kids or couples etc. Whatever data Clarifai already provides, additional care is taken to accurately classify the image according to the application's requirements. \n    With such clear and concise information about the customers, the business could proceed to advert their business in a better way targeting their majority customer group.\n    One other application of such categorization is to provide a user a better idea of a business place. So it could be included as part of an app that suggests places according to user's preferences. So if a user wants to hangout with their friends or they wanna find some quite place to just relax and study or they wanna enjoy a meal with their family, the app is got all the information required about various places right there. The user could apply filters based on their preferences and \nBusiness Review & Rating\n    To be more robust in ranking various business places,  we factored in few more variables to calculate the rating besides the existing parameters such as users' experience and critics' reviews in text format. The additional variables considered are twitter feeds about a particular business place.\n    We took the details provided by Yelp as ground truth and added the information from twitter feeds. Basically, a sentiment analysis is performed on the comments to figure out whether it is a positive or negative comment and accordingly the rating is provided. Various other information considered are busy peak hours of a business place, how good a place provides the guaranteed utilities and any other information that the yelp data provides.\n    We also brought in the social ranking flavor so the rating has more meaning. But at the same time bounded the effect so that the system can not be abused by random users.We use the soacial media ( twitter ) as a agent to do that and Apache drill to query JSON data directly without storing huge data.\n",
        "hackathon_id": "ugahacks",
        "winner": false
    },
    {
        "description": "\nA 3D print saber that uses a IMU to record motion data and a custom trained Clarifai classifier to recognize gestures\n",
        "hackathon_id": "ugahacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nThis project started out as an idea for a local gym to challenge its members to bet money against each other so that each person would be motivated to compete so as not to lose money.\nWhat it does\nThe website starts out by connecting people around the world with goals similar to their own. With 6 different goals, each person decides how often they want to do their goal and what reward they want out of accomplishing this goal. We then look at challenges other people have posted and connect the new challenger with an existing challenge that meets their requirement or creates the challenge for others to see.\nHow I built it\nI built the website using HTML, CSS, PHP and MySQL.\nChallenges I ran into\nI had trouble using PHP and MySQL because it was my first time using those languages\nAccomplishments that I'm proud of\nThe website worked.\nWhat I learned\nI learned how to use PHP and MySQL.\nWhat's next for Challenger\n1) Once a person accepts a challenge, email both competitors that the competition has started and the details of the challenge such as Goal, Frequency, Incentive.\n2) Add Bootstrap so that the website will work on mobile phones\n3) Standardize the incentive using Venmo so that instead of a different reward for each challenge, it's just the amount that changes. (Right now, there are cash, point and volunteer hour incentives)\n4) Have people upload images of themselves so that they are held accountable of their actions. (Right now they just choose yes or no)\n",
        "hackathon_id": "ugahacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavagoogle-mapsclarifai\n",
        "hackathon_id": "ugahacks",
        "winner": false
    },
    {
        "description": "\nDigits will recognize, analyze, and interpret ASL into words. Through the \nimplementation of Clarifai api, Digits is an intuitive application with a\ngalore of capabilities. Our vision is of a system created primarily to seek \ncontinuous improvement in order to translate the unthinkable. \nContinuous improvement infers to our drive to grow Digits with each and every use. \nDigits has great potential awaiting to be harnessed and that is what makes the \nconcept so revolutionary. The program will only continue to educate itself for every\ntrial and error imposed upon it. Digits is curious and ambitious, and that is just\nthe way we meant for it to be. \nUses\nCurrently, Digits gives users the ability to decipher pictures of sign\nlanguages into letters and words. This concept can be taken into video\ntranslations as well. Digits can take a video, analyze it by frames, and write\nout its translation in sentences. In the future, Digits will soon grow to interpret \nother hand gestures and could branch out to body languages and even facial expressions.\nThe possibilities are very broad.\nHow it works?\nDigits starts off by using the tags algorithm from Clarifai's api. This creates\nthe foundation in which our application can be built on. Through the effective\nuse of trial and error, we are able to teach Digits the meanings associated with\neach sign in the ASL. We must continually reinforce the meanings to these\nsigns in order to create accurate results. That is how it works.\n",
        "hackathon_id": "ugahacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\njava\n",
        "hackathon_id": "ugahacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nInspired by a childhood game Luc played.\nWhat it does\nA pair of users take turns adding lines to a drawing, coming up with an interesting picture at the end.\nHow I built it\nblood, sweat, tears.\nChallenges I ran into\nSerializing a uint8array as a base64 string will forever be the worst thing I've ever done. We also lost two team members early on.\nAccomplishments that I'm proud of\nThe fact we got this thing done in a relatively short amount of time!\nWhat I learned\nStrengthened my knowledge of Angular and Node.js, and gave Luc new experience with it.\nWhat's next for Scribbl\nRealtime notifications.\n",
        "hackathon_id": "ugahacks",
        "winner": false
    },
    {
        "description": "\ninciBo\nOverview\ninciBo is the latest and greatest in utilities for your cooking experience. Simply take a picture of kitchen ingredients you have \naround the house and watch inciBo suggest some of the best recipes out there for those ingredients!\nNot only that! Share your favorite recipes on Facebook or Twitter!\nAbout\nThe \"in\" stands for \"inspire,\" and the \"ciBo\" means \"food\" in Italian. We want to help inspire the chef in you.\nDependencies\nMake sure to run pod install for the Cocoapods the project depends upon!\n",
        "hackathon_id": "ugahacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\nr\n",
        "hackathon_id": "ugahacks",
        "winner": false
    },
    {
        "description": "\nSights\nHave you ever thought how your world would be if you could not see? With darkness all around and not a thing visible around you how would you make your way through the crowds, the streets or around your neighborhood?\nThis is often what visually impaired people feel. Some are born this way and adapt their other senses really well but then there are some who are unfortunate and lose their vision due to an accident or a disease.\nWe have a solution for these special souls. With Sights you just need your camera phone and and internet connection to know what is in front of you. Just open the app in user mode and follow the instructions.\nThe app tells you what the back-camera of your phone faces through sound output. With a unique algorithm it determines the biggest object or the object that could turn out to be most dangerous of the available objects. For example, if it detects a bike, a car and a bus.\nIt would produce an output in this order - bus -> car -> bike.\nThus it would alert the visually impaired of impending danger.\nWith the use of Clarfai's API we have made our app accurate and efficient. Our app is ever evolving and gets better with time. And we have Clarifai to thank for that. They are continuously training their data to be more accurate and produce faster results. The sky is the limit and we are just starting. Try Sights now!\nFunctionality-\n\nUser mode - Helps users get an audio description of what their phone's back-camera faces.\nTrainer mode - Helps volunteers train the model. Usage - Click a picture, speak the name of the most conspicuous object in the picture, that's it! We are developing a functionality which trains the model according to the trainer's input.\n\n(https://i.imgur.com/56EUw5D.jpg)\nP.S. - The customtrainer.py file is used to train custom_concepts for trainers. Its usage is very similar to the usage of example.py file in the python directory at (https://github.com/Clarifai/hackathon).\n",
        "hackathon_id": "ugahacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\npython\n",
        "hackathon_id": "ugahacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nBeing too busy to properly track our diets, we wanted an easy and conventional way to eat healthy. \nWhat it does\nFoodograph is designed to let you take a photo of every meal you eat, at which point the app detects what major food groups occur on your plate. Every day, your list of food groups gets reset - your goal is to make sure you cross them all off every single day by eating diverse and snapping photos! It takes less than a minute, and you can even check out food photos from around the globe in the social tab!\nHow I built it\nThis was built as a web app designed to eventually be ported to a webviewer for both Android and iOS. Lots of css and some javascript.\nChallenges I ran into\nLiterally everything. We didn't get the server we wanted to go live, so we resorted to hosting on GitHub instead. We also completely messed up the Clarifai API despite hours of attempts to get it right. We ultimately had to retreat from the mission (rather than hard coding a fake solution).\nAccomplishments that I'm proud of\nWe rallied as a team during the last night and pulled through to make something both useful and valuable. We are proud of that, and see value in a company based on an app such as ours.\nWhat I learned\nWhen it comes to starting a company, you need to know where you are strong and exactly where you are weak. Then, you gotta be as resourceful as humanely possible to meet your goals. #Hack\nWhat's next for Foodograph\nRapidly scaling into the fitness industry in full in the next 2-4 months. Potentially attracting the attention of notable investors, such as Ashton Kutcher.\n",
        "hackathon_id": "ugahacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe inspiration behind the project really comes from the Clarifai tech talk; they introduced us to their API and we took it from there.\nWhat it does\nYou upload a picture of any object you'd like to know the price of, and the app delivers the price of that item from Amazon.\nHow I built it\nWe used Java code, GUI using Java Swing, parsing using Json, Clarifai API, Sellerlabs API.\nChallenges I ran into\nUnfinished Clarifai documentation and portability.\nAccomplishments that I'm proud of\nActually submitting a project at my first hackathon.\nWhat I learned\nI learned how to use Clarifai's and SellerLab's API, a little bit of Python code, a little bit of Swift code, Json.\nWhat's next for identiprice\nIf we're allowed to keep working with the provided API's, we'd like to port the application out to a mobile environment for more seamless experience.\n",
        "hackathon_id": "ugahacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtmlcss\n",
        "hackathon_id": "ugahacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\njava\n",
        "hackathon_id": "ugahacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\nfirebaseswiftmvvm\n",
        "hackathon_id": "ugahacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe drove through at McDonalds on our way to Atlanta, and did not feel comfortable taking out our phones to pay using neither Apple Pay nor Android Pay to purchase the food.\nWhat it does\nYallPay uses biometric authentication to eliminate using credit card or pin numbers when shopping. YallPay's fast and effortless functionalities benefit both merchants and buyers to save time and energy.\nHow I built it\nWe build it by using the faceplusplus API to implement the biometric authentication, then we connected it to Venmo's API to actually make the purchase.\nChallenges I ran into\nWe were planning to use fingerprint authentication instead of facial authentication because the common smartphones have the features to scan the fingerprint \nAccomplishments that I'm proud of\nHaving a working product that actually does what we envision it to do. Our product is able to take in a picture, authenticate and pay to the merchant.\nWhat I learned\nI focused on building the User Interface, so in this project I learned to use HTML, CSS, and javascript extensively.\nWhat's next for yallpay\nCurrently, the most feasible biometric authentication to implement is the facial authentication. In the future, we may implement fingerprint authentication. It is possible to implement several authentications as well, so user may have more choices.\n",
        "hackathon_id": "ugahacks",
        "winner": false
    },
    {
        "description": "\nJake is dangerously low on khakis. Guide him on his sprint to collect as many khakis as he can while escaping the wrath of the Progressive Flobot Army.\n",
        "hackathon_id": "ugahacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nWhen we saw what Clarifai's powerful visual analysis engine can achieve, we decided to create a visual analysis application that redefine the way we search. \nWhat it does\nGet Me This helps the user to query for things visually. \nFor example, if a user saw a person walking by in a fancy outfit and wonders he can get them, he can take a photo of him and Get Me This will return a series of matching descriptions based on the photo. The user selects what he is looking for from the list (for example \"_ style jeans \"), and Get Me This will query Google Maps to find a list of places that sells \" style jeans _\". User goes to a suggested place and got what he wanted :) \nHow I built it\nI used Android Studio to build the app. For visual analysis I used the Clarifai API to query for descriptive tags associated with the photos. I filtered these tags and presented them to the user to choose the best option(s). I then utilized the Google Map API to search for places with the user's options as the query.\nChallenges I ran into\nI initially wanted to make use of Clarifai's custom training API to improve accuracy on the app's imagine recognition abilities over time. However, we found out that Clarifai only offers API through javascript and Python; the java implementation is still in development. While one of our teammates tried to create the implementations on our own, we found too many impasses during the limited time. We conceded by using Clarifai's general APIs, and we devised a set of filters to take out irrelevant words, enabling the image search results to be more accurate.\nAccomplishments that I'm proud of\nThis is the first MLH hackathon that I have been to and I am also very new to Android Studio and have not worked with APIs before. At the end of this hackathon, my team and I have managed to create a complete application that works perfectly. I am proud of building this app, and the team effort that went into it.\nWhat I learned\nI have learned the basics of application development, how to interact with APIs and the power of image recognition to create innovative applications. I wish to learn more cool things in upcoming hackathons!\nWhat's next for Get Me This\nWe want to mainly focus on getting the app to return more accurate description tags for the photos. We want to explore more on the Clarifai API and try to get its custom training algorithm to work on our android application.\nIn the future, we want to release this app on the Google Play Store.\n",
        "hackathon_id": "ugahacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nOur inspiration arose from dealing with legal aid organizations and seeing first hand the issues that arose between tenants and landlords. Many of these issues ended up in District Court just to be resolved by the parties while they were waiting to see the judge. We wanted to create something to improve the efficiency of this particular legal issue and to put a tool in the consumers hand so they could avoid litigation if possible.\nWhat it does\nB1GTENANT provides tenants with a documentation process to inform tenants of their rights and to help proactively avoid running into legal issues in the future due the lack of documentation. B1GTENANT provides consumers with the ability to scan their lease to flag any illegal or problematic clauses, upload pictures of their apartment with a date and time stamp, and fill out their inventory checklist. All of these documents are saved and can be referenced at a later time if issues arises. \nHow I built it\nOur developer used Android Studio to create the app, which uses Java for the backend and XML for the front end. In addition, he used two of the HP Haven APIs (OCR and Extract Concept).\nChallenges I ran into\nThe biggest challenge was getting OCR to properly read documents especially when the font were blurry or too small. \nAccomplishments that I'm proud of\nWe are proud of taking an abstract idea and creating a workable application that could be used by the time that the event was over. \nWhat I learned\nWe learned the intricacies of landlord tenant relationships in Michigan and California. In particular, we learned that California has much more complex law dealing with tenant law. \nWhat's next for B1GTENANT\nWe want to be able to expand B1GTENANT to understand and analyze the relevant tenant law for all 50 states. Additionally, we hope to add R3 as another component to the app.\n",
        "hackathon_id": "codethedealla",
        "winner": true
    },
    {
        "description": "\nInspiration. Currently affordable housing programs are segmented and disseminated across multiple federal, state and local authorities. It is a nightmare for people to find all the available programs, learn about them, understanding the language, filling out multiple multiple applications, getting status information, waiting in lines for outcomes, finding qualified housing, etc.\nWhat it does. Ahome aims to be a housing authority contracted entity that would manage all affordable housing applications. Our software will match applicants to housing programs based on program criteria and applicant's unique situations. We'll collect all the needed information from the applicants in a simple online form, as well as documentation. We'll run required income/employment verifications, and submit COMPLETE APPLICATION PACKAGES to each housing authority an applicant is matched with. For the applicant, our solution turns hours, days and weeks of chasing geese, into just a five-minute application, a phone call and some scanned email  documents. For the authorities, it gives them all they need to approve applicants with the click of a button, eliminating phone calls, lines and hassle. Additionally we can help applicants finding housing with aggregated available housing data, and already approved housing.\nHow I built it. We used HTML, CSS and JS for the front end and one of the HP APIs for the back end. The HP API helps us retreat and aggregate housing information from Zillow, as well as from other housing sources. An additional HP API will help us match applicants with housing programs.\nChallenges I ran into. Making the API work. Integrating the map and the API.\nAccomplishments that I'm proud of. Great team work. We managed to define the problem and ping point a suitable solution. We built a functional website, made the map responsive with property information on popup windows and almost integrate the API.\nWhat I learned. Everyone has learned a lot about affordable housing and coding!\nWhat's next for Ahome. We shall see. Maybe you'll tell us :)\n",
        "hackathon_id": "codethedealla",
        "winner": true
    },
    {
        "description": "\nInspiration\n\nThere is no systematic way to find the best relevant precedents to use as a template for a new deal.\nCurrent methods are inefficient and do not always yield the best template.\n\nWhat it does\n\nUpload old deals and automatically create a database organized by key features.\nFind the best precedent to use as a template based on the type of deal you are drafting.\nDon\u2019t rely on memory or contacts to find templates. Find the best precedent with a few clicks.\n\nHow I built it\n\nBuild front-end based on Bootstrap and back-end using CodeIgniter framework. \nFinding the best precedent is using HP API, which returns most related documents we uploaded based on keywords or categories user select.\n\nWhat's next for Legal Template Machine\n\nAdd flexibility to pull data into a template by section rather than using entire documents.\nAdd easy access to original deals that you are using in a template\n\n",
        "hackathon_id": "codethedealla",
        "winner": true
    },
    {
        "description": "\nInspiration\nContracts of the same type often have the same sections. When attorneys want to write a new contract, it is convenient to look at similar sections in the same type of contract.\nWhat it does\nIt allows user to select the type of contract as well as the sections to compare. \nHow we built it\nFirst we used Kira to tag different sections in a contract and then we stored the key-value pairs, with section names being the keys and the blocks of text being the values. We used PHP and JavaScript to write a webpage to interact with users. \nChallenges we ran into\nThe codes to access Kira are not working properly, so we have to manually upload the contracts and get back the key-value pairs from the Kira website.\nAccomplishments that we are proud of\nWe learned the functions of Kira API and HP API. We are also proud that we used our knowledge to the problem in real world. \nWhat we learned\nWe learned to interact with people from different backgrounds and to work problem out together.\nWhat's next for Contract Comparison Tool\nTo implement codes to access Kira and further improve the user interface. \n",
        "hackathon_id": "codethedealla",
        "winner": true
    },
    {
        "description": "\nBuilt With\nhtml\n",
        "hackathon_id": "codethedealla",
        "winner": false
    },
    {
        "description": "\nInspiration\nWhen given the power to control technology with your mind what better to do then change the entire way you interact with your phone, especially when playing your favorite game flappy bird.\nWhat it does\nIt allows you to play flappy bird with only your eyes. using blinking as the input method\nHow I built it\nIt was built using Xcode, open source flappy bird application, and the Muse api\nChallenges I ran into\nMuch of the challenge was integrating the Objective-C muse api into a swift flappy bird game and allowing them to communicate \nAccomplishments that I'm proud of\nUsing a 3rd party api to create increase functionality on an IOS application\nWhat I learned\nlearned a lot about Objective-C and Swift interoperability, app delegation and the Muse api\nWhat's next for MuseBird\nCreate a menu to test the quality of connection of the muse to your forehead.\n",
        "hackathon_id": "minnehack-2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavajavascriptbatchhtml5lovesweattearscss\n",
        "hackathon_id": "minnehack-2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nhtmlcssjavascriptnode.js\n",
        "hackathon_id": "minnehack-2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nphpjavascriptjsonhtml5css3bootstrapjqueryajaxchromemariadb\n",
        "hackathon_id": "minnehack-2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nandroid-studiojavaandroid\n",
        "hackathon_id": "minnehack-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtmlphpcssjavascript\n",
        "hackathon_id": "minnehack-2015",
        "winner": false
    },
    {
        "description": "\nPushD-PopD - MinneHack 2015 Hackathon Project\nA Google Chrome extension written in Javascript\nCreated By: Eric Aguilera <@edawg878>, Terry Lam <@tlam6297>, Ryan Cheung <@rch3ung>, Dhruv Upadhyay <@dhruv97>\nAbout This Project\nThis Chrome extension allows the user to save (push) a webpage and continue browsing, and then go back (pop) to the saved page\nwhenever they want to return to their original place.\nInspired by the Linux commands 'pushd' and 'popd'.\nHow It Works\nOn Google Chrome, access Settings->Extensions->Keyboard Shortcuts, and set 'Pushd\" to Command+Shift+Comma, then set\n'Popd' to Command+Shift+Period. When you are on the page you want to save, press the hotkey command for 'Pushd'.\nWhen you are done searching something and want to go back to your saved place, press the hotkey for 'Popd'. You can save(push)\nas many pages as you would like, and you can keep using the 'Popd' command until you are back to your first saved place.\nA Peek at our Extension\n{\n    \"name\": \"PushD PopD\",\n    \"version\": \"1.0\",\n    \"manifest_version\": 2,\n    \"icons\": {\n      \"16\": \"save16.png\", \n      \"48\": \"save48.png\", \n      \"128\": \"save.png\"\n    },\n    \"permissions\": [\n      \"tabs\", \"<all_urls>\"\n    ],\n    \"background\": {\n        \"scripts\": [\"background.js\"]\n    }\n}\n\n",
        "hackathon_id": "minnehack-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nIt's an app inspired by realizing the need for a chat forum for patients who want instant consultation from doctors.\nWhat it does\nIt's a chat forum that allows patients to chat with doctors regarding their problems. It has been developed both on Android and iOS. It also includes a map that gives the address and directions to hospitals in the patients' city.\nHow I built it\nWe built it using Android Studio And built the database on firebase. The database for iOS has been done on parse and its front end on the iOS developer platform.\nChallenges I ran into\nWe had a hard incorporating the chatroom exactly how it was meant to be in a question and answer form, and had to settle with a message format.\nAccomplishments that I'm proud of\nThe accomplishments I am proud of is that it is the first time we developed a database on firebase or parse\nWhat I learned\nHow to develop a back end.\nWhat's next for HealthChat\nMore advanced chat forum with a question answer format and a database with the patients medical history for the doctors' reference.\n",
        "hackathon_id": "minnehack-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\niosparserandroidjavascriptjavaobjective-c\n",
        "hackathon_id": "minnehack-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe were curious how small price changes of products happen over time\nWhat it does\nIt keeps a record of the price of an item we buy and shows how it changed over time.\nHow I built it\nWe built it using Eclipse and IntelliJ IDE's for JAVA and mysql for database management.\nChallenges I ran into\n2 teammates leaving.\nhow to auto-update the data.\nno search function in Target API.\nAccomplishments that I'm proud of\nto be able to complete half or more of the project\nWhat I learned\nyou should never leave your teammates.\nWhat's next for Price Tracker\nCompletion and mobile application.\n",
        "hackathon_id": "minnehack-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nunity\n",
        "hackathon_id": "minnehack-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nHelping people to stay healthy while also incentivizing them to shop at Target.\nWhat it does\nGathers product barcode and location information and provides that to customers with the app. The customers can then go on a sudo-scavenger hunt throughout Target stores to locate the items on their list. This encourages more exercises while shopping, and the customers can be rewarded with points that lead to discounts.\nHow I built it\nUsing the CamFind API for image recognition we have allowed users to scan barcodes. We also used the Target Product API to lookup barcode information. Built with iOS and a backend of Node.\nChallenges I ran into\nManaging an image recognition API, resizing images dynamically, uploading images through API's, encoding images for transfer. \nAccomplishments that I'm proud of\nLeveraging the Cam Find image recognition API and hooking that into the Target Product API.\nWhat I learned\nThat dealing with image processing is a tough job.\nWhat's next for SpotWalk\nA great presentation!! Hopefully more development, and maybe some integration with CartWheel?\n",
        "hackathon_id": "minnehack-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWorking in a Grocery Store for 7 years -John\n  I enjoy making products that help others -Haley\n  I wanted to help managers with their workflow -Gabe\nWhat it does\nManage Scheduling of Shifts across Stores, and track employee shift data\nHow I built it\nStress, Coffee, Coding\nChallenges I ran into\nSleep, User Permissions\nAccomplishments that I'm proud of\nProud of our team, and how well we worked together\nWhat I learned\nBoth Haley and Gabe learned about Ruby on Rails\n  John learned about the importance of breaks\nWhat's next for Bullseye Scheduler\nIntegration with existing software solutions\n",
        "hackathon_id": "minnehack-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavahtmlcssphpjavascriptlaravel\n",
        "hackathon_id": "minnehack-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe wanted to built some that generated itself\nWhat it does\nGenerates an entire universe as you and people play around you\nHow I built it\nWith no sleep\nChallenges I ran into\nAngularJS was being really mean\nAccomplishments that I'm proud of\nThis thing is sick for only having 24 hours to work on it\nWhat I learned\nThat auto generated content is da bomb\nWhat's next for Core-Link\nGet some testers on it\n",
        "hackathon_id": "minnehack-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njsonrobot\n",
        "hackathon_id": "minnehack-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nSince the development of 5.1 surround, lot has has changed in VR capabilities. The fundamental technology of playing waveforms over speakers is the same, and the idea of using VR in audio can be applied to blind people. \nThis concept can be used by blind people to detect objects around themselves(currently only sound emitting ones). For static objects like doors, we can use audio spatialization to fool the user that the sound is coming from a particular direction. We can add image processing to the VR so as to detect objects.\nWhat it does\nGives an insight on how Oculus VR can be used to give rich virtual surround sound experience to an user by tracking user's head movement and orientation.\nHow I built it\nAs Audio VR, is a complex project, we made a simple demonstration of how a moving sound source can affect the intensity of sound reaching the listener using Oculus Audio SDK. We used Unity engine to create a virtual world that had the objects creating sounds.\nChallenges I ran into\nIntegrating Oculus in Unity, work on the code to place a virtual ear around the sound source and make it move.\nAccomplishments that I'm proud of\nAs it was a first hackathon ever for all the members of our team, we're proud of working in the field of virtual reality and learning tons of other stuff like game engines in the process.\nWhat I learned\nGot an idea about Audio spatialization, got to get a first hand experience on some of the coolest hardware currently out there.\nWhat's next for Immersive Audio demonstration using Oculus Rift VR\nThe ability to track the user's head orientation and position significantly empowers audio technology.\n",
        "hackathon_id": "minnehack-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nSci-Fi hologram-type interfaces.\nWhat it does\nAllows a user to interact with their automated home through an intuitive augmented reality interface.\nHow I built it\nI used Unity3D's Oculus Rift integration, LeapMotion's Unity integration and API, and the OpenHab API, coding entirely in C#.\nChallenges I ran into\nI have never attempted to use remote APIs and had no prior experience with JSON, XML, REST, or HTTP access protocols.\nAccomplishments that I'm proud of\nManaging to pull together a workable integration of several technologies I have never worked with before in less than 24 hours solo.\nWhat I learned\nThe basics of working with a remote API and the actual application of VR technology.\nWhat's next for HubVR\nFull implementation of user interface customization, specifically ability to add and save new device menus at run-time for full OpenHab integration.\n",
        "hackathon_id": "minnehack-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\ncssc#asp.net\n",
        "hackathon_id": "minnehack-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nconnect-iqmonkey-c\n",
        "hackathon_id": "minnehack-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nSpace is cool\nWhat it does\nThis uses the XBox Kinect to track your body motion and the Oculus Rift to see\nHow I built it\nWe used Unity, Kinect, and the Rift along with some game design experience to make an immersive space game!\nChallenges I ran into\nDeveloping VR on a laptop isn't very fun.  This would run much nicer on a desktop computer\nAccomplishments that I'm proud of\nMerging the Oculus and Kinect SDK's to control an avatar\nWhat I learned\nI learned a lot about the new updates in unity 5\nWhat's next for Just another space game with rocks\nMostly just lasers and aliens and explosions and stuff.\n",
        "hackathon_id": "minnehack-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nI want it to be easier to move things into the Internet of Things, as that's the next step in automated convenience.\nWith this, I hope to make it easier for any hobbyist to connect the devices around their house to a botnet. Hopefully, one controlled by them.\nWhat it does\nThis takes commands from trusted users in IRC, and writes to GPIO pins based on the commands, and can report status of input GPIO pins.\nHow I built it\nBlack magic, ritual sacrifice, and magic smoke. (Also the Sopel Python IRC bot)\nChallenges I ran into\nI did not come prepared for this project, it was actually my third project idea of this hackathon. Scraping together the electronics/wiring for this was the hardest part.\nAlso, I broke my operating system when I was trying to install the kinect drivers, and operated on a kali live boot for most of the hackathon.\nWhat's next for IoT IRC Bridge\nI plan to continue development, and integrate it into a upcoming project of mine, a raspberry pi controlled vending machine.\nHow To Try\nirc://irc.sorcery.net:6667/#Demo_IoT_IRC_Bridge\nCommands are .blink\nIt will not exist past the end of the hackathon, in this form at least.\n",
        "hackathon_id": "minnehack-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroid-studioandroid\n",
        "hackathon_id": "minnehack-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaandroid-studio\n",
        "hackathon_id": "minnehack-2015",
        "winner": false
    },
    {
        "description": "\nNOTE: devpost can't handle the link to demo our project. Here's the link:\nhttp://to_bike_share.meteor.com\nInspiration\nHonolulu is rolling out their bike share system in 2016, and it would be nice for locals and tourists to be able to quickly know what bike stations are nearby and get to a bike share station via Uber.\nWhat it does\nIt's a map that displays markers for all the bike share locations in Honolulu (currently not a real data set since the bike share is not here yet). Clicking on a bike station marker will show the lowest fare estimate and provide a button that allows the user to complete the booking in Uber's app.\nWhat I learned\nMeteor.js - This hackathon was a good excuse to force me to learn something new!\nWhat's next for To Bike Share\nAdd ability to complete Uber request booking in the app, without relying on deep linking to Uber's app.\nPut the real data in when bike share stations are built in Honolulu and Hawaii.\nInclude other cities with real bikeshare data.\nGithub\nhttps://github.com/rrhnsn/uberhalfway\n",
        "hackathon_id": "uber-devleague-hackathon",
        "winner": false
    },
    {
        "description": "\nInspiration\nA common problem with Uber is that drivers and passengers have trouble identifying one another in busy areas, such as at airports, where it can be common for up to 20 Uber riders to be waiting for their own drivers.\nWhat it does\nHueber is a web app that helps drivers and passengers locate and identify each other, eliminating a potential awkward scenario. Once an Uber ride request has been accepted, Hueber works by texting the driver with a unique \"flag\" image with which to identify the passenger. The same flag image is displayed on the passenger's phone. The passenger holds their phone out with the flag image displayed so the driver can easily identify them as their Uber passenger.\nChallenges I ran into\nUber API sandbox issues. Had to hack an API work around due the lack of an official way to get a passenger's currently accepted request.\nWhat I learned\nWe all learned a lot about SSL and web development in general.\nWhat's next for HUEber\nCurrently, it is just a proof of concept. We need to swap the Uber sandbox API calls with actual API calls.\n",
        "hackathon_id": "uber-devleague-hackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtmlcss\n",
        "hackathon_id": "uber-devleague-hackathon",
        "winner": false
    },
    {
        "description": "\nInspiration\nWhen I travel, I always use 2 apps to compare publict transit and uber fares/durations.\nWhat it does\nOn one screen, quickly compare  trip fare and duration for public transit and Uber.\nHow I built it\nUber API, Google Maps API, simple html/js UI\nChallenges I ran into\nUber API bug (maybe on our side), cross-domain scripting\nAccomplishments that I'm proud of\nGetting it done!\nWhat I learned\nDon't mess with cross-domain scripting. Just don't.\nWhat's next for Uber Or Bus?\nIt's online @ kauai.zendy.net/uberorbus\nAlso: sleep.\n",
        "hackathon_id": "uber-devleague-hackathon",
        "winner": false
    },
    {
        "description": "\nWe came, we tried, we published with 5 minutes left and the project sorta working.\n",
        "hackathon_id": "uber-devleague-hackathon",
        "winner": false
    },
    {
        "description": "\nInspiration\nTo go out drinking and hop around different bars fast and safely.\nWhat it does\nLocate bars around your area. You choose it, request a car, and off you go!\nHow we built it\nIonic-Cordova for mobile and Angular.js for cool stuff.\nChallenges we ran into\nConvincing Uber API to accept our awesomness for 6 hours.\nAccomplishments that we're proud of\nGetting this done!\nWhat we learned\nGet better at design\nWhat's next for Uber Wingman\nMAKE IT MORE AWESOME\n",
        "hackathon_id": "uber-devleague-hackathon",
        "winner": false
    },
    {
        "description": "\nInspiration\nRide sharing is become more and more popular, but there are still people out there that refuses the service.  Due to the fear of catching a ride from a complete stranger, it becomes a major turnoff for some people.  Our inspiration for this project is to augment the ride sharing service with a safety as our priority. \nWhat it does\nBook Uber rides with a peace of mind.  Our app's main objective is to allow user to use a buddy system that will notify his/her buddies on where and when he/she will arrive on the agreed destination. \nHow I built it\nWe build the backend with node.js using the express framework. Our frontend is designed with angular.js coupled with css and html5.  The framework we chose for the frontend is boostrap.\nWe also featured the Uber API heavily to query and retrieve data from the Uber database.  \nChallenges I ran into\nMajority of our group (4 of us) are first time hack-a-thon'ers, so we were learning as we were building our application.  The hard part for most of us is that we don't have much web development skills/experience.  We also had a hard time getting Oauth verification going with our web application because it was pretty tricky using unfamiliar tools to connect all the components together.  \nAccomplishments that I'm proud of\nWe were also to stick to our original goal of delivering the basic functionality of our application, which was to send notifications to your contact list using the Uber API.  We also worked well together as a team, as each team member contributed tremendously to the project.  We split the workloads into different pieces, mainly frontend and backend, and tackled each of the tasks by selecting the most suited member of the group to do so.\nWhat I learned\nHack-a-thon is a very fun and rewarding experience.  You are forced to think and find a solution to an interesting problem with limited resources, mainly time.  You quickly find out how much you find push yourself during crunch time and how far team work can carry you with like-minded people.\nWhat's next for Ride Guardians\nUltimately we would like to use the Uber app as our build foundation, and augment that with our idea of a buddy system by query Uber data via the Uber API.  What we mean by that is that in our current project, we mainly rebuild the Uber app's basic functionalities of searching and booking for rides via your current location, and from there we are able to add our idea in building a contact list of buddies, and periodically sending them notifications of where you are in your ride sharing process.  If we just let Uber app do the front end part of finding and booking rides, then we can focus more on building a safety system who's main focus is on the safety aspect, meaning a more robust user interface/experience on building and sharing with a buddy system.\nThere are also various aspect of the application we want to focus on, mainly polishing the app to make it a lot more presentable.  Sending people notification via. text instead of emails (and also include attachment feature since as images).  Create a portable application version. Etc.\n",
        "hackathon_id": "uber-devleague-hackathon",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe wanted to give people the tools to get out and experience Hawaii at it's fullest! We believe our app can help our foreign visitors get out and experience Hawaii first hand, and help our small businesses all across the island. \nWhat it does\nThe Vivid Hawaii app currently allows English and Japanese speaking users to discover new possibilities when traveling to Hawaii by providing insights and tools to experience the trips they want. Vivid Hawaii provides current and discerning shopping, dining, hotel, culture recommendations and discounts. The information is written by people who live here and can convey the essence of each destination better than anyone else, truly a resource that visitors want to read as well as reference.\nIn addition to being an informational resource, the app also incorporates geo location and Uber integration to take users anywhere, at a any time at a touch of a button. It's like having a local friend whenever you visit Hawaii.\nSee, eat and experience your way through Hawaii from the palm of your hand. \nHow I built it\nWe built it out the app using Javascript, Angular, Express, Mongodb, Jade and SASS.\nChallenges I ran into\nOAuth\nAccomplishments that I'm proud of\nOur awesome team and The Hoff!!!\nWhat I learned\nOAuth is a bitch!!!\nWhat's next for Vivid Hawaii\nWe built this MVP at the Devleague/Uber hackathon so the next step would be to continue to flush out the app with content, additional language capability, and get users.\n",
        "hackathon_id": "uber-devleague-hackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonflask\n",
        "hackathon_id": "bcu-halloween-blockchain-hack",
        "winner": false
    },
    {
        "description": "\nInspiration\nAnonymous image uploader. \nBack original content creators with bitcoin donations.\nWhat it does\nUsers can upload files (image/audio/text) and enter their wallet id where they would like to recieve donations.\nSee a timeline of all the content being uploaded.\nHow I built it\nFlask/Python\n",
        "hackathon_id": "bcu-halloween-blockchain-hack",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptjquerymongodbcsshtmlterminaltierionbitgo\n",
        "hackathon_id": "bcu-halloween-blockchain-hack",
        "winner": false
    },
    {
        "description": "\nBuilt With\ninvisionsketch\n",
        "hackathon_id": "bcu-halloween-blockchain-hack",
        "winner": false
    },
    {
        "description": "\nBuilt With\nreactjsfluxreact-native\n",
        "hackathon_id": "bcu-halloween-blockchain-hack",
        "winner": false
    },
    {
        "description": "\nThe funny part:\n\ntried to build my own but transaction fees are too high to do it with bitgo directly\ntried to buy dogecoin (needed 5000 to start a faucet) but transaction confirmation is pending....\nfinished by just building a bitcoin faucet with faucetbox api\n\nThe idea is to start with a faucet and then build a marketplace of meaningfultasks with bitcoin rewards. (learn programming, build your project,..)\nLesson learned:\n\nMicro-transactions with bitcoin is hard :D\nTransaction pending is killing me\n\nBonus\nParty tricks about the blockchain:\n\nbecause you can store text in the blockchain, there is some pron (strings -20 block/blk* | less on mac/linux in your .bitcoin directory)\nyou can generate funny bitcoin addresses with vanitygen, example: https://gist.github.com/mdamien/57e7ddedba6e8527daa1\n\nExample:Address: 1BkUnid4RNT3NYDuRAFanKHCBEZ9CxP4hC\nPrivkey: 5JrmiXGaTBjVrzrtsGY8KJ5jz4ZxXeSeYL6VsojX32imKXnAGdm\n\n",
        "hackathon_id": "bcu-halloween-blockchain-hack",
        "winner": false
    },
    {
        "description": "\nBuilt With\nnode.jsangular.jsmongodbexpress.js\n",
        "hackathon_id": "bcu-halloween-blockchain-hack",
        "winner": false
    },
    {
        "description": "\nBuilt With\nnode.jsangular.js\n",
        "hackathon_id": "bcu-halloween-blockchain-hack",
        "winner": false
    },
    {
        "description": "\nInspiration app complies with Work Permits, Work Experience Education, & Community Classrooms law:\nWhat it does assists teens to file PDF form, contact employers, manage bitwages.\nHow I built it using standard frameworks and parse as a back-end.\nChallenges I ran into while generating a PDF compounded upon each other.  There is little documentation on how to create a PDF use Apple Frameworks. It's basically trial and error.\nAccomplishments that I'm proud of moving the idea along.  There are a significant number of teens in the State of California that are age 14-17 that can be aided with this app.\nWhat I learned the fundamentals of bitcoin and blockchain.\nWhat's next for Work Permits for Teens 14-17? Continue development.\n",
        "hackathon_id": "bcu-halloween-blockchain-hack",
        "winner": false
    },
    {
        "description": "\nInspiration\nSwitching to clean, renewable energy is the need of the hour as climate change is on us. With declining costs of PV panels and governmental incentives, solar energy provides an excellent alternative to grid power, which relies mostly on non-renewable sources for generating electricity.\nImage a utopia where almost all homes produce their own energy using rooftop solar installations. Enter Solaropia, an online service to help homeowners to calculate the solar potential of their residence. \nOur inspiration behind Solaropia was to aid homeowners in initial diagnostics of their rooftop and educate them about its solar potential. In our prior experience as researcher in the area of renewable grid integration, we found that installing solar panels on roofs can drastically reduce homeowner's dependency on grid electricity.  Using this website, we wish to encourage people to adopt solar energy and show them that there is very little to LOSE and everything to GAIN by adopting solar. \nWhat it does\nSolarpia provides an interface to users, where they can lookup their homes on Google Maps and using a marker tool can carve out their home (top view). This provides us the true length of the roof. After this our image processing library kicks in to help us in finding the tilt of the roof using Google Street View API. \nWe tried to reduce the number of inputs provided by the user and provide basic cost and operational characteristics such as number of sunny hours, yearly solar potential (based on solar models), monthly solar capacity, cost savings and payback period. Libraries used to perform the above calculations are described in the next section. \nHow we built it\nWe use a lightweight Python web framework (Flask) for building this web application. We use the following libraries to develop this application:\nFor the front end:\n\nBootstrap: CSS Framework: Our html pages has been designed using their css. However, we had to add our custom css for styling. \njQuery: javascript:\nGoogle Maps and Charts;\nFor the back end:\nPython: the entire backend \nGeopy - For calculating orientation of the home. \nOpenCV: For identifying the tilt of the home\nGeocoding: for identifying the location based utility pricing \nPandas: for processing the data from National Solar Radiation Database. (NSRDB)\n\nChallenges we ran into\n\nParsing the NSRDB - Improving response time of getting the right irradiance model for a location - Pre-computed and cached models for over 1.5k sites in the US for quick calculation of savings, yearly sunshine hours\nImage processing - The underlying algorithms for image processing have gone through multiple iterations of improvement in the past 24 hours. This includes identifying the edges of the roof, removing noise by first downsampling the images and doing median blur to maintain edge consistency. We ran hough transform to then detect the lines in the images. \nComputing orientation of a house: Orientation of a house provides a great deal of information about the solar potential. We had to iterate over multiple methods before settling down on a technique that worked best for identifying the orientation of homes given its coordinates.\n\nAccomplishments that we're proud of\n\nDesign decisions - No compromise on the underlying algorithms and datasets. Used National Solar Radiation Data Base dataset for getting accurate historical weather and solar irradiance models.\nUI design: We spent some time fixing the UI so that it looked professional and ready to deployed in a real world environment. \nOpenCV libraries: Having little to no background in image processing, we feel that we learnt a great deal and were able to use the APIs to solve our problems. \nThe end product - We are happy with our end result, and feel that with a little more effort we could actually see people using this web service.\nWe used real world utility pricing to give an accurate model for our savings.\n\nWhat we learned\n\nImage processing: Learnt about image processing, how to detect edges and the different scenarios where edge detection can go horribly wrong. We interacted with people who knew about image processing to understand better the underlying concepts. \nFor an interactive service like ours, we wanted to get quick feedback for our work. HackUMass provided an excellent opportunity for us to interact with people and get their valuable inputs on our work. \nRapid prototyping\n\nWhat's next for solaropia, an online service to help homeowners calculate the solar potential of their residence.\nWe plan to release an alpha testing version to improve a few minor bugs that might persist. We also plan to develop a feature where users can provide feedback on our UI and calculations for the limited beta testing phase. \nCurrently, we only cover US territory as we are restricted by the solar model from NSRDB. In future we plan to leverage similar models for Europe, China, India, Middle-East, Africa and Latin America. \n",
        "hackathon_id": "hackumass-iii",
        "winner": true
    },
    {
        "description": "\nInspiration\nSome of us are bicyclists who enjoy to ride with the comfort of safety.\nWhat it does\nIts a bicycle helmet that saves lives. It prevents the cyclist from being distracted from the world around them. Our helmet provides a unique way to have the convenience of turn-by-turn navigation as well as a built-in safety procedure in the event of a collision. The helmet has turn-by-turn navigation that uses motors on the left and right of the helmet to allow the cyclist to know which direction is coming up without looking at their phone for maps' help or GPS. There are also turn-signals on the back of the helmet. There is also a collision-detection system in place that uses an accelerometer to detect sudden, violent changes in motion--differing from the regular movement of looking around the environment--to show a crash.\nHow I built it\nWe used an arduino on the helmet that managed all the signals, haptic feedback and collision detection system.\nChallenges I ran into\nThere were many issues with trying to communicate between an App to an Arduino wirelessly.\nAccomplishments that I'm proud of\nWe were able to provide a working prototype before the submission deadline! \nWhat I learned\nWe learned how to maximize efficiency in an algorithm which will help on processing times and the time it takes to send and receive information.\nWhat's next for HeadSmart\nWe would like to fully implement the GPS features on the helmet to provide a location to the emergency contact and be able to fit the sensors in a much tighter package that would allow for mass production.\n",
        "hackathon_id": "hackumass-iii",
        "winner": true
    },
    {
        "description": "\nThis past summer my friends mom was diagnosed with a fairly common neurological disease called Multiple Sclerosis (MS). While he would tell us about her condition, I realized it\u2019s a very plausible idea to monitor her conditions and track her progression through the disease. My team and I looked through symptoms of MS and used sensors to track the data and send it to an iOS app that then processes the data.\nThe hardware is built with an Arduino, BLE shield, and multiple sensors. We would like it to be a convenient wearable device. The data is outputted in serial format which is then sent over bluetooth to the iOS app. The app then allows the patient and/or family/friends/doctor to view this data. The heart rate, temperate, breathing, and vision data is then logged so that the patient and doctor are able to view the history and progression of the disease. When patients feel uncomfortable they are able to hit an \u201calert\u201d button that takes the current data and send it to prior imported contacts. \nThe biggest challenge we ran into was sending the serial data to the iOS app. We tried to overcome this using a fitbit to retrieve health data but the API would not allow us to retreive heart beat data due to privacy issues. After 24 hours of consistent hacking, we switched back to the arduino, obtained a bluetooth shield and continued our hack.\nApart from the immense iOS developemt, API authorization, and hardware knowledge, I learned what team work really was. All of us were able to offer something unique to the team. Each of us came with a seperate skill that would eventually come together to make Scopium. We had a designer, an iOS engineer, a hardware guy, and android developer. \nFor next steps, we plan on recreating hardware with high quality medically certified parts and combining that with an efficient and complete iPhone/Android application. This technology is something we plan to put on the market as an affordable patient monitor solution to Multiple Sclerosis(and hopefully in the years to come, many more diseases/disorders)\n",
        "hackathon_id": "hackumass-iii",
        "winner": true
    },
    {
        "description": "\nInspiration\nHackUMASS Prize category\nWhat it does\nParty hosts can register their parties using their name, address, date of party and phone number.\nNeighbors can anonymously submit noise complaints by entering their address and phone number. The system automatically texts the party host with a warning immediately and the complainant in 20 minutes to ask if the noise issue has been resolved, and if they reply \"no,\" it texts the police and party host to notify them of police being contacted. \nAdmins can log in and view all registered parties and complaints and backlogs of information. Future iterations will display a map/list view toggle of the information, and will highlight \"problem areas\" or houses that have multiple incidents reported.\nHow I built it\nBlood, sweat and tears.\nChallenges I ran into\nAccomplishments that I'm proud of\nWhat I learned\nA boodle!\nWhat's next for PartySmart\nBuilding out the functionality specified for the Admin Panel.\n",
        "hackathon_id": "hackumass-iii",
        "winner": true
    },
    {
        "description": "\nBuilt With\ncudaazurewin10windows-10-iotkinectnvidiajetsonopencv\n",
        "hackathon_id": "hackumass-iii",
        "winner": true
    },
    {
        "description": "\nkalichos\nAudio upscaling program utilizing neural networks\n'Super resolution' programs are algorithms designed to take low-resolution images and upscale them to higher resolution. Some of these algorithms are designed using neural networks, which are machine learning models that can train themselves to get a desired output from a set of inputs.\nWe introduce kalichos as a 'Super fidelity' program. It is a neural network designed to upscale poor-quality audio to higher-quality audio using the same machine learning techniques as high-end super resolution programs take advantage of.\nHow does it work?\nA neural network is an abstraction over a set of vertices that represent 'weights' and 'biases'. By taking a set of inputs and performing some special linear algebra with the weights and biases, we can create an output and compare it to a desired 'optimal' output. Using this data, we can 'train' the neural network by changing the weights and biases to get closer to the desired output. In this specific case, we take small slices of audio from the low-fidelity data, feed it into the network, and train it against the high-fidelity data. Our implementation uses CUDA to accelerate the linear algebra. By parallelizing the code on a GPU, we increase the speed of the neural network significantly.\nWe currently have an extremely small web-app to demo against the songs that we trained the network against. We upload a poor-quality MP3 file and receive a higher-quality MP3 file. In the future, we hope to create an embedded device that can upscale audio in a stream as an Audio-Over-USB interface.\n",
        "hackathon_id": "hackumass-iii",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascriptnode.jsmongodbmonkexpress.jsbing-mapsazuretwiliomongolabjquerycsshtml5materialize\n",
        "hackathon_id": "hackumass-iii",
        "winner": true
    },
    {
        "description": "\nBuilt With\nandroid-studiojavatropogoogle-play\n",
        "hackathon_id": "hackumass-iii",
        "winner": true
    },
    {
        "description": "\nTeam 45\nInspiration\nWe we're inspired to build with Fitbit for its data rich API, but we weren't sure quite what. After realizing that the Fitbit had a vast amount of information relevant not only to fitness, but to health as a whole, an idea struck us. What if we enabled friends, family and care givers to use the Fitbit's immense wealth of information to track overall wellness and even monitor the sickness of distant and older family members? In comparison to other devices, Fitbit's are well received by people of all age groups, unlike other devices geared explicitly towards older individuals. If people actually wanted to wear their wellness device, the data produced would be better and more accurate. Furthermore, the wearer would have the opportunity to use the device outside of its 'wellness' setting, using if for personal expertise and anything else.\nWhat it does\nFamilee connects to any number of Fitbit devices owned by any number of individual family members. These family members still retain full control of the account and only share some pertinent health data with Familee. Familee aggregates a month of history in walking, heart rate and sleep patterns to keep the care giving family member up to date on the care receiving individuals overall activity level and basic health. Additionally, Familee provides text message integration and can optionally send text message reminders regarding medications to cared for individuals. Furthermore, Familee correlates patterns in multiple pieces of data to provide an early warning of oncoming colds and sickness. With Familee, care givers can have added confidence in their loved ones health without providing an over bearing presence in their lives.\nHow We built it\nWe built Familee with Mongo as our database, Node and Express as our backend, and Angular as our front end. Additionally we utilized Twilio for sending text message reminders. \nChallenges We ran into\nWe ran into a number of challenges in the construction of Familee. Our first major challenge was developing a subtable OAuth connection system for Node to speak with the Fitbit API over. This proved to be a a great challenge in token management, token refreshment/timeout and header configuration. Additionally, while under heavy development frequent data reloads caused or API connection to become limited and shut off, resulting in a rapid need for a cached sample data.\nAccomplishments that We're proud of\nWe're proud that we we're able to construct as solid an application as we did that has the potential to actually make a difference in peoples lives in under 36 hours. Familee has the potential to bring care monitoring into the realm of everyone instead of those with enough money to afford exorbitantly lavish systems. Furthermore, for our first time using an OAuth provider, we were able to build a fairly complete and extensive connector that worked with multiple sessions (Fitbit's) at once.\nWhat We learned\nWe learned more about the intricate world of OAuth (And authentication schemes for that matter) that we ever though either one of us would know. We also sharpened our AngularJS skill set further with Angular UI Router and built more elegantly that ever before.\nWhat's next for Familee\nThere are a vast number of parts we would love to implement in Familee. We'd love to start by implement a better wellness score system and build a global wellness score, one that takes into account all metrics we gather to produce one score. We also really want to incorporate more monitoring for the times that the care taker isn't logged in. Alerts and such would be sent over text message should anything suspect arise.\n",
        "hackathon_id": "hackumass-iii",
        "winner": true
    },
    {
        "description": "\nBuilt With\nlibrariespythonibm\n",
        "hackathon_id": "hackumass-iii",
        "winner": true
    },
    {
        "description": "\nBuilt With\niosobjective-cnode.jsexpress.jshandlebars.jsspotifyibm-watson\n",
        "hackathon_id": "hackumass-iii",
        "winner": true
    },
    {
        "description": "\nBuilt With\nc++cudapythonros\n",
        "hackathon_id": "hackumass-iii",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe have Google. We have Piazza. We have Facebook. We all have questions that we want answered. Despite the fact that many use these services together, we continue to lack the answers that we seek. Our team, founded here at HackUMass III, all recognized and experienced first handedly, the faults that lie in current platforms. So we set out to solve the problems that we as students face. Our solution? We made our own platform; by students, for students.\nWhat it does\nCreates a medium between students and faculty within specific schools, allowing them to find specific information that cannot be found on traditional go to search sites like google, or stack overflow.\nHow I built it\nWe used meteor.js to do file control, Mongoldb to store data sets, Materialize CSS to implement material design, heroku to store our code in the cloud, azure to host our webpage, and js, jquery, css and html to design the webpage itself.\n",
        "hackathon_id": "hackumass-iii",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtmlcssjquerynode.jsexpress.js\n",
        "hackathon_id": "hackumass-iii",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascript\n",
        "hackathon_id": "hackumass-iii",
        "winner": false
    },
    {
        "description": "\nBuilt With\nswiftpythonjavascript\n",
        "hackathon_id": "hackumass-iii",
        "winner": false
    },
    {
        "description": "\nInspiration\nI needed a small workstand to keep my projects organized and neat on my desk, and thought it would be a good idea to incorporate a modular design for attachments (soldering hands, vice, etc.)\nWhat it does\nIt replaces miscellaneous separate tools of a normal workbench with one workstand and small external modules.\nHow I built it\nI drew up both the soldering hands and workstand in FreeCAD before printing them out in PLA on the hackathon-provided makerbot.\nI used\nChallenges I ran into\nThe editable file of the workstand was lost through a computer problem, and the initial design for the helping hands was not workable (the key to fix the hands to the stand was larger than the keyhole).\nAccomplishments that I'm proud of\nHaving a printed model that actually does a job (not just a prototype).\nWhat I learned\nCAD menus are annoying to understand, but useful. Also, have USB keys handy\nWhat's next for OpenWorkstand\nMore modules, an easily editable base file for people to design their own modules.\n",
        "hackathon_id": "hackumass-iii",
        "winner": false
    },
    {
        "description": "\nInspiration\nHeckler and Koch designed the XM25 CDTE for the us army. Its capabilities have the potential to change ground warfare\nWhat it does\nOur system launches a programmable simulated grenade. The simulated part means our projectile releases compress air from a pressure vessel instead of exploding. The projectile can be program to \"detonate\" in different modes, such as impact, time or distance. It does this with an IMU and an arduino.\nHow I built it\nThe projectile, including its pneumatic systems. is custom designed and machined. The launcher is made of irrigation and plumbing parts from lowes.\nChallenges I ran into\nPneumatic systems are hard to machine. Our resources were limited. Our three person team was under staffed.\nFiguring out how to use acceleration from an IMU to measure a sense of distance\nDue to dead wires, we had to use a voltmeter to determine where our problem was \nworking with bad Arduinos \nAccomplishments that I'm proud of\nservo triggered air pressure release\ncustom machined air valve \nAble to overcome several obstacles  with the programming and hardware together \nWhat I learned\nit takes more than three people 36 hours to design a simulated weapons system\nWhat's next for Smart munitions\nThe xm 25 gets fielded in 2017. We have fun with our launcher\n",
        "hackathon_id": "hackumass-iii",
        "winner": false
    },
    {
        "description": "\nInspiration\nQuadcopters are awesome. Using souped up parts to make that quadcopter from scratch is even more awesome but equally challenging. \nWhat it does\nLike other quadcopters, it flies through the air like a majestic bird. Except this bird can fly ~ 60 mph, and up to a kilometer far away.\nHow I built it\nWe used Fusion 360 to design the chassis from scratch, and dissected a wii remote to communicate directly to an arduino. That arduino uses long-range radio signals to communicate with a second arduino that processes flight information (using a gyroscope) and controls flight itself.\nChallenges I ran into\n3D printing the chassis took multiple long-time iterations, ended up printing two halves that we had to assemble. \nAccomplishments that I'm proud of\nThe fact that we've custom built a quadcopter instead of just buying one. Plus, we can use multiple input sources to control it if we wish too.\nWhat I learned\nLots of soldering, circuits, CAD\nWhat's next for Nunchuck Quadcopter\nAfter working on the stabilization algorithm, we can expand our input sources for flight control to include any custom controller we like, or using voice control. If we had more time, we would have also attached a camera in order to see a first hand view of where it is flying\nWe were also looking into the Fitbit API in order to use gps data from a run to map a course for the quadcopter to follow\n(team # 55)\n",
        "hackathon_id": "hackumass-iii",
        "winner": false
    },
    {
        "description": "\nInspiration\nOur team and inspiration formed on the bus ride to HackUMass 3, with people in all different backgrounds we all hoped to learn and create something new!\nWhat it does\nBotler allows intermediate programmers, as well as advanced programmers to create bots and challenge other users to games.  By providing a web IDE, users can learn to code by creating Python bots to play games such as Rock-Paper-Scissors and Light Cycle.  Our platform provides users with all they need to develop their bots to play these games.  We even provide statistics online and on mobile so users can see how their bots are performing! \nHow we built it\nThere were many different aspects that went into creating this project.  We have a back end and game engine written with Python and Haskell.  On our site we have an IDE built in that allows users to create their bots right on the website in Python.  We also have a mobile application that goes alone with our web application to show the statistics of the user's bots. \nChallenges we ran into\nThere were plenty of challenges that were run into when developing this project.  One of them was starting out using Microsoft Azure.  Our mobile developer's laptop broke mid way through the project and plenty of time was put into fixing it.  There were also small challenges like any project that we ran into.\nAccomplishments that we're proud of\nWe're all very proud of our entire project, we believe it was a big project and are glad that we got it all finished.  We're also proud of the beautiful user interface done on both the website and in the mobile application.  Making it beautiful was definitely a good part of our project.\nWhat we learned\nEach one of us learned something new.  Whether it was working on front end instead of back end, or working with a new programming language, each one of us took something new out of our project.  \nWhat's next for Botler\nWhat's next for Botler? Well, we plan to release Botler to the public to allow the intermediate programmers wanting to learn more to do so.  We hope to create many more games that people can create bots for and battle with one another as well.\n",
        "hackathon_id": "hackumass-iii",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonc++myocreate2roomba\n",
        "hackathon_id": "hackumass-iii",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythoncsshtmljavascriptcshell\n",
        "hackathon_id": "hackumass-iii",
        "winner": false
    },
    {
        "description": "\nBuilt With\nsoldering-equipmentwiresledsmybrain555timers2n3904\n",
        "hackathon_id": "hackumass-iii",
        "winner": false
    },
    {
        "description": "\nWhat it does\nUses APIs from IBM Watson Personality Insights and Twitter to analyze a Twitter user's tweets\n",
        "hackathon_id": "techweek-los-angeles-hackathon",
        "winner": true
    },
    {
        "description": "\nInspiration\nNo two students are exactly the same or learn in exactly the same way. Some of these differences are linked to personality. Since understanding a particular student's personality and preferred learning methods can be difficult and time consuming, we have developed an application to accelerate the process without adding any extra work for the teacher\nWhat it does\nAssignmix allows teachers to photograph a student submitted assignment and run the content through a personality analyzer. The results can allow the teacher to identify the kinds of student personalities that cause a student to do better or worse on a particular type of assignment.\nHow I built it\nBuilt on IBM's Bluemix platform using the Watson Personality Insight API. \nChallenges I ran into\nDifficulties in deciding which Bluemix features to build a project around(there are a lot).\nAccomplishments that I'm proud of\nCreated a working version of the project.\nWhat I learned\nLearned how to develop on the Bluemix platform and utilize various services.\nWhat's next for Assignmix\nAutomate the process of finding links between student personality and performance on a type of assignment.\n",
        "hackathon_id": "techweek-los-angeles-hackathon",
        "winner": true
    },
    {
        "description": "\nInspiration\nIs the value we hold of friends and family of all ages.\nWhat it does\nIt allows a person to send out an emergency text with a link to a google map that pin points their location. In addition, the emergency services uses your location to show you the nearest medical services.\nHow I built it\nWe used IBM BlueMix's ASP.NET 5 runtime, and integrated Google Maps and Twilio's APIs.\nChallenges I ran into\nLearning to work in BlueMix environment and getting Geo-locations for google maps to use.\nAccomplishments that I'm proud of\nThat I learned how to work with Blue Mix in a short amount of time with their streamlined deployment.\nWhat I learned\nI learned how to use Twilo's Web API\nWhat's next for In Case Of\nTaking and expanding In Case Of to a mobile platform.\n",
        "hackathon_id": "techweek-los-angeles-hackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptangular.jsbootstrapc#asp.netjqueryjsonbluemixibm-watson\n",
        "hackathon_id": "techweek-los-angeles-hackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\nraspberry-piarduinocapacitorssoldering\n",
        "hackathon_id": "aghacks2015",
        "winner": true
    },
    {
        "description": "\nI'll try to make my text as compact and as specific as it is possible in the realias of lack of sleep.\nInspiration\nIn the beginning of this week Kacper came to me and told me there are variometers - devices useful for paragliders - by telling them whether they're falling down or flying up. But they are very complicated, overloaded with functions and simply expensive. As I love to construct things we quickly come up with an idea that we can create such a device during the hackaton. \nBut - we decided not only to create a prototype but a complete product - prepare enclosure, branding, marketing strategy and even - a crowdfunding video! Actually we wanted to find ourselves a graphics designer and a marketing specialist, but we couldnt match with any people of these capabilites and we finally build up the team out of moslty hardware-programmer people, but with hidden talents :-) \nThe device itself is simple, this time we've rather focused on selling the MVP rather than developing something large and unsellable. \nWhat it does\nThe device is meant to be placed on paragliders helmet and it simply signals the speed of climbing or falling. Quick beeps mean climbing (so the user can quickly react and turn into thermal) and slower beeps occur when the user is falling down. The silence means that the paraglider is quite stable in vertical (speed lower than 1mps). \nThe thresholds has been set to values actually useful while paragliding but there were no chances of testing the device appropiately because of the lack of wind during the wind so we change thresholds to values allowing us to show the effect by simply moving it up and down. \nChallenges I ran into\nData filtering which we've needed to model first in matlab and then move the working logic into the microcontroller. It has seriously increased the speed of developement.\nAccomplishments that I'm proud of\nWe have working device. We have pretty good and efficient data filtering.  We have put it into pretty lovely 3d printed enclosure. We have created the logo, and the website, and the facebook profile. \nWe have a decent, in the realias of technical possibilites, crowdfunding video. \nAll of that during these awesome 48 hours... With zero sleep for some of us, lots of fun and fantastic atmosphere. \nWhat I learned\nThis universal idea once again - Keeping It Simple just works :-) \nWhat's next for Cookie Vario\nWe would like to build a startup out of this project. It does not end here. We will be looking for knowledge and support from people in Krak\u00f3w Startup scene - we hope that we'll find people who will believe in us and help us reach our goal and build a startup. \nIf it does not work out, we already have at least three first customers for whom we might build these devices manually anyway :-) And try harder with another idea.\nBut for now, lets focus on Cookie Vario, such an simple but useful Cookie! :-) \n",
        "hackathon_id": "aghacks2015",
        "winner": true
    },
    {
        "description": "\nGuessify is a tool that challenge you on how many song names you know. Discover the music and compete with your friends in our addictive dynamic multiplayer mode. \"Name That Tune\" TV show moved to the 21st century!\nGuessify contains two parts: Android app and a server backend (for the Multiplayer mode). Using Spotify as an input our app allows to play a part of the song and check if you guessed the name correctly. In the multiplayer mode all users answer to the same song-question and the first is the winner. \nWe are especially proud of the multiplayer mode and a nice-looking UI. That makes the app appealing and playable.\nTry it with your friends and have fun!\n",
        "hackathon_id": "aghacks2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nas-languepythonlinuxwindowsopencvnumpyandroid\n",
        "hackathon_id": "aghacks2015",
        "winner": true
    },
    {
        "description": "\nESTIMONS\nInspiration\nWe were inspired by outsized usage of Estimote beacons. We thought of a mobile phone game which could use beacon technologies like accelerometer or thermometer. \nWhat it does\nEstimons use beacon features (accelerometer, thermometer) connected with a mobile application. You can be an owner of a Estimon, which you can take care of. You can feed it, keep it warm by rubbing the beacon which is a personification of Estimon on your mobile phone. There is a possibility of fighting enemies by searching other beacons near your device. The fight is proceeded by using beacons accelerometer in a game based on players reflex. There is table of highscores what makes a fun gamification between players.There is also a possibility run from a fight, but you need to feed your pet instead.  Your Estimon has different emotions according to your interactions with it. Even if you turn off your application your pet reminds you when it longs you by a small notification on your device's screen.\nHow we built it\nWe built it using android studio with an Estimote SDK. We created original images by Adobe Photoshop. Our work was possible because of a good team comunication, lots of energy drinks and lack of sleep.\nChallenges we ran into\nThere was a problem to establish a stable connection with an application, because of a huge amount of oher beacons nearby, what was a problem in accelerometer feature.\nAccomplishments that we're proud of\nWe are proud of setting the mood of a pet according to its temperature and state. We also made accelerometer return the data necesssary for an arcade game.\nWhat we,ve learned\nFirst operating with Estimote SDK, cooperating in the team and fitting in time.\nWhat's next for Estimons\nWe want to improve mini-games engine, introduce more playable characters.\n",
        "hackathon_id": "aghacks2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe are passionate by tourism and adventures, we know what do the tourists need and look for, that's the reason why we decided to make a stack of solutions which will help many people to find interesting sightseeing and uniqe information about. So we developed an iOS and a web application a TravelVoice.\nWhat it does\nTravelVoice - it's a pocket voice-guide in you iPhone and Laptop, everywhere in a whole world. It creates by local people for foreigners and also for local people. \nThey can pin some special tourist attraction on the map, record a short voice message with uniqe/ interesting information about the monument and publish it. \nIt's also possible to create a route with pinned places and voice messages conected with them. For full user's satisfaction it will be possible add some description, pictures and rate the point or route by the end.\nWe implemented iBeacon with our app, so application will discover when somebody will be in the nearest area of a monument and sent some short message, that something pretty interesting is close and maybe this person want to see it.\nHow I built it\nWe used many different technologies, we spend few sleepless nights, we drunk a lot of coffee and energy drinks, we spoke with each other on few different languages, but thanks our inspiration we fulfilled all tasks.\nFirstly, we prepared a project, then started to design the last application layer in Sketch, in the same time developers were programming an application in Swift. Our last point was implementing iBeacon with our application. Also, we prepared a Web-client.\nChallenges I ran into\nWhen you started something new, you need to be ready for everything, but it's give you good chance to learn something new and check yourself for strength. Our challenge was in international communication. We're from three different countries.\nAccomplishments that I'm proud of\nWe proud to take a part in this best geeks event AGHacks, and we hope to show our skills from the best side. Also we are happy, that we were able to create something which is working, in 48 hours.\nWhat I learned\nWe've learned to listen each other, and make good decisions together.\nWhat's next for TravelVoice\nIt's good start for us, and we hope to end all developing tasks, and make startup with strong business model.\n",
        "hackathon_id": "aghacks2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nruby-on-railshtml5css3\n",
        "hackathon_id": "aghacks2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWhen we were brainstorming together in a team for an idea, we remembered about a Facebook App of Krak\u00f3w's board-gaming cafe, HEXSpot (available here). The app makes it possible to reserve a table in that cafe and choose if You want to sit close to the bar or in a peaceful place far away from it. \nWe thought it was kind of a unique possiblity and decided to build a general solution for this, which could be used by many restaurants, bars, bilard clubs and basically anything that can be considered reservable.\nWhat did we achieve\nWe managed to achieve the basic functionality - the core part of it is a Venue creator, which lets representatives of restaurants to create a bird's-eye view of different parts of their venue. Later, this view is presented to the people which intend to reserve a table in the venue.\nHow I built it\nWe build it with Python Django in backend and web technologies HTML5/CSS3/JS in the front, using jQuery and Bootstrap, among others. Personally, I was responsible for the front-end - mainly on the venue creator.\nChallenges I ran into\nWe decided to develop with PHP with Laravel framework in the backend, but we wanted a fourth person to our team. Because we found some person who knew Python Django, we changed our plans (and planned team functions), and started to configure Django. We finished about 3 am on Saturday, and the person who joined us went to reinstall Linux in his home, and we never heard about him since. Pretty harsh, especially because of the time we spent to switch to Django ;)\nAccomplishments that I'm proud of\nSleeping only 3 hours during the whole competition\nWhat's next for Take a Seat\nWe should add more elements (Door, Bar, custom element, etc.) as well as polishing it, because the way it is written right now is strictly-hackathonish :)\n",
        "hackathon_id": "aghacks2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonjavascriptbootstraptornado\n",
        "hackathon_id": "aghacks2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nrpiarduinoandroidmathematicapythonbluetooth\n",
        "hackathon_id": "aghacks2015",
        "winner": false
    },
    {
        "description": "\nThis idea just come to me, maybe because of Iron Man movie. It actually resembles Iron Mark 1 a little.\nExoArm is supposed to be a stub for a future exo-skeleton aimed at enhancing human strength and damage resistance.\nSebastian and I heard about an ABB scientific group and decided to start with their project of the ExoArm. ABB decided to provide funding for the project. The arm was crafted with \"garage-grade\" methods and materials. \nThe main problem with ExoArm is making it fit universally on anyone who would like to wear it. Currently it fits Sylwester exclusively. Another difficulty, unfortunately due to lack of time we found impossible to solve, was making the arm controllers react to commands sent by an Android mobile application through Bluetooth.\nAll programming work, both on the hardware and the software was created during the AGHacks. Mateusz has attempted to create a \"pilot\" app on Android, capable of controlling the arm remotely through Bluetooth, while previously knowing only the basics of Java and even less of Android development - and succeeded on 95% of the work.\nThe future of ExoArm is further development and improvement of the existing project, finishing the pilot app, making the ExoArm work smoother, etc. Eventually, the ExoArm may one day become an... ExoArmor, which with enough funding and expertise could have commercial and military uses.\n",
        "hackathon_id": "aghacks2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nDawid (daaave) is a member of electrical engineering group at Politechnika Warszawska (Warsaw University of Technology). There were some partially broken power tools, so he decided to make use of them; wrote something on IRC, we heard about this hackathon and the rest is history ;)\nWhat it does\nIT MOVES\nIt can be controlled with anything that can form a HTTP GET request thanks to the server/API written by Piotr (p137) - that includes a web browser, an Android phone and command line.\nAbout the command line... Piotr (p137) wrote a LOGO-alike language interpreter (and by LOGO I mean that old programming language used to teach children how to program), so you can actually write a nice script, attach a marker to the robot and write with it!\nHow I built it\nThe robot itself is built of motors taken out of power drills. There's a standard GNU/Linux x86 PC inside and there's a controller connected to it by COM. There's also a WiFi card.\nThe robot runs GNU/Linux with a Python script to talk to the motor controller through /dev/ttyS0 written by Adrian (adrian17). \nThere's also a Ruby on Rails server/API written by Piotr (p137) on it. This server/API provides a web interface and a way for making other steering devices. \nPiotr (Materac) wrote an Android application in Android Studio and Piotr (p137) wrote the LOGO-esque language/interpreter.\nYoshi figurine is a driver replacement and heading indicator ;)\nPiotr (p137) designed the logo for the project.\nChallenges I ran into\nLife.\nBeing bad at programming.\n\u015aruba lewoskr\u0119tna.\nActually having to use very old Ubuntu LTS.\nMaking HTTP GET requests emacsem przez sendmail.\nAccomplishments that I'm proud of\nMaking the dirtiest hack of 2015 with that MLH toothbrush.\nBeing able to steer that robot with anything really.\nWhat I learned\nNever to use old Ubuntu LTS again.\nThat kicking a fountain can kill you.\nWhat's next for KARPIK\nKinect integration, following people (not on Twitter...)\nNuclear warheads (?)\nBecoming a demon.\nAdditional Yoshis.\n",
        "hackathon_id": "aghacks2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\ntwiliometeor.jspythonpycharmsngrok\n",
        "hackathon_id": "aghacks2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\narduinophppythonhtml\n",
        "hackathon_id": "aghacks2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroid-studiopython\n",
        "hackathon_id": "aghacks2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nLearn how to Unity and entitas.\nWhat it does\nDemonstrates the use of entitas framework\nHow I built it\nWith blood and sweat.\nChallenges I ran into\nLearning blender, learning entitas.\nAccomplishments that I'm proud of\nFinished project. Learned entitas.\nWhat I learned\nEntitas, Blender, Unity\nWhat's next for Tower Defence\nWorld domination\n",
        "hackathon_id": "aghacks2015",
        "winner": false
    },
    {
        "description": "\nJeste\u015bmy dru\u017cyn\u0105, kt\u00f3ra pozna\u0142a si\u0119 podczas wydarzenia AGHacks. Wybrali\u015bmy temat zwi\u0105zany  z jedzeniem, poniewa\u017c sami uwielbiamy je\u015b\u0107. Uznali\u015bmy, \u017ce cz\u0119stym problemem ludzi, zw\u0142aszcza student\u00f3w, jest brak pomys\u0142u na przepis, pomimo \u017ce w domu maj\u0105 r\u00f3\u017cne sk\u0142adniki. Nie ka\u017cdy jest kucharzem-magikiem, kt\u00f3ry potrafi wyczarowa\u0107 co\u015b z niczego... A nasza aplikacja w tym pomo\u017ce! ;) \nAplikacja Cook Me App pozwala na wyszukanie przepisu, na podstawie wybranych wcze\u015bniej sk\u0142adnik\u00f3w, podaj\u0105c procentowy wska\u017anik dopasowania (np. maj\u0105c 7 na 10 potrzebnych produkt\u00f3w, przepis jest trafny w 70%). Istnieje r\u00f3wnie\u017c mo\u017cliwo\u015b\u0107 zaw\u0119\u017cania wynik\u00f3w wyszukiwania przepis\u00f3w, poprzez zaznaczenie szczeg\u00f3\u0142owych preferencji (np. przepisy wysokokaloryczne, wegetaria\u0144skie, szybkie itp.).\nNasz zesp\u00f3\u0142 sk\u0142ada si\u0119 z dw\u00f3ch UX designer\u00f3w oraz dw\u00f3ch android developer\u00f3w. Prac\u0119 rozpocz\u0119li\u015bmy od stworzenia papierowych makiet aplikacji. Rozpisanie poszczeg\u00f3lnych krok\u00f3w pozwoli\u0142o nam na zaprojektowanie logicznej struktury korzystania z aplikacji oraz dopasowanie tre\u015bci i etykiet. Nast\u0119pnie stworzyli\u015bmy projekt graficzny poszczeg\u00f3lnych ekran\u00f3w. Kolejne etapy to postawienie serwera, budowa bazy oraz prace nad wdro\u017ceniem layoutu. \nPocz\u0105tkow\u0105 trudno\u015bci\u0105, kt\u00f3ra op\u00f3\u017ani\u0142a prace nad projektem, by\u0142 brak internetu. \nOsi\u0105gni\u0119ciem, z kt\u00f3rego jeste\u015bmy zadowoleni jest projekt graficzny i struktura aplikacji. Aktualne dzia\u0142anie nie jest jeszcze w pe\u0142ni gotowe, ale ci\u0105gle trwaj\u0105 prace nad wdro\u017ceniem. \nPlanujemy rozw\u00f3j aplikacji i stworzenie dodatkowych funkcjonalno\u015bci, np.:\n\nmo\u017cliwo\u015b\u0107 logowania\ndodawanie autorskich przepis\u00f3w u\u017cytkownik\u00f3w korzystaj\u0105cych z aplikacji\ndodawanie opinii i ocen przepis\u00f3w \nmo\u017cliwo\u015b\u0107 dodania ulubionych przepis\u00f3w do schowka\nlicznik kalorii\nstworzenie miejsca dla udost\u0119pniania zdj\u0119\u0107 dla szerszego grona u\u017cytkownik\u00f3w ( dzia\u0142anie podobne do serwisu Instagram, tylko w wersji kulinarnej)\nmo\u017cliwo\u015b\u0107 promowania przepis\u00f3w i produkt\u00f3w przez znane marki (przepisy sponsorowane).\n\n",
        "hackathon_id": "aghacks2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonjavaandroidangular.jspostgresqlgoogle-cloud-messaginggithttpdjangoiphone-sdk\n",
        "hackathon_id": "aghacks2015",
        "winner": false
    },
    {
        "description": "\nZombiePacman #58\nMy\u015blisz, \u017ce pacman jest na wygini\u0119ciu a duchy zamieni\u0142y si\u0119 w kupk\u0119 ektoplazmy?\nPostanowili\u015bmy po\u0142\u0105czy\u0107 rado\u015b\u0107 jak\u0105 daj\u0105 gry multiplayer z klasykiem, jakim jest pacman.\nDzi\u0119ki unikalnemu trybowi rozgrywki \"ZOMBIE\" ka\u017cdy ma szanse na zwyci\u0119stwo. Zaczynamy z wieloma pacmanami i jednym duchem. Duch zamienia ka\u017cdego zjedzonego pacmana w innego ducha. Wygrywa gracz z najwi\u0119ksz\u0105 liczb\u0105 punkt\u00f3w, kt\u00f3re mo\u017cna zdobywa\u0107 za zjadanie \u017c\u00f3\u0142tych nie-kulek, a tak\u017ce za zara\u017canie innych graczy.\n\n\n\n\n\n\n\n\n\n",
        "hackathon_id": "aghacks2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe all played Counter-Strike and we wanted to make it more real and also contribute to it.\nWhat it does\nIt creates a game for 3-5 players. One of them is responsible to plant mobile expolsives. The rest, one leader and CT, must defuse the main bomb (Raspberry-PI) and also mobile explosives (Estimote Beacons). The game ends when either the time runs out or the secret code is entered.\nHow I built it\nWe used Raspberry-PI as a Node.js server which represents GameServer. It uses express.js framework to create REST API. The \"leader\" uses a webpage built with AngularJS to solve puzzles and manage game. \"CT\" use their Android phones and our app to find Estimote Beacons and solve a puzzle to disarm it, but first they must play a hot&cold game in order to localize them.\nChallenges I ran into\nTime synchronization, Android - Web compatibility and many other problems.\nAccomplishments that I'm proud of\nWe have created a Simon Says game as one of the puzzles both on Anroid and Web :)\nWhat I learned\nA lot! How to run python scripts in Node.js server, how to connect to REST API from Android and use a timeout callback to present data.\nWhat's next for Pi Hard\nRaspberry-PI give us possibility to connect unlimited set of devices to make even more fun. We can add beacons to play with more people or challenge each other.\n",
        "hackathon_id": "aghacks2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe like pancakes a lot but it is always very absorbing to make them thats why we come up with idea of making a robot that will make pancakes for us.\nWhat it does\nPancakes :)\nHow I built it\nWe have used iron and a pan to make a place where pancakes can fry, we have spatula that takes pancakes out of a pan and some kind of roboarm that pure pancakes cake on a fry.\nChallenges I ran into\nWarming a pan to temperature high enough to fry pancakes, and make it safely. Using spatula was a challenge too.\nAccomplishments that I'm proud of\nA big pile of tasty pancakes :) \nWhat I learned\nHow to fry something using an iron.\nWhat's next for NALE\u015aNIKOMASAKRATOR\nWe want to commercialize it and sell it at worldwide market to get a lot of money and a lot of glory.\n",
        "hackathon_id": "aghacks2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nNone\nWhat it does\nControlls Helicopter in our PC game via Andoid app.\nHow I built it\nWith tools and friends\nChallenges I ran into\nNew technology\nAccomplishments that I'm proud of\nFinish playable project, which is quite nice and fun, no overkills\nWhat I learned\nUnity API\nWhat's next for RCHell\nDevelopment in silent home\n",
        "hackathon_id": "aghacks2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nOur own workplace to be honest. Having table tennis table, table football table etc. in work is really fun, but without any system of match making or scoreboards the games become pointless and boring. It is also hard to track how often do we play, who we lose to and who we win against. Because of these reasons and many others we decided to change current situation and make our chill rooms at work more fun and competitive.  \nWhat it does\nThe AGHacks version is only a prototype and offers basic functionality. After creating an account and signing into the app you can add your own company to our platform. By doing so, you become an operator of the company's profile and you are free to create and customize a league for your colleagues. For now we offer a several predefined sport types such as table tennis, 8 ball pool, darts etc. After adding a company and creating a league you can invite your co-workers to join them. After it's done you are ready to start adding new matches to the system. Each match result consists of a winning and a losing team. The 1vs1 match configuration is also allowed. All results are stored in our database and they are available for all league members. The main feature per league ranking which reveals the best and the worst players in the season and won and lost matches counters for each person. The scores are calculated using ELO system which assigns a proper amount of points to user basing on their previous game experience.  \nHow I built it\nThe core of our platform is the server application implemented in Python, flask. The application stores all users, matches and results and calculates all standings. For users, we have implemented mobile apps for iOS and Android phones. \nChallenges I ran into\nOur team was lacking a front-end developer and because of that we were forced to put all necessary operator-side functionality into mobile apps which was really demanding, when comes to UI/UX aspects. And of course it made the whole development process much more stressful and time-consuming. \nAccomplishments that I'm proud of\nThe greatest accomplishment is that we managed to implement 100% of what we had planned at the beginning of the hackathon. It works, it not crashes and we are very proud of how smoothly it works and how cool it looks. \nThe biggest surprise however was successful implementation of back-end side application, because none of our teams members works or ever have worked as backend developer. \nWhat I learned\nWe definitely improved working as a team in a highly stressful situation. We learned how to overcome both technical and non-technical problems, like tiredness. Moreover, We now know how should one plan a project or change those plans in a run if situation needs it.      \nWhat's next for CorpoWars\nThere are lots of options, but here are some main ideas for future versions of CorpoWars:\n\nAdavanced league creator - so you can add any type of game to the system you like,\nMaking it profitable by offering several premium features and in-app purchases for single users,\nIntegration with Slack, Hipchat etc,\nPush notifications for better user experience,\nMatch making - so players or teams are automatically paired for matches,\nBetting system - a little of not for real gambling might make  :)\nMore then only ELO ranking system (i.e. TrueSkill),\nScores statistics,\nTournament modes,\n\n",
        "hackathon_id": "aghacks2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nc#javascriptangular.js.net\n",
        "hackathon_id": "aghacks2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nBasado en el tiempo que los ni\u00f1os pasan frente a dispositivos m\u00f3viles, decidimos atacar la problem\u00e1tica del aprendizaje mediante los videojuegos, ense\u00f1ando de esa manera como funciona, en este caso el sistema inmunologico\nWhat it does\nExplica el funcionamiento de algunas partes del sistema inmunologico, como reaccionan ante agentes extra\u00f1os en el cuerpo, y como se pueden combatir\nHow I built it\nBas\u00e1ndonos en el target, decidimos hacer personajes amigables, despu\u00e9s se reviso como era el funcionamiento del sistema inmunologico, cual iba a ser la interaccion entre niveles, y finalmente se defini\u00f3 Corona SDK/Lua como plataforma y lenguaje de desarrollo, por los alcances que este tiene.\nChallenges I ran into\nEl desafio fue hacer la correcta integraci\u00f3n de los elementos, darles una imagen amigable, y hacer que el funcionamiento de cada elemento fuera lo mas acertada posible explicada de manera f\u00e1cil\nAccomplishments that I'm proud of\nSe tuvo un MVP suficientemente bueno para comenzar con los objetivos que se pretende abarcar, el dise\u00f1o y la parte funcional lograda van de acuerdo a lo que se planteo al principio\nWhat I learned\nQue los videojuegos son una manera f\u00e1cil de transmitir conocimientos, no solo se puede abarcar la salud sino diversos temas\nWhat's next for Body Squad\nIntegrarle API's como la de facebook para que a traves de las redes sociales se haga viral y que esta manera de aprendizaje llegue a mas personas.\n",
        "hackathon_id": "hackbajio-gamification",
        "winner": true
    },
    {
        "description": "\nInspiration\nNos inspiramos de la creciente necesidad de crear y ser parte de soluciones frente a la crisis ambiental que hoy vivimos y que de no cuidar sera cada vez mas dif\u00edcil.\nWhat it does\nEs un juego que mediante minijuegos nos ense\u00f1a problem\u00e1ticas y soluciones de las cuales podemos ser parte. De una manera divertida se va resolviendo estos juegos de destreza de manera tal que el calentamiento global incrementa con cada error y disminuye con cada soluci\u00f3n correcta.\nHow I built it\nLo hicimos con Unity, una herramienta sencilla para crear juegos pero muy poderosa al saber utilizarla. Dise\u00f1amos niveles en base a las problem\u00e1ticas actuales y algunas de las soluciones que ahora existen.\nChallenges I ran into\nEl tiempo para completar el demo... 2 dias\nAccomplishments that I'm proud of\nUn buen demo en tiempo con la mayor\u00eda de los dise\u00f1os propios\nWhat I learned\nTrabajo en equipo, modelado de negocios mediante canvas\nWhat's next for World's Savior\nAmpliar el demo, add-ons  de monetizaci\u00f3n y un seguimiento a los logros del jugador.\n",
        "hackathon_id": "hackbajio-gamification",
        "winner": true
    },
    {
        "description": "\nInspiration\nHemos detectado que los ni\u00f1os con discapacidades motoras tienden a ser marginados y dependientes de sus padres, muchas veces estas familias no cuentan con los recursos suficientes para someterlos a terapias de rehabilitacion fisica.\nBuscamos que a trav\u00e9s del Internet de las cosas y tecnolog\u00edas libres proponer una soluci\u00f3n efectiva y divertida aplicando el principio de Gamfication.\nWhat it does\nJuego de un ninja que salta en un escenario con obst\u00e1culos aleatorios, con un sistema de puntuaciones y por medio de la manipulaci\u00f3n de un sensor se obtenga el mayor puntaje posible as\u00ed como una larga trayectoria del Ninja. \nHow I built it\nComenzamos con plantear la problem\u00e1tica y buscar una soluci\u00f3n no solo efectiva sino tambi\u00e9n adictiva y divertida.\nDise\u00f1amos un juego, lo maquetamos a lapiz y papel, definimos escenario, personaje, dinamica del juego, se realizo en Nodejs como servidor, Javascript como lenguaje para el desarrollo, socket.io para la comunicacion del arduino con la computadora y el sensor ultrasonico que es el que detecta el movimiento.\nChallenges I ran into\nEl principal problema que tuvimos fue que no se podia establecer la comunicacion serial con el arduino que socket.io no funciona bien con windows 10, tuvimos que instalar en linux todo el sistema de nuevo y por fin corrio, tampoco pudimos acceder a aws por que no envio el correo de confirmacion.\nAccomplishments that I'm proud of\nQue lo terminamos a tiempo, lo pudimos solucionar, conocimos personas incre\u00edbles y que vencimos el miedo a conocer nuevas tecnolog\u00edas.\nWhat I learned\nTrabajo en equipo, aprendimos de modelo de negocios y del conocimiento colaborativo.\nWhat's next for Ninja Top\nAgregar la gesti\u00f3n de usuarios, generarle un installer y distribuirlo en playstore y tiendas electr\u00f3nicas o que compren el leap-motion.\n",
        "hackathon_id": "hackbajio-gamification",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavaandroidxmlfreettsmyobluetooth\n",
        "hackathon_id": "hackbajio-gamification",
        "winner": true
    },
    {
        "description": "\nInspiration\nResolver un problema social relacionado con la localizaci\u00f3n de personas queridas.\nWhat it does\nEnv\u00eda un mensaje de alerta a los contactos de confianza avisando tu localizaci\u00f3n actual justo antes de que la bater\u00eda quede descargada. Igualmente, nos permite recibir la localizaci\u00f3n de alguno de nuestros contactos presionando un bot\u00f3n.\nHow I built it\nUsamos android studio para su desarrollo.\nChallenges I ran into\nLa gran mayor\u00eda de problemas, radico en el desconocimiento de varias funciones de android studio, as\u00ed como obtener la geolocalizacion usando tanto Google API y a traves de GPS.\nAccomplishments that I'm proud of\nAunque somos estudiantes de 1er y 3er semestre mayormente, logramos grandes avances.\nWhat I learned\nAprendimos a desarrollar aplicaciones para android usando su respectivo IDE\nWhat's next for AMALERT\nDesarrollo completo y mas optimizada.\n",
        "hackathon_id": "hackbajio-gamification",
        "winner": false
    },
    {
        "description": "\nBuilt With\nc#\n",
        "hackathon_id": "hackbajio-gamification",
        "winner": false
    },
    {
        "description": "\nBuilt With\njava\n",
        "hackathon_id": "hackbajio-gamification",
        "winner": false
    },
    {
        "description": "\nInspiration\nQue las personas dejen de perder el tiempo esperando los camiones, ya que el tiempo es algo que nunca recuperamos\nWhat it does\nMantener informado al usuario de las rutas de los camiones y sus posiciones actuales para optimizar el tiempo del usuario\nHow I built it\nAndroid Studio\nChallenges I ran into\nLa programaci\u00f3n en s\u00ed y la obtenci\u00f3n de datos para que la experiencia del usuario sea la planeada\nAccomplishments that I'm proud of\nDe poder ofrecer un mejor servicio a los usuarios del transporte p\u00fablico\nWhat I learned\nMejorar la programaci\u00f3n en Android Studio y datos de los usuarios del Sistema de Transporte P\u00fablico\nWhat's next for My Bus app\nMantener un desarrollo continuo de la app, en base a la retroalimentaci\u00f3n de los usuarios\n",
        "hackathon_id": "hackbajio-gamification",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe were outside of a university and we were witnesses of a theft of car parts, we kept talking for a while about a solution.\nWhat it does\nA solution to the insecurity of the Universities and the surrounding area\nHow I built it\nWe\u00b4ll built an android app that facilitates the denounce in real time , using the camera and gps to obtain information of the crime.\nChallenges I ran into\nIncorporate all the built in components into an app..\nAccomplishments that I'm proud of\nStart to innovate, and to built it, becoming in a real and viable project\nWhat I learned\nTeam work, time management, programming skills, \nWhat's next for Eagle Legion\nContinue with the prototyping and make it the solution to the problem\n",
        "hackathon_id": "hackbajio-gamification",
        "winner": false
    },
    {
        "description": "\nInspiration\nayudar \nWhat it does\nreciclar pet y ayudar\nHow I built it\na traves de una plataforma de programaci\u00f3n LabVIEW\nChallenges I ran into\ncontrol de la extrusora de pet \nAccomplishments that I'm proud of\ncrear la programaci\u00f3n y enfocar a resolver a una problem\u00e1tica social\nWhat I learned\ntrabajar en equipo para logar un  fin\nWhat's next for helpet\nhacerlo real \n",
        "hackathon_id": "hackbajio-gamification",
        "winner": false
    },
    {
        "description": "\nInspiration\nNuestra principal inspiraci\u00f3n fue conocer la problem\u00e1tica que existe respecto a las empresas que necesitan del servicio de un programador y no saben donde encontrarlo, o tambi\u00e9n puede ocurrir que un programador no encuentre alg\u00fan trabajo/proyecto a desarrollar, o para qui\u00e9n.\nWhat it does\nSe desarroll\u00f3 una plataforma web vinculada con una base de datos para el alojamiento de perfiles de ingenieros o expertos en el \u00e1rea de tecnolog\u00edas de la informaci\u00f3n o desarrollo de software, para ser un intermediario entra las empresas y estos \u00faltimos. Ayuda tanto a las empresas como a los programadores a satisfacer sus necesidades y solucionar sus problemas.\nHow I built it\nSe us\u00f3 para el back-end la tecnolog\u00eda de node.js para montar el motor del servidor, se us\u00f3 el servicio de microsoft azure para el host de la aplicaci\u00f3n web. Se uso github para el manejo del repositorio; se us\u00f3 la librer\u00eda de express, para el front-end se uso html5.\nChallenges I ran into\nEl aterrizamiento de las ideas y la implementaci\u00f3n e integraci\u00f3n de las tecnolog\u00edas\nAccomplishments that I'm proud of\nEl dise\u00f1o principalmente, \nMaquetaci\u00f3n y arquitectura de la aplicaci\u00f3n web\nDe la soluci\u00f3n que va a ofrecer nuestro proyecto \nWhat I learned\nAlgunos aprendimos a programar, a dise\u00f1ar, a formar un buen equipo interdisciplinarios, a tomar importantes decisiones, resolver problemas bajo tiempo y estr\u00e9s\nWhat's next for WILD GEEK\nImplementarla completamente en la web para poder llevarla al mercado, hacer publicidad para la aplicaci\u00f3n y potenciarla y mejorarla para que de un mejor rendimiento d\u00eda con d\u00eda.\n\"A veces tienes que pensar en algo m\u00e1s que en tu propio bien, a veces tienes que pensar en el bien com\u00fan o de los dem\u00e1s - Joanne Kathleen Rowling\"\n",
        "hackathon_id": "hackbajio-gamification",
        "winner": false
    },
    {
        "description": "\nInspiration\nActualmente M\u00e9xico se enfrenta a un rezago acad\u00e9mico en lo relacionado a matem\u00e1ticas. Seg\u00fan estad\u00edsticas en 2012 M\u00e9xico ocup\u00f3 el \u00faltimo lugar entre los pa\u00edses de la OCDE en la prueba PISA.\nEs por esto que quisimos crear una plataforma en la que los ni\u00f1os puedan aprender matem\u00e1ticas de una manera interactiva.\nWhat it does\nReta a los ni\u00f1os a la resoluci\u00f3n de problemas de tal forma que desarrollen su pensamiento l\u00f3gico, aplicando \"gamificaci\u00f3n\" para hacer m\u00e1s atractivo el proyecto para los ni\u00f1os.\nHow We built it\nUtilizamos lenguajes de desarrollo web: MySQL como motor de base de datos, PHP para el back-end, y HTML5, CSS3 y Javascript para el front-end.\nChallenges I ran into\nAl no utilizar frameworks el desarrollo se hizo m\u00e1s lento y pesado. Tambi\u00e9n tuvimos ciertos problemas de conexi\u00f3n.\nAccomplishments that I'm proud of\nHacer el sitio sin el uso de frameworks. Nos dimos cuenta que eramos capaces de hacer el proyecto desde cero.\nWhat I learned\nA desarrollar un proyecto en equipo utilizando herramientas de desarrollo colaborativo (GitHub).\nWhat's next for Logramatica\nPublicar la plataforma y darla a conocer.\n",
        "hackathon_id": "hackbajio-gamification",
        "winner": false
    },
    {
        "description": "\nBuilt With\narduinojava\n",
        "hackathon_id": "hackbajio-gamification",
        "winner": false
    },
    {
        "description": "\nInspiracion\nLas empresas requieren el desarrollo de proyectos las cuales no cuentan con grandes recursos financieros, tiempo y capital intelectual.\nWhat it does\nEs una plataforma que permite vincular a la empresa con estudiantes de diversas universidades\nHow I built it\nUtilizamos como php como lenguaje de lado del servidor y html5 en el lado del cliente, para la base de datos utilizamos el manejador de base de datos PosgreSQL\nChallenges I ran into\nReestructuracion de la vision del proyecto, cambio total del cambas, aterrizar ideas, trabajar con un equipo multidisiplinario, poco tiempo disponible para completar todo el desarrollo. \nAccomplishments that I'm proud of\nPudimos empezar el desarrollo de un proyecto combinando distintas \u00e1reas de conocimiento. Generamos nuevas amistades. \nWhat I learned\nTrabajar bajo presi\u00f3n en un equipo donde no conoc\u00edamos en un principio a todos los integrantes y que no compart\u00edamos el mimo conocimiento. \nWhat's next for rightBind\nFormalizar el proyecto\n",
        "hackathon_id": "hackbajio-gamification",
        "winner": false
    },
    {
        "description": "\nInspiration\nEn ayudar a los ni\u00f1os que sufren de una capacidad diferente en cuanto al habla.\nWhat it does\nFomentando su aprendizaje atrav\u00e9s de la diversion, en este caso un juego.\nHow I built it\nEsta construido en Visual Studio. Con Front-end de photoshop.\nChallenges I ran into\nCarencia de Software instalado, mala calidad de internet que dificultaba el poder buscar respuestas a dudas que ten\u00edamos. \nAccomplishments that I'm proud of\nLogramos crear de manera correcta nuestro prototipo de aplicaci\u00f3n. Una peque\u00f1a idea que pude ser desarrollada en horas puede ayudar a dar un tratamiento a ni\u00f1os con capacidades diferentes.\nWhat I learned\nEl manejo de Visual Studio en especifico Visual Basic, el uso de Photoshop.\nWhat's next for HablArte\nPensamos desarrollarla para IOs y Android.\n",
        "hackathon_id": "hackbajio-gamification",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtmlunitygoogle-cardboardleap-motionoculus\n",
        "hackathon_id": "hackbajio-gamification",
        "winner": false
    },
    {
        "description": "\nBuilt With\nmatlab\n",
        "hackathon_id": "hackbajio-gamification",
        "winner": false
    },
    {
        "description": "\nInspiration:\nProviding a real solution for an ongoing issue.\nWhat it does\nSimplifies the data provided \nHow I built it\nUsing android studio\nChallenges I ran into\nTime \nAccomplishments that I'm proud of\nCreating a feasible prototype\nWhat I learned\nAndroid studio, android libraries, google maps API\nWhat's next for Alma CARR\nWe would like to include the rest of the data provided and efficiency\n",
        "hackathon_id": "csusmhackathonfa15",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtml5sublime-textnotepad++\n",
        "hackathon_id": "csusmhackathonfa15",
        "winner": false
    },
    {
        "description": "\nInspiration\nFoster youth are often overlooked and forgotten when it comes to an educational or career route. When we learned that the percentile of foster youth that obtain a bachelor's degree was 3%, we knew something had to be done. This inspired us to establish Foster Your Future to aid in the success of the futures for the foster youth.\nWhat it does\nWith the help of of motivated mentors, foster youth as well as their parents are informed on how they can succeed and pursue a career or even college after high school. The mission is to inspire those who haven't been given an adequate chance to plan for a strong future and assure them that they can be just as successful as those who aren't faced with their challenges.\nHow I built it\nWe used wix and drew out a design on a separate piece of paper. Before this step, we planned what exactly our initiatives were.29999\nChallenges I ran into\nIt was difficult to create a layout and organize the information in a satisfactory way.\nAccomplishments that I'm proud of\nEveryone worked extremely well together. Not only did we all collaborate and create the best project we could possibly produce, but we all developed stronger leadership and teamwork skills which are essential in any work environment.\nWhat I learned\nI learned that conflicting ideas can produce the best ideas. When people can't agree on something, it doesn't mean that there's no solution; it means that with the proper collaboration, a master piece will be formed.\nWhat's next for Foster Your Future\n",
        "hackathon_id": "csusmhackathonfa15",
        "winner": false
    },
    {
        "description": "\nFoster youth do not think they have the opportunity to go to college or nor do they have support to navigate and prepare for the process. It is estimated that only 3% of former foster youth obtain their 4-year college degree compared  to 28% of the general population.\nIt is a webApp geared towards communication and connections to resources, friends, and mentors for foster youth.\nBuilt it using anazana.com and the chat room is built using meteor, mongodb and bootstrap\nThe main challenge was constructing the chat room and getting organized to create a webApp geared towards connections and motivation\nThe final outcome of the webApp is simple and easy to use.\nI learned about Meteor.\nNext step is for foster2foster to get connected with more foster youth and get ideas to make the website more functional.\n",
        "hackathon_id": "csusmhackathonfa15",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavavisual-basic\n",
        "hackathon_id": "csusmhackathonfa15",
        "winner": false
    },
    {
        "description": "\nInspiration\nWhat it does: Find senior homes\nHow I built it: Coding from scratch\nChallenges I ran into: Implementation\nAccomplishments that I'm proud of: That the concept is done\nWhat I learned: Teamwork, and html coding\nWhat's next for find a senior home: To be a real site\n",
        "hackathon_id": "csusmhackathonfa15",
        "winner": false
    },
    {
        "description": "\nInspiration\nI was adopted, so I relate to foster kids and want to encourage them to have the best lives they can.\nWhat it does\nOur website provides foster kids with scholarship information, resources for succeeding in college, provides success stories of other foster children, and provides information about the ACE Scholars program at CSUSM.\nHow I built it\nI used PHPStorm to build a website using Bootstrap, html5, css, and javascript.\nChallenges I ran into\nI ran into CSS alignment issues, which was fixed with the help of mentors Michael and Emily.\nAccomplishments that I'm proud of\nThat I was able to build an entire website from scratch in a limited amount of time.\nWhat I learned\nI learned that it is much harder to work in a team.\nWhat's next for Millennium Falcare\nHopefully we can work together as a team and complete our website to better the lives of foster children around the universe.\n",
        "hackathon_id": "csusmhackathonfa15",
        "winner": false
    },
    {
        "description": "\nInspiration , Helping the elderly, Yelp, Search Engines\nWhat it does Aids the process of finding the right living facility\nHow I built it With Wix.\nChallenges I ran into We wanted to start from scratch and code on WordPress, but more than halfway through the competition, we decided to start all over on Wix.\nAccomplishments that I'm proud of We accomplished last minute tasks and goals after switching. We were resilient\nWhat I learned Don't bite too much than you can chew. The end goal and concept is more important to communicate than having all the functions down.\nWhat's next for CareHub I hope we win.\n",
        "hackathon_id": "csusmhackathonfa15",
        "winner": false
    },
    {
        "description": "\nInspiration\nBecause of the emotional isolation some foster kids may feel, we wanted to create a website that could work like a social network while also providing information about the college application process, starting with kids as young as middle school.\nWhat it does\nThe Rock connects the kids with college students that used to be in the foster care system and their peers. It also contains resources to help them to prepare to go to college, such as a list of things to do in high school and a page of financial resources specifically for foster kids.\nHow we built it\nWe used Wix, the online website editor, to create our website. Starting from a blank template, we added apps , like a chat room and forum, and a variety of useful information to guide foster children through the college application and financial aid process.\nChallenges we ran into\nGetting our idea off the ground and finding the tools to create it was the main issue we ran into. We began the day thinking we were going to be creating an android app, but that soon proved to be too technically difficult, so we decided to make a website.\nAccomplishments that we're proud of\nWe're really proud of the amount of original content we created. Every single word on our website was written by our team based on resources found online. There was a large amount of thought put into the specific struggles that foster children will face on their path to college. For example, when writing about the topic of standardized testing, we were careful to include links to free study materials and information on fee waivers. Because we knew that some foster children would be moving around frequently, we included information on colleges that did not require a letter of recommendation on their application.\nWhat we learned\nWe learned that instead creating a simple project that works is more important than creating something technically complex.\nWhat's next for The Rock\nIf our community becomes large enough, we may move to a self-hosted website with more complex social networking functionality, include more information about getting into college, and possibly create a mobile app.\n",
        "hackathon_id": "csusmhackathonfa15",
        "winner": false
    },
    {
        "description": "\nBuilt With\nunitymaya\n",
        "hackathon_id": "eku",
        "winner": false
    },
    {
        "description": "\nBuilt With\nunreal-engine\n",
        "hackathon_id": "eku",
        "winner": false
    },
    {
        "description": "\nBuilt With\nmono-for-android\n",
        "hackathon_id": "eku",
        "winner": false
    },
    {
        "description": "\nBuilt With\njava\n",
        "hackathon_id": "eku",
        "winner": false
    },
    {
        "description": "\nBuilt With\nunity\n",
        "hackathon_id": "eku",
        "winner": false
    },
    {
        "description": "\nBuilt With\nunity\n",
        "hackathon_id": "eku",
        "winner": false
    },
    {
        "description": "\nBuilt With\nunity\n",
        "hackathon_id": "eku",
        "winner": false
    },
    {
        "description": "\nInspiration\nGame Jam Theme: What goes up must come down.\nHow to Play\nUse your movement keys to rotate the direction of gravity, and use the spacebar to jump.\nWhat's next for Harvest Fall\nMore levels. The only level that is currently available is the tutorial stage.\n",
        "hackathon_id": "eku",
        "winner": false
    },
    {
        "description": "\nComo funciona?\nLa persona entra al auto ,  se sienta  y se pone el cintur\u00f3n de seguridad, sopla en el alcoholismo y si esta ebrio el auto no enciende y si no el auto funciona normalmente\nPodr\u00edas explicarlo?\nPara que el auto encienda tienes que tener la puerta cerrada, tener el cintur\u00f3n de seguridad puesto y no debe de sobrepasar el promedio de nivel de alcohol est\u00e1ndar para conducir un autom\u00f3vil, de otra\nforma el autom\u00f3vil no podr\u00e1 ser usado\nComo haces para verificarlo?\nTanto la puerta como el cintur\u00f3n de seguridad cuenta con placas de presi\u00f3n que verifican cuando el auto tiene las puertas cerradas y tienes el cintur\u00f3n de seguridad puesto, si no cumples con \nestos 2 par\u00e1metros no te dejara hacer la prueba de alcoholismo, esto para verificar que solo la persona que esta sentada en el asiento del conductor y que tiene el cintur\u00f3n de seguridad puesto \nhar\u00e1 la prueba de alcoholismo.\nSi te quitas el cintur\u00f3n de seguridad el veh\u00edculo se apagara eventualmente d\u00e1ndote oportunidad a orillarte y detenerte en forma segura, y se tendr\u00e1 que volver a hacer el proceso para volver a encender \nel autom\u00f3vil\nExtras que podr\u00eda tener:\nEste modo solo funciona cuando es activado por el usuario, pero teniendo en cuenta la tecnolog\u00eda que se esta implementando en los nuevos autos se podr\u00eda mejorar el sistema \nusando una funci\u00f3n de giroscopio y acelero-metro el cual podr\u00eda verificar sin necesidad de que actives el modo seguro que estas conduciendo de una manera incorrecta o rara mand\u00e1ndote alertas para decirte\nque si sigues manejando as\u00ed el auto se detendr\u00e1 eventualmente en cierto tiempo y tendr\u00e1s que verificar tu estado de ebriedad.\n+(Cuando conduces en estado de ebriedad ocurren varios factores como cambios bruscos de velocidad y de direcci\u00f3n, esto es lo que detectar\u00eda estos sensores)\n",
        "hackathon_id": "virtuafest",
        "winner": true
    },
    {
        "description": "\nAcerca de Reporte Ciudadano\nReporte ciudadano es un plataforma orientado al beneficio comunitario donde la comunidad puede participar en la soluci\u00f3n de problemas con responsabilidad social\nUn lugar donde las personas pueden exponer y participar en la soluci\u00f3n de problemas comunitarios.\n\u00bfC\u00f3mo funciona?\nLos ciudadanos acceden al portal donde pueden publicar alguna problem\u00e1tica o buscar si alguien m\u00e1s ya la ha escrito, incluso pueden ofrecer una soluci\u00f3n.\nPublica tu problem\u00e1tica o identif\u00edcate con una\nSi va a escribir una problem\u00e1tica debe ingresar Nombre, Descripci\u00f3n, y elegir una categor\u00eda, el sistema identificar\u00e1 una ubicaci\u00f3n aproximada.\nDe sentirse identificado con una problem\u00e1tica ya existente solo debe votar por el problema.\nPresentar una soluci\u00f3n\nPara presentar una soluci\u00f3n deber\u00e1 escribir, el n\u00famero de integrantes que se necesitan para solucionar la problem\u00e1tica y la fecha.\nParticipar en una soluci\u00f3n\nDespu\u00e9s solo ser\u00e1 necesario que los ciudadanos quieran apoyar esa soluci\u00f3n e inscribirse como cooperador de la misma. O simplemente si le parece buena la soluci\u00f3n puede votar por ella. \nLos ciudadanos publican su problema, proponen una soluci\u00f3n y la comunidad participa para resolver el problema\nAdem\u00e1s tu soluci\u00f3n puede ser patrocinada por empresas socialmente responsables\nSeg\u00fan el tama\u00f1o de las soluciones radicales puede resultar interesante para que un patrocinar ofrezca productos o incentivos a ese grupo comunitario de esa manera contribuir de una manera social con la mejora de la ciudad.\n\u00bfCu\u00e1l fue la inspiraci\u00f3n?\nEn el vivir del d\u00eda a d\u00eda presenciamos diversos de problemas, que pueden ser clasificados por secciones como:\nSeguridad p\u00fablica; que incluye robo de partencias, robos a casa habitaci\u00f3n, etc.\nServicios p\u00fablicos; robo de pertenencias, robos a casa habitaci\u00f3n, luminarias fundidas, basura en la calle, mal funcionamiento de los sem\u00e1foros. \nProtecci\u00f3n civil; Inundaciones, incendios, terremotos, huracanes. \nEl objetivo de este proyecto es hacer uso de la responsabilidad y presi\u00f3n social con un fin positivo como fomentar la cooperaci\u00f3n de la comunidad, para la soluci\u00f3n de problemas.\n\u00bfQu\u00e9 hace Reporte Ciudadano?\nEn Reporte Ciudadano buscamos la simplificaci\u00f3n de los procedimientos, dividi\u00e9ndolo en peque\u00f1as acciones que se muestran a continuaci\u00f3n.\nPublica tu problem\u00e1tica o identif\u00edcate con una.\nSi va a escribir una problem\u00e1tica debe ingresar Nombre, Descripci\u00f3n, y elegir una categor\u00eda, el sistema identificar\u00e1 una ubicaci\u00f3n aproximada.\nDe sentirse identificado con una problem\u00e1tica ya existente solo debe votar por el problema.\nPresentar una soluci\u00f3n\nPara presentar una soluci\u00f3n deber\u00e1 escribir, el n\u00famero de integrantes que se necesitan para solucionar la problem\u00e1tica y la fecha.\n\u00danete a una soluci\u00f3n\nDespu\u00e9s solo ser\u00e1 necesario que los ciudadanos quieran apoyar esa soluci\u00f3n e inscribirse como cooperador de la misma. O simplemente si le parece buena la soluci\u00f3n puede votar por ella. \n\u00bfC\u00f3mo lo construimos?\nEl funcionamiento del sistema busca tener una m\u00e1xima usabilidad, para reducir el riesgo de mal interpretaciones. Los registros tanto de usuarios como de problem\u00e1ticas debe ser muy f\u00e1cil, por lo que intenta solicitar el menor n\u00famero de datos, aunque a trav\u00e9s de otros servicios se busca obtener precisi\u00f3n en las estad\u00edsticas.\nEl alfa de Reporte ciudadano fue construido usando Bootstrap para el dise\u00f1o responsivo, una base de datos en MySQL y la gesti\u00f3n de datos usando Angular.js del lado del cliente y PHP del lado del servidor.\nLos retos\nEl reto m\u00e1s grande fue con los conocidos en el hackathon que despu\u00e9s de unas horas decidieron hacer su proyecto en diferentes partes, entonces tuve que invitar a otros concursantes del VirtuaFest, pero ya era algo tarde el viernes 23 de octubre as\u00ed que el proyecto alfa de Reporte Ciudadano fui construido en menos tiempo.\nRecordar viejos conceptos de programaci\u00f3n y bases de datos.\nNos sentimos orgullosos de\u2026\nLa idea es realmente buena\nEn nuestro equipo nos sentimos que el proyecto Reporte Ciudadano puede tener un gran impacto en la sociedad y generar una nueva una nueva mentalidad de cooperaci\u00f3n social, que favorece el bienestar y participaci\u00f3n de la sociedad.\nReporte Ciudadano puede ser implementado y tener gran aceptaci\u00f3n entre los usuario creando impactos directos reduciendo la contaminaci\u00f3n abriendo un medio de comunicaci\u00f3n entre los ciudadanos que puede ser de gran ayuda en situaciones de cat\u00e1strofes naturales.\n\u00bfQu\u00e9 aprendimos en el Hackathon?\nHemos aprendido a llevar a cabo el desarrollo de una idea en un corto tiempo.\nDesde analizar la funcionalidad y operatividad en diversos dispositivos, as\u00ed como como la usabilidad para hacer una experiencia sencilla y pr\u00e1ctica para el usuario, adem\u00e1s de pensar un proyecto que puede ser factible implementar ofreciendo un beneficio radical a la sociedad.\n\u00bfCu\u00e1l es el futuro de Reporte Ciudadano?\nCrear una consciencia social, de responsabilidad com\u00fan que sea la muestra para futuras generaciones, que hagan del mundo un lugar mejor.\n*Correcci\u00f3n de errores.\n*Agregar los m\u00f3dulos faltantes, para Reporte Ciudadano 100% funcional.\n*Conseguir fondos para lanzar un beta p\u00fablico, para medir la aceptaci\u00f3n.\n*Conseguir patrocinadores para las soluciones.\n",
        "hackathon_id": "virtuafest",
        "winner": true
    },
    {
        "description": "\nInspiration\nSomos estudiantes y como estudiantes afrontamos el problema diario del transporte p\u00fablico de la ciudad de Durango, el cu\u00e1l es muy tardado y con pocas unidades por ruta. Lo cu\u00e1l causa que el perder un cami\u00f3n, causa una espera de 30 minutos promedio. Es por eso que quisimos resolver esto.\nWhat it does\nEs una aplicaci\u00f3n en la cu\u00e1l le dices la direcci\u00f3n a la cu\u00e1l quieres llegar o un lugar y te dice que ruta es la m\u00e1s adecuada tomar. Despu\u00e9s muestra en tiempo real el movimiento de la unidad de transporte en un mapa, permitiendo as\u00ed visualizar donde est\u00e1.\nHow I built it\nLo constru\u00edmos con Android Studio, utilizando las plantillas de Material Design compatibles con versiones anteriores. Permitiendo as\u00ed brindar un dise\u00f1o actual para todos. El core de la app es Google Maps API 2 para Android, el cu\u00e1l brinda una gigantesta base de datos de direcciones y posibilidades para dibujar en el mapa adem\u00e1s de ser actualizados.\nChallenges I ran into\nNos faltaban las herramientas necesarias para comenzar a desarrollar y el internet no permit\u00eda conseguirlas, pero fuimos a pedir prestado internet a una casa cerca y pudimos descargar las herramientas para comenzar el desarrollo. Adem\u00e1s no sab\u00edamos nada sobre Google Maps.\nAccomplishments that I'm proud of\nEstoy orgulloso de lograr una animaci\u00f3n que nos tomo toda la noche y que terminamos lo planeado antes del tiempo. Adem\u00e1s congeniamos muy bien como equipo y no hubo malentendidos.\nWhat I learned\nAprend\u00ed el manejo de la API de Google Maps para Android haci\u00e9ndome ver que es una de las herramientas indispensables para esta plataforma.\nWhat's next for BUSca\nPlaneamos terminarlo y lanzarlo al p\u00fablico.\n",
        "hackathon_id": "virtuafest",
        "winner": true
    },
    {
        "description": "\nInspiration\nEste proyecto surgi\u00f3,por experiencias pasadas de los integrantes del equipo, tomando en cuenta el reto propuesto al inicio del  hackathon, en conjunto expresamos nuestros disgustos ante esta situaci\u00f3n y tratamos  proponer una soluci\u00f3n.\nWhat it does\nb\u00e1sicamente lo que esta aplicaci\u00f3n m\u00f3vil hace es brindarle una experiencia m\u00e1s placentera,c\u00f3moda y f\u00e1cil al usuario  en dado caso que surja una emergencia tenga disponibles todos los servicios que la comunidad le brinda como asistencia policiaca, asistencia de rescate (bomberos), asistencia m\u00e9dica. sin que el usuario tenga que esperar para que sea atendido v\u00eda telef\u00f3nica, permitiendo una comunicaci\u00f3n eficaz y oportuna, para actuar ante estas situaciones.\n ## How I built it\nPara el desarrollo de la aplicaci\u00f3n utilizamos como base Android Studio(java) y todos sus complementos como sdk, as\u00ed mismo para crear un servidor REST , se utiliz\u00f3 el framework de desarrollo de Ruby on Rails, y para crear la interfaz del usuario dentro de un navegador usamos css3,html5 y javascript. Y as\u00ed mismo como un  HTTP server llamado nginx. \nChallenges I ran into\nUno de los principales retos que como equipo encontramos fue el hecho de estar en contra reloj y tener que soportar horas despiertos para poder acabarla con \u00e9xito, para todos fue una experiencia totalmente distinta a lo que est\u00e1bamos acostumbrados en nuestra caja de confort  pero de forma proporcional fue igual de grata.\notro punto, que consideramos sufrieron todos los equipos fue a clarar las ideas y organizarlas a tal punto de poderlas plasmar y cobrar\u00e1n vida, pero para este punto tuvimos que buscar nuevas alternativas que sustituyeran a  los lenguajes a los que est\u00e1bamos acostumbrados  a manejar.\nEl hecho de estar con personas mayores que varios de nuestros integrantes logro intimidarnos un poco , pero pudimos  superar ese miedo porque sab\u00edamos que al igual que ellos pod\u00edamos obtener y desarrollar lo mismo o mejor.\nAccomplishments that I'm proud of\nEstamos orgullos porque logramos algo que para el inicio parec\u00eda imposible, enfrentamos a nuestro Goliat que es el miedo y el estr\u00e9s para poder crear algo bello en conjunto.\nde mantenernos 26 horas despiertos m\u00ednimo.\nConocer nuevos colegas en distintas \u00e1reas  y poder compartir conocimientos que nos serviran para nuestro desarrollo.\nWhat I learned\nQu\u00e9 no dormir es malo :C \nEl trabajo de forma colaborativa siempre sera mejor.\nUtilizamos y conocimos nueva tecnolog\u00eda hardware  de amazon.\nAprendimos que si nos salimos de nuestra zona de confort podemos romper paradigmas y podemos crear cosas asombrosas.\nEl trabajo es duro,pero la satisfaccion te recompensa todo.\nWhat's next for SDS (Sistema de seguridad social)\nDesarrollar todas las partes propuestas en las ideas  que no plasmamos por falta de tiempo , como un sistema sincronizado en tiempo real.\nEsperamos poder realmente implementarlo en nuestro estado y vi\u00e9ndolo de una forma a gran escala el pa\u00eds.\n",
        "hackathon_id": "virtuafest",
        "winner": true
    },
    {
        "description": "\nInspiration\nLa tecnolog\u00eda debe de estar al alcance de todos, sin importar la capacidad adquisitiva de las personas, es obligaci\u00f3n nuestra el poder acercar a las personas a todas las posibilidades de desarrollo, aun cuando ellas mismas no sean capaces de acceder a las tecnolog\u00edas. As\u00ed naci\u00f3 la idea.\nWhat it does\nAcercamos a la gente que no tiene acceso a la tecnolog\u00eda mas moderna, a los peque\u00f1os cr\u00e9ditos y grupos financieros. Innovamos usando tecnolog\u00eda antigua, para gente de bajos recursos.\nHow I built it\nUsamos la mayor cantidad de herramientas disponibles, claro, siempre enfocados a ayudar a la gente con poco acceso a la tecnolog\u00eda\nChallenges I ran into\nEl como lograr acercar a la gente, con muy poca tecnolog\u00eda y muy pocas capacidades de conseguirla o acceder a ellas, por eso debimos innovar usando la tecnolog\u00eda antigua, pero aun en uso a la que ellos tienen acceso\nAccomplishments that I'm proud of\nLa idea que logramos crear, realmente creemos que les puede ayudar a la gente, estamos convencidos de que es acercamiento les ayudara a superarse, y con ello avanzar en el uso de tecnolog\u00edas mas modernas y as\u00ed sucesivamente.\nWhat I learned\nQue no es necesario usar la tecnologia mas moderna para innovar, y que lo importante es realmente, lograr acercar la tecnologia a todo mundo, algo que creemos obligaci\u00f3n de todos los que vivimos rodeados de tecnologia.\nWhat's next for PrestaFast\nLograr llevar el proyecto a un punto 100% funcional y lograr ayudar asi a la mayor cantidad posible de gente a salir de sus problemas financieros y con eso acercarlas a la tecnologia que nosotros tanto amamos.\n",
        "hackathon_id": "virtuafest",
        "winner": true
    },
    {
        "description": "\nInspiration\nEst\u00e1 aplicaci\u00f3n se realiz\u00f3 por la problem\u00e1tica que existe en Durango de la corrupci\u00f3n en oficiales de polic\u00eda. Adem\u00e1s del Ignite de F\u00e1tima Montiel.\nWhat it does\nMediante una aplicaci\u00f3n Android, el usuario puede denunciar la corrupci\u00f3n presente en la polic\u00eda. Dicha denuncia ser\u00e1 completamente an\u00f3nima. \nLa aplicaci\u00f3n solicita ingresar el n\u00famero de la patrulla, as\u00ed como la fecha. \nLos datos ser\u00e1n enviados a una base de datos para despu\u00e9s realizar consultas para mostrar al oficial que obtenga m\u00e1s quejas de corrupci\u00f3n. \nHow I built it\nUtilizamos Android Studio, Dreamweaver, Photoshop y mucha paciencia.\nChallenges I ran into\nDesconoc\u00edamos como programar en Android Studio.\nAccomplishments that I'm proud of\nNunca nos rendimos a pesar de las adversidades y de la falta de nuestros conocimientos. \nWhat I learned\nA programar en Android Studio y a seguir creyendo en nuestros proyectos.\nWhat's next for Sin Mordida\nNos gustar\u00eda que se pudiera llegar a implementar y ser parte del cambio social.\n",
        "hackathon_id": "virtuafest",
        "winner": false
    },
    {
        "description": "\nInspiration\nA muchos de nosotros se nos ha presentado la necesidad de ir a emergencias, pero lamentablemente no tuvimos un buen servicio en base a que al momento de llegar al hospital no ten\u00edan una camilla lista con su respectivo especialista para atendernos lo antes posible y muchas veces ten\u00edan problemas con los registros de los pacientes, as\u00ed que esta problem\u00e1tica fue el inicio de nuestra inspiraci\u00f3n.\nWhat it does\nAl momento que nos pusimos a analizar acerca de este problema descubrimos que est\u00e9 nace desde el momento en que la ambulancia o camillero llega al lugar donde se necesita. As\u00ed que decidimos implementar un software el cual tiene como funcionalidad hacer un registro en el momento que llega la ambulancia al lugar donde se le solicita y pone al tanto de la situaci\u00f3n al hospital, con esta informaci\u00f3n dada, el hospital es capaz de buscar con anticipaci\u00f3n un cuarto, una camilla y el respectivo especialista para que atienda al paciente como es debido.\nHow I built it\nImplementamos el lenguaje de llama en el editor android studio para crear una vista amigable al paramedico para que el pueda sumar una herramienta mas de apoyo en la implementaci\u00f3n del sistema de clasificacion Triage. Otro de ellos implementados fue el lenguaje c# para los sistemas windows con el cual se creo un puerto de comunicacion con el cual el paramedico envie los reportes de los lesionados directamente al hospital y que se pueda agilizar la atencion requerida.\nChallenges I ran into\nEn el proceso de desarrollo de este software se nos presentaron bastantes retos los cuales algunos fueron en cuesti\u00f3n a software y condici\u00f3n f\u00edsica.\nFue muy cansado estar despierto mas de 24 hora planificando un proyecto de excelencia.\nAl momento del desarrollo del proyecto hubieron retos f\u00e1ciles de sobrepasar, pero tambi\u00e9n tuvimos otros los cuales nos hicieron pensar en grande y sacarnos de nuestras casillas.\nPrimeramente porque, ten\u00edamos que hacer relaciones con las bases de datos, conectar redes y las bases de datos usando controladores que est\u00e1n en lenguajes de programaci\u00f3n a los que no todos estamos acostumbrados.\nTambi\u00e9n se nos presento el caso en el cual tuvimos que hacer un login para los camilleros porque pensamos lo siguiente \"Cada ambulancia tiene que tener camilleros que est\u00e9n debidamente registrados en una base de datos\" y esto nos llevo a discutir el porqu\u00e9 de esto.\nAccomplishments that I'm proud of\nEn primer lugar hubo cuatro compa\u00f1eros que eran nuevos en este tipo de experiencia, hubo gran apoyo tanto de informacion y aplicaciones, cosas nuevas que hemos logrado como un equipo. Estamos orgullos en saber las bases de programar en un Smartwatch que seria Pebble, nos brindo un nuevo campo de estudio para nosotros los programadores.\nUsar y configurar un Oculus Rift algo que creiamos que no seria posible tener uno alcanzar pero tuvimos la oportunidad de tener una.\nLa comunicacion\nWhat I learned\nEn esta gran experiencia que nos ha tocado como jovenes en un camino hacia un futuro exitoso, hemos aprendido de los mas grandes detalles hasta los mas peque\u00f1os que puede haber. Un gran ejemplo es que siempre debes estructurar bien tu idea a base de argumentos y tacticas que te puedan llevar hasta tu propia meta, porque si piensas en saltarte este paso, te lo aseguro con mi poca experiencia que vas a batallar. Pero no todo lo que aprendimos tiene un lado malo, tambien aprendimos a estar unidos como un equipo que se cuida la espalda el uno al otro en ciertas situaciones , como la mas minima de tener cansancio fisico o emocional y que tu compa\u00f1ero se sacrifique eso no ense\u00f1a que para triunfar, cada persona o parte de un circuito debe de funcionar al 100%.\nWhat's next for Durango Network\nEsperamos poder trabajar de la misma manera en que la hicimos este evento, con algunos proyectos que durante el evento mencionado anteriormente, se discutieron.\nTales como una red de acceso r\u00e1pido a informaci\u00f3n gubernamental, y ciudadana as\u00ed como de otros variados proyectos de car\u00e1cter social para el manejo mas f\u00e1cil de los datos y por lo tanto la optimizan de ello.\nSe busca discutir como la reuni\u00f3n de nuestro grupo actual como un grupo formal de trabajo.\nAsi queremos ofrecer nuestros servicios a distintas empresas o negocios que as\u00ed los requieran, para mejorar y optimizar la manera de trabajar de su grupo de trabajo.\n",
        "hackathon_id": "virtuafest",
        "winner": false
    },
    {
        "description": "\nIdea\nSe desarroll\u00f3 a ra\u00edz de una problem\u00e1tica com\u00fan que la mayor\u00eda de los ciudadanos si no es que el 100% estamos inconformes con el servicio prestado por el sistema de emergencia, 072 o simplemente evitamos reportar una situaci\u00f3n por inseguridad.\nPara eso se ideo una aplicaci\u00f3n que proporcione estas herramientas de manera r\u00e1pida, efectiva y de f\u00e1cil acceso para el usuario logrando que m\u00e1s personas se unan y lograr que la ciudad luzca y sea segura para sus habitantes.\nQu\u00e9 hace??\nEl proyecto se constituye de dos partes, la primera es una campa\u00f1a para generar conciencia en la sociedad atacando a la poblaci\u00f3n entre 10 y 15 a\u00f1os, \u00bfC\u00f3mo lograr esto?, mediante el uso de tecnolog\u00edas modernas como Realidad Aumentada o Aplicaciones M\u00f3viles que proporcionen herramientas y conocimiento, pero sobre todo, conciencia acerca de hacer un buen uso de las lineas de emergencia, denuncias y reportes de incidentes que se atienden al 072.\nComo se construy\u00f3\nInici\u00f3 como una met\u00e1fora, \u00bfQu\u00e9 estaba sucediendo o cu\u00e1l era el motivo por el cual el servicio p\u00fablico 072, 060 y 089 no era eficiente?, despu\u00e9s de muchas ideas llegamos a la conclusi\u00f3n de que la mayor\u00eda de la poblaci\u00f3n tiende a reportar situaciones pero muchas veces no se resuelven a la brevedad por falta de detalles en el reporte o falta de ubicaci\u00f3n exacta.\nRetos\nUno de los retos m\u00e1s grandes es reducir al m\u00ednimo el uso inapropiado de las tecnolog\u00edas, y esto se logra a trav\u00e9s de la educaci\u00f3n y la conciencia de los usuarios para lograr que las llamadas y/o reportes que se realicen sean verdaderos y contengan los detalles suficientes para su pronta resoluci\u00f3n. Otro reto fue como ofrecer las herramientas a la ciudadan\u00eda sin que sean demasiado complejas para su uso y que brinden la seguridad de requiere para realizar denuncias o llamadas al 066.\nLogros\nSe logr\u00f3 unificar la tecnolog\u00eda y generar conciencia mediante una campa\u00f1a completa de los diferentes problemas que d\u00eda con d\u00eda vemos en nuestra ciudad. El objetivo es hacer que la poblaci\u00f3n reporte los incidentes de su localidad, tenga la certeza y seguridad que se va a resolver y sobre todo el poder denunciar con la seguridad del anonimato.\nQue aprendimos??\nLa investigaci\u00f3n nos brind\u00f3 un panorama de oportunidades no solo en el ambiente de la ciudad, si no que podemos ampliar a m\u00e1s temas de desarrollo en la sociedad, as\u00ed como funciones dentro de la aplicaci\u00f3n que incluyan herramientas de f\u00e1cil acceso para los usuarios y les permita una mejor calidad de vida.\nQu\u00e9 sigue para Durango Seguro??\nEl siguiente paso en el desarroll\u00f3 es ampliar la campa\u00f1a a m\u00e1s temas, no solo Seguridad en tu Ciudad, si no un sin fin de temas de desarrollo humano como son: Valores, Educaci\u00f3n Vial, Bullying, Violencia etc., panorama que nos es permitido debido a que las tecnolog\u00edas utilizadas son llamativas y novedosas, dos de los factores m\u00e1s importantes para el desarrollo y educaci\u00f3n de la ni\u00f1ez. \nOtro de los objetivos a largo plazo es cambiar la monoton\u00eda de la educaci\u00f3n haciendo uso de soluciones tecnol\u00f3gicas facilitando el aprendizaje y asegurando un mayor rescate del mensaje cultural y social que ofrece la experiencia del uso de las tecnolog\u00edas.\n",
        "hackathon_id": "virtuafest",
        "winner": false
    },
    {
        "description": "\nInspiration\nEn los problemas que vive la ciudad sobre la inseguridad de sus colonias.\nWhat it does\nAyudar a reducir la tasa de inseguridad y genera la confianza de los ciudadanos.\nHow I built it\nDreamweaver, Sublime-text, Xampp, Photoshop.\nChallenges I ran into\nSe fue la luz, el internet se satur\u00f3, en xampp batallamos para que funcionara el localhost y la edici\u00f3n fue un reto.\nAccomplishments that I'm proud of\nNos enorgullece el haber trabajado bien como equipo para lograr el objetivo esperado.\nWhat I learned\nAprendimos a trabajar contra tiempo.\nWhat's next for Seguridad Alterna\nImplementar nuevos m\u00e9todos de seguridad para aumentar el anonimato de los demandantes.\n",
        "hackathon_id": "virtuafest",
        "winner": false
    },
    {
        "description": "\nInspiration\nEl tema de la seguridad en la cuidad de Durango es un tema que nos afecta y nos interesa a todos. Un factor que nos afecta y ha provocado muchos accidentes se encunetra en la vialidad, por ello, nos parecio un tema de gran relevancia, principalmente por la ignorancia que tenemos acerca de la seguridad vial.\nWhat it does\nOra pico es una aplicaci\u00f3n desarrollada para usarse en un entorno web con la finalidad de cultivar buenos h\u00e1bitos viales mediante divertidos minijuegos que explicar\u00e1n la importancia de las distintas normas existentes en el reglamento de tr\u00e1sito.\nHow I built it\nA partir de la idea planteada, el trabajo a realizar se divide en tres etapas: planeaci\u00f3n, dise\u00f1o y desarrollo, la cuales se les asignan a los distintos integrantes del equipo tomando a consideraci\u00f3n las habilidades con los que cada uno de ellos cuenta. Mientras los encargados de planeaci\u00f3n realizaban investigaciones acerca de las reglas de tr\u00e1nsito, buscando la implemetaci\u00f3n de las mismas dentro del juego, las personas que forman parte del equipo de dise\u00f1o realizaba bocetos de los personajes e im\u00e1genes de fondo de las escenas, para posteriormente digitalizarlas. Por \u00faltimo, ya que la planeaci\u00f3n y el dise\u00f1o tiene una estructura establecida, las personas que se encargan de programar el juego, lo hacen a trav\u00e9s de una herramienta de desarrollo llamada GameMarket. \nChallenges I ran into\nLa cantidad de ideas para dar soluci\u00f3n a esta problem\u00e1tica era enorme al principio, ya que cada uno de los integrantes ten\u00eda una visi\u00f3n diferente del mismo, por lo que, el proceso de delimitar la idea principal en la que se basar\u00eda el juego, se volvi\u00f3 una de las tareas m\u00e1s d\u00edficiles. Nos tom\u00f3 varias horas encontrar los puntos que ten\u00edamos en com\u00fan para irlos integrando hasta lograr una idea fija. Otro problema muy grande fue el c\u00f3mo lograr\u00edamos que un tema como la seguridad vial sea aceptado y ademas valorado, de tal manera que logre un impacto hacia lo que estamos buscando. Varias propuestas fueron y vinieron antes de decidirnos por la aplicaci\u00f3n web.\nDespu\u00e9s que fijamos el objetivo, nos encontramos con diferentes maneras de desarrollarlo y tuvimos que experimentar con varias y desecharlas antes de GameMarket por diferentes motivos. Por ejempo, unas eran muy complejas o nuevas, y no pod\u00edamos aprenderlo de un d\u00eda a el otro pues el tiempo no lo permit\u00eda.\nUna vez que encontramos la herramienta adecuada, y con una idea concreta en mente, pudimos trabajar de manera m\u00e1s fluida hasta terminar el proyecto.\nAccomplishments that I'm proud of\nCada uno de los integrantes  trabajo de manera muy fluida en su equipo, enfoc\u00e1ndose en realizar sus actividades en el tiempo establecido. La convivencia dentro del equipo de trabajo fue muy favorable, ya que el apoyo mutuo estuvo siempre presente. \nTambi\u00e9n como parte en la que nos sentimos orgullosos fue en la manera de actuar, razonar, convivir e interactuar ante ciertas situaciones por parte de los mismos; a pesar de la falta de conocimiento entre nosotros.\nTodos las personas que integramos en el equipo podemos sentirnos orgullosas que dimos nuestro granito de arena aportantdo ideas grandiosas.\nWhat I learned\nUtilizar herramientas de dise\u00f1o.\nTrabajar con compa\u00f1eros con los que antes no hab\u00edas tenido mucho contacto de amistad ni mucho menos escolar o laboral.\nTrabajar bajo presi\u00f3n.\nTomar en cuenta todas las ideas, por m\u00e1s peque\u00f1as que sean. \nAportar hasta la m\u00ednima idea sin miedo a que esta sea rechazada por los compa\u00f1eros de equipo.\nQuiz\u00e1 lo que mas podr\u00eda destacar es que podemos atacar un problema desde muchos lados, encontrar una soluci\u00f3n utilizando cosas de la vida diaria, utilizando lo que tenemos a nuestro alrededor para conseguir nuestros objetivos.\nWhat's next for Ora Pico!\nQueremos que esta aplicaci\u00f3n web llegue a todo mundo, y que forme parte de su  vida, asi que la segund parte ser\u00eda una aplicaci\u00f3n m\u00f3vil disponile para sistema operativo Android y IOS. \nIntegraci\u00f3n de nuevos escenarios con un mayor nivel de dificultad e implemetaci\u00f3n de m\u00e1s reglas de tr\u00e1nsito.\nNuevos personajes, siendo amigables con el usuario.\nY, \u00bfpor qu\u00e9 no?, una segunda aplicacion con mejores gr\u00e1ficos y m\u00e1s elementos pero llevando la escencia de eso que buscamos, una mejor educaci\u00f3n vial.\n",
        "hackathon_id": "virtuafest",
        "winner": false
    },
    {
        "description": "\nBuilt With\nnode.jssails.jsbootstrapangular.jsgitherokumysqlhtml5css3lessejssublime-textnpmjavascriptjsongrunt.js\n",
        "hackathon_id": "virtuafest",
        "winner": false
    },
    {
        "description": "\nInspiration\n_ \u201cThey may use my body but my mind is free. In my mind I escape.\u201d  _\n\u2015 Gladys Lawson, Blood Borne Connections\nEvery year, thousands of people fall into the hands of traffickers. Human trafficking represented an estimated $31.6 billion of international trade per annum in 2010. It\u2019s thought to be one of the fastest-growing activities of transnational criminal organizations. We want to do something about this, and look to contribute technology solutions.\nWhat it does\nFreeMe gives a women in distress the ability to push a help button in the feminine hygiene dispensers located in a public toilets along european roads. Immediately after it is activated, it creates a profile and shares a photo and metadata (time, location, gender, age) with the police. It also simultaneously dispenses a sanitary pad with a embedded beacon.\nWhen the woman is in proximity of a police officer, at a border crossing for example, the police officers mobile will alert them with her profile, and that she is nearby and needs their help immediately.\nHow we built it\nFreeMe consist out of three main components:\nBathroom feminine hygiene dispenser:\nOur prototype runs off android app software and beacon disguised in the sanitary pad.\nWhen pressed, it snaps a photo through Android device and creates a web profile. Photo is being analyzed through the use of facial recognition api (Face++).  The picture with metadata is being stored in Parse database. Donkey platform is being used for push notifications to notify the police department. \nPolice Android app:\nAndroid app that uses GIMBAL apis to detect RSSI signal from QUALCOMM made beacons. Whenever the app detects those specific beacons it notifies a police officer by providing them a dialog with the picture and metadata of suspected human traffic victim. \nWeb controlled Administrator page for Police department:\nGives administration power to the police to browse, sort, delete or edit all submitted profiles as well as send push notifications through Donkey to the police officers. \nCreated in Javascript, HTML, CSS using Parse and Donky APIs, MapQuest AOEL\nChallenges we ran into\nWe\u2019d say that the biggest challenge was to find the answers on bunch of unknowns and bottlenecks that were popping up while discussing the idea with sponsors and other hackathon attendees. For example \u201cWeird looks about having this kind of device in toilets and privacy related issues\u201d or \"intense subject matter\". As well we\u2019ve had some technological issues, especially using the beacons and using some sponsors APIs. - (MapQuest) :)  \nAccomplishments that we're proud of\nWe are proud that we stood as a team and we\u2019ve managed to dig through a  bunch of ideas to get to the one that has a power to really improve the quality of life for a lot of people. We are proud that we managed to split the tasks in the efficient way, combining programming, craftsmanship, and idea generation.  Most importantly we\u2019re proud that we created a working MVP, that has the potential to become something more.\nWhat we learned\nCoding is easier than talking and handling objections. \nIt feels good to have have an idea that has the potential to change life of person to the better. Probably feels better than the idea for sending glitter to your enemies. Or maybe not.\nYou\u2019re getting insanely sleepy if you have a pizza and a beer at 12am.  \nWhat's next for FreeMe\nOpen sourcing the project, making it available to project teams actively involved in the field who might be able to implement and really see this kind of technology change things for women in a meaningful way. We are keen to do what we can to support these endeavours. \n",
        "hackathon_id": "disrupteu2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nLike everyone else, we love the beautiful simplicity of on demand marketplace economics. Consumers get a better experience at a lower cost because the business maximizes the utilization of the top rated workers. Workers make less per job, but make more per hour because it's more complete utilization of their time (job after job after job come to the best workers).\nThis model can apply to an almost infinite number of task types, giving rise to the infamous \"Uber for X\" startup fad. On demand car service, barber, auto detailing, dog walking, research, tutoring, movers, concierge, food delivery, massages, laundry, flowers, copy writing, code writing -- the list is endless.\nWe were originally trying to make an on demand fact-checking application (Chrome extension plugin that sat on your Facebook and Twitter experience and let you submit articles or memes to be fact-checked, where the information would then be instantly available in line for anyone else for whom that URL or image popped up in their article). But we had the same two problems that everyone building an on demand two sided marketplace (ODTSM) has: Building the technology and building the supply of workers to make the experience smooth by having a good result with a fast turn around time.\nWe wanted to do for ODTSM's what Magento and Shopify and other plug-and-play shopping cart solutions did for eCommerce: Open the industry up to anyone with a good idea that can provide a good service -- not just those with developer resources.\nWhat it does\nTaskUp solves those two major problems for anyone with an ODTSM will face: \nFirst, instead of having to custom code the technology, you can launch your marketplace by just listing out the business logic rules you want to govern it.\nSecond, by allowing workers a central platform from which to manage a profile, we can do for ODTSM's what Medium did for content creation. Medium solves the time-to-value problem for content creators by coming with a built-in audience. TaskUp solves the time-to-value problem for customers of ODTSM's by coming with a built-in network of potential workers. Can an Uber driver also deliver food? Of course. If a barber has some down time, can they do tasks for an on demand premium research marketplace? Why not?\nHow we built it\nWe built this app using rapid prototyping framework Meteor and MongoDB for the database.\nWe split up the work between building out the template files and writing the backend functionality, stubbing in sample data with functional pieces throughout the day.\nChallenges we ran into\nBuilding out the platform has a lot of potential options, so we had to think about the simplest implementation that scales to a number of markets.\nStripping this down to its basic level of relationships was hard, particularly for a 60 second time slot.\nAccomplishments that we're proud of\nThe fact that we were able to build out a two-sided marketplace with sample categories and merchants, where reviews determine who gets to claim jobs in the fiture.\nWhat we learned\n24 hours is not enough, but we've proved the concept of the app, and look forward to building this out fully, with more marketplace abstraction, business rules, and reporting. \nWhat's next for TaskUp\nWe win? Please? :)\nIn all seriousness, the tech exists now and it works. So we're going to try and get 1,000 startups to sign up around the world, and get at least 10 doing 100 transactions a week by the end of February.\n",
        "hackathon_id": "disrupteu2015",
        "winner": true
    },
    {
        "description": "\nInspiration\n\nHeading to eat out after a football match and got rejected by countless restaurant around the area. From hunger, it turn to anger, then turning finally to inspiration for opportunity.\n\nWhat it does\n\nCore Functionality 1: We provide map to general citizens with real time updates on available restaurant tables throughout the city through color-coded restaurants tagging by availability\nPeriphery Functionality 1: Filtering function by food type, ratings, how long it takes to walk there etc.\nCore Functionality 2: We provide to restauranteurs free table management software for them to use, in exchange for the embedded functionality of feeding live data on table availability to our mapping software (existing one are primitive and have expensive license)\n\nHow we build it\nIt is built almost exclusively on the esri platform. With a layer of bootstrap to tidy everything up.\nChallenges we ran into\n\nAlthough the idea is suited most for mobile, we do not have any mobile developer so we have to start with developing a website instead\nWe were only a 2 man team, so we did not have time to develop the Table Management end of our software which is a core feature that feeds data into our map on table availability / turnover time\n\nAccomplishment that we\u2019re proud of\n\nCompleting the project in time with 2 people\nNavigating through lots of functionality of esri API and implementing them on our product\n\n",
        "hackathon_id": "disrupteu2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nPicking a bet has always been an unproven science. There are several parameters, analytics and data that influence betters' decisions. However no one has ever tried to automate the whole experience. \nWhat it does\nIfBet is an automated engine that lets the user create a set of flows and instructions in order to place a bet. A simple flow could be if it's sunny, Manchester United is playing at home, the top scorer of the team is playing, the match is a Premier League, always bet \u00a310 on the team. This means that the flow conditions can be matched and met multiple times across the season.\nThe user holds an account balance which is used to place future bets. Further the app is able to show the gains and the loses through charts. This decision was taken to make users aware of how much they are spending and give them more control over their finances. \nHow we built it\nThe iOS application was built with React Native and the William Hill APIs. The Backend is written in Node.js. The software architecture lets add more building blocks in an easy and straightforward way, which means that the possibilities are endless. \nChallenges we ran into\nBuilding a smooth drag and drop experience to build a custom flow in React Native turned to be more challenging than expected. \nAccomplishments that we're proud of\nThere are several industries that are applying automation; that's why we are proud to have imported this model in the betting industry. \nWhat we learned\nWe learned how intriguing and deep the world of betting is, but also how fast and reliable shipping a product in a few hours with React Native is. \nWhat's next for IFBet\nIFBet is ready to expand into a commercial application that any responsible better can use to make the bets smarter and more efficient. \n",
        "hackathon_id": "disrupteu2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nThe idea for our app came one day, during our lunch break. We noticed that there are a lot of restaurants in our area that offer discounts for the employees of the nearby companies. Company Perks app aims to provide means for managing the discounts and identify the loyal customers by NFC tags. Usually, an NFC tag is the actual employee access badge but it can be anything, from a bank card to an Oyster card or even custom NFC tags branded by the merchant.\nWhat it does\nThe Company Perks app allows NFC tag scanning. The NFC tag is used to identify the customer and apply the discount to the current open order on the Clover Station. Also, the customer has the ability to self register his NFC card by selecting the company he's employed at.\nHow we built it\nFirst of all, the app has 3 components.\n1) The Android app is used for scanning the NFC tags. This app is installed on an Android device, other than the Clover Station. The Android device will be on the cash register desk, near the Clover Station POS. Using this app, the loyal customers will scan their company badge at checkout time and the discount will be applied for the order. The Android app exchanges data with our backend API.\n2) The Backend API is used for handling the communication between the Android app and the Clover API. The backend was built using Parse.\n3) The administration interface is used by the Merchant in order to assign the negotiated discount with each group or company and it also provides the Merchant with statistics about the loyalty program. We built the admin interface using JavaScript, Backbone and Parse SDK.\nChallenges we ran into\nWe ran into a few issues, mostly related with the Clover Station's security policy. We decided to leverage the NFC scanning on another Android device.\nWhat we learned\nSince this is the first time we play with the Clover APIs, we learned that there are a lot of integration methods available and we explored the REST API.\nWhat's next for Company Perks\nFirst of all, we should submit the app to the Clover App store and incentive Merchants to try it. \n",
        "hackathon_id": "disrupteu2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nTime that used to be spent on social media is increasingly being spent in messaging apps. This makes it likely that messaging apps will be the next major app platform. It's here that people discuss the TV they're watching now and what to watch next. This makes reaching people here incredibly valuable to media companies\nWhat it does\nAdd Murdoch to any of your chat threads in Telegram and it will unobtrusively listen to what tv shows you or your friends are talking about, and make smart recommendations\nHow we built it\nWe have a back end built in Rails, Postgres, Redis and hosted on Heroku. We access input and output through the Telegram bot API. We use IBM Alchemy API to detect sentiment and subject of responses. \nWe processed the 1.3 million rows of data supplied by sky as a seed for our recommendation engine.\nChallenges we ran into\n\nVery hard to identify threads in conversations with multiple participants\nGenerating recommendations is generally quite slow, but we want them on the fly so that Murdoch appears responsive during early learning\nTV viewing tends to be long tail, so most data relates to a small subset of very popular shows. This makes surfacing unusual suggestions especially challenging\n\nAccomplishments that we're proud of\n\nParsing 1.3m rows of behavioural data from Sky and using a Jaccardian similarity based algorithm to seed our recommendations system\nUsing the Alchemy API from IBM to understand when people are talking about a TV Show and what their sentiment towards it is\n\nWhat we learned\n\nTv Viewing tends to be long tail, most people watch the same small number of shows\nWhen identifying threads in conversations, you can get 90% of the way there, and quite a good experience, by making time based assumptions, the last 10% will be really difficult\nIt's really important to have any sort of automated system participating in a group chat, adapt to the cadence of the conversation, otherwise it quickly feels like spam\n\nWhat's next for Murdoch\nImprove the responses with IBM dialogue API and increase the use cases to other chat avenues. \nProvide an API to allow access to anonymised market data - what shows are popular in what markets, when people are talking about shows and how positive they are bout them.\n",
        "hackathon_id": "disrupteu2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nThere are tons of online video that contain valuable product information, we try to be the missing link between online businesses and digital video.\nWhat it does\nTaggly lets you ask questions about products and where you can buy them, friends can respond with product suggestions from online business like Zalando. It also enriches detail pages of online pages, like for ex. Zalando, we show them online videos where their products are being shown.\nHow we built it\nWe've build a generic chrome plugin.\n\nFor our database and authentication we used Parse.com\nTo allow tagging Youtube/Vimeo we build an Google Chrome Extension\nWe used API's for fetching addition article information to display at the video's\n\nChallenges we ran into\n\nCrawling the data was a big challenge in order to show relevant data.\nAlso we -all- came out of our comfort zone\n\nAccomplishments that we're proud of\nWe are so proud that we've built something that connects digital video content and online businesses.\nWhat's next for Taggly\nThere are a lot of challenges still to overcome, we could analyze trends, add more metadata.\n",
        "hackathon_id": "disrupteu2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nI wish I could look as cool as my friends but I don't have a lot of money \nWhat it does\nIt finds the images that are the same description as the one I've taken from my phone and uploaded to the server\nHow we built it\nJAVA html5 ZALANDO\nChallenges we ran into\nuploader \nAccomplishments that we're proud of\njson dictionary \nWhat we learned\ncaputring images and getting discriptions from them\nWhat's next for Cheapr\ntaking it to market\n",
        "hackathon_id": "disrupteu2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nNearly anyone needs to wear a suit at least once in his live. For all those who hate shopping and just want to get it done, we provide the perfect solution wit SuitMeApp.\nWhat it does\nI gives you a tinder-like way to choose your suit in seconds. We rely on the Zalando API to provide you the best recommendations possible, considering what you like.\nHow we built it\nAngularJs\nChallenges we ran into\nZalando API does not support direct ordering jet. So we provide you the raw links to order all you need for your perfect suit.\nAccomplishments that we're proud of\nWe already deployed a stable version, that provides you your suit in seconds.\nWhat we learned\nLots about AngularJs\nWhat's next for SuitMeApp\nThe social media plugin to show you the suits of your friends to prevent you from having the same outfit.\n",
        "hackathon_id": "disrupteu2015",
        "winner": true
    },
    {
        "description": "\nPurpose\nAllow people to suggest and vote on the next songs they listen on a party. \nTry it\nFor event/party organisers, go to http://playlistrupt.herokuapp.com/playlist.\nFor event/party guests, text the name of the musician you want to hear to 07400 208844.\nArchitecture\nBackend\n\nPython\nFlask\nSQLAlchemy\nTwilio API\nHumm API\nDeployed on Heroku\n\nFrontend\n\nHTML/CSS/Javascript\nYoutube API\n\n",
        "hackathon_id": "disrupteu2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe wanted to enrich the reading experience and provide new means for music discovery by identifying suitable songs for news articles or stories.\nWhat it does\nBased on an article URL provided by the user we get the text, title, keywords and entities from the Alchemy API. We use the musiXmatch lyrics dataset of the million song dataset (http://labrosa.ee.columbia.edu/millionsong/challenge) to generate a list of topic cluster of the available songs. Using the Alchemy information we then classify the article to one of this topics and retrieve the nearest songs. In addition we use the article entities to retrieve top songs directly from music APIs. Those combined results are then surfaced on the front end. \nChallenges we ran into\nCombining the various modules to create the end-to-end flow proved to be more time consuming then we thought initially. \nAccomplishments that we are proud of\nIntegration of complex machine learning techniques and usage of various APIs and getting the whole thing together in the given timeframe.\nWhat I learned\nImportance of clear focus on minimum viable product and early integration testing.\nWhat's next for storytunes\nImproving the topic classification of songs and articles by finetuning the LDA algorithm.\nAllowing the user to login and import songs directly to spotify, myhumm or other playlists.\nAllowing the user to rate the retrieved songs.\nImproving efficiency of backend processes.\n",
        "hackathon_id": "disrupteu2015",
        "winner": true
    },
    {
        "description": "\nTechnology should be simple and magical. Every child wanted to have an invisible coat or glasses capable of thru-wall vision. We decided to build Suonoscope. It is a telescope for sound which you can point in any direction to hear the sounds of nearby as well as far-away places. Just point it and focus on the distance you'd like to explore the sounds of.\nSuonoscope is a toy for kids. It helps them to develop spatial awareness and better understanding of their surroundings and the world through their play and curiosity. At the closest distance the sounds of familiar places are heard, such as the train station, stadium, hospital and so on. The further you zoom out, the more exotic places you can hear \u2013 the Amazonian jungle or a market in China or a flyover Space-station or even coming thunderstorm. All depending on the direction in which the Suonoscope is pointed.\nBuilt using an old Android phone, old USB mouse and IBM Watson freebie cup. Back-end using Sinatra/Ruby web service integrating with ArcGIS REST API and sounds from British Library archive.\n",
        "hackathon_id": "disrupteu2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nOur aim is to allow those in developing countries, with limited or no access to the internet, the same first aid information which is readily available to the world that has easy access to the internet.\nWhat it does\nMedicSMS empowers those in developing countries that have access to ordinary cell phones with the ability to obtain a first aid diagnosis and advice via SMS. Users simply text in their symptoms, and, using a combination of the Twilio and IBM Watson APIs, we translate the natural language SMS into a likely diagnosis. After a quick dialog of decisions, the user is presented with a suggested course of action as a series of steps for their specific condition. We request location information from the user so that the proper local authorities can both contact the aid the patient.  This, location and symptom data can be provided to local charities to help track the spread of illness and disease in these locations.\nFurthermore, we take into account the language of the user, using IBM Watson's translation API. We detect the user's natural language and respond to them accordingly.\nHow we built it\nThe core of MedicSMS is based on the Twilio and IBM Watson APIs. We use Twilio to receive and send SMS messages to our end users, while we use Watson's natural language classifier to classify the symptoms of an individual and then recommend the best course of action. Our two different backend services are written in NodeJS and Python, while our frontend is using AngularJS, Google Maps API and CSS3. Our services are hosted on Heroku and Google App Engine.\n",
        "hackathon_id": "disrupteu2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe\u2019ve build an extension for Sky. As there is so many video/series available nowadays and some of them aren\u2019t the simplest, it\u2019s hard to keep track of all the details all the time. Our concept aims to solve this problem by providing a data-driven screen application that tells you everything you need to know and extending the user experience.\nWhat it does\nThe core feature is to provide helpful, real and relevant data based on what can be seen live in the video. Next to this, we added a comment system where users can post a comment during the video and read comments of others.\nHow we build it\nStarting off with OpenCV, where we use face recognition to extract flat faces of the video. These faces are send to our Watson backend module where trained Watson classifiers will map the face to a name. Once a match is found, the Watson module will send the name to a scraper module which will gather all the data it can find on the name. After this, the data is given to the Android application and will be visualised so the user can enjoy the extra content.\nChallenges we ran into\nOne challenge was to collect decent data and cleaning it to train the classifier successfully. Another one was boosting the face recognition to a level that it can be used.\nAccomplishments that we\u2019re proud of\nWe achieved exactly what we had in mind.\nWhat\u2019s next for SkyFly\nThe possibilities are endless. Next to the data and comments, the second screen app can be extended with numerous of features to aid the users experience.\nBuild with\nWatson, OpenCV, Android, Sky\n",
        "hackathon_id": "disrupteu2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWhilst on the train heading here I saw a billboard for fortitude,  a new series on sky. This was the foundation event of our app, I didn't know if it was something I'd watch, it would be great to have an app that would tell me!\nWhat it does\n'What to Watch' is a web-based system which is easily accessible on all platforms (tablet, mobile, desktop or laptop) which stores all your favorite TV shows, depending on how often you watch them, and suggest new shows for you to watch, for example if you like watching simpsons the app would suggest futurama.\nHow we built it\nWe wrote our front-end using PHP and Bootstrap to make a fast, clean and easily navigable UI, our database was retrieved from sky's 'API' and converted into a database file we then filtered and collected from using mySQL.\nChallenges we ran into\nThe initial database that sky offered was a set of excel files cluttered with tags unique to single shows or even episodes i.e. the tags 'uk_crime_drama'' and 'crime_drama' in the same group of tags instead of 'uk' and 'crime_drama'. Use of tags like this use up more than half of the space holding the tags.\nWhat we learned\nWe learned that it is probably best to work in a larger team with a larger variety of knowledge (someone to work on the front end, someone on the back end, design etc.)\nWe also learned that trying to fit API's in to reach goals for prizes isn't a great idea when you don't have the foundations to stick them on (hence the lack of esri and twilio).\nWhat's next for What to watch?\nIt may be re-implemented for another, less restrictive platform such as Netflix or freeview channels (however there isn't an ongoing basis for these that I know about).\n",
        "hackathon_id": "disrupteu2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptios\n",
        "hackathon_id": "disrupteu2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\ntwilioibm-watsonbluemixskynode.js\n",
        "hackathon_id": "disrupteu2015",
        "winner": false
    },
    {
        "description": "\nSelfieTV - Emotion Detection for TV Recommendation\nDescription\nIt's Friday night and Sophie (25) and her friend Emma (28) sit down to watch TV with two glasses of Red Wine. As they relax on the sofa, they switch on their SkyTV - prompting them to take a selfie. Within seconds, Games of Thrones begins to play begins to play. They look at each other in astonishment......... how did it know?\nRecommendation Algorithm\nSelfieTV uses around 25,000 data points to recommend TV programs to users, based on age, gender, number of people and emotions.\nLanguages\nNodeJS, Javascript, JSON, Jquery, Bootstrap\nChallenges\n\nAPI Integration\nBasing recommendations just on gender and age is always going to be stereotypical, but by combining with previous viewing history, location and social media trends it could be really predictive.\n\nAccomplishments that we're proud of\n\nEmotion detection\nIntegration with Sky data sets\n\nWhat we learned\n\nWhen you combine new technologies in novel ways - you can deliver 10x improvements\n\nWhat's next for SelfieTV\n\nSmartTV version \nData Analysis for TV Producers\n\n",
        "hackathon_id": "disrupteu2015",
        "winner": false
    },
    {
        "description": "\nAim and Inspiration\n\nWe wanted to make a platform that local hobbyists could use to become entrepreneurs.\nWe thought that clover was the perfect platform for this as it could give people exposure to local businesses that could sell products to existing customers of the shop.\nWe think this is great for merchants as it allows them to offer interesting products that the big chains can't and it's great for local producers as it let's them make money doing the things they love.\n\nHow we built it:\n\nAn android application for local hobbyist to list their products to merchants in their local area, this was created using the ionic framework.\nA backend system written in nodejs to store products.\nA clover application for merchants to browse products in their area.\n\nChallenges we ran into\n\nNative code in ionic was tricky. We tried to avoid this but it was necessary as it allowed photo uploads from mobile.\nSpatial geo location got us into a lot of problems as the mongodb server and client versions differed greatly machine to machine.\n\nAccomplishments that we're proud of\n\nRobust, scalable API backend in Node.js.\nVast amounts of learning with using Ionic framework for the first time.\nUsing the clover platform for the first time - We loved it!\n\nWhat's next for Zan\n\nLooking to implement some real time context sensitive functionality using Donky to enable fluid communication between merchant and artisan.\nDo real live customer feedback sessions - applying lean principles to gather feedback on the product and improve accordingly\n\n",
        "hackathon_id": "disrupteu2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nruby-on-railsrubyjavascriptionicangular.jsgithubherokuhtml5csswilliam-hill-api\n",
        "hackathon_id": "disrupteu2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe new modes of communication offered by donky allowing you to chat between mobile apps, push notifications to other players and restart the game via interstitial messaging. All of these can be used to enhance and augment the geocashing treasure hunt game sweeping the nation. At present it is difficult for a team to separate and remain in contact during the search.   \nWhat it does\nThis uses real-world knowledge of a\u00a0geographic location  to find a number of virtual windmills with the help of a phone, in app communication, live purchase of clues & the interaction with team members using\u00a0in app chat, push notification and interstitial messages. \nHow I built it\nI generated an idea, a concept thrashed out the detail and started on the design.\nChallenges I ran into\nI didn't have enough time, people, energy to continue\nAccomplishments that I'm proud of\nI didn't like the national trust treasure hunt because it was very difficult to find the answers, with this you can buy clues and also you can role play for that extra novelty and fun element.\nWhat I learned\nI learned that these functions push notification, in game chat, interstitial pop ups tor cross selling can be achieved easily from one donky api which is salute able. \nWhat's next for Don Quixote A Geocaching Windmill Quest.\ufffd\u00a0\nTry to get Business angels to see what a very, very viable prospect  Don Quixote A Geocaching Windmill Quest really, really is and promote a new feel good outdoor game for tech savvy geogeek squad.\n",
        "hackathon_id": "disrupteu2015",
        "winner": false
    },
    {
        "description": "\nFact: There are two kinds of people in the world. Morning people and normal people!\nOn behalf of normal people everywhere we\u2019ve built IncentivRise; The Alarm Clock that frightens you out of bed with the threat of professional, social, or financial ruin.\nCurrently, you\u2019re able to choose from either an embarrassing email sent to your Boss, an SMS sent to a mate asking for top-cover, courtesy of Trillo, or a big charitable donation, but we have plans for many additional incentives. \nRight now it\u2019s web-based and works alongside your phone\u2019s built-in alarm.  In another 24 hours we\u2019d have it in a native App; integrating audio and text notifications.\nWe\u2019ve already identified a number of monetisation opportunities, amongst them expanding the ecosystem of incentives and integrating eCommerce features such as automated bets through William Hill and purchasing random items from Amazon. \nWe hope everybody enjoys using IncentivRise. Where every day starts with avoiding disaster!\n",
        "hackathon_id": "disrupteu2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe power of Clover API.\nWhat it does\nThe application takes advantage of the location services provided by your phone and the powerful Clover API to notify you about shops/retail/restaurants that are in your vicinity and offer discounted items. The great thing is it does all of this in the background based on your preferences!\nHow we built it\nOur work consisted of two main parts. Mobile app and REST API. Rest API is built using Nodejs and MongoDB. Mobile app for DealOd is built with React Native which is  recent project by Facebook for building mobile applications using Javascript.\nChallenges we ran into\nInitially we tried building the app with Esris' API but figured it would be a bit of an overkill due to it's extensiveness. We decided to set up a small database of our own with only the basic data needed to store the relevant data.\nAccomplishments that we're proud of\nWe built the app to be very independent and rely mostly on Clovers' API and their customers.\nWhat we learned\nIt is really difficult to stay focused 20h with a hangover...\nWhat's next for DealOd\nProfit!\n",
        "hackathon_id": "disrupteu2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nEvery time we decide to plan a trip we need to lookup through several different blogs, talk to people that already been to places, and we usually waste a lot of time.\nWhat it does\nIt facilitates the planning of your trip in a fun way.\nHow I built it\nIt was built using a Node.JS server that communicates with Sabre APIs, Yelp!, Google APIs and with our Android application.\nChallenges I ran into\nPerformance during the fetch of several API's. We fixed that pre-caching our data.\nAccomplishments that I'm proud of\nWe almost finished the entire app. It was the most amazing app we've done in a 24-hour hackathon.\nWhat I learned\nWe've learned how to use ES6 generators and new APIs\nWhat's next for Travll\nBuild it into a successful app. We plan to publish in the stores.\n",
        "hackathon_id": "destinationhack-brasil",
        "winner": true
    },
    {
        "description": "\nA id\u00e9ia\nO GOTTAGUIDE? \u00e9 uma plataforma Web Mobile destinada a oferecer servi\u00e7os de acolhimento ao passageiro comprador online mediante um cadastro de servi\u00e7os de guia tur\u00edstico e demais produtos de receptivo, incluindo organizadores de eventos, ag\u00eancias de viagens, empresas de receptivo e demais stakeholders.\nAPIs utilizadas:\nGeo Search\nGeo Autocomplete\n",
        "hackathon_id": "destinationhack-brasil",
        "winner": true
    },
    {
        "description": "\nInspiration\nAn\u00e1lisar cen\u00e1rios futuros do mercado de viagens.\nWhat it does\nAn\u00e1lisa, qualifica e apresenta indicadores futuros para viagens. Uma das primeiras an\u00e1lises do sistema \u00e9 para eventos, com base em uma lista de participantes ou conectado a um sistema de eventos o TravelAnalytics an\u00e1lisa os participantes, qualifica origens, pesquisa todos os destinos com menor custo dos proximos 180 dias.\nO resultado dessa an\u00e1lise \u00e9 uma matriz de valores, destinos e datas. O TravelAnalytics apresenta um dashbord com os principais destinos do evento com valores do aereo e possiv\u00e9is datas.\nChallenges I ran into\nUm dos principais desafios \u00e9 conseguir gerar uma matriz de possibilitades, por exemplo, em um cen\u00e1rio de poss\u00edveis 10 destinos, 10 origens e 180 dias, obtemos pelo menos 10x10x180 = 18.000 mil resultados por evento. Gerar esses resultados e qualificar de forma r\u00e1pida e apresentar de forma simples ao usu\u00e1rio foi um dos principais desafios.\nOutro desafio foi pivotar a ideia inicial, como o projeto todo consiste em an\u00e1lises de cen\u00e1rios futuros para viagens, escolher qual a primeira an\u00e1lise e qual o impacto dela para o projeto foi desafiador.\nAccomplishments that I'm proud of\nCom poucos cliques o usu\u00e1rio consegue ter uma boa ideia de proje\u00e7\u00e3o de custos de forma r\u00e1pida e simples, sem o TravelAnalytics realizar essa proje\u00e7\u00e3o de custos levaria um tempo consider\u00e1vel.\nWhat I learned\nAprendemos que as possibilidades de an\u00e1lises com APIs inteligentes de previs\u00e3o de futuro tendem ao infinito, podemos evoluir com proje\u00e7\u00f5es de outros custos como por exemplo hospedagem, taxis e alimenta\u00e7\u00e3o.\nTomar decis\u00f5es com indicadores torna o processo decis\u00f3rio mais f\u00e1cil e consistente, nos dias de hoje quanto mais base temos para tomar decis\u00f5es, mas chances de sucesso.\nWhat's next for TravelAnalytics\n\nCriar um ambiente para an\u00e1lise de todo comportamento futuro de viagens;\nSensores para an\u00e1lise em tempo real de melhor compra;\nGoogle Analytics do mercado de turismo;\n\n",
        "hackathon_id": "destinationhack-brasil",
        "winner": true
    },
    {
        "description": "\nO aspecto social \u00e9 uma dimens\u00e3o muito importante na cria\u00e7\u00e3o de uma experi\u00eancia positiva de viagem. Exceto com alguns grupos espec\u00edficos, n\u00e3o existem muitas oportunidades para conhecer outras pessoas que tenham os mesmos interesses durante as viagens. SmartMatch \u00e9 uma solu\u00e7\u00e3o web e mobile que ajuda na busca de pessoas que querem viajar e que compartilham os mesmos interesses, auxilia na agrega\u00e7\u00e3o dessas pessoas e na compra de servi\u00e7os tur\u00edsticos com objetivo de criar comunidades por afinidade.\nO projeto at\u00e9 o instante mostra as potencialidades, mas precisa de bastante trabalho para otimizar as funcionalidades e bastante contato com os futuros clientes de SmartMatch para alinhar os interesses e para criar ainda mais valor para todos os parceiros.\n",
        "hackathon_id": "destinationhack-brasil",
        "winner": false
    },
    {
        "description": "\nInspiration\nAjudar a ind\u00fastria de viagem a inovar e a se conectar com os viajantes de maneira mais personalizada e emocional.\nWhat it does\nFornece as empresas da industria de viagem uma ferramenta que ajuda os viajantes a encontrar o melhor destino para sua pr\u00f3xima viagem de acordo com o estilo de viagem buscado e seu or\u00e7amento.\nHow I built it\nUsamos PHP e integramos com 5 APIs da Sabre mais uma API externa.\nChallenges I ran into\nA falta de tempo e problemas com a internet foram nossos maiores desafio.\nAccomplishments that I'm proud of\nTer constru\u00eddo uma solu\u00e7\u00e3o inovadora que funciona efetivamente e j\u00e1 pode ser usada\nWhat I learned\nComo construir produtos de valor em parceria com a Sabre\nWhat's next for wr2go\nOficializar uma parceria com a Sabre para lan\u00e7ar um projeto piloto em conjunto.\n",
        "hackathon_id": "destinationhack-brasil",
        "winner": false
    },
    {
        "description": "\nInspiration\nO Social Trip \u00e9 um site que tem o objetivo Inspirar destinos de viagens a partir da integra\u00e7\u00e3o com os \u201clikes/curtir\u201d do usu\u00e1rio na rede social Facebook.\nWhat it does\nAo entrar no site, o usu\u00e1rio deve clicar no bot\u00e3o Facebook e logar com a sua conta. Ele solicitar\u00e1 permiss\u00e3o para acessar e... Pronto!!! Com um click, o perfil de viajante do usu\u00e1rio \u00e9 tra\u00e7ado e s\u00e3o sugeridos diversos destinos de viagens que tem a ver com as prefer\u00eancias do usu\u00e1rio!\nAl\u00e9m disso, clicando em Detalhes, o usu\u00e1rio ter\u00e1 todas as informa\u00e7\u00f5es sobre voos e passagens para aquela localidade\nHow I built it\nTecnologias/Ferramentas/APIs: Node JS, MongoDB, GIT, OpenShift, API de integra\u00e7\u00e3o com o Facebook, API de integra\u00e7\u00e3o com o Sabre.\nChallenges I ran into\nIntegra\u00e7\u00e3o com o Facebook e com a API Sabre\nWhat I learned\nIntegra\u00e7\u00e3o com o Facebook e com a API Sabre\nAPIs Sabre utilizadas\nLead Price Calendar para tra\u00e7ar roteiros entre aeroportos.\nBusca de aeroportos pr\u00f3ximos a localiza\u00e7\u00e3o atual do usu\u00e1rio.\nBuscar aeroportos nas cidades que a aplica\u00e7\u00e3o sugere como destino. \nWhat's next for Social Trip\nImplementa\u00e7\u00e3o de sistema de compras de passagens.\nMelhorar algoritmo para tra\u00e7ar o perfil do usu\u00e1rio a partir dos dados encontrados no facebook.\n",
        "hackathon_id": "destinationhack-brasil",
        "winner": false
    },
    {
        "description": "\nLink da Apresenta\u00e7\u00e3o\nhttps://prezi.com/7kiol0u9dryb/flight/\nInspira\u00e7\u00e3o\n\nReunir pessoas desconhecidas com interesses em comum, resgatando o conceito de caravana.\nEstimular turistas a conhecerem novos lugares\nSimplificar a busca por viagens e eventos\nFacilitar o planejamento da viagem na palma da m\u00e3o\n\nO que foi feito\n\nAplicativo m\u00f3vel (prot\u00f3tipo funcional)\nPlataforma web responsiva (prot\u00f3tipo funcional)\n\nComo foi feito\nUtilizamos as seguintes API's:\nGET - Geo Autocomplete (beta)\nListagem de Cidades e Aeroportos para selecionar os locais de origem e destino\nGET - InstaFlights Search\nBusca as op\u00e7\u00f5es de voos dispon\u00edveis de acordo com a origem, destino e per\u00edodos informados\nSOAP - Hotel Availability\nListagem de Hoteis dispon\u00edveis de acordo a cidade e per\u00edodo informados\nSOAP - Hotel Property Description\nUtilizamos para buscar as atra\u00e7\u00f5es nos arredores dos hot\u00e9is (em KM) e os termos para o cancelamento da reserva, forma de pagamento aceitas no hotel\nSOAP - Book Hotel Reservation\nEfetua a reserva do hotel\nDesafios\nConhecer as apis certas para serem consumidas e planejar o design da aplica\u00e7\u00e3o a fim de criar uma nova experi\u00eancia para o usu\u00e1rio\nLi\u00e7\u00f5es aprendidas\n\nAprender a trabalhar com as APIs Sabre Dev Studio, um rico ambiente de documenta\u00e7\u00e3o, ao mesmo tempo criar uma plataforma/app para organiza\u00e7\u00e3o de caravanas\nInteragir com o time t\u00e9cnico e de business, fomentando o modelo de neg\u00f3cio\n\nPr\u00f3ximos passos do CaraVamo!\n\nEstruturar a camada de backend/servi\u00e7os para facilitar a integra\u00e7\u00e3o de novos players de neg\u00f3cio\nCriar aplicativo nativo iOS, Android e Windows Phone\nCriar segmentos diferentes entre caravanas tem\u00e1ticas, como por exemplo grupos de terceira idade, formaturas em geral e eventos tem\u00e1ticos\nElaborar um plano de neg\u00f3cios, voltado para parceria com ag\u00eancias de viagem\n\n",
        "hackathon_id": "destinationhack-brasil",
        "winner": false
    },
    {
        "description": "\nInspiration\nTo know why the 5 star hotels do not reduce public rates.\nWhat it does\nReduced rates without depreciate value.\nHow I built it\nChallenges I ran into\nAccomplishments that I'm proud of\nAccording with Accor, Hilton and Windsor Hotels.\nWhat I learned\nWhat's next for TourStore\nConnected APIs with all 5 star hotels.\n",
        "hackathon_id": "destinationhack-brasil",
        "winner": false
    },
    {
        "description": "\nInspiration Dificuldade em organizar encontros paralelos dentro de um evento\nWhat it does Cria\u00e7\u00e3o de uma plataforma para organiza\u00e7\u00e3o de eventos paralelos\nHow I built it Foi programado em php, html5, css, mysql e js.\nChallenges I ran into N\u00e3o tinhamos desenvolvedor\nAccomplishments that I'm proud of conseguimos entregar um produto que acreditamos ser vi\u00e1vel no prazo\nWhat I learned Aprendemos sobre os API\u00b4s sabre, novos contatos e desenvolvimento de um novo produto em pouco tempo.\nWhat's next for MEETTZ Receeber feedback. A partir disso ver a viabilidade real do produto e potencialmente seguir com o projeto.\n",
        "hackathon_id": "destinationhack-brasil",
        "winner": false
    },
    {
        "description": "\nAPIS Usadas:\n\nAPI : /v1/lists/top/destinations\nFinds the top booked leisure destinations from a given origin and returns them in ascending rank order.*\nAPI Travel Theme Lookup /v1/lists/supported/shop/themes *\nAPI Theme Airport Lookup v1/lists/supported/shop/themes/:theme *\n\nLinks:\n\nAplicativo IOS:* https://www.youtube.com/watch?v=x8obivREfGA\nDashboard web para ag\u00eancias de turismo: * https://www.youtube.com/watch?v=x8obivREfGA\n\n",
        "hackathon_id": "destinationhack-brasil",
        "winner": false
    },
    {
        "description": "\nInspiration\nI've worked for most of the top 10 corporate travel agencies in Brazil. At every single one, the main source of fraud, under-billing and friction with clients was the emergency hotlines.\nWhat it does\nThis is a SaaS style application for incident management.\nHow I built it\nI used Python, Django and the Django-Jet app.\nChallenges I ran into\nThe Sabre SOAP API doesn't work out of the box with popular Python SOAP clients. I've ended up using low level HTTP requests.\nAccomplishments that I'm proud of\nI've finished several hours before the deadline.\nWhat I learned\nI hate SOAP.\nWhat's next for cremer\nWho knows?\n",
        "hackathon_id": "destinationhack-brasil",
        "winner": false
    },
    {
        "description": "\nInspiration\nOur team had previously built a game, Tank Anarchy (tankanarchy.herokuapp.com), using the same engine of node.js and socket.io in a top-down arena game. While brainstorming, we realized the potential awesomeness in combining tower defense with top-down shooter, and thus Obsidio was born.\nWhat it does\nObsidio is a top-down shooter in its core, with a WASD-controlled player who faces in the direction of the mouse cursor and fires a bullet when the left mouse button is clicked. Players, in the interest of killing other players, collect resources known as Praesidia and use these resources for constructs such as turrets and walls. These constructs can be placed anywhere within the world, and it's up to the player to discover the most effective combination of constructs to create an impenetrable base or to wreak havoc on other bases!\nHow we built it\nWe built this game using the fundamental pieces of our previous game, Tank Anarchy. The game utilizes node.js and socket.io for the physics engine and the multiplayer framework, HTML5 Canvases and CSS for the graphics, and NPM, Gulp, and Bower for project management.\nChallenges we ran into\nWe generally did not encounter large hurdles aside from the initial debate about whether the players should be people or floating vehicles (???). However, as in any coding project, we encountered bugs by the truckload, requiring an inordinate amount of console.logs and error messages. We also encountered sleepiness and failing cognition as it got later (or earlier), taking a large chunk out of potential coding time.\nAccomplishments that we're proud of\nWe are proud of everything we've accomplished! The project looks good, the game works well, and we aren't in too bad of a shape. Our code is also clean and modular enough to support the addition of new features easily, and isn't (too) full of hacks and workarounds (even though it's a hackathon!).\nWhat we learned\nWe learned to work together, to streamline the development process, and of course to always break a switch case!\nWhat's next for Obsidio\nWe will continue development for sure - there are many ideas just waiting to be implemented, and maybe we can even pull in a graphic designer to design some better-looking sprites. Keep an eye out for our progress!\n",
        "hackathon_id": "def-hacks",
        "winner": true
    },
    {
        "description": "\nInspiration\nI've been wanting to work with the Twilio API for a bit now and figured this was a good way to do so.\nWhat it does\nIt is an online web scheduler. Users can sign up, add events, and view their calendar. They have the option to verify their phone number and add content to their schedule.\nHow I built it\nI used the Python web framework web.py, which was developed by Aaron Swartz but is no longer in active development. I enjoy this framework because it's very simplistic and yet can do much of the functionality I need.\nI also used the Twilio API to allow users to update their calendars over text messages.\nChallenges I ran into\nI couldn't decide how to do the calendar. I considered using Google Calendar, but the authentication process was a bit difficult to follow, and I'm not a huge fan of Google Calendar anyway. I ended up just creating an html table for the calendar and storing events in a MySQL database.\nAccomplishments that I'm proud of\nCreating a verification process through text messages, and having text messages interact with the site.\nWhat I learned\nThe basics of the Twilio API and how to work in real-time with others on GitHub.\nWhat's next for Schedler\nYusuf and I are considering making it into a site that will be accessible to the public. We believe people will enjoy its simplicity while having useful features like the text messaging to update the calendar.\n",
        "hackathon_id": "def-hacks",
        "winner": true
    },
    {
        "description": "\nBuilt With\npythonhtml5javascript\n",
        "hackathon_id": "def-hacks",
        "winner": true
    },
    {
        "description": "\nSame\n",
        "hackathon_id": "def-hacks",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascripthtml5css3php\n",
        "hackathon_id": "def-hacks",
        "winner": true
    },
    {
        "description": "\nBuilt With\nthree.jssocket.io\n",
        "hackathon_id": "def-hacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtml5css3flaskpythonsqlalchemy\n",
        "hackathon_id": "def-hacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtml5cssjavascriptjqueryjson\n",
        "hackathon_id": "def-hacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\nmicrosoft-apijavaazure\n",
        "hackathon_id": "def-hacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nI wanted to find out more about my fellow hackers.\nWhat it does\nShows you the names and information of fellow hackers.\nHow I built it\nI used HTML, CSS and JavaScript\nChallenges I ran into\nCSS Padding\nAccomplishments that I'm proud of\nI completed it in 5 hours.\nWhat I learned\nCSS Padding\nWhat's next for Students of Def Hacks\nMore information about the students.\n",
        "hackathon_id": "def-hacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\nswiftsprite-kit\n",
        "hackathon_id": "def-hacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nMy partner abandoned me 2 hours from submission, so I made something that reflected how she made me feel when she texted \"my mom said I can't go today\" at 7:40\nWhat it does\nBasically, when you tap on the \"smiling pile of poo\" image, it sends me an email with a poop emoji, if you tap \"poop,\" it sends me a text.\nHow I built it\nI had zero notice or time and my former partner had all the code that we made for our other idea on her computer, so I used kinetise, a no-code app-building website.\nChallenges I ran into\nWell, that's an obvious one\nAccomplishments that I'm proud of\nStaying here without my partner\nWhat I learned\nTo not trust anyone, and some swift and how smartphones detect motion\nWhat's next for Upoo\nI am never going to use this, but I will, going forward, work on my original idea of making an app that screams when you shake your phone.\n",
        "hackathon_id": "def-hacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaxml\n",
        "hackathon_id": "def-hacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe want to help people suffering from dementia.\nWhat it does\nIt helps people with dementia and their caregivers help in their grocery.\nHow I built it\nWe built it using java and mySQL\nChallenges I ran into\nWe had a difficulty in connecting to the database\nAccomplishments that I'm proud of\nWe created a system to serve people\nWhat I learned\nMany new things.\nWhat's next for Grocery management system\nOnline grocery management system.\n",
        "hackathon_id": "dementiahacktoronto2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nComing up with a product that utilized recent advances in the field of  Computer Vision and our expertise in Google Glass Augmented Reality(AR) for improving lives of people with Dementia. \nWhat it does\nThe patients affected by mild dementia and Alzheimer find difficulty in recalling the names, faces of people, the current time, and the location. Our Augmented Reality based solution helps patients to identify faces of people they have met in past by tagging it with the location and the time.\nHow I built it\nWe used Snapdragon Qualcomm Face Recognition SDK for developing the face recognition application. \nAdd a person,update a person's pic, identify a person, Android based phone location and current date and time constantly updating.\nChallenges I ran into\nFinding  the correct library for facial recognition and developing the infrastructure.\nSetting up the facial recognition system utilizing the phone\u2019s hardware was challenging.\nAccomplishments that I'm proud of\nHaving a great team.\nMaking the facial recognition system working and implementing core features.\nWhat I learned\nLearned a lot about dementia patient's life experience\nFocused approach on building core features is really helpful in getting things done quickly rather than focusing on add-on features.\n",
        "hackathon_id": "dementiahacktoronto2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonflaskhtmlcssandroidmysql\n",
        "hackathon_id": "dementiahacktoronto2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nparseswiftc\n",
        "hackathon_id": "dementiahacktoronto2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\ndjangobootstrapnginxlinuxjavascripthtml5jquerysqlite\n",
        "hackathon_id": "dementiahacktoronto2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nDespite the continued growth in the prevalence of dementia, there continues to be a dearth of tools available to help patients cope with their diagnosis. Specifically at an early stage of the disease, when patients are still able to develop coping strategies to manage challenges such as memory loss, many patients have resorted to using non-optimized organizational applications (including native calendar and to-do-list applications) to meet their unique needs. As the adoption of technology becomes more and more pervasive, especially in the older populations, there continues to be a growing need for technology solutions to help fill this gap in care.\nWhat it does\nMoneta is a personal assistant web application specifically designed to help patients with dementia manage their daily challenges with memory loss.\nKey Features for Users\n Schedule - set a daily routine, including unique user-driven tasks and those auto-populated based on personal and health information; view daily and monthly schedules to keep your life organized \n Complete - set reminders and mark tasks for completion to ensure that all activities started are completed appropriately; option to notify caregivers when important tasks have not yet completed \n Connect - build profiles to record personal information about family members and other important individuals; option to grant specific access to family members or other members in the circle of care \n Manage - take charge of your medical care, storing up-to-date medication records and using built in reminders to make sure you attend appointments and take medications on time \nKey Features for Caregivers\n Assist - caregivers can schedule specific tasks on behalf of the user, such as reminders for family dinners or  important doctor\u2019s appointments \n Adapt - caregivers can adjust their level of intervention depending on where their loved one is in the disease progression \nImportant Next Steps\n Application Completion - flush out our current prototype to develop a fully-functioning ready-for-market application! \n End-User Testing - work directly with newly diagnosed dementia patients to identify key areas of strength and opportunities for improvement and streamlining \n Pilot and Research Study - work with community Geriatricians and Care of the Elderly Physicians to identify ideal candidates for participation in clinical research, using evidence-based protocols, to establish and quantify the effectiveness of the application \n Multi-Platform Development - expand our application to iOS and Android platforms to maximize adoption from end-users \n",
        "hackathon_id": "dementiahacktoronto2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nPatients with early and mid stage dementia are always under a lot of stimuli. Rather than have technology persuade them to accomplish tasks individually with numerous impulsive reminders a day they may not have apathy for, we encourage them to review their day plan at key moments in their time: eating food!\nWe also wanted a connection for passive tracking of patient condition. We understand the bias that can happen with active engagement from caregiver and as such we wanted to know how much passive data can be made into informative analytics.\nWhat it does\nAt proposed breakfast, lunch and dinner times, the patient is prompted a button on their lock screen page to engage with the App. The landing page of the app displays all the events within the day.\nAs a calender event scheduler, the app engages with the current event in place. At the time of an event, the app opens up options to interact in the event the patient feels they are feeling out of the situation and requires a contact with a representative of the event, or if the event is going well they would like to record key moments by adding photos (and comments). Reviewing the past events is possible with the app, highlighting the photos and comments recorded during the event. \nEvents are limited to 5 additional instances beyond the important daily meals. Too many activities a time would create too much stimuli, reducing the apathy of the patient to respond meaningfully to the situation. By restricting the amount of stimuli, we hope the patients can be relief of stress\nIn accordance to app usage by the patient, the data is given to the caregiver or family member to be able to assess the condition of the patient. From frequency of use and accuracy to itinerary recall, the data connects to useful information to passively monitor their behaviour. The caregiver or family member can also set calendar events for the patients from their web terminal.\nHow We built it\nThe back end comprises of awesome Mongodb followed by suprememe streamlined android SDK, Heroku and GitHub to support the visuals. Google cloud messages / drive was the main communication strategy base and file sharing between designers and developers. The design implementation required dashingly creative illustrator images with quick iterative mock ups on paper.\nChallenges We ran into\nCommon terms for get and pull of names was a challenge because of our lack of clarity in naming conventions. We also ran into conflicting patient experience between nurses, dementia patients and mentor reviews regarding our initial idea that we spent a bit more time reviewing our idea and not implementing the features and drawing final mock ups.\nAccomplishments that We are proud of\nWe came together as a team, working in conjunction of others developing the tools to get the web app and Android App working together. We came together to work on connecting information and sharing it between caregiver / family members to patients.\nWe also built on a full party team, each member involved and active in providing feedback for each other to develop the cross linking system.\nWhat We learned\nWorking and effective communication is key to us working effectively, contingently and having a blast of a time. We definitely would love to do more hackathons together and expanding our development capabilities.\nWhat's next for Okay\nWe want to grow our app so anyone can help the patient develop schedules so they don\u2019t have to do it themselves if it is cumbersome. We also want to be able to share stories and images with other people (thinking of fb) from our app directly.\nWe also want to develop a map path system for patients when they don\u2019t have events for the day and want to go for a social event nearby to make use of their time.\nTry it out URL is the link to our repo as our file was > 55mb. Apologies (as Android.zip was 51mb)\n",
        "hackathon_id": "dementiahacktoronto2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtml5flaskpythonjekyllsassjquery\n",
        "hackathon_id": "dementiahacktoronto2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavajavascriptjqueryjsonlinuxmysqlphpphpmyadminhtml5bootstrapmaclampcss3androidgradle\n",
        "hackathon_id": "dementiahacktoronto2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nrubyjavascripthtml5\n",
        "hackathon_id": "dementiahacktoronto2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nswift\n",
        "hackathon_id": "dementiahacktoronto2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nExisting and outdated sensory therapies\nWhat it does\nCreates a multi-sensory environment to help the individual with dementia relax\nHow I built it\nWith libraries, APIs, and light blue bean hardware.\nChallenges I ran into\nAPI calls, and hardware communication.\nAccomplishments that I'm proud of\nRebuilt library to access API\nWhat I learned\nFitbit API/Libraries, patience, node.js hardware communication.\nWhat's next for Isabella\nVersion 2.0 (additional features)\n",
        "hackathon_id": "dementiahacktoronto2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\narduino\n",
        "hackathon_id": "dementiahacktoronto2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nA friend's 98 year old ailing mother and her family who were remote but wanted richer remote contact than phone calls.\nWhat it does\nAllows family and friends to contact the diagnosed individual via TV video chat without the individual having to engage in any way with the TV or a computer. Many diagnosed individuals cannot operate a computer or even a remote properly and this system relives them from any action to participate in a TV base video chat.which is managed by the calling family member from a computer or mobile device.\nHow I built it\nIt is not built yet. A a very basic prototype was tested years ago using Python and Windows 7 but was cumbersome, unreliable, expensive and technologically complicated. Now I hope to use DementiaHack as the event to re-engage with the idea and implement this capability using linux and webRTC for ease of use and operation on a cost effective small computer. While this is a new effort, notes and experience from my past work combined with what I have learned about webRTC give me a blueprint to code the key elements which are a C++ program integrated with standard webRTC JS \nChallenges I ran into\nComplexity as TVs and computers do not mix well. Smart TVs don't help as they are of limited computing functionality and manufacturer specific walled gardens. The challenges of the DementiaHack work will be to build a interface C++ program that bridges between a TV and webRTC.\nAccomplishments that I'm proud of\nGot a test prototype working and experienced the positive benefits for the users.\nWhat I learned\nLots of small details and technical requirements many that frustrate and each has unique challenges that must be solved \"God (and technical solutions) are in the details\"...innovation is hard work\nWhat's next for Video Visit\nTest code the concept to a linux, C++, WebRTC base on a small computer then beta test and if successful, evaluation, hopefully in cooperation with the Alzheimer Society or other interested groups or parties\nLearn More\nYou can learn more about this project by viewing the full project description in the attached zip file\n",
        "hackathon_id": "dementiahacktoronto2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nrubyhtmljavascriptcssshellcoffeescriptelasticsearchnode.jsruby-on-rails\n",
        "hackathon_id": "dementiahacktoronto2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nDementia is one of the largest disorders in the world, and because of that we can find many online and offline tools to help our patients. There are apps, websites, games, all sorts of interfaces, amazing designs, beautiful charts, but they are all getting something wrong about this. When you are dealing with a dementia patient, you cannot add complexity, and this is why I created AIDA.\nWhat it does\nAIDA offers you the ability to set up events, reminders and daily routines for a patient experiencing Dementia, delivering them a personally tailored message every morning letting them know what to do and what's coming!\nYou would sign up for an account on the website, add reminders and all the medicine your patient needs to take. AIDA processes this information, and send them a text message every morning reminding them those things and also message them at the time to take a pill.\ne.g. \"Today is November 8, 2015. Your clean shirts are in the top drawer in the closet, change your tshirt. Food is in the fridge, microwave it for 3 minutes before eating.\"\nHow I built it\nI wrote the entire code in PHP, and using a mySQL database. You would signup online, your information gets stored in the database, and using cron jobs, the data is processed every hour to check which users have a reminder in the next hour. Also, every morning at 7AM, a cron job runs that scans all reminders for all users. Then using a free text messaging engine (Textbelt), the server sends text messages.\nChallenges I ran into\nDealing with the cron jobs was the hardest part since I had no experience with them whatsoever. Tried many different approaches (shell command using PHP, etc.), but finally I was able to set it up through my cPanel.\nAccomplishments that I'm proud of\nWas able to finish this project alone in 36 hours!\nWhat I learned\nI learned a lot about mySQL and using it along with PHP. Cron jobs were another area I improved on since I almost had no knowledge about. I also learned many heart breaking facts about Dementia!\nWhat's next for AIDA\nAIDA will get funded for sure; whether it is by a sponsor at this event or my school (McMaster University). I have talked to a person in charge of http://spectrum.mcmaster.ca (McMaster Student Entrepreneurship Association), and he has assured me that he will be able to get funding from the university for this project to expand as a free service that might be monetized using onscreen ads on the website.\n",
        "hackathon_id": "dementiahacktoronto2015",
        "winner": false
    },
    {
        "description": "\nYou can use this today.\nWe use existing technology already in use by the target demographic.\n",
        "hackathon_id": "dementiahacktoronto2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptcsshtmlshell\n",
        "hackathon_id": "dementiahacktoronto2015",
        "winner": false
    },
    {
        "description": "\nCentraCare\nInspiration\nWe built this at DementiaHacks Toronto 2015. The central theme was applying tech to all areas of dementia care and research including support for clinicians, institutions, persons with dementia, and researchers.\nWhat it does\nOur platform helps generate an electronic record of a person with dementia's social and medical history. This record will include information such as hobbies, interests, favorite music, medications, and degree of mobility. Using this information, new caregivers or members involved in the circle of care can seamlessly access everything they need to know to provide care to the person with dementia. \nWhy is this important? Imagine you had to hand over the care of a loved one with dementia to a new personal support worker (PSW). Later that night, you realized you forgot to tell the PSW about how agitated your father with dementia can become and how very specific songs can calm him down. Alternatively, you're pestered regularly by your siblings about how your father is doing. By using our platform, you can ensure that all necessary information is transferred between relevant parties, thereby cutting out hours and hours of your time that would typically go into explaining these details. As an added benefit, caregivers can take a look at the information you gathered and use them to start a conversation - maybe they can ask your loved one about a particular hobby. \nSo what makes us different?\nLong-term care homes gather similar information during the intake process, but this happens once your loved one has late stage dementia and you have less than a week to gather information and send your loved one to an institution. Our goal is to proactively start this information translation process right at the diagnosis.\nNot only will you gather richer information, but your loved one can be an active participant in the process of designing their own care. Unlike EHRs and clinical patient summaries, we focus on translating the social aspects of the person\u2019s life, to provide the most personalized medical experience for the person with dementia. After an extensive search of the literature, we found that there is no tool that reaches our application\u2019s capacity. Finally, we\u2019re focused on providing a comprehensive, and holistic overview of care. We selected the questions in our record system by reviewing an extensive body of research, including initiatives spearheaded by the Ontario Ministry of Health. This positions us to provide richer, and more trustworthy data than what a family might record in a word document or notebook. \nHow we built it\nWe mocked up everything on paper and HTML/CSS/JS. Afterwards we built it with the full stack\nChallenges we ran into\nWe were really focused on building a practical solution that would help caregivers, so we spent a ton of time looking at research evidence and conducting market research. Our team had a lot of disagreements during the ideation stage as a result, but we came through in the end.\nAccomplishments that I'm proud of\nWhat I learned\nA lot about dementia. I think my whole team now has a stronger understanding of the challenges found across the spectrum of individuals involved with persons who have this condition. It would be great to see where our ideas can go or whether we can come up with anything else that can support care for persons with dementia. \nWhat's next for CentraCare\nDemo at DementiaHacks! \n",
        "hackathon_id": "dementiahacktoronto2015",
        "winner": false
    },
    {
        "description": "\nDementia Talk acts as a companion in those tough moments and works to empower caregivers to better manage behaviours happening in the room. This app makes it easier to monitor behavioral changes over time, educate caregivers on new behavior management tips, and easily communicate information to other family members and physicians.\nOur team met through another hackathon last year and we got along well and supported the same cause.\nWaleed Dogar and Lawrence Martin were peers in school together and now both work full time as Software Developers.\nEinat Danieli and Dunstan Pushpakumar work at Mount Sinai Hospital as researchers. They research Mental health issues specifically Dementia. Marco is a healthcare consultant and was also a dementia caregiver. \nOur team carries a very positive energy and comes from a diverse background. By combining our superpowers, we are here to change the world for the better, one app at a time. \n",
        "hackathon_id": "dementiahacktoronto2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe all know someone who has suffered from dementia; this disease is awful and will most likely affect us or someone we know later in life as well. Our inspiration is to help others in the present and lay the foundation for future progress. Satisfaction gained from receiving rewards is a thing of the past millennium; this millennium, it's all about collaboration and giving rewards. Giving leads to the greatest fulfilment and is arguably the most purposeful contribution of human existence. \nWhat it does?\nWe are not invention, we are innovation; we have used beacon technology, which already exists, but found a new, practical use for it. Beacons (or simply sensors) allow for micro-location analysis which tracks a patients habits and behaviour inside their homes and notifies their caregiver who is in a remote location.\nHow we built it?\niOS application using Estimote beacons.\nChallenges we ran into?\nCertain features \u2013 submerging beacons in water to emulate sink/bath tub overflowing.\nAccomplishments that we're proud of!\nWe established a significant pain point between caregivers and patients and we developed a product that alleviates the tension. We are truly happy that our product benefits a cause that is bigger than ourselves!\nWhat we learned?\nWorking together to further a common goal initiates a synergy and synchronicity, which working independently does not, and leads to superior work being done! We each brought in different skills sets and were able to combine them effectively to produce a result that was greater than the sum of its parts! Software engineering is important, but human engineering is a close second \u2013 if not equally important!\nWhat's next for ADore\nTrying to turn our good idea into a GREAT product!!\n",
        "hackathon_id": "dementiahacktoronto2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nnode.jsangular.jsbootstrapapache\n",
        "hackathon_id": "dementiahacktoronto2015",
        "winner": false
    },
    {
        "description": "\nTech Squad Team\nNikita Koren - nikita.koren@gmail.com, mkoren@myseneca.ca\nErik Iglikov - eiglikov@myseneca.ca \nSergey Pestushko - funoneside@hotmail.com\nHlib Kozeko - glebson.mail@gmail.com\nTech Squad Team consists of 4 developers who are interested in improving Healthcare Service of Canada by helping people who suffer from dementia.\nWhen we were on the event in MaRS, we noticed that there is a problem with a comprehension between Health Care and IT areas. As a result, folks from IT are not sure what exactly they need to build and people from Health Care simply do not know about what developers can create using modern technology. That is why we decided that we want to bring these two areas into a dialog in order to improve Health Care industry in a long-term perspective.\nEventually, we came up with an idea of a web platform where folks from IT and Healthcare areas can closely cooperate for the benefit of a community. Basically, an individual who has a problem can post his or her problem on a website or search for a similar problems and find best practices and solutions to it. Meanwhile, developers can suggest and develop accurate solutions for specific problems. Moreover, community can support to solutions of developers by donations into a fund of specific a solution.\nFor the DementiaHack we are going implement the prototype for a forum where people can discuss and share their solutions and problems. Obviously, problems and solutions are going to be separated into different topics in order to help users to navigate through the website.\n",
        "hackathon_id": "dementiahacktoronto2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptrubyhtmlcssruby-on-railsjquerymysqlraspberry-pisensor-infrarojocam\n",
        "hackathon_id": "hackcolima",
        "winner": true
    },
    {
        "description": "\nBuilt With\nandroidphpmysql\n",
        "hackathon_id": "hackcolima",
        "winner": true
    },
    {
        "description": "\nBuilt With\nruby-on-railsjavascriptjavaphotoshopadobe-illustratorcsshtml5\n",
        "hackathon_id": "hackcolima",
        "winner": true
    },
    {
        "description": "\nInspiration\nGran parte de nuestro equipo somos de fuera de la ciudad de Colima y nos inspiramos en personas que como nosotros, desconocemos de diferentes lugares y nos gustar\u00eda saber m\u00e1s.\nWhat it does\nUna aplicaci\u00f3n donde puedes consultar con personas cerca de ti a cerca de diferentes que pudieran surgir cuando est\u00e1s en un lugar que no conoces y necesitas orientaci\u00f3n de personas que conocen el lugar.\nHow I built it\nPensamos en una aplicaci\u00f3n m\u00f3vil y web a la vez, entonces dise\u00f1amos una web app que pudiera correr en cualquiera de \u00e9stas dos plataformas y a la vez interactue con una base de datos mysql.\nChallenges I ran into\nConocer m\u00e1s de Javascript! Y conocer m\u00e1s sobre las API y aprender a usarlas.\nAccomplishments that I'm proud of\nEstamos orgullosos de la manera en que generamos una aplicaci\u00f3n en tan poco tiempo y en como no lo propusimos, si bien no est\u00e1 completamente terminada pero se logr\u00f3 un gran avance.\nWhat I learned\nA usar diferentes herramientas de desarrollo en plataforma web y m\u00f3vil as\u00ed como de dise\u00f1o y muchas aptitudes aprendidas de los compa\u00f1eros con los que pude conocer.\nWhat's next for Pa_Donde\nConcretar todo el desarrollo planeado y adentrarnos al mercado para ser una app a considerar.\n",
        "hackathon_id": "hackcolima",
        "winner": false
    },
    {
        "description": "\nNuestra aplicacion surgio de la necesidad de ayudar a la comunidad y al sistema de taxis de la ciudad de Colima por Tener un servicio mejor organizado y mas eficiente asi mismo como mejorar a calidad de servicio al cliente.\nNuestra aplicacion no tiene fines de lucro y pretende apoyar a la ciudania en general.\nNuestro proyecto consta de una aplicacion y una pagina web en la que los ciudadanos pueden mandar comentarios acerca de mejoras o criticas. Uno de los mas grandes problemas que tuvimos fue, la creacion de la aplicacion m\u00f3vil ya que nos especializamos mas en la pagina web.\nLa mayoria de los integrantes somos de Cd. Guzman y otro de colima por lo que  pretendemos dar seguimiento al proyecto lo mas que podamos.\n",
        "hackathon_id": "hackcolima",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptcsshtml\n",
        "hackathon_id": "hackcolima",
        "winner": false
    },
    {
        "description": "\nInspiraci\u00f3n / Inspiration\nMuchas personas odian estar dando vueltas buscando un lugar para estacionarse.\nPeople hate going around in circles looking for a parking place.\nFunci\u00f3n / What it does\nEsta aplicaci\u00f3n se encarga de notificar a los usuarios sobre alg\u00fan lugar disponible para estacionarse por medio de Google maps.\nThis app notifies users for an available parking spot by using Google Maps\nConstrucci\u00f3n / How we built it\nSe bocet\u00f3 y se hizo una propuesta en digital del dise\u00f1o para la interfaz de la aplicaci\u00f3n usando Photoshop para el dise\u00f1o e Illustrator para los \u00edconos.\nDespu\u00e9s se mont\u00f3 un servidor con servicios web y despu\u00e9s se utilizo un celular simulando un sensor de proximidad y otro celular como cliente. El celular que funciona c\u00f3mo sensor mantiene actualizadas las tablas de la base de datos con los lugares disponibles y el cliente realiza peticiones al servidor para mostrar al usuario cuales son los lugares disponibles.\nFirst, we made an UI for the app in Photoshop for the design and Illustrator for the icons.\nWe built a server and then we used a cellphone as a motion sensor and another one to act as the user. The cellphone working as a motion sensor keeps a database updated with the available spaces while the user sends requests to the server so it can show wich places are free or not.\nRetos inesperados / Challenges we ran into\nLa velocidad del internet, la comunicaci\u00f3n entre los diferentes lenguajes y comunicaci\u00f3n entre dispositivos.\nThe internet speed was tricky, trying to figure out other code languages and the comunication between gadgets.\nLogros alcanzados / Accomplishments that we're proud of\nPudimos llevar a cabo un proyecto trabajando en equipo en cuanto a ideas y desarrollo del proyecto :D\nWe managed to work as a team by sharing ideas and progress of our project :D \nLo que aprendimos / What we learned\nAprendimos a utilizar APIS, desarrollar scripts en lenguajes nuevos!\nWe learned how to use APIS, developing scripts in new languages\nQue sigue para Espacio Libre Colima / What's next for Espacio Libre Colima\nLo sabr\u00e1n en el futuro \nYou'll see \n",
        "hackathon_id": "hackcolima",
        "winner": false
    },
    {
        "description": "\nmEat Safely is a mobile app to help those with sensitive stomachs to 1 click snap a safety rating of meat using temperature sensing and data analysis technology,\nInspiration\nEating conditions in Asia can be improved.\nHow I built it\nExpanded the sample app.\n",
        "hackathon_id": "flir-hk-challenge-nov2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nHOT SPOT is a big-data driven business intelligence tool leveraging on both FLIR\u2019s thermal imaging capability and cloud computing.\nWhat it does\nHOT SPOT aims to help Tenants to optimize space usage per rental cost and Landlords to achieve price discrimination. With the help of LEPTON\u2122 CAMERA, HOT SPOT can capture accurate temperates from an indoor distance which transfers into real-time monitoring, staying and flow for our business users. The user can then utilize the generated insights to improve their business strategies.\nWhat's next for HOT SPOT\nThere could be a wide range of HOT SPOT applications, particularly on traffic control and crowd management.\n",
        "hackathon_id": "flir-hk-challenge-nov2015",
        "winner": true
    },
    {
        "description": "\nBOOSTER is your helpful workout advisor!\nInspiration\nHow can you tell you work out hard enough? \nHow can you measure the degree of your hard work?\nHow can you be sure you work right?\nTHE KEY IS YOUR SKIN TEMPERATURE! \nThe higher the skin temperature, the higher the degree of exhaustion, the easier it is to build muscle.\nThe mean skin temperate before exercising is around 35 degree celcius, while that during or after exercising at exhaustion is around 38 degree celsius.\nWhat it does\nTHREE SIMPLE STEPS!\n1)Target the area of skin\n2)Capture and temperature\n3)Check out the result\nWhat Booster means to the users\nWORK HARD AND SMART!\nhttp://cckburton.wix.com/booster\n",
        "hackathon_id": "flir-hk-challenge-nov2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nI sit next to windows in office and it is hot\nWhat it does\nWhispers to your ears with breeze\nHow I built it\nFLIR Lepton. 140mm 1200rpm PWM super silent PC chassis fan. I received complain for a 90mm fan on desk makes my co-work feel too cold, so this fan is more than enough. 2 servos for rotation and tilting. Use ice pop sticks to build the rack. \nChallenges I ran into\nThe rack is difficult to build as the fan is heavy\nAccomplishments that I'm proud of\nI can feel breeze in my office.\nWhat I learned\npython, swift and FLIR Lepton SDK.\nWhat's next for FlirAir\nDeploy the solution and let my co-work enjoy first. And then a kickstarter project? \n",
        "hackathon_id": "flir-hk-challenge-nov2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nComing out of a frustration with the status quo when it comes to gym training, and the zeal to more closely analyse athletic progress, thermal analysis of muscle groups quickly became the most meaningful project to pursue. It's feasibility, and large potential markets are also large motivating factors.\nWhat it does\nThe app allows a user to monitor and analyse the temperatures of muscle groups during a workout to gain insight on possible issues with form, muscle imbalances, insufficient warmup, and a plethora of other traits that are all synthesised by a server into a single blurb that gives the user a rundown of their performance, weak points, strong points, possible imbalances, and routines to work on their weak points\nHow I built it\nThe iOS app was built on top of the FLIR ONE SDK, in Objective-C, and we built the server in the Go Language, backed by a SQL database- all hosted on Amazon Web Services. All of the analysis and synthesis is performed 100% server-side, reducing strain on the mobile device, and allowing for a much faster development cycle.\nChallenges I ran into\nAlthough the team wasn't very familiar with thermal imaging, even more so the FLIR ONE, they were able to surmount the learning curve fairly quickly, and are thankful to the FLIR team for helping to get them going.\nAccomplishments that I'm proud of\nThe team is definitely most proud of how they were able to quickly build a lean prototype and pitch, that was largely based on technology that the team had little to no experience with\nWhat I learned\nThe team learned a lot about thermal imaging, image processing, and developing in a lean setup, under stress.\nWhat's next for MusculoTherm\nThe MusculoTherm team hopes refine the user experience, add certain features that we believe are lacking, and bring this to the App Store.\n",
        "hackathon_id": "flir-hk-challenge-nov2015",
        "winner": true
    },
    {
        "description": "\nBy Lepton team\nWhat it does Smart Glasses detection\nHow I built it Glasses with Lepton and Visible camera dual module\nChallenges I ran into Temperture measurement\nAccomplishments that I'm proud of Wide Application in many locations\nWhat I learned Knowledge of thermal\nWhat's next for Smart Thermal Glasses - Photon EYES Smart Home solution\n",
        "hackathon_id": "flir-hk-challenge-nov2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroid-studio\n",
        "hackathon_id": "flir-hk-challenge-nov2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njava\n",
        "hackathon_id": "flir-hk-challenge-nov2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nPat Sin Leng Wildfire took the life of 3 students and 2 teachers in the 90s in Hong Kong. 73 firefighters is killed in this year alone. Firefighters is still an underfunded professional relies on human intuitions and experiences.\nWhat it does\nFly an airship to the affected area to monitor the heat map of the area. With the help of MSX technology and the sensors of the mobile phone we can easily build an app to continuously monitor the change of temperature of the area.\nHow I built it\nAlgorithm and android apps\nHere is the repo of the android app\nChallenges I ran into\nAlgorithm and physics. The careless omission of gravitation force led us demo the whole concept in a controlled environment.\nAccomplishments that I'm proud of\nOvercome physical challenges and come up with a way to demonstrate the whole idea, with a result that we are very proud of.\nWhat I learned\nMurphy's law. Check the law of physics before making any hardware related stuff.\nWhat's next for thermal_map_hackathon\nBuild the hardware and it is ready to go!\nPresentation\n",
        "hackathon_id": "flir-hk-challenge-nov2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nobjective-c\n",
        "hackathon_id": "flir-hk-challenge-nov2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nI am sure that most of you guys are familiar with rhythm games. you press the button on your screen when bars on the screen move down and meet the bottom.  You can touch the screen in syncronization with the beat. But, this game is so normal and there are so many similar games.\nWhat it does\nThis is a  rhythm game that uses FLIR ONE. It tracks the heat of your fingers.  So instead of touching the screen, you place your hand at a certain position in front of the camera. the camera will recognize your hand movement  interpreting it as \"clicking the button.\"\nHow I built it\nUse Android, Java, and FLIR ONE(for android).\nWhat's next for Heat Beat!\nIt is obvious that the thermal cameras can be used in the future mobile game market. we will play game moving the body like wii.\n",
        "hackathon_id": "flir-hk-challenge-nov2015",
        "winner": false
    },
    {
        "description": "\nIR Palm Detection\nDemonstrate how Lepton can use to recognize palm (for example, on a Raspberry PI).\n$ gimme5.py\n\n",
        "hackathon_id": "flir-hk-challenge-nov2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nThermal stress related to excessive insulation from bedding and clothing has been postulated to be associated with sudden infant death syndrome (SIDS). \nWhat it does\nAs a mother or care giver, you need to constantly notify surrounding temperature and measure your child\u2019s temperature to provide timely care and intervention for their clothing. \nConvention thermometers cannot do this effectively. So, we introduced DressWiser to reduce your stress and enhance temperature comfort for your child. \nDressWiser helps you monitor, and record your child\u2019s temperature and surrounding temperature continuously. \nWe will provide customer service to call you personally to alert you when the fever spikes or the temperature crosses the set threshold (Too cold or too hot for your child). \nAlerts can also be sent to any phone over Internet, making our product truly a smart device in the Internet of Things.\nFeatures of DressWiser\n\nMonitor the surrounding temperature and body temperature of child\nClothing suggestion for infant and child\nPeaceful Sleep\nTimely intervention and care\nEffective caring through sharing of data\nBetter diagnosis, and hence right treatment\n\nHow is DressWiser different from other digital thermometers?\nIt\u2019s not just a thermometer. It\u2019s a 24 hours continuous monitoring system. It uses one of the-state-of-the-art thermal sensor for accurate measurement of surrounding temperature and body temperature of child. \nThe device pairs up with your mobile phone, and intelligently sounds an alert based on the progress of the fever.\nHow I built it\nDressWiser is built on LeptonModule in Raspberry-pi with python language. We also 3D printed a beautiful case for the raspberry pi camera and Lepton Module of Flir.\nChallenges I ran into\nAccomplishments that I'm proud of\nWhat I learned\n",
        "hackathon_id": "flir-hk-challenge-nov2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nThere are approximately 200 million babies born per year.  However, around 1 million babies die from lack of attention.\nThe mortality rate of accidental suffocation and strangulation in bed (ASSB) started to increase in the beginning of 1998 and had reached the highest rate at 20.8 deaths per 100,000 live births in 2013.\nApproximately 52% of parents in predominantly Asian countries, had reported that their children has had a sleep problem. \nSource 1 link\nSource 2 link\nSource 3 link\nWhat it does\nBaby Safe is your personal baby care assistant, an app to keep track of your baby health as well as to prevent accidental death of YOUR baby. All whilst using the thermal camera to monitor your baby without the need of being there yourself.\nHow I built it\nWe used FlirOne iOS SDK to fetch thermal heat images and used image processing algorithm to accomplish our features. \nChallenges I ran into\nWe came up with a lot of ideas, and had a hard time choosing which one to spear head towards to. But later we decided to go for the one that had the most social commercial impact. Another challenge we ran into was figuring out how to implement the computer visual algorithm and hooking it up with the FLIR One SDK in a very short amount of time.\nAccomplishments that I'm proud of\nThe face coverage detection is the essential feature of the app and we are so excited that it works fantastically.\nWhat I learned\nWe learned how to develop the software in a short amount of time. Pitching is also a valuable technique we learnt from this hackathon.\nWhat's next for Baby Safe\nThe next stage for Baby Safe will be implementing the analysis of the temperature track record history. By focusing on the thermal camera technology, what else we can do push further in order to give the Baby Safe an all round product analysis?\nMultiple devices with communication is also needed. We would need to implement the quality of video streaming between the devices, so that family members or an organisation (like hospitals) can access the thermal camera seamlessly. \n",
        "hackathon_id": "flir-hk-challenge-nov2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nraspberry-pilepton\n",
        "hackathon_id": "flir-hk-challenge-nov2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWhy every hardware solution need a unique designed sensor? Why only genius can config it for DIY. By economic of scale, focus on a unified flexible sensor, we can increase the quality and easy to promote to market.\nWhat it does\nIt downloads analytic rules from the cloud and perform flexible pattern recognition locally.\nIt is designed for general users, simply plug the LAN cable (or wifi) and power plug, and define the target object on the cloud and it will works.\nThe cloud configuration will be accessible via common browsers or mobile apps.\nWhen rules are met, it does a customisable action, such as invoke all kind of web-services, or push-notification to mobile devices or send out emails, or collect continuous data for Big Data Analysis.\nSome of the usage scenarios are :\n\nBody temperature monitoring and contagious disease control in crowded areas, such as airport, schools, \noffice buildings. Officers will be notified at once for any abnormal situations.\nFood temperature monitoring and report to staffs mobile phones or directly to the POS machines\nPassenger data analysis in shopping malls, which proof their business values\nFor facility management, e.g. daily usage rate of each toilets so that they can be cleaned more effectively \nFor security control \nother personalised need can also be satisfied with simple DIY configurations\n\nHow I built it\nBy using C language for video capture, Golang for image processing, web-socket technology for data sync and event notification and with FLIR as the core.\nWe build a web-platform for accepting users detection criteria, and the respective response next. The embedded linux download those criteria and start monitoring locally.  When the FLIR Lepton sensor detects the pattern, it sends message back to cloud.  The servers then forward the signal as defined, which can connect to any Database, Restful API, email or mobile push notifications.\nChallenges I ran into\nThis innovative idea involves multi tiers and we have limited time to develop both client and server.\nAccomplishments that I'm proud of\nBe a pioneer to integrate and be the bridge of FLIR technology.\nWhat I learned\nBe creative and always ask if we ourselves can bring improvement to our current science and technology.\nWhat's next for HeatCV\nWe are going to bundle lepton and embedded linux for mass production. We are looking forward for both crowd funding (pre-order) and angel funds to accomplish it.\n",
        "hackathon_id": "flir-hk-challenge-nov2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nAvian influenza, Cholera, MERS. These critical disease is coming from animals. How could we prevent it? How about use FLIR one thermal camera? This one will very effective for us.\nWhat it does\n\"Cure Animal - Care your Animal with FLIR ONE\" could save animal thermal image and share animal data such as location, temperature of environment, type of animal. Animal thermal image \nHow I built it\nUse Android, Java, GoogleMap, and FLIR ONE(for android).\nChallenges I ran into\nAnderson : Manage project, Development.\nSol : Make documents and presentation, Design 3D modeling.\nSomin : Make documents, Search & Analyze market.\nWhat's next for \"Cure Animal - Care your Animal with FLIR ONE\"\nIn the near future, If this application connected to cloud server and analyze big data which contains animal temperature and location, then we could predict moving route of epidemics and prevent diseases. This means, FLIR ONE is necessary for Farmer, Department of agriculture and also animal drug company too.\n",
        "hackathon_id": "flir-hk-challenge-nov2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWhen we are thinking about \"what can be the top grossing tech gadgets?\",  game console and mobile games are the first things that come to our mind. Can we combine them together with extra innovations?\nThere is one type game, which people never played, but always dream of, and even write novels about it -- Full Immersive MMORPG\nWhat it will never do\nIt will not require hack into your body and no need to modify your brain.\nWhat it does\nIt lets players play first-person games as if they are inside the virtual world.\nIt analysis players actions and convert into game actions.   \nHow I built it\nWe used the Google Cardboard to provide the virtual reality vision but we also extended the Google Cardboard into a 3D Hamlet, to free players hands for lively interactions.\nDue to compatibility issue between cardboard SDK and FLIR SDK, we only took the Cardboard's hardware but rebuilt all head posture detection from scratch. \nThe 3D-virtual world and the Physics engine made by Unity 3D engine; \nbut the core of full immersive interaction was done by the thermographic capability of FLIR One. \nChallenges I ran into\nUnity SDK, Cardboard SDK and FLIR SDK all included precompiled C/C++ libraries, many compilation issues had been solved before we bring the game to live.\nAccomplishments that I'm proud of\nWe finally be able to combine all these tools to create a product.\nWhat I learned\na lot of low level work among XCode compilation toolchain and image processing\nWhat's next for Sword Heat\nIt will be delivered as an SDK  and we can provide support services for all game developers in Unity community who interest in making FLIR One games. Instead of creating a few games, we want to leverage the power of developer community to push FLIR One as the top game console in 2016. \n",
        "hackathon_id": "flir-hk-challenge-nov2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nThere are many usages for a people counting system . It could be used for counting no. of people in a festival / protest / shopping mall. The collected data is good for analysis.\nThermal camera is a perfect match with people counting system.\nHowever, we have a question during brainstorming. Could it do more than counting people? Could it be more fun?\nFinally, we find that it could also be used to count mouse in kitchen in a restaurant.\nOf course people will try hard to keep kitchen be clean, but mouse may come from outside. Therefore, People may use a counting system to monitor any small animal entry your kitchen, and take action to solve it.\nYan Tan Tethera is designed for counting different living things for different needs.\nWhat it does\nFeatures\n\nCounting no. of people walk through a place\nCounting no. of mouse walk through your kitchen / restaurant\n\nHow I built it\nWe use Flir One Camera to collect the thermal image. Then process the result image by OpenCV. The algorithm for counting people and mouse is slightly different. But generally can be divided into the following steps.\n\nPerform a background removal on the input frame to finding out moving objects\nApply a range filter of temperature if needed\nApply a blob detector\nApply blob tracking algorithm\nCount no. of unique blob\n\nChallenges I ran into\nSince we cannot demonstrate our project during pitching due to installation problem, we decided a take video and lets Yan Tan Tethera to read from the video file. However, OpenCV on Android do not support video file reading. We need to write our wrapper and it is very time consuming.\nAccomplishments that I'm proud of\nTo run a project in a short time.\nWhat I learned\nHow thermal imaging works.\nAndroid Media Codec\nMaking a MVP\nWhat's next for Yan Tan Tethera\nMake a workable MVP\n",
        "hackathon_id": "flir-hk-challenge-nov2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nCute furry animals and lights! \nWhat it does\nPlayers can explore the level, collecting glowing cubes along the way. All the while dodging deadly spikes.\nHow I built it\nI build it with my teammates Rafael Joseph and Jose Mayo. We used Unity to create the game. I did the coding, level design, and protagonist character model. Rafael created some of the character concept art and textures. Jose created the environment art.\nChallenges I ran into\nAdjusting to the 2D code differences as compared to the original 3D version of Unity.\nAccomplishments that I'm proud of\nThat we got out what we did, in the time span that we had.\nWhat I learned\nI need to learn more about ai programming in general.\nWhat's next for Fire in the Hearth\nHopefully completion of three or four different levels, complete with bosses. Also the ability to have the player's glow aura increase as they progress.\n",
        "hackathon_id": "alphagamejam2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nunity\n",
        "hackathon_id": "alphagamejam2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nunityc#dolby\n",
        "hackathon_id": "alphagamejam2015",
        "winner": false
    },
    {
        "description": "\nI stand on the clef, overlooking the C. I reminisce on the treble that has plagued this city. As a beat cop, you've got to be sharp to survive, otherwise you will find yourself flat in the gutter... this is my town... Chime-a-town.\n",
        "hackathon_id": "alphagamejam2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nBased on the popular Japanese newspaper puzzle Nurikabe.\nWhat it does\nIt's a puzzle. You click on tiles to try different garden features (paths and flowers). Only one solution works.\nHow I built it\nOn canvas with JavaScript \nChallenges I ran into\nGraphics are hard\nAccomplishments that I'm proud of\nIt works!\nWhat I learned\nWriting games is fun\nWhat's next for Magic Gardener\nSound, music, scores and leaderboards, animations, new garden features\n",
        "hackathon_id": "alphagamejam2015",
        "winner": false
    },
    {
        "description": "\n2 min submission deadline. :) Will edit.\n",
        "hackathon_id": "alphagamejam2015",
        "winner": false
    },
    {
        "description": "\nHacking away with Vanguard Princess\n",
        "hackathon_id": "alphagamejam2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nmicrosoft-visual-c++-2012\n",
        "hackathon_id": "alphagamejam2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nwords\n",
        "hackathon_id": "alphagamejam2015",
        "winner": false
    },
    {
        "description": "\nWe are 4 UW students who were looking to have fun as three of us were about to embark on our first hackathon. After the Microsoft keynote we we were inspired to make something just a little sarcastic. We saw the Clarifai API and realized the possibilities were endless.\nAfter a little brainstorming we came up with a little idea where users can upload a photo and it will take tags from the uploaded image and generate free verse poetry related to those tags. We used something called Markov Chains with the help of some long works from our favorite authors (Edgar Allen Poe and Sigmund Freud) we used massive text samples to generate lines of poetry. For good measure we also used the tumblr API to scrap posts with the tag 'poetry' so out text sample includes over 2,000 tumblr posts. Each line is seeded by a tag and these lines are sorted in descending order of how sure the Clarifai API is.\nWe have a node server with a custom REST API that we wrote the handle all poem generation. We also used jQuery and Bootstrap to make our frontend and a python script to scrape tumblr and compile all our text into a unified format.\nWe had a ton of fun making this application and we hop you love it too!\n",
        "hackathon_id": "dubhacks15f",
        "winner": true
    },
    {
        "description": "\nProblem\nHas your wife been passively angry at you? Do you feel unsure? Well, I can't help you.... in most cases. But if you are looking to buy clothes soon. My app can help you locate & purchase clothes that fits well with other pieces in your wardrobe. \nSolution\nPresenting \u00c9l\u00e9gance! Customers take or upload the picture of any piece of attire and my app recommend products that will look make you look FASHIONABLE. Then I allow the user to buy the product off amazon. \nKey Features\nExtracting vibrant and mute colors from photos.\nConstructing histograms of photos to find the color of a piece of attire\nUnderstanding a picture through clarifai. \nMatching T-Shirts with Pants & Pants with T-Shirts.\nMatching colors using the Delta E color difference formula. \nFinding contrasting colors via a triad formula. (Similar to one Adobe uses) \nUsing the Amazon API for search & affiliate sales.\nNEVER LOOK UNFASHIONABLE AGAIN!\n",
        "hackathon_id": "dubhacks15f",
        "winner": true
    },
    {
        "description": "\nWhat's next for CapThat\nUp next on the horizon, expect to see some even more advanced caption generation.\n",
        "hackathon_id": "dubhacks15f",
        "winner": true
    },
    {
        "description": "\nWhat is the hack: Identifai.Me is a program that analyzes a user\u2019s latest photo uploads on Facebook to generate insight into the user\u2019s recent behaviour, habits, or trends. Using both Facebook\u2019s Development API and Clarifai\u2019s API (where we got the inspiration for our name), Identifai.Me makes it easy for users to seamlessely derive insighful social data at the click of one button. The simple one-step authentication method, coupled with the streamlined user interface promotes widespread use and adoption. \nAside: Our team had to pivot to a different project halfway through the Hackathon due to a technical issue. Identfai\u2019s core feature (of generating data through Facebook/Clarifai and leveraging the tagged data into sentence outputs) was conceptualized, designed, developed and deployed in a span of 7 hours. \nFacebook Tester Account1\nid: shawn_zfhfssf_johnson@tfbnw.net\npw: identifai.me\nFacebook Tester Account2\nid: jenny_huxrktt_singer@tfbnw.net\npw: identifai.me\n",
        "hackathon_id": "dubhacks15f",
        "winner": true
    },
    {
        "description": "\nInspiration\nWith elections going on both in the United States and in Canada, we felt the urge and the need to poke fun at politics and the ridiculous statements made by politicians.\nWhat it does\nBSO'Meter takes direct text input or the URL of a website and gives the user an analyzed result that shows the percentage of BS in the text.\nHow we built it\nWe built the front-end in Xcode, using Swift 2.0; back-end programming is done in python and incorporating Algorithmia's machine learning and text analysis APIs; our server was built on Tornado.\nChallenges we ran into\nWe were planning to use IBM Watson's APIs as well but we encountered login issues. Troubleshooting was taking too long so we decided to do without it. We also ran into challenges when trying to use Tesseract for OCR in Swift.\nAccomplishments that we are proud of\nEverything.\nWhat we learned\nA lot.\nWhat's next for BSOmeter\nBetter algorithms, use ML and NLP to improve analysis accuracy, OCR, and processing real-time voice input.\nCheck out our project on Algorithmia's blog\nhttp://blog.algorithmia.com/2015/11/dubhacks-spotlight-bsometer-fact-checks-the/\n",
        "hackathon_id": "dubhacks15f",
        "winner": true
    },
    {
        "description": "\nInspiration\nThere are about 70 million deaf people who use sign language as their first language or mother tongue. It is also the first language and mother tongue to many hearing people and some deafblind people. However, there is a radical gap in communication between the deaf and other members of society -- the vast majority of citizens do not know how to speak sign language. As a result, we sought to use the Leap Motion to create a seamless, intuitive manner of sign language translation.\nWhat it does\nASLSpeak utilizes the Leap Motion to gather a variety of data on the motions of the hands of a sign language user, and feeds it into a machine learning algorithm to classify which letter or word was gesticulated. After identifying what was signed, ASLSpeak utilizes a laptop's text to speech to say the translation.\nHow I built it\nWe used python to collect training data on sign language users, and inputted it into a neural network classification algorithm. After we successfully trained the classifier, we wrote a script to take user input (through sign language via the leap motion) and automatically speak it.\nChallenges I ran into\nOur neural network accounted for over 350 different features of a user's hand, so it was often a bit slow to be used in everyday normal conversation. Additionally, we had only 24 hours to build a script to gather training data, create training data, create the neural network classifier, and write the script to translate user input. With more time, we could generate better training data and increase the speed, which would do wonders for its usability as a tool in everyday speech.\nWhat I learned\nWe had little to no machine learning experience coming into the hackathon, and definitely feel like we've learned a lot more about this interesting technology.\nWhat's next for ASLSpeak\nDevelopment of ASLSpeak does not stop with the end of DubHacks. We plan to add more and higher-quality training data, and also increase the accuracy of our machine learning algorithm.\n",
        "hackathon_id": "dubhacks15f",
        "winner": true
    },
    {
        "description": "\nInspiration\nThe automotive industry has spent years trying to improve driver safety by enabling features that simplify operation and take responsibility from the driver. This, combined with the growing amount of distractions due to mobile tech is arguably creating inferior drivers and a hazardous environment for others.\nWe think that by providing metrics for driver awareness and mood, we can inspire positive changes in driving habits and an added appreciation for driving smart and safe.\nWhat it does\nUtilizes vision enabled by the Kinect to track face movement (particularly eyes). By following eye and mouth movements, we can record metrics to track distraction and mood. In particular, we analyze smiling, head angle and eye focus. In addition we synchronize this data with map and speed information to develop driving trends and point out hazardous patterns or reward improvements.\nIn particular, the tracked metrics are distractedness, happiness and fidgetiness, but more could be added such as hand position and center of gravity.\nThe metrics are logged on web app accessible from browsers and mobile devices. It is designed to be simple and easy to understand. An overall score is determined every drive, as well as specific categories  for more detail. A user can look at a timeline map that displays markers on the coordinates of significant distraction events. Ideally patterns may emerge and habits may change.\nHow we built it\nThe Kinect is processed with the supplied api. We process various face information and print it on the stream and send it out to our flask server. We used python for post processing, analysis and integrating the server. Node and React were used on the mobile phone side to pull Google maps data and draw event markers on a map. The front end is a combination React, jQuery and Google material design.\nChallenges we ran into\nMany of our early struggles were on the vision side. It was tough to find example of advanced facial recognition on the Kinect, and working with Visual studio. The python processing was also difficult since we wanted to simplify all the data in to something any user could understand. We struggled with React and cloud web services and spent much of our time bouncing around between services. In general our team put emphasis on learning new things (React, Python Flask, Visual Studio, ect) rather than staying in our comfort zone. This inherently made things difficult.\nAccomplishments that we proud of\n\nAccurate, reliable face tracking\nVisual C++\nCreative metrics\nGoogle maps\nReact\nHardware\nSimple design\nMaking something that has potential to improve safety\n\nWhat I learned\nExpect anything. This project spawned after a team member was hit by a car driven by a distracted driver. Many roadblocks emerged along the project's development, but we we continued to move forward!\nWhat's next for distractedness\nImplement it in an actual vehicle, add a social media aspect\n",
        "hackathon_id": "dubhacks15f",
        "winner": true
    },
    {
        "description": "\nInspiration\nJust something I thought of on the bus. I'd done something with distributed tasks before but not cloud-based, so I thought this was an interesting way to reinvent it. Vince got on board and we started hacking on it.\nWhat it does\n\nReceives task configuration from the web\nShows task status on the web\nInstalls docker containers across many AWS instances\nAutomatically scales AWS spot instances based on the best price\n\nHow I built it\nFirebase is used as the database for the whole thing. There's an \u201corchestrator\u201d backend application which polls the database occasionally and tries to figure out the most optimal distribution for new tasks, and checks to see whether it needs to scale. There's an \u201cinstance daemon\u201d which receives tasks from the orchestrator. Finally, there's the web interface made with Firebase (of course) and React.js.\nChallenges I ran into\nAlgorithms, mostly. Managing all that state is not trivial.\nAccomplishments that I'm proud of\nIt works! We can ship docker containers to our instances and intelligently distribute them, and display the progress.\nWhat I learned\n\nFirebase!\nDocker!\n\nWhat's next for computespot\n\nMaking the instance scaling more reliable\nImplement down-scaling as well (shrinking)\n\n",
        "hackathon_id": "dubhacks15f",
        "winner": true
    },
    {
        "description": "\nBuilt With\nibmibm-watson\n",
        "hackathon_id": "dubhacks15f",
        "winner": true
    },
    {
        "description": "\nBuilt With\npythonmathematicanumpyscipymusic21scikitsgttsespeakffmpegsox\n",
        "hackathon_id": "dubhacks15f",
        "winner": true
    },
    {
        "description": "\nInspiration\nWhen coming up with Lyte, we felt dissatisfied by existing social networks. Facebook, as James Whittaker mentioned, is slowly becoming a place for people to show off about their lives. Twitter is a place for people to be clever -- even that is growing more slowly than ever. We believed that a better, more true-to-life alternative existed for people to express themselves, one less constrained by social stigma and pedigree. We came up with Lyte, an emotions tracking social network. \nWhat it does\nLyte allows friends, family, coworkers to express themselves in a variety of emotions. Words are hard -- it's magnitudes more difficult to know how to say something, than how to feel something. When people are suicidal or depressed, the most painful experience they manage is the feeling that no one is there for them. In many ways, Lyte allows friends to be more socially responsible and responsive to the signals of their peers. That's why we believe Lyte is the best alternative for personal expression out there. You log in with Facebook, and are presented with a list of friends you would like in your intimate list of connections. From there, you are prompted to share your current emotional state. Additionally, you get a glance-able dashboard populated with how your friends are doing on a daily or weekly timeline. In the future, we see a notification and messaging system integrated with the product, where  emotions act as conversation starters.\nHow I built it\nWe built all the components of Lyte from scratch, starting from the Postgresql datastore to the API and Web server in Node.js to the front end in React, d3.js and HTML/CSS. Of course we leveraged the many tools at our disposal like Amazon EC2, Facebook's Graph API, Bootstrap, Express JS, and a SQL ORM. However, because we wanted a larger degree of control over the models, endpoints, and authentication, we chose to stick to as bare of a setup as time permitting for our goals.\nChallenges I ran into\nWe wanted to cover a lot of areas with very little time. We wanted architectural control from a technical perspective, but we also wanted to stick true to our philosophy that Lyte would be of high social value. We wanted to provide users with visualization, analytics, networking, and a very comforting atmosphere to share their more private emotions in. Reaching all these goals while wrangling with the standard tech/design/collaboration speed bumps was challenging.\nAccomplishments that I'm proud of\nWe're proud of building an end to end product from the models to the API to the React-based front end. At times it seemed like none of our components would come together in time. We're proud that we built a product that helps our peers not only at their happiest moments, but could aid them in their more stressful and upsetting times. We're proud that we worked nonstop throughout the night to build a stable (as possible given the time) and flexible social network.\nWhat I learned\nEach of our team members got a unique learning experience at Dubhacks 2015. Some of us reached into front-end and design work when they were primarily devops and backend. We worked with new SQL to Javascript ORM interfaces to manage our models and API. We managed to learn about data visualization techniques and information presentation. All in all, we each took away a valuable, concrete skill to use in our own personal projects and lives.\nWhat's next for Lyte\nWe hope to spend a short amount of time getting the key features Lyte needs to succeed in the real world (messaging, notifications, mobile support) before getting it as fast as possible to end users. We feel like on college campuses in particular, peer influence is extremely powerful and we want to leverage that in a way that helps people ubiquitously. We want to explore exploits of our system and see how we deal with abuse as it arises in any social network. Ultimately, we want to do as much as possible to see people enjoying the value they get from being able to express themselves more easily and without as much inhibition.\n",
        "hackathon_id": "dubhacks15f",
        "winner": true
    },
    {
        "description": "\nInspiration\nI've always wanted to build a huge computer in Minecraft, but the game is terribly slow for handling very complex redstone circuits. I wanted to make an easy-to-use program to simulate a huge amount of logic gates efficiently.\nWhat it does\nThis program allows you to combine logic gates to make complex behavior.\nLeft-click on one of many logic gate types to select that, then left-click on the board to place it.\nLeft-click on \"Wire\" to select wire mode, and left click and drag from one gate's output to another's input to connect them.\nLeft-click on \"Delete\" for delete mode. Left click on a gate to delete it or click on an input or output to unlink any connected wires.\nLeft-click on \"Interact\" to be able to activate toggle switch gates.\nRight click and drag to pan the camera and use the mouse wheel to zoom the camera.\nHow I built it\nWe used java with libgdx for graphics and input\nChallenges I ran into\nIt was challeging to design a system which would simulate logic gates efficiently. We also weren't familiar with libgdx and making graphics with java.\nAccomplishments that I'm proud of\nThe algorithm for filling the grid is super efficient.\nWhat I learned\nUsing GIT and libgdx\nWhat's next for Binary Circuit Builder\nWe hope to add an ability to define a group of basic gates as one larger gate, and copy and paste this formation to make it easier to make huge creations. Also, saving and loading to files.\n",
        "hackathon_id": "dubhacks15f",
        "winner": true
    },
    {
        "description": "\nBuilt With\nazurepythonc#command-linetwiliocloud-servicearduinointel-edison\n",
        "hackathon_id": "dubhacks15f",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascriptnode.jsjsonhtmlhttphttpssasscssexpress.jshandlebars.jssoundcloudregexif-statementscodechromegitgithubmacbookchromebookmac-osbluemixibm\n",
        "hackathon_id": "dubhacks15f",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe think the way kids are introduced to programming is just wrong. We don't like drag-and-drop coding environments (they don't teach much computer science), and the typical languages that are taught in intro classes (like Java and Python) come with their own set of difficulties in getting them to work. So we developed GUIDuck, an introductory programming language that is based on ease of learning and efficiency in understanding what computer science really is. \nWhat it does\nGUIDuck is a website that allows you to run your own GUIDuck code, and it is just that easy. \nHow we built it\nBackend in Java, frontend in HTML and Javascript. \nChallenges we ran into\nWe forgot about the piece that connects frontend to backend, so we are currently missing that funcitonality. \nAccomplishments that we're proud of\nWe designed a language, coded up a web page, and developed an interpreter for a really cool and really easy learners language. We think that is pretty damn cool. \nWhat we learned\nA lot about time management, thinking out the whole picture beforehand, how important sleep is, not to mention many new computer science skills. \nWhat's next for GUIDuck Programming Language\nWe'll 1) finish our website, 2) fully implement GUIDuck, and 3) extend many more functions like exporting and importing files to compile. There's a lot more in store for us. \n",
        "hackathon_id": "dubhacks15f",
        "winner": true
    },
    {
        "description": "\ntgt.hr\nLove watching YouTube but too lazy go find your own videos? Want to share your favorite YouTube videos with everyone? Want to chat about and vote on YouTube videos with other people as you're watching simultaneously? With tgt.hr you can do all three at once. Sit back and watch a continuous stream of YouTube videos as if you would a TV channel, submit your favorite videos to the queue, vote on what videos to watch next, or chat with others anonymously about the video you're watching in-sync together. tgt.hr keeps everyone in-sync watching the same videos so you can discuss and react as if you're sitting next to each other on the couch. You can also make your own channels to watch with only people you know or just for certain topics.\n",
        "hackathon_id": "dubhacks15f",
        "winner": true
    },
    {
        "description": "\nBuilt With\nswiftazuremicrosoft-project-oxford\n",
        "hackathon_id": "dubhacks15f",
        "winner": false
    },
    {
        "description": "\nBuilt With\ncssjavascripthtml\n",
        "hackathon_id": "dubhacks15f",
        "winner": false
    },
    {
        "description": "\nFourth Place winner at Dubhacks!\nInspiration\nAs students, we spend a lot of time commuting across UW's beautiful campus. Unfortunately, between balancing homework, schoolwork, midterms, finals, and even work, it's nearly impossible to see at a detailed level: What exactly are we doing during our commuting time, and more interestingly, how we could still be involved with great social causes, without any expense of our very valuable time.\nWhat Cloudbike does\nCloudbike is an Arduino retrofitted exercise bike with real-time data analytics that generates Bitcoins based on the intensity of the user's exercise, and later, allows the user to make a donation to a public charity of their choice.\nHow We built it\n\nStarting from the ground up, we immediately began building the hardware components for the bike -- 3D printing custom parts to fit with the bike's frame and waterproofing our Arduino hooked with our own hand-designed Infrared-Calibrated Tachometer to efficiently, and very accurately read RPM performance. \nThe next step involved developing our Android app, and integrating all of our hardware (Arduino, Tachometer, Microsoft Band, Bluetooth), and creating secure and reliable communications between all of our components.\nNext comes the Backend Web Technologies. After gathering our data, we began setting up the services to store the data in our remote databases. Via remote Microsoft Azure Web Services and Virtual Machines, we were able to clean our data, conduct insightful data analysis and begin the incredibly CPU intensive hashing process in cloud mining Bitcoins!\n\nChallenges We ran into\n\nIntegrating all of our backend technology was an incredible journey from every stage of the project, from 3D Printing our own custom parts, securing bluetooth connections between our sensors, and utilizing three different web services at once. \nThe hardest challenge must be a tie between integrating our web services and our bluetooth communications -- \nBluetooth communications were on and off in terms of reliability throughout the hackathon, despite great hopeful spikes in performance at times.\nIn integrating our MongoDB hosted on an AWS EC2 Instance, our Bitcoin Mining Virtual Machine on Azure and NodeJS Azure Webapp, there were many inconsistencies in connections and implementing our resulting architecture.\n\nAccomplishments that We're proud of\nWe are insanely happy with what we have built, especially given the fact that we each took an incredibly important role in the project, from bottom up, along with the incredible learning experience that went along with it.\nWhat We learned\nEverything, from Hardware, Bluetooth Protocols, Virtual Machine protocols, and the like!\nWhat's next for Cloudbike\nExpansion on reliability and scalability!\nAnd charity!\n",
        "hackathon_id": "dubhacks15f",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroidandroid-studio\n",
        "hackathon_id": "dubhacks15f",
        "winner": false
    },
    {
        "description": "\nBuilt With\nnode.jsazuremysqlhtml5ajaxjquery\n",
        "hackathon_id": "dubhacks15f",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe came to Dubhacks wanting to come up with an idea that would truly make a difference using the technology we would discover here. As we were all first time hackers, we wanted to make sure that we could integrate all of our skills into one project. After learning about Clarifai and the image recognition technologies, we were inspired to create an app that would easily allow users to take a picture of something disposal and provide information on how to sustainably dispose of it.\nWhat it does\nLet's users know which bin to throw their trash into. This is a major issue today, as there are so many things that people can dispose of yet there is still much confusion.\nHow I built it\nHard Work, Sweat, and the inspiration to build epic shit that makes a difference. (ie. Java, Android, and Adobe Creative Suite\\0\nChallenges I ran into\nSynchronization between the UI thread and the network thread... None of us have made a mobile app before so we thought it would be a good challenge. It was.\nAccomplishments that I'm proud of\nThat we were able to use Clarifai to create a sustainable app that everyone can benefit from\nWhat I learned\nAndroid development is harder than we thought.\nWhat's next for RecycleMe\nFinish development for optimal realization into the sustainability market.\n",
        "hackathon_id": "dubhacks15f",
        "winner": false
    },
    {
        "description": "\nInspiration\nYou control your personal social media life through Facebook and your work life through Yammer. But what website is fully comprehensive when it comes to social media and your education? You don't necessarily want to add classmates to your Facebook friend list but you may want to collaborate with them for classes. The goal of Uni is to provide and connect students of the same colleges and classes together. Uni students can discuss about their major, their specific courses, or even ask questions and form study groups together. Uni is a way of providing a social media outlet for students within universities as well as helping build further connections for future networking. \nWhat it does\nUni allows students in the same university to collaborate, discuss, and study together. Group pages can encompass your specific courses, your majors, or even just your graduating class year. Newsfeeds appear as statuses with students asking questions and creating discussion posts. Furthermore you can form chat groups for class projects for any course. \nHow I built it\nOur group used a mixture of HTML/CSS (Bootstrap)/Javascript (Angular.JS) and Firebase for back-end.\nChallenges I ran into\nWe ran into challenges with getting Firebase to work well with creating groups and subgroups as well as implementing a chat tool. Instead we compromised by leaving these completely static and front-end. The concepts and displays are there still. \nAccomplishments that I'm proud of\nUser authentication and account creation through Firebase works. Beautiful front-end design work for login page and home page. Overall just a nice-looking site that captures the goal of the website. \nWhat I learned\nWe initially did not have a lot of design-experience within our team so we learned a lot on the fly. Furthermore we learned how to work with user-authentication.\nWhat's next for Uni\nJust look into developing it more so that we can further progress our skills and learn even more things. \n",
        "hackathon_id": "dubhacks15f",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptapacheconfhtmlcssfirebaseangular.js\n",
        "hackathon_id": "dubhacks15f",
        "winner": false
    },
    {
        "description": "\nInspiration\nI've tried meteor once earlier when it was in 0.X version, and be impressed by the real-time feature it provides. So I want build a tool to make it easier to do brain brainstorming with friends and workmates.\nWhat it does\nYou can get a unique URL of a mind-map document. Everyone can edit this mind-map, and the modification will reflect in other user's screen in real-time. You can also create an account or login with github, so it is possible to distinguish modifications of different users .\nHow I built it\nThanks to baidu FEX team, we have a full featured front-end mind-map editor with amazing UI called KityMinder, so I don't need to write the front-end from scratch.\nI use ShareJS to provide the collaborative feature. Currently I only did json diff and patch apply, I hope to integrate the OT function later.\nAnd the meteor accounts packages make it really easy to add an account system.\nChallenges I ran into\n24 hour is really short. I take some time to be familiar with the existing libraries. further more, I spent most time in debugging since every modification to the source code will trigger a rebuild of meteor server and the rebuild takes some time.\nAccomplishments that I'm proud of\nBuild a useful tool in a short time.\nWhat I learned\nI learned a lot of meteor, especially the amazing DDP and transparent reactive programming.\nWhat's next for CrossMinder\nIt needs some time to fix the bugs. Maybe I'll add a WebRTC audio chat to make communication easier.\n",
        "hackathon_id": "shanghai-meteor-hackathon",
        "winner": false
    },
    {
        "description": "\nLet me introduce our team for the MeteorJS Hackathon:\nhttp://www.meetup.com/Meteor-Shanghai/events/225670916/\n\nRicky Ng-Adam: backend\nHanyon Wu: audio sentence segmentation\nYifei Wang: UI experience (CSS/HTML)\nAlfred Zuk: content (sample story & illustration for 2 to 5 years old)\n\nWe are building a children reading book to acquire useful content and audio samples for voice recognition engine training.\nThis is part of this international, ambitious competition to teach kids to read and write autonomously using an Android tablet:\nhttp://learning.xprize.org/\nLet me also introduce you to our UX designers that have produced the nice video you saw at the pitch:\n\nLouis Brotel\nPierre-Olivier Rouquette\n\n",
        "hackathon_id": "shanghai-meteor-hackathon",
        "winner": false
    },
    {
        "description": "\nInspiration\nSee impress.js official demo site.\nWhat it does\nTo make better presentations with modern technolodge\nHow I built it\nfork the repo, run meteor\nChallenges I ran into\nTalk about that later\nAccomplishments that I'm proud of\nIt is made with 24 hours\nWhat I learned\nHow to communicate with other awesome people\nWhat's next for white-fin\nBetter effects, and interaction through mobile app\n",
        "hackathon_id": "shanghai-meteor-hackathon",
        "winner": false
    },
    {
        "description": "\nPrize Eligibility\nBrainTree\nInspiration\nSwiss army knife\nPhone\nAndroid\nBubbles\nWhat it does\nA handy app that allows you to effortlessly use tools on top of the app you are using!\nHow I built it\nServer-side: nginx as a webserver, uWSGI to host flask based python applications\nBack-end functions: wikipedia, lyrics, translator, imgur, wunderlist, twitter, email, sunsetcalculator (expected)\nFront-end: Android side-swipe multitoolkit (Swiss army knife) app\n",
        "hackathon_id": "jacobshack-2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascriptphp5c\n",
        "hackathon_id": "jacobshack-2015",
        "winner": true
    },
    {
        "description": "\nA browser game mixing bomberman and portal. Only fresh, handcrafted code using NodeJS, Socket.IO and a lot of CSS. Much more info can be found on GitHub.\n",
        "hackathon_id": "jacobshack-2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nSome time ago we thought about color-blindness and realized how not being able to distinguish certain colors can actually be very dangerous. Especially red-green-blind people are facing a huge challenge in our society: Red is used as the color to express importance (warnings on packages, etc.), to attract attention (fire trucks, fire extinguishers, etc.). Green on the other hand occurs naturally in all sorts of places, is used a lot for packaging (Sprite, ...), and so on.\nOur goal was to build a tool bringing back the \"sticking out\"-experience of the red color to color-blind people.\nWhat it does\nBasically, it takes a video of a scene as input (e.g. taken with a mobile phone), processes it by letting red areas flash brightly. To support our development process, especially to have an idea how our post-processing looks like to color-blind people, we also added filters to simulate two kinds of color-blindness.\nLater we also added a feature trying to detect dangerous situations the person running the app might run into (like accidents) - in production the app would issue an emergency call or similar in such situation.\nHow I built it\nWe used HTML5 and WebRTC to build the apps as stand-alone web applications that run on most devices and platforms.\nChallenges I ran into\nNot having done anything with WebRTC before, it was challenging to accomplish video processing using nothing but HTML and JavaScript. After that, we encountered problems like figuring out how to detect potential dangerous situations as reliable as possible. \nAt another point, we struggled utilizing the compasses built into our mobile devices - as all of where very unreliable, contradicted each other or sometimes changed their mind spontaneously without even being moved. All in all they turned out to be a bad tool to determine a users orientation reliably.\nAccomplishments that I'm proud of\nWe are quite proud to have created something that might provide color-blind people with some of the extra information most people of our society enjoy every day. It was a huge experience to work on a subject like this and think hard about the problems visually impaired people deal with.\nWhat I learned\nWe learned a lot about the theory behind the different types of color-blindness and similar conditions. We learned how to use very recent HTML5 technologies to our advantage.\nWhat's next for ColorfulMind\nWe thought a lot about the way people can use our app and we are aware that carrying around a mobile device all the time is not practical and can actually be dangerous. On the other hand, this would be a perfect app for augmented reality glasses like HoloLens (unfortunately, nothing similar was provided to us during the event). We would love to develop and run our app on a wearable device.\n",
        "hackathon_id": "jacobshack-2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nnode.jsofficejavascriptc#\n",
        "hackathon_id": "jacobshack-2015",
        "winner": true
    },
    {
        "description": "\nWhat it does\nDiscover and share worth seeing articles with your friends without bombarding them. Let them enjoy reading blog entries you found interesting in a subtle, comfortable environment by allowing them to read recommended articles when AND where they want.\nHow We built it\nBuilt with ten tired eyes and much love\nAccomplishments that We're proud of\n2 native apps (one for iOS and one for Android), one Node-JS server - all accomplished on our first hackathon!\nWhat We learned\nNothing good happens after 2 A.M. ^.^\nWhat's next for Circles\nWhat's cooler than a circle? A \u2206!\n",
        "hackathon_id": "jacobshack-2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavajavascriptpythoncsshtml\n",
        "hackathon_id": "jacobshack-2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nRunning out of battery on a mobile devices while, on the go, is a common occurence these days. And whenever a plug is needed, none can be found. Airports, shopping malls, shops, they all might have public sockets which nobody knows of (an undiscovered gold mine).\nWhat _ UndiVolt _ does?\n When you start the app, you can directly see a map of the nearest sockets. In addition to this interactive map, everybody can also report new sockets and rank other sockets. We will create world's largest socket map or better said: the world will create its own map of public sockets thourg crowdsourcing. Based on user rating, the map will be kept updated even when sockets malfunction or no longer exist because repeated bad rankings will cause the socket to be deleted.\n\n That is only a part of UndiVolt. What happens if you forget your charger? In this case, the app allows you to search for all nearby users who are willing to lend a particular charger. Those users will receive a pushNotification and if they accept it, the locations will be exchanged and a the helper and one in need will be able to chat throug the app. It's Tinder for chargers :-)\n\nHow we built it\nWe rolled up our sleeves, proudly powered through the NodeJS server functionality with support for Plug discovery and rating, user identification and 1 to 1 user chat. Then we put our pride and enthusiasm in Swift development. Sadly, the cruel world and, maybe, the tiredness kicked in. Only half of the planned functionality was successfully implemented.\n\nChallenges we ran into\nWe chose to develop with iOS' Swift for the first time. None of us had any previous experience with it so it proved to be very difficult to advance at a quick pace. We spent 1 hour on 2 for loops and 4 Strings to extract a char from a string...yep, it's that bad. \n\nInitially we wanted to use Google Maps but it has issues with iOS 9, so we went to Apple MapKit. \nBut the biggest challenge was the full-stack nature of our project, employing both a server and an app client.\nAccomplishments that we are proud of\n Basically, we managed to build an iOS app, in a language we never used before, in just 24 hours, which communicates with a server we built. Even if we only finished half of the functionality we wanted, and just 10% of the design, it's still nice :-).  \n\nWhat we have learned\nThe force is weak with the Swift. \nWhat's next for UndiVolt\n A lot of optimisation would follow, in order to make it a steady system. The backend is quite done, but needs to be much more secure. The app requires more design and the rest of the functionality. \n\nWe do plan to launch it on the AppStore in the following weeks, if we get a free hosting for long enough :-)\n",
        "hackathon_id": "jacobshack-2015",
        "winner": true
    },
    {
        "description": "\nUsed Braintree API in this project for donations on the website.\nInspiration\n\nWhat it does\nKeeps you informed about the crimes in your neighborhood. It alerts you, when you or your children cross into a dangerous area of the city. \nHow we built it\nMy team and I built an Android app, website and a simple API using Java, Javascript, PHP, CSS,HTML,Bootstrap,Google Maps API, Braintree API and GeoJson.\nChallenges we ran into\nThe most difficulties we had with getting our technology stack to work across multiple platforms, but still using this same data set, that has been scraped from the local police stations websites. The data we used in our project is publicly accessible, but there do exist companies, that collect this kinds of data extensively. The data was in .csv format and sadly, it was not divided between columns, so every row was a very long string with lots of information in it. We had to parse it using regular expressions and built a work around, so that we could easily normalize this data. The project itself was a serious challenge for 4 students, that just began their second year at the university. \nAccomplishments that we are proud of\nMy team and I are proud, that we were able to create a multiplatform solution in a matter of 24 hours. We divided our team and in pairs tackled various tasks from various angles, so that at the end we were able to focus together on creating a simple API for our multiplatform solution.\nWhat we have learned\nWe have learned, that even the most ambitious projects are not impossible. Thanks to the developers from the sponsoring companies, we have learned alot about problems, that we could run into, if we would go with our approach. Thanks to this knowledge and long discussions, we have learned about new concepts and new ways of thinking when it comes to designing databases, software and solutions. (and friendship)\n",
        "hackathon_id": "jacobshack-2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascriptangular.jsphplumenamazon-web-servicesgithub\n",
        "hackathon_id": "jacobshack-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavatearssweat\n",
        "hackathon_id": "jacobshack-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nc-language\n",
        "hackathon_id": "jacobshack-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nTinder + Leap Motion + Amazon\nWhat it does\nBrowse amazon products easily with hand gestures.\nHow I built it\nWith love and node.js.\nChallenges I ran into\nDesign is tough.\nAccomplishments that I'm proud of\njust get a correct response from amazon API\nWhat I learned\nI learned to mix amazon web services + nodejs + html\nWhat's next for Shut up and take my money!\nCorrect some bugs :(\n",
        "hackathon_id": "jacobshack-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nNowadays, we are spending a huge amount of time on social media. So, we decided to develop a chrome extension and web programming platform to help users, especially developers to control their time and improve their programming skills. \nWhat it does\nWhen the user install this chrome extension, he's redirected to the web platform to register, then, he should solve programming problems to win coins and get access to social media (1 coin = 1hour in Facebook, twitter, Instagram,etc). Thus, the user can't access to these social media websites until he win coins.\nHow we built it\nWe build it from scratch. We devised the work to three different modules; back-end(Django-Rest-Framework), front-end(AngularJs) and Chrome extension.\nChallenges we ran into\n\nFirst time to design a Chrome extension.\nCommunication between different modules; extension & web platform ( front-end and back-end).\n\nAccomplishments that we're proud of\nThe back-end is accomplished which is developed using Django REST Framework. We have used a service provided by IDEone (http://www.ideone.com) API to compile and test submission of the users. The Chrome Extension is done. \nWhat we learned\nWe learned how to develop Chrome extension. We have improved our communication skills and team work.  \nWhat's next for Commitment\nWe are planning to enhance this idea by extending this extension.It will not only be dedicated to developers but also for all social media users. For example; for a person who is fond of sport. He can link this extension to his smart phone and win coins for doing exercises. Besides students can win coins but completing their homework. Finally the RESTful API can be used by enterprises to select from high ranked users of the programming challenge platform.\n",
        "hackathon_id": "jacobshack-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaandroid-studio\n",
        "hackathon_id": "jacobshack-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nOne day, we had a GenMath midterm. As I arrived there, I looked all over the class, and my friend, Frasineanu, wasn't there!... Fast forward 6 hours later, a sad guy, with wet hair, and raspy voice asked me for a cigarette. It was my friend. Apparently, he overslept because the phone didn't wake him up. But then I thought - we can make calls to our landline phones in our rooms! They will call you, and call you, until you answer. If you answer, you will get a math question to wake you up. Thus, the solution was found.\nWhat it does\nIt is a server to call your room at any desired hours, insist if you don't answer and also ask you questions. Also, the user will be able to delete/add alarms. This is useful iff the landline phone is away from the bed.\nHow I built it\nWe used Go because of it's simplicity with concurrent functions (goroutines). The HTTP server communicates with the SIP client-server. Thus, we can add logged users (using our campus' campusnet credentials/api) into a list, check their token, add calls to a list. Also, it implements XML reading and writing into a file in case the SIP client-server crashes. \nThe SIP server will also send to the client (jWakeup) DTMF tones which will represent the answer given by the called person.\nChallenges I ran into\nSecuring go-channels,  writing cookies (I still have to figure out what I have been doing wrong), actually reading some RFC files from top to bottom to learn some protocols, debugging UDP traffic.\nAccomplishments that I'm proud of\nWriting something extensive in a such period of time - multitasking, server communication, learning protocols.\nWhat I learned\nTo prepare extensively before any task, and the fact that the start is one of the most important elements.\nAlso, to get technical - SIP protocol, SDP protocol, RTP, DTMF tones, how to properly use gochannels, basic website structure.\nWhat's next for jWakeup\nActually make it work. I will make it a service available in our campus, which will actually call our rooms (SIPp was used for server emulating), with question-asking, and answering.\nPeople to whom we've talked were very happy about the idea, and many agreed that they would like to see it implemented in the campus.\n",
        "hackathon_id": "jacobshack-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nA few weeks back I saw an article on HackerNews about how a person was able to classify neighbourhoods of London as up and coming by using non traditional parameters - the density of coffee shops and fried chicken stalls - in addition to the more traditional factors such as property prices and ease of access. We were inspired to do something similar to determine what factors we could find to help a fledgling business decide where to setup it's workspace.\nWhat it does\nLaunchpad is designed to help 2 types of entrepreneurs: those setting up a restaurant and those who are establishing a tech start-up. The entrepreneur uses the web-app to select what type of business he/she is starting and picks which of the available parameters that we selected he/she would like to use. We then generate heat maps illustrating the data sets and a combined result. The user can then visually identify which area looks promising.\nHow I built it\nWe built it using the Django framework with a python back-end. Used YELP, and Google API . BrainTree's API also\nChallenges I ran into\nThe main difficulty we had was locating appropriate data sets. While some were readily available and easy to use such as the Yelp API they had limitations such as a cap on query results meaning it was difficult to get city wide data. Others were more tricky to find and it was difficult to determine the accuracy of the data.\nAccomplishments that I'm proud of\nI'm proud of the fact that the end product more or less matched my initial vision of the project.\nWhat I learned\nPlan ahead, so that you are not rushing into things and panicking. On a technical level we got to learn about how API calls work.\nWhat's next for Launchpad\nLet's see. It all depends on what sort of data sets we can find.\n",
        "hackathon_id": "jacobshack-2015",
        "winner": false
    },
    {
        "description": "\nPlaying games is an essential part of being human. The desire to discover new things and practice new skills drives us. Technology and games are often associated with \"Couch Potatoes\", but we think that modern devices have the potential to bring more people to explore their area, or even travel to distant countries.   \nBy posing riddles and challenges that are tied to specific geographic locations, and rewarding people who complete these challenges with points, we entice users to leave their couch and get active! We utilise the excitement that a little friendly competition brings and provide a ranking of explorers , keeping track of their achievements.\nWe came together as a group of individuals with different skill sets and now deliver this fantastic app as a team of four. Each of us brought their share of talents to the table, and together we created something that none of us could have done alone. \nWe decided that the web is the perfect delivery mechanism to approach as broad an audience as possible, without restrictions for different devices, and were fascinated by the possibilities that HTML5 offers to developers of mobile applications. Some of us know Python really well and develop the server backend with the django web framework, while others drew the graphical elements, and developed the frontend with AngularJS and HTML5.\nIt was important for us to make it as easy as possible for take part in adventures and challenges, so we decided to use an registration mechanism that most people are familiar with: a Facebook account. It turned out to be challenging to integrate the authentication mechanism quickly, and a considerable amount of time was spent on this.\nWe established a test driven development workflow very early on, which was a great for both stability of the application and the fun that we had during the development. We also worked with the Travis continuous integration platform and the coveralls coverage reporter on github. Good structure and one command deployments made it possible to move very quickly, implementing features that we initially thought optional.\nTonight, we learned how to work in a cross functional team under time pressure, we learned how to rapidly prototype ideas and communicate our ideas to our team. We learned a lot about the possibilities of HTML5 and also gained some more insights into the inner workings of python libraries like social-auth and django. \nTo make a PlaceVentura an attractive platform, we think it is of utmost importance to quickly enable users to create new Quests for others, because the best challenges are put up by explorers themselves. We would like this idea to spread to more cities, to bring more gamers from the couches into nature.\n",
        "hackathon_id": "jacobshack-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptcsshtml\n",
        "hackathon_id": "jacobshack-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\narduinoc#sapimyopebblearduinoidebluetooth\n",
        "hackathon_id": "jacobshack-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nGroup chats are often limited to fixed members without the ability to focus on the context. We wanted to bring together those friend of yours, that share the same location, interest, events etc. without forcing you to communicate with strangers like other e.g. location-based chat-services do.\nWhat it does\nDeevo offers the functionality to post a topic pinned to contextual information retrieved from Facebook, Google Places, etc. Each topic stays open for a specific amount of time and is pushed to your friends' devices automatically, if they match the attributes. The conversation can than be held as long as you want, so you can keep posting the photos of yesterdays party to the same audience.\nHow we built it\nAll code is written in Kotlin, we built an Android app which posts the users location and offers an intuitive UI. The server is based on the Spark java framework and uses a MongoDB to store information. All performance-heavy tasks like gathering information from Facebook and Google, organizing the groups and pushing information is done asynchronously and could be possibly spread across servers, so all requests can be handled immediately (by deferring the expensive tasks) to optimize the mobile experience. The results are then pushed to the devices using Google Cloud Messaging. All queries to MongoDB are directly indexed and limited to the users friends, so we expect a decent scaling.\nChallenges we ran into\nThe usual issues of sharing and synchronizing the model between database, the domain-logic and the client. Since usability is the most important thing to reach a critical mass of users, we focused on a clean and tidy user interface, which is intended to do things implicitely whenever it's possible to avoid bothering the user but at the same time delights with attention to detail.\nAccomplishments that we are proud of\nReally fast asynchronous task handling and optimized database queries.\nWhat we learned\nA lot about technologies, since 2 of us were not really familiar with Kotlin, nobody knew Spark-java or MongoDB really well.\nWhat's next for Deevo\nMore integrations, better UI (introduction, designing empty spaces etc.). \n",
        "hackathon_id": "jacobshack-2015",
        "winner": false
    },
    {
        "description": "\nPurgatory\nA dark themed hack 'n' slash game.\nLead artist: Bernar Aganchyan\nDevelopers: Simo Iliev, Kiril Kafadarov\n",
        "hackathon_id": "jacobshack-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWhenever I get bored in class I start forming circles with dots and connecting them in many different ways. After one or two times, the circle starts becoming much more interesting and it ends up looking totally stunning and nothing like one would imagine in the first place.\nWhat it does\nIt plots n (inputted by the user) dots equally apart in a circle. After this the user decides how he or she wants to connect the dots, what colors they want the lines,  how big and where he or she wants the \"Star\" to be. After repeating this process with different values one or two times, the shapes seem to combine in a very visually appealing way. This allows for endless possibilities when looking to form complex patterns with The Starnator 9000.\nHow we built it\nIn order to be able to separate every dot from the vertex with equal distance, we had to compute a mathematical algorithm to be able to get the coordinates of n points, all apart from each other by the same distance, as well as being equally apart from the vertex. After this, we create two arrays and give the x values of the coordinates to one, while giving the y values to another, allowing us to connect them later in a much simpler way.\nChallenges we ran into\nBecause the team was made up of somewhat novice programmers, we wanted to learn something new. This is why we decided to create the program in html and java-script, both being languages who none of us had studied before. This, being something that we wanted, also brought us many challenges, because none of us were used to the syntax of such languages. Although we struggled we managed to break through every obstacle by researching online and discussing what we thought of each scenario thoroughly.\nAccomplishments that we're proud of\nWe are all very proud not only of learning the bases of two totally different languages to the ones we knew, but of being able to go above and beyond our original idea by being able to leave it to the user where exactly he or she wants the shapes at, as well as the size and color. Even when we had thought we could not add anything more, we decided not to stop and continue coding, by turning our program into a functional android application.\nWhat we learned\nLike mentioned before, we are all very proud to have learned the html and java-script languages together, helping others when we felt comfortable, while feeling confident enough to ask others about topics we did not feel so good about too. \nWhat's next for The Starnator 9000\nBecause of the stunning amount of positive feedback we have gotten from other groups, we have decided to publish the program online, giving the whole world access to our program. We look forward to finding new ways we can make our program much better, and of course, implementing those changes in order to continue learning these languages and making our great application even better..\n",
        "hackathon_id": "jacobshack-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\narduinoc++\n",
        "hackathon_id": "jacobshack-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaandroidphpphotoshopvk-apitextocat-api\n",
        "hackathon_id": "bigdata4business",
        "winner": false
    },
    {
        "description": "\nInspiration\n\u0412\u0438\u0434\u0435\u043d\u044c\u0435 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b \u043f\u043e\u0438\u0441\u043a\u0430 \u0434\u0438\u0437\u0430\u0439\u043d\u0435\u0440\u043e\u0432\nWhat it does\n\u0423\u0434\u043e\u0431\u043d\u0430\u044f \u043f\u043b\u043e\u0449\u0430\u0434\u043a\u0430 \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u0434\u0438\u0437\u0430\u0439\u043d\u0435\u0440\u043e\u0432 \u0434\u043b\u044f \u0432\u0430\u0448\u0438\u0445 \u043d\u0443\u0436\u0434 \u0438 \u0444\u0438\u043d\u0430\u043d\u0441\u043e\u0432\u044b\u0445 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0435\u0439\nHow I built it\n\u041f\u043e\u043a\u0430 \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, \u0442\u0430\u043a \u043a\u0430\u043a \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432 \u043d\u0435\u0442\nChallenges I ran into\n\u0423 \u043c\u0435\u043d\u044f \u043d\u0435\u0442 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432\nAccomplishments that I'm proud of\n\u041f\u043e\u043a\u0430 \u0442\u043e\u043b\u044c\u043a\u043e \u0431\u043e\u043b\u044c\u0448\u043e\u0435 \u0441\u0442\u0440\u0435\u043c\u043b\u0435\u043d\u0438\u0435 \u0443\u0441\u043f\u0435\u0442\u044c \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u043f\u0440\u043e\u0435\u043a\u0442\nWhat I learned\n\u041a\u0430\u043a \u0436\u0435 \u0442\u0440\u0443\u0434\u043d\u043e \u043d\u0430\u0439\u0442\u0438 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432 \u043d\u0430 \u0425\u0430\u043a\u0430\u0442\u043e\u043d\u0435 :P\nWhat's next for HuntDes\n\u0411\u0443\u0434\u0435\u043c \u0432\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u0442\u044c \u0432 \u043f\u0440\u043e\u0435\u043a\u0442 \u0438 \u0443\u043b\u0443\u0447\u0448\u0430\u0442\u044c\n",
        "hackathon_id": "bigdata4business",
        "winner": false
    },
    {
        "description": "\n\u0418\u0434\u0435\u044f\n\u041c\u043d\u043e\u0433\u0438\u0435 \u0445\u043e\u0442\u044f\u0442 \u0432\u044b\u0443\u0447\u0438\u0442\u044c \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439, \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0434\u0430\u0436\u0435 \u043d\u0430\u0447\u0438\u043d\u0430\u044e\u0442, \u043d\u043e \u043e\u0431\u044b\u0447\u043d\u043e \u043b\u043e\u043c\u0430\u044e\u0442\u0441\u044f \u043d\u0430 \u0442\u043e\u043c, \u0447\u0442\u043e \u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0441\u044f \u0441\u043a\u0443\u0447\u043d\u043e \u0438 \u043c\u043e\u0442\u0438\u0432\u0430\u0446\u0438\u044f \u043f\u0430\u0434\u0430\u0435\u0442. \u0414\u0440\u0443\u0433\u043e\u0439 \u0444\u0430\u043a\u0442: \u0432\u0441\u0435 \u043b\u044e\u0431\u044f\u0442 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u044b\u0435 \u0446\u0438\u0442\u0430\u0442\u044b, \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u0438\u0437 \u043d\u0438\u0445 \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0447\u0435\u0440\u043f\u043d\u0443\u0442\u044c \u0443\u0434\u0430\u0447\u043d\u0443\u044e \u043c\u044b\u0441\u043b\u044c \u0438\u043b\u0438 \u043a\u0440\u0430\u0441\u0438\u0432\u0443\u044e \u0438\u0441\u0442\u043e\u0440\u0438\u044e. \u0425\u043e\u0447\u0435\u0442\u0441\u044f \u0441\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u0442\u044c \u043f\u0440\u0438\u044f\u0442\u043d\u043e\u0435 \u0441 \u043f\u043e\u043b\u0435\u0437\u043d\u044b\u043c \u0438 \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0438\u043d\u0442\u0435\u0440\u0435\u0441 \u043a \u0446\u0438\u0442\u0430\u0442\u0430\u043c \u043a\u0430\u043a \u0441\u0442\u0438\u043c\u0443\u043b \u043a \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044e \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u0439 \u043b\u0435\u043a\u0441\u0438\u043a\u0438. \u041f\u043e\u043c\u043e\u0433\u0430\u0435\u0442 \u0443\u0447\u0438\u0442\u044c \u043d\u043e\u0432\u044b\u0435 \u0441\u043b\u043e\u0432\u0430 \u0438 \u043f\u043e\u043d\u0438\u043c\u0430\u0442\u044c \u0438\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0432 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0435.\n\u041c\u0435\u0445\u0430\u043d\u0438\u043a\u0430 \u0438 \u043c\u043e\u0442\u0438\u0432\u0430\u0446\u0438\u044f\n\u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0438 \u0446\u0438\u0442\u0430\u0442 \u043e\u0434\u043d\u0443 \u0437\u0430 \u043e\u0434\u043d\u043e\u0439, \u0447\u0435\u043b\u043e\u0432\u0435\u043a \u0440\u0435\u0430\u0433\u0438\u0440\u0443\u0435\u0442: \u0443\u0445\u0432\u0430\u0442\u0438\u043b \u0441\u043c\u044b\u0441\u043b \u0438\u043b\u0438 \u043d\u0435\u0442. \u041d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e \u043e\u0442 \u044d\u0442\u043e\u0433\u043e \u043e\u043d \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0435\u0437\u043d\u0430\u043a\u043e\u043c\u044b\u0445 \u0441\u043b\u043e\u0432. \u0412 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0435\u0433\u043e \u0440\u0435\u0430\u043a\u0446\u0438\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u043f\u043e\u0434\u0431\u0438\u0440\u0430\u0435\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u0446\u0438\u0442\u0430\u0442\u0443: \u0441\u043b\u043e\u0436\u043d\u0435\u0435 \u0438\u043b\u0438 \u043f\u0440\u043e\u0449\u0435, \u043a\u0430\u043a\u0438\u0435 \u0441\u043b\u043e\u0432\u0430 \u0438\u0437 \u0432\u044b\u0443\u0447\u0435\u043d\u043d\u044b\u0445 \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u044c.\n\u0427\u0442\u043e\u0431\u044b \u0443\u0447\u0438\u0442\u044c \u0441\u043b\u043e\u0432\u0430 \u0431\u044b\u043b\u043e \u0432\u0435\u0441\u0435\u043b\u0435\u0435, \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u043f\u043e\u043e\u0449\u0440\u044f\u0435\u0442 \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0430 \u0437\u0430 \u0440\u0430\u0437\u043d\u044b\u0435 \u0434\u043e\u0441\u0442\u0438\u0436\u0435\u043d\u0438\u044f, \u0442\u0438\u043f\u0430 \u00ab\u041a\u043e\u043c\u0431\u043e! \u0412\u044b \u043f\u043e\u043d\u044f\u043b\u0438 10 \u0446\u0438\u0442\u0430\u0442 \u043f\u043e\u0434\u0440\u044f\u0434.\u00bb \u0438\u043b\u0438 \u00ab\u0423\u0440\u0430! \u0412\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438 \u043d\u043e\u0432\u044b\u0439 \u0441\u0442\u0430\u0442\u0443\u0441 \u2014 \u041b\u044e\u0431\u0438\u0442\u0435\u043b\u044c\u00bb. \u041e\u043d\u043e \u043c\u043e\u0436\u0435\u0442 \u0438 \u043f\u043e\u0436\u0443\u0440\u0438\u0442\u044c \u0437\u0430 \u043d\u0435\u0432\u0430\u0436\u043d\u044b\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u00ab\u0412\u044b \u043e\u043f\u0443\u0441\u0442\u0438\u043b\u0438\u0441\u044c \u0434\u043e \u0443\u0440\u043e\u0432\u043d\u044f \u041f\u0440\u043e\u0444\u0430\u043d, \u0441\u0442\u0430\u0440\u0430\u0439\u0442\u0435\u0441\u044c \u043b\u0443\u0447\u0448\u0435!\u00bb.\n",
        "hackathon_id": "bigdata4business",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaelasticjavascript\n",
        "hackathon_id": "bigdata4business",
        "winner": false
    },
    {
        "description": "\nBuilt With\nnode.jsc#pythond3.jsjavascriptmono\n",
        "hackathon_id": "bigdata4business",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythongoofle-mapsinstagramtwitter\n",
        "hackathon_id": "bigdata4business",
        "winner": false
    },
    {
        "description": "\nBuilt With\nvk-sdkparse\n",
        "hackathon_id": "bigdata4business",
        "winner": false
    },
    {
        "description": "\nInspiration\nWhat it does\nHow I built it\nChallenges I ran into\nAccomplishments\n",
        "hackathon_id": "bigdata4business",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtml5javascriptjsonjquerycss3pythondjango\n",
        "hackathon_id": "bigdata4business",
        "winner": false
    },
    {
        "description": "\nWe're making the TV marketing platform of the future.\nTV is still the most powerful driver of brand awareness. When the iPhone game \"Monument Valley\" was played on House of Cards by Frank Underwood (Kevin Spacey), it quickly hit the top of the Paid Apps category on the App Store. There are entire TV shows dedicated to what characters of popular TV shows wear from episode to episodes.\nWe're here to harness the power of TV by combining it with the accessibility of Mobile. \nNow, when you watch a TV show, our platform app hooks into media metadata content API's to present you with a simple app that tells them what your favorite characters are wearing, with an affiliate link to the website where you can purchase the item.\nThat's just for now. In the future, we'd like to add the ability to favorite items and include in-app purchasing of the clothing, as well as the ability to customize user profiles so that your favorite shows and favorite items are presented to you right away.\nTech used: Alphonso API, UICarouselView, Pinterest API, Instagram API, Sketch (Bohemian Coding)\n",
        "hackathon_id": "tvnext-hack",
        "winner": true
    },
    {
        "description": "\nInspiration\nTV is part of our lives, part of our culture\u2026 How to make TV more inclusive to the Visually impaired? Trying to grasp the narrative by only listening to the dialog doesn\u2019t tell you the whole story. What about the context? What about the actions, the emotions?  If you have impaired hearing, you can turn up the volume or use closed captions. If you can\u2019t see well, or can\u2019t see at all, how do you turn up the image?\nWhat it does\nUsing your standard run-of-the-mill media player like VLC, you can now pause and send a snapshot to a software that will automatically describe the scene: what\u2019s happening? who is on the screen? what are they doing?\nToday we are using a piece of cutting-edge software that derives its effectiveness from the way it mimics the brain in key aspects of human visual processing.\nHow it works\nA snapshot of the scene gets processed by a visual algorithm, that enriches it with a text description which get conveyed back to the user through a text to speech software.\nAcknowledgements\n-Screen shot and video snippet used on this demo. (c) copyright 2008, Blender Foundation / www.bigbuckbunny.org licensed under CC\n -Neuraltalk (c) Andrej karpathy licensed under BSD\n",
        "hackathon_id": "tvnext-hack",
        "winner": true
    },
    {
        "description": "\nInspiration\nIf you look at applications, be them for PC, Mac, Android or iOS, you'll find innovation around playing with a DJ kit, but there is a lack of innovation around teaching people the foundation on how to use these tools and learn the concepts that a DJ needs. We want to take on that challenge and build a learning platform for how to learn how to DJ.\nWhat it does\nProvides a platform on which to learn how to become a DJ. With an progressive learning plan and availability of both in-house lessons and community contributions you will have a simple track to DJ greatness.\nHow I built it\nThis web platform is written on the Angular.js.\nChallenges I ran into\nEnsuring an engaging user experience that makes learning fun and encourages frequent visits. Learning is infinitely more effective with frequent use (frequency being ideally daily visits to the site) and so we wanted to capture the right parts of enjoyment with the right level of challenge that keeps the experience satisfying.\nAccomplishments that I'm proud of\nValidation from people excited to learn and utilize the platform. Music is such an important part of my life and I'm so proud to help bring more music to people's lives.\nWhat's next for DJ Guru\nNext step is a public alpha to be announced in the upcoming months.\n",
        "hackathon_id": "tvnext-hack",
        "winner": true
    },
    {
        "description": "\nInspiration\nThe ability to predict people movement will enable numerous interesting applications in areas such as urban planning and transportation. Although GPS sensors make it possible to compute locations, it does not work very well under certain scenarios such as intensive trace tracking, due to its low accuracy in indoor environment and its high battery consumption. With a rapidly growing market, nowadays smartphones are designed and equipped with more and more powerful sensors, enables them to collect a handful of various data sets containing rich information and interesting facts which awaits people to uncover. In this project, we develop an application in R called Smartracer to predict people's locations and their activities based on the data set collected by PocketCare, their location/activity traces then can be further used to improve transportation system and urban planing.\nWhat is PocketCare\nPocketCare is developed by Lab for Advanced Network Design, Evaluation and Research (LANDER) at SUNY Buffalo. This App will periodically collect information in your vicinity from interfaces such as Bluetooth, WiFi, GPS and Activity recognition module. Besides, PocketCare also asks users to input their health status (e.g., feel well, or having a flu) and provides useful health tips. The rich data set collected will be used to research user mobility pattern, in addition, the proximity information along with their users\u2019 input on their health status, will be used to monitor flu propagation, and ultimately help users to improve health. Finally, incentives are given to active users to encourage to them to use more of the App.\nHow I built it\nSmartracer consists of two parts: \n1) In the first part, Smartracer will retrieve representative locations(places that people frequently visit in their daily lives) from WiFi access point scan result collected on smartphones, based on these location information, we are able to compute the transition probability between them.\n2) In the second part, we show that it is possible to recover a person's whole trace(location sequence) given the condition that only a small portion of the locations are observed or known. To be more specifically, we treat the location series as markov chain, and further a Markov Chain Monte Carlo method is exploited to sample missed entries in the location sequences.\nAccomplishments and contributions\n\nWe extract locations from WiFi AP scan result, we further show that these locations are distinguishable and representative enough to detonate places that are frequently visited\nWe develop a MCMC sampling method which enables us to recover the missing/unknown locations with very high accuracy given only a small portion of observations as ground truth\n\nWhat's next for PocketCare: A smart sensing platform\nCurrently Smartracer is a system only works on data collected on mobile client side, in order to get useful information for public transportation, we need to aggregate such information to a centralized server to analyze traffic pattern for certain locations of interest, such as UB campus or crowded public places. More efforts are needed to work on building models on predicting and simulating large scale transportation patterns.\n",
        "hackathon_id": "wnycivichack",
        "winner": false
    },
    {
        "description": "\nInspiration\nWestern New York suffers from severe lack of voter turnout, with an estimated 33% of registered\nvoters participating in general elections. This lack of voter turnout allows for incumbent\npoliticians to maintain their position with relatively little input from the community. In order\nto propagate much needed economic and social reforms in the western New York region,\nit is vital that more citizen participate in their local government.\nWhat it does\nWNY Votes is a web application to spur voting registration and participation in \nlocal elections. Through intuitive design and easy-to-use features, WNY Votes\ninforms citizens of western New York about their local candidates, their\npolling location, and provides an intuitive interface for registering to\nvote.\nGoals:\n\nSimplify the voter registration process.\nProvide information about running candidates.\nInform users about polling locations.\n\nNon-goals:\n\nLetting users communicate with politicians.\nRecommending candidates.\n\nApplication Demo\nA demonstration of this application can be found at wny-votes.nicholasyager.com.\nHow I Built It\nVoter precinct data and geolocation was made possible by accessing the Erie Country Board of Election's internal API used to find a user's voting precinct and local government officials based on their home address. This was accomplished by writing a middleware API to access this data and present it in a meaningful way.\nElection candidates were parsed from a PDF released by the Erie County Board of elections, prepared, and hosted in a MySQL database.\nLastly, the voter registration functionality was constructed using pdffiller, a Node.js module that serves as a wrapper for pdftk. This allows the Node.js application to accept JSON data about the user registering to vote, and fill the New York State voter registration form for them. This PDF is then automatically returned to the user for printing and submission.\nChallenges During Development\nThe largest challenge I had was engineering a client for the Erie County Board of Election's API. Being completely undocumented, accessing this obscured pubic data proved challenging.\nAccomplishments That I'm Proud Of\nThis is my first time using Angular.js in a project. Despite the initial learning curve, my choice of Angular proved wise as an opportunity for growth.\nWhat's Next for WNY Votes\nI would like to aggregate more data about the candidates, including information about their backgrounds, political views, polling numbers, and news about them. The more information and context I provide to my users, the more knowledgeable our electorate can become.\n",
        "hackathon_id": "wnycivichack",
        "winner": false
    },
    {
        "description": "\nBuilt With\ntelerivetnexmo\n",
        "hackathon_id": "wnycivichack",
        "winner": false
    },
    {
        "description": "\nInspiration\nLast winter was an especially annoying time of snow in Buffalo. The south towns were especially hit hard. I wanted to build an app that mashed up the real-time location of municipal snow plows and the real-time weather data that is abundantly available to bring us a map of what routes and streets are clear, which haven't been plowed in some time, and those that need another pass. \nWhat it does\nAn Intel-Edison board connected to an adafruit GPS receiver sends it's latitude and longitude coordinates to an AT&T M2X instance. Imagine that this device is carried on a municipal snow plow.\nAt the same time, the M2X platform is also receiving device data from a weather api to store real-time precipitation and severity.\nTo make all this data available to the user, an adapter pulls the latest device data from M2X into a small Firebase store at periodic intervals. The web application accesses the data to dynamically update a Google Map instance showing the real-time snow fall and the affect it has on paths that were cleared by municipal snowplows.\nHow I built it\nFirst was getting the necessary device data - the GPS coordinated and the localized weather conditions.\nThe registration and storing of the device data was made easy with the AT&T M2X IoT platform. I didn't need to write any data storage myself which was pretty amazing.\nI then wrote a Firebase adapter to pull the latest data out of M2X to make it available for a web application.\nA front-end web application was written using the Google Maps API and Google Maps Roads API for the snapping of the GPS waypoints onto actual roads. Logic for handing the colors of the roads was handled by the web application and weather data.\nA periodic clock then kept the data on Firebase and the web application in sync to show the most up to date information. All historical data can be seen in M2X.\nChallenges I ran into\nThe Intel-Edison board I had was nearly bricked. Intel only provides flashing scripts through Unix and I had to rewrite some of their scripts to have it work through a Mac OS. A blog post should probably be written on how to fix the boards using a Mac.\nOther than that, it was smooth sailing. I wasn't storing data myself so I didn't have to worry about any of that. I was just reading, requesting, and posting data to services that were already available.\nAccomplishments that I'm proud of\nThat Intel-Edison board, first time I used one and it was fun. M2X was easy to get devices and their data into the platform to be used where ever.\nWhat I learned\nWhat's next for Buffalo Snow\nHopefully this project would pique the interests of others who may want to get together to continue building it. It's a neat multi-disciplinary project.\nAnd honestly, the Intel-Edison isn't even necessary - if you have anything that can get GPS coordinates, just send it into M2X and the platform handles everything. No need to write your own device software as you can \"normalize\" everything in M2X and pull it out from there.\nAlso, the weather api used super-local weather station devices for it's weather - so incorporating their exact locations and conditions would be pretty neat. I used a more general area for my dynamic mapping. \n",
        "hackathon_id": "wnycivichack",
        "winner": false
    },
    {
        "description": "\nIntroduction\nBefore making any important decision in our lives, we need to study the related statistics and the data. If you want to buy a new home in a new town, you would like to know the property rates, crime rates, education, etc. of the neighborhoods. If you want to make a new public policy, you would like to study affected areas from different statistical perspectives. Therefore, data plays a very crucial role in making any important decision. But it's very tiresome to go through the data in excel files. A good data visualization can make your life a lot simpler and interesting. Therefore, the main goal of our project is to develop a more intuitive data visualization tool for our society that can be used by the citizens, as well as by the policy makers.\nTime Series Visualization\nTime Series relational visualization of various parameters of New York State government data. It presents the comparison of data of various counties and their change during a time interval.\nIt shows the dynamic fluctuation in Education (x), Poverty (y) and Health (radius) of New York State Counties over the last 20 years. Counties are colored by geographic region; mouseover to read their names.\nIDEA:\nTo enable the users to not only view the various parametric data which influence daily lives of people but also a comparison among counties and how they have grown over the years.\nTo show how various countries have developed since 1980.\nCORE CONCEPTS:\nThe graphical circles (nodes that represent various Counties) that can be dragged and will indirectly update the visualization.\nFocus: the visual element that is being dragged (can be a simplified simplified such as into a point or shadow).\nTrajectory: the visual path along which the Counties circles  can be dragged. It is represented as a line.\nData points: series of points the focus can reach on the trajectory.\nDistorted Map Visualization\nWhen we look at the map of the Erie county, all we see are the towns and cities divided by their boundaries. A physical map just gives us a geographic picture of a place. What if maps could depict every possible statistic, instead of just showing the geographical areas? We developed a tool called DistoNY, that can distort any kind of map and can show different kinds of data within the maps while preserving the topology of the original map. Suppose we want our maps to show which city is the most densely populated in Erie county. If we feed the population density data into DistoNY, it will distort the Erie county map and change the areas of the cities/towns according to their density. That is, the city with the highest population density will have the highest area. It not only gives different perspectives to look at the different cities, it also gives a unique experience of maps with arbitrary data.\n\nWhen we read data from the excel files, it's hard to relate them according to their geographical locations. Like for example, the public safety department of Buffalo wants to increase their police force in the areas which has a higher crime rate. When they read the crime rate data in the tables or bar charts or pie charts, they can only see the name of the neighborhood and their corresponding crime rates. But if they use the DistoNY and feed in the crime rate data, they can study the crime scenario in the map itself. Suppose the west region of the county has unexpectedly high crime rate compared to the other regions, then the resulted map in DistoNY will enlarge the cities in west region and can help the officials to decide which region should be their main focus. Therefore, instead of looking the data in different charts and then relating them on the maps, we can use DistoNY and view that statistic in a single step.\nLast but not the least, the major advantage of using maps to view data is the photographic impression they can make. Maps can unarguably give a long lasting memory, as compared to tables and charts. Let's take an example of Matt, who is a kid in 4th grade. Matt wants to study what counties of the NY state have the most population density and which ones have the least. If you give him this information in a tabular form, he will take a lot of time in remembering these facts. But if you show him the facts on the map using DistoNY, he will have a long lasting impression of these facts. Suppose two corners of the map generated from DistoNY are very large and the other two are very tiny. So in the future, even if he forgets the exact name of the counties and their corresponding densities, he'll have a rough estimate of the parts which are more densely populated.\nMajor Impact\nDistoNY gives a very interesting approach to looking into the maps and can help the citizens, government and students to have the best out of the data they have and can certainly play a key role in making important decisions.\nChallenges Faced\nThe aim of our project is to visualize as much data as possible. But we faced major issues in integrating fragmented datasets and constructing a consistent visualization tool. Apart from dataset issues, we spent a lot of time in understanding how image visualization and image distortion works. After learning that, we started working on map distortion and we realized that distorting a map while preserving the map's topology is a very challenging task. We wanted counties and cities to be distorted based on the data, but at the same time, we had to maintain their interconnectivity. We spend a lot of time in coming with most effective algorithm to achieve the same.\nTechnology Stack\nAlgorithm to distort the maps while preserving the topology of the original map: http://lambert.nico.free.fr/tp/biblio/Dougeniketal1985.pdf\nJavaScript libraries to visualise data: D3.js, Topojson.js, cartogram.js, Colorbrewer.js and Dragit.js. \nPython to parse the time-series data into the graph-ready json format. \nogr2ogr to convert shapefile(.shp) to Geojson format\nTopojson to convert geojson to topojson format. Topojson is a compressed version of geojson and is much faster for rendering maps.\nBackend is built on JavaScript and has been hosted on Parse Cloud.\nDatasets: erie-county-demographics from BuffaloOpenData, https://data.gov, https://data.ny.gov/, https://gis2.erie.gov, https://gis.ny.gov\nWhat's next for DistoNY\nWe will continue adding more data and data visualization techniques into DistoNY and will keep improving the cartogram algorithm. We want to see DistoNY as a platform that that adapts the user's understanding of data and provide a personalized data visualization tool.\n",
        "hackathon_id": "wnycivichack",
        "winner": false
    },
    {
        "description": "\nBuilt With\nphphtmljavascriptmysqllovekindness\n",
        "hackathon_id": "wnycivichack",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe believe there's power in knowledge. So when designing our connected home experience, we asked ourselves, \"How can we leverage a smart home's full potential to empower homeowners?\" Well, we also believe there is power in numbers, so why stop at connecting the home when we can connect a whole neighborhood. The power of the A6 platform allows us to gain real-time insight about what's going on, not only in a single home, but throughout the entire community. By connecting homeowners with this knowledge, neighbors can work together to not only improve their own homes, but to improve their community as a whole.\nWhat it does\nOur ConnectedCommunity app leverages the anonymous connected home data of a whole community and presents it to homeowners to help them be safer, healthier, and smarter members of the community. Using Allstate's A6 platform, we display valuable data about your own home right alongside important information about your community. Are you using more or less water than your neighborhood average? And how can you reduce your water waste and contribute to a greener community? Has there been crime in your neighborhood recently? What steps can you take to make sure your home and family are safe? These are all questions we answer with our unique connected community interface. \nEach ConnectedCommunity homeowner is a member of a community, along with all of the ConnectedCommunity platform members in their location. Homeowners connect their home with the A6 platform and receive valuable information about their homes as well as homes around them. Connected Community communicates information in two main ways: the Community Bulletin and the Homeowner Hub. \nThe Community Bulletin displays whats going on where the homeowner lives. With updates on recent happenings and community statistics, users can see the health of their neighborhood, along with relevant options to take action. Were there 4 fires in the last month? Maybe you want to set up an alert when your smoke detector is low. Is your community using more water than usual? Get alerts when you run over a certain water level to help your community be greener.\nThe Homeowner Hub displays more personal information in the context of your community as well as challenges and incentives to help you be a smarter homeowner. How much electricity are you personally using compared to your neighborhood average?  If you don't leave your house with your doors unlocked for a whole month, we'll give you secure homeowner credit. We give homeowners information and incentive to improve their communities by making smarter decisions.\nWe implement a rules system to not only display connected community information to users, but also give them options to leverage the information. Users can access sensor states and create rules for receiving alerts or making emergency calls. For example, if I leave the home with my water on, I can set a rule to notify a trusted neighbor to stop water waste.\nHow I built it\nOur ConnectedCommunity system works accesses the A6 system through a central server which servers user mobile apps based on their registered community group and household. When a homeowner connects to the ConnectedCommunity network, they join with a groupid (represents communities of homes) and a sensorid (their personal home). The server is already subscribed to the homeowners A6 groupid and stores the group's sensor data in a database. When a user connects, the server serves the anonymized community statistics and personal home statistics to their mobile app. We also set up a socket for dynamic data updates. When A6 posts to the server, the server updates the database, and serves the changes to community members mobile apps in real time. \nFor the server, we chose to use node.js/Express for it's simple and efficient HTTP routing. We used the socket.io library to setup a real-time connection between the server and app.\nFor our app, we chose to develop on the Android mobile platform.\nChallenges I ran into\nWe found that fitting the A6 API to our \"Connected Community\" concept took a bit of creativity. We chose to represent our communities with A6 groups and use a single A6 sensor for each home, with each sensor sending multiple different IoT events. With this concept, each sensor has a very long and difficult to manage log of events that turned out to be difficult to manage, process and parse.\nAccomplishments that I'm proud of\nWe are proud of coming up with a novel way to use the internet of things and connected home to improve our communities and keep people safer.\nWhat I learned\nWe learned that spending the extra time to solidify a good concept is always worth it. We learned that having a lot of data isn't inherently useful, it's what knowledge is in the data and how it can be leveraged that is valuable to improving our world. \nWhat's next for ConnectedCommunity\nWith more than a couple of hours to work with, we believe that we could turn ConnectedCommunity into a complete and refined product, that could actually be deployed and used by millions of Allstate homeowners. We would love to work with Allstate further to extend the reach of our ConnectedCommunity concept.\n",
        "hackathon_id": "connectedhome",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe wanted to make a system that understands your living habits and lifestyle. This information can be priceless for prediction, automation (and advertising ;) ).\nWhat it does\nIt understands your living habits and lifestyle. This information can be priceless for prediction, automation (and advertising ;) ).\nHow I built it\nPython.\nA.lot.of.f**king.python.\nChallenges I ran into\nOur algorithm not giving us the data we expected it to.\nWhiny teammates.\nAccomplishments that I'm proud of\nPython.\nWhat I learned\nHow to delegate work to others.\nWhat's next for Home Index\nWorld Domination + Python wrappers\n",
        "hackathon_id": "connectedhome",
        "winner": true
    },
    {
        "description": "\nInspiration\nWhat it does\nHomeSense is a web application designed to view all of a user's registered groups and sensors. The application portal allows you to view a log of all activated sensors and our algorithm recommends other sensor states and displays them in the portal.\nHow I built it\nThe website is built on Django, a Python framework. The database behind the application is a sqlite3 database, with two models: a Group and a Sensor, where a group \"has many\" sensors.\nChallenges I ran into\n\nAuthenticating the website so that only users can view their registered groups and sensors.\nFinding an intelligent way to get up-to-date information from the webhook.\n\nAccomplishments that I'm proud of\n\nWe are proud of the speed and flow for creating a new group, and creating sensors assigned to the group\nWe are also proud of the real time log stream on the index page.\n\nWhat I learned\n\nThe A6 platform (how to debug, test, and fix issues with the api flow)\nWebhooks\n\nWhat's next for HomeSense\n\nBuilt a cross device compatible React.JS app for Android and iOS to query the RESTful endpoints our application provides so that other devices can register\nWe would like to have a machine learning algorithms (for example decision tree or naive Bayes) underneath the recommender systems. The rules for the recommender system will be trained from the previous sensor data patterns.\n\n",
        "hackathon_id": "connectedhome",
        "winner": true
    },
    {
        "description": "\nInspiration\nMovement patterns can tell a lot about the current state or potential state of a situation. We decided to build an application that uses this idea in congruence with an IOT platform to help minimize the costs of these situations.\nWhat it does\nThe SMART Positioning System uses data sent from IOT devices attached to home residents to minimize risks. This could be a phone with a GPS enabled or some kind of smart watch that allows for tracking of residence within the home. Using data from possible risky scenarios and possible high risk situations, alerts can be sent to residents or emergency contacts.\nHow I built it\nOur implementation uses the idea that we are able to track the location of an individual inside in environment. Additionally, we can sample the state of an open window or unattended stove through these features. Certain behaviours of the position tracker can alert the program to potential risks or to minimize damages that have already occurred. For example, if the position of a person is not within the radius of an open flame, there is clearly a risk of fire. Our program can detect this and send a text message alert to residents of the household. Using Java Interfaces and visualizations, we can see how our program reacts in a simulated environment.\nChallenges I ran into\nOne of the biggest issues was finding a way to send data over JSON through A6 that would allow for easy data retrieval on the client side. Additionally, we had trouble using a Python client to interact with the A6 platform but were able to remedy this issue by switching to Java.\nAccomplishments that I'm proud of\nWe are proud of the fact that we are able to use remote sensor inputs to plot the location of residents in the home to potentially hazardous situations. Our three clients, the sensor-client, server interface, and Graphical User Interface are able to interact together with the WebHooks platform to minimize risks.\nWhat I learned\nAs our first hackathon, our team learned how to work under extreme physical and time constraints. Additionally, we learned how to use different modules to interact with a web based platform. This also allowed us to think about how connected technology can be used to improve future living experiences inside a connected home.\nWhat's next for SMART Positional Systems\nSMART Positional System could integrate data analysis to perform calculations that lead to high-risk situations. Machine-learning is an obvious candidate as we can take data from situations and apply it to some kind of polynomial regression algorithm to further predict risky situations.\n",
        "hackathon_id": "connectedhome",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaandroid\n",
        "hackathon_id": "connectedhome",
        "winner": false
    },
    {
        "description": "\nA home filled with sensors makes it have the potential to do a lot of cool events. However, isolated, these sensors can accomplish little. If the sensors in the smart home are allowed to connect with one another, they can do a lot more. Gathering information from a variety of sensors and smart devices throughout the house, the Allstate Hub connects a variety of different sensors and devices to provide an easy-to-use interface for a homeowner to manage their place of residence.\n",
        "hackathon_id": "connectedhome",
        "winner": false
    },
    {
        "description": "\nBuilt With\nphpjsoncloud-foundrymongodba6\n",
        "hackathon_id": "connectedhome",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptpebble\n",
        "hackathon_id": "connectedhome",
        "winner": false
    },
    {
        "description": "\nInspiration We started by hearing the challenge of a way to improve parking meters and analyzing the history of it.\nWhat it does It enables people to make parking spaces payments by using cellphone SMS. The user sends an SMS where he shares his/her plates and time he/she wants to park.\nHow I built it  Ruby and Parse\nChallenges I ran into finish the program in less than to hours, learn how to use Parse\nAccomplishments that I'm proud of work under pressure, work in teams and use of new technologies I didn\u00b4t know about.\nWhat I learned Parse, Cultural Innovation, Social Innovation, Strategy, turn email into SMS.\nWhat's next for PaCo Invite people to move in different ways around the city.\n```require 'rubygems' # not necessary with ruby 1.9 but included for completeness \nrequire 'twilio-ruby' \nput your own credentials here\naccount_sid = 'AC30e4ca52ff33aa66bc3072abb67bfd9f' \nauth_token = '2b6bfbd9232d0bc6809d2d06ffaa47d6' \nset up a client to talk to the Twilio REST API\n@client = Twilio::REST::Client.new account_sid, auth_token \n@message = @client.account.messages.get('SM41209d65e98e41018c542e6027f78794').body\nmessageText = @message.split(\".\")\naMessage = {\n  \"plate\" => messageText[0],\n  \"minutes \"=> messageText[1],\n  #\"number\" => @client.account.messages.from,\n  \"time\" => Time.now()\n}\nputs \"Plate: #{aMessage[\"plate\"]}, Minutes: #{aMessage[\"minutes\"]}, Time: #{aMessage[\"time\"]}.\"\nPhone: #{aMessage[\"number\"]}\u00b4\u00b4\u00b4\n```.          21 zKGKG zKGz\ufffd..         \ufffd1 zKGKG zKGBd\u02c7\u02c7\u02c7\u02c7\u02c7\u02c7\ufffd\u2044\u02c7\u02c7\u02c7\u02c7\u02c7\u02c7\u02c7\u02c7\u02c7\u02c7\u02c7\u02c7\u02c7\u02c7\u02c7\u02c7\ufffdfseve\ufffd\u2044ntsd-uuiFSEVEN~1    1 zKGKG zKG\u00a2\ufffd$\u00b4\u00b4\u00b4\n",
        "hackathon_id": "changemakers-day-hackaton",
        "winner": true
    },
    {
        "description": "\nBuilt With\napp-inventor-2\n",
        "hackathon_id": "changemakers-day-hackaton",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtml5css3javascriptparse\n",
        "hackathon_id": "changemakers-day-hackaton",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe main inspiration for this project comes from the difficulties the bicycle users have in order to travel within the city.\nWhat it does\nIt can be used to calculate the best routes to travel in, based on many factors, such as the bikeway routes, safe zones, presence of other cyclists, and so on.\nHow I built it\nWe are on the designing phase of the project. We used Adobe Illustrator in order to make the design feasible and then we prototyped the app on a Wix server.\nChallenges I ran into\nNot enough time. Technical difficulties with the designs.\nAccomplishments that I'm proud of\nWhat I learned\nWhat's next for WIILS\nThe next step for us to improve the development of WIILS would be to start coding the application and doing experiments to release a beta version.\n",
        "hackathon_id": "changemakers-day-hackaton",
        "winner": false
    },
    {
        "description": "\nInspiration\nLa falta de participaci\u00f3n ciudadana nos ha hecho querer generar conciencia sobre la movilidad en nuestra ciudad \nWhat it does\nHow I built it\nUtilizamos programas como c# y unity\nChallenges I ran into\nAccomplishments that I'm proud of\nWhat I learned\nTrabajo en equipo, nuevo software\nWhat's next for U-block\nContinuar con los niveles del juego\n",
        "hackathon_id": "changemakers-day-hackaton",
        "winner": false
    },
    {
        "description": "\nInspiration\nLos cultivos en M\u00e9xico son muy susceptibles a plagas y a da\u00f1os causados por el clima tan variado causando as\u00ed inflaci\u00f3n en los precios y afectando a personas de bajos recursos.\nWhat it does\n-Desarrollo de productos de bajo costo para el an\u00e1lisis de cultivos. \n\nImplementaci\u00f3n de un sistema de an\u00e1lisis de cultivos.\n\nHow I built it\nCon el desarrollo de UI en Java, y Matlab\nChallenges I ran into\nLa implementaci\u00f3n de sensores en la UI\nAccomplishments that I'm proud of\nImplementaci\u00f3n de sensores en una UI\nWhat I learned\nConceptos b\u00e1sicos  de sensorica y control\nWhat's next for Argos\nMas desarrollo de la UI, para poder dejar un producto final con una experiencia de usuario muy din\u00e1mica y sencilla.\n",
        "hackathon_id": "changemakers-day-hackaton",
        "winner": false
    },
    {
        "description": "\nDownload\nhttps://play.google.com/store/apps/details?id=com.blink.tutor\nInspiration\nTutoring hasn\u2019t changed much since its inception online. Hiring a tutor gives you a plethora of other problems to worry about like sending emails, making sure you hire a tutor worth the money, finding a place to study, finding someone cheap, etc.. Among the many tutoring services out there, only a few stand out like Khan Academy or Princeton Review However, among all of there, not one company really meets the needs of college students. Most students enjoy and learn more during an in-person tutoring session. Scholarly solves that problem.\nWhat it does\nScholarly gives you on-demand tutoring anytime and anywhere with a nearby tutor. Sets appointments, rate tutors, chat, screenshare in real time.\nHow we built it\nScholarly is an Android App built with Java, Parse, XML, and Moxtra API.\nChallenges we ran into\nIntegrating Moxtra into our app was very difficult for us. Also Building a real time, two way channel for tutors and clients to communicate and keep each other updated. \nAccomplishments that we are proud of\nWe are very excited for Moxtra integration as it makes Scholarly ten times more valuable for people far away. Creating an efficient index searching query. \nWhat we learned\nReal time databases, Moxtra API, User Profiles, Android Material Design, Search Queries\nWhat's next for Swift Tutor\nWe will build an iOS App and launch at universities this winter.\n",
        "hackathon_id": "hackingedu",
        "winner": true
    },
    {
        "description": "\nInspiration\nStudents spend a lot of time in chairs. There are many chairs, at home and at school. But not many people know about chairs. Chairs are everywhere but no one notices them!!?!\nWhat it does\nThe Hack Chair.js is an analytical tool that is built off of a chair. It uses an iPhone's gyroscope to detect how far back a chair is leaned. It also uses the camera in a very creative manner to detect how good a student's posture is when sitting on a chair. \nThe arm of the chair contains a camera that allows teachers and other students to collaborate. Anyone can see what is on everyone's desks as they work together. \nThe muse on the head is used to check how sleepy a student is based on their eye movements and how the chair is positioned.\nEverything is wrapped together in a Javascript Library that anyone can use to take analytics of their chair.\nHow I built it\nWe built Hack Chair.js out of a metal chair that was in the auditorium. The phone holder is made out of the nachos containers from one of the snack tables. The arm is made of the cardboard Classic Chips Mix box. Everything is held together with Duct Tape.\nThere are two iPhone apps in order to make the Hack Chair work. The phone on the back of the chair runs a camera that detects posture based on how dark the photo is. The gyroscopic accelerations are used to calculate how much the chair is leaned back. The iPhone on the arm runs a camera via a Moxtra SDK-based app to stream video.\nChallenges I ran into\nNothing worked but then I fixed it\nAccomplishments that I'm proud of\nNothing worked but then I fixed it\nWhat I learned\nI learned about chairs.\nWhat's next for Hack Chair\nUse a better chair.\n",
        "hackathon_id": "hackingedu",
        "winner": true
    },
    {
        "description": "\nInspiration\nVirtual Reality offers the potential to experience wonders like never before. In a matter of seconds, one can emerge in other worlds, vast landscapes, surreal environments, and even inside of a human cell. Our team decided to create this project for HackingEDU in order to showcase the power of Virtual Reality to immerse and educate users at the same time. VR has the power to inspire joy, captivate audiences, and blend the wall between fiction and reality. We sought to use this capability for a greater purpose, and developed for education, hoping to encourage a love for learning while simultaneously granting a truly unique and enjoyable experience. And thus, Cell VR was created!\nWhat it does\nCell VR offers the chance to deeply explore and interact within a human cell. Your job is to connect different resources inside a cell in order to simulate how an actual cell may work. Simply drag glucose into mitochondria in order to create ATP, which can then be thrown into the nucleus for mRNA in return. The list goes on, and through Cell VR, one can both learn about the cell and experience a unique and innovative educational game.\nHow I built it\nCell VR was built using the Oculus Rift, the Sixense Razer Hydras, the Unity Game Engine, and Autodesk Maya for 3D modeling. In fact - all models were made by the team, and no external models were used. The Oculus Rift was our VR hardware, and the Razer Hydras were our chosen input mechanism, and they allow easy grabbing and moving of cell parts. The Unity Game Engine is our teams favorite engine, and the one we use the most often.\nChallenges I ran into\nOur greatest challenge was deciding whether or not we were qualified- or knowledgeable enough- to teach Biology. We had to do the required research and make sure that we were getting our facts correct, since this is an educational project. When it comes to using hardware like the Razer Hydras and the Oculus Rift, it's hard to divide work efficiently. What one person builds for the project may not work on someone else's computer, simply because VR plugins are not supported. As a result, collaboration involves quite a bit of messy GitHub interaction and file transferring that often resulted in frustration.\nAccomplishments that I'm proud of\nOur team was able to successfully make a full educational game in 36 hours, and felt accomplished that we created something that may truly make a difference. Virtual Reality has incredible amounts of potential outside the gaming industry, and we believe that we can set standards in a field that has hardly been developed. We were able to make the first step in making a difference.\nWe also discovered that there is such a thing as caffeinated cereal. I'm pretty proud of that.\nWhat I learned\nUser interaction is extremely important, and we discovered that it's important to consider how someone else may interact with our game. Should we add instructions? Should the user pull or grab objects? It's sometimes hard to consider what might happen in the game before we demo it to the public, but we learned a lot about differing perspectives, even among each other.\nWhat's next for Cell VR\nWe hope to create different kinds of cells, such as liver cells, muscle cells, and maybe even plant cells that the user can explore and interact with.\nFor more information, visit http://www.connor-a-smith.com/cell-vr\n",
        "hackathon_id": "hackingedu",
        "winner": true
    },
    {
        "description": "\nBuilt With\njsonarduinonode.jsexpress.jsiosibm-watsonbluemixusb\n",
        "hackathon_id": "hackingedu",
        "winner": true
    },
    {
        "description": "\nShopping Cart Math\nA math game targeted towards children / young students using products from Target.com\nTable of Contents\n\nIdea\nTarget Products\nChallenges\nVersion 2.0\nAbout The Developers\n\n\nIdea\nSince the hackathon had an education theme, our team wanted to encourage kids to learn math by giving them real-world prices and scenarios. When we shop at Target, most of us have played the game of who can guess the closest total price of the purchase. It's a fun idea that we wanted kids to have access to and keep them occupied while the parents do some grocery shopping. Currently, our problems involve addition and multiplication. As players progress, we increase the quantity of total items as well as quantity of individual items.\n\nTarget Products\nWe used the Target API to get product name, price, image URL, and product detail Target URL and stored it in our PostgreSQL database. At first we were using SQLAlchemy to query that data to display in our UI. However, we wanted to test out Cluster Point (one of the sponsors of the hackathon) so we imported our data to a Cluster Point account and we are not making an API call each time we display a math problem.\n\nChallenges\nWe had so many ideas and features we wanted to add to this game! \nSince Shopping Cart Math is inspired by the guessing game at checkout, we really wanted to have interactions between users. We wanted to use websockets to bring that to a multiplayer level if we had more time at the hackathon! We also had an idea to make the game run on a time limit so that the user is forced to calculate on their feet. We hope to implement these ideas in our Version 2.0.\n\nVersion 2.0\nIn addition to the above ideas, we plan to expand this project to incorporate subtraction and division. We also plan to introduce algebra/variable problems such as \"If I have $60, what combination of x and y items can I buy?\". \nWe also wanted to display a step-by-step walkthrough of the answer so that the player can identify what they did wrong and learn from their mistakes.\n\nAbout The Developers\nLauren Ortencio | GitHub | LinkedIn\nPaola Socorro | GitHub | LinkedIn\nSusan Chin | GitHub | LinkedIn | Personal\nAndrew Nguyen | GitHub | LinkedIn\n",
        "hackathon_id": "hackingedu",
        "winner": true
    },
    {
        "description": "\nCategory\nCoolest pebble hack!\nWhat it Does\nDailEQs is a Pebble math game that helps users increase their mental agility. Practice your arithmetic conveniently and on the go with these daily equations.\nWhy should I put DailEQs on my Pebble?\nHad I been using an application like DailEQs on my smartphone for the past month, the amount of careless arithmetic mistakes that I'm going to make on my next math midterm would have been drastically smaller.\nThe fact that Pebble applications are somewhat limited in complexity compared to other smart devices is more of a blessing than a curse. Not only is the battery life great in comparison, but the amount of distractions that come with smart phones is diminished. This makes the Pebble an ideal platform for easy to access study tools.\nInspiration\nWe came to HackingEDU with a one main goal, to study for our Discrete Math midterm.\nWe ended up learning a lot about the Pebble SDK, Pebble JS, and C.\nAs with most math courses, calculators will not be allowed during our Discrete Math exam. Most students would agree that the availability of calculators while doing homework is a crutch when it comes to test preparation. Practicing arithmetic daily on your pebble is a great way to improve your test taking abilities and confidence.\nWe decided on the drive up from UCSC that we would make a Pebble App. Our team member Sean owns a Pebble Time and it was an opportunity for us all to learn something completely new. Originally we set out to make an Alarm application that made you solve a math problem to snooze. We noticed that there was a lack of math puzzle games on the Pebble appstore, so we changed direction after a few hours of coding the alarm in C.\nPlanned Improvements\nHighscore Storage\nOption to change difficulty\nImprove the equation generation algorithm to create more unique equations\nAbout Us\nWe're a team of four third year Computer Science majors at UCSC. All of us just transferred in from California community colleges. This was our first Hackathon and won't be our last.\n",
        "hackathon_id": "hackingedu",
        "winner": true
    },
    {
        "description": "\nInspiration\nHave you ever met someone new, greeted them, shook their hand and exchanged names with them... only to forget their name the second after you hear it. So have I.\nAs an exchange student from Norway, I experienced this the hard way during my first weeks at San Jose State University. And in fact, I still do, even here at the hackathon. With so many new people and names every day, it feels impossible to remember all of them. Not remembering someone's name can be awkward both for the one who's forgotten and the one who forgets. But in my experience, it almost never have anything to do with the person not being important or interesting or anything like that. It's just really hard to remember.\nFew things are as important as socializing, and especially in school is friends and school mates really important. Both academically, and just in general. Remembering someone's name can be the difference of saying hi when you see that guy you met last week in the hallways, rather than avoiding him to avoid an awkwards situation. It might be the difference between asking that girl you met that one time about the homework due tomorrow, or not. Since it's a lot easier to say \"Hey, Emily!\" rather then \"Hey, you...\".\nOk. Maybe I'm being a little overdramatic here, but I have smooth solution anyway! A pair of apps for your smartphone and smartwatch.\nWhat it does\nUsing the accelorometer and mic, on the Pebble Time and the new Pebble Time Round, my watchapp will automatically recognize when a handshake is initiated, start voice recognition, and remember the name of the person you're talking to! You can then review the information later, along with information about when the handshake took place, and then rehearse and remember the name of every single person you just met!\nHow I built it\nWith Pebble's Cloudpebble.net development interface, I programmed a watchapp in C (my first attempt ever!).\nAnd with Java and Android Studio, I made a companion the watchapp can talk to and store entries in. \nChallenges I ran into\nBeing my first attempt at making an app for Pebble, and also one of my very first Android app I ran into a lot of challenges! The biggest one was making them talk together.\nAccomplishments that I'm proud of\nBut thanks to helpfull mentors and a lot of  reading on the web I actually made it work!\nWhat I learned\nEverything. C, Pebble SDK, Android SDK and that there's almost no limit to what's possible if you really apply yourself for two days!\nWhat's next for Morten's Fanclub\nWorld dominance.\nLink: www.mortensfan.club\nThe link thing under doesn't recognize .club as a link apparantly, so if that one doesn't work go for the github one!\nNever forget a name again, thanks to Pebble and my awesome project.\n",
        "hackathon_id": "hackingedu",
        "winner": true
    },
    {
        "description": "\nInspired by fitness tracking bands, Alang is a language tracking tool that provides users who are living in a foreign environment a daily grammar mistake summary.\nUnlike typing which can give you immediate feedback, speaking cannot without someone in front of you. With Alang, all you need to do is go about your day speaking the language you are trying to learn. At the end of the day, you will get a summary about all the grammar mistakes that you made during the day. \nTechnical details\nAlang is composed of two parts: a Pebble app and a web application built using React, Redux, Node, and Socket.io.\n\nUsers speak into the Pebble app, written in C, which uses Pebble\u2019s Dictation API for speech-to-text\nThe Pebble app uses Javascript to send the text to an API and receive corrections. (stretch goal: display these corrections on-device)\n\nThe API updates its state in-memory (stretch goal: use Redis or some other persistence) and sends out updates to all connected web clients.\n\n\nNext steps\n\nDisplay corrections on-device as soon as they are received\nUse a database to store grammar suggestions\nProvide daily / monthly summaries and more helpful tips on mobile application\n\n",
        "hackathon_id": "hackingedu",
        "winner": true
    },
    {
        "description": "\nBuilt With\nhtml5css3javascriptjquerydolby\n",
        "hackathon_id": "hackingedu",
        "winner": true
    },
    {
        "description": "\nEduPod.club - Vulcan Learning for Humans\nAn exclusive personal learning club that enables humans to learn as quickly and efficiently as Vulcans - utilizing Dolby 3D in VR - and magical AR.\nWe present a \u201cnew kind of mnemonic\u201d: VR acoustic + Dolby 3D directional + AR tactile feedback\nUsing Wolfram Development Platforms's vast knowledge domain and easy Cloud Object API Function deployments, we allow humans to create their own customized learning curricula. The human can study for any topic with Vulcan speed - from recognizing organic chemistry to countries of Africa to the most interesting domain names registered with .club!\n(We have cached a selection of topics on Clusterpoint databases - with a server endpoint using Linode and IBM Bluemix.)\nWith each prompt, the card plays at a particular musical location in the 3D sphere. The human must find it and unlock it by saying the answer.  \nThe more adept the human is at learning the topic, the more normal-speed the song plays - the Vulcan Academy recommends continued practice until the human can get the rhythm right and at a respectable pace that fits the song.\nHuman learning is enhanced by tactile touch, so our system also works to Vulcan-mind-enhance traditional flashcards: In \u201cVulcan Reality Mode\u201d we enable humans to see what we Vulcans can very easily see, but also enhanced with tactile-audio.  \n",
        "hackathon_id": "hackingedu",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe were looking at ads through an old magazine that we picked up at the Cupertino City Library. There were several pages dedicated just to ads about college counseling services, ans we noticed many trends: these services prided themselveson costing \"just three thousand dollars\", offered \"unparalleled advice\", and was run by professionals. We decided to put that to the test by automating the entire college counseling process and removing the need for unnecessarily costly sessions.\nWhat it does\nOur web application initally gathers personal, acadmeic, and extracurricular information from the student, including the college the student aims to attend. We then use a college database we compiled to compare their statistics to that of the school. Using numerical values generated as a function of the user input, we suggest other colleges the applicant might be interested in attending. We then formulate a timeline that we suggest the student follow in order to become a competitive applicant for their desired colleges.\nHow I built it\nCollege Database - We created a JavaScript spider which accessed every single college listed on USNews and World Report's College Databases. JavaScript spider gathers key information stored into a separate text file stored online for our project. All our information was then stored onto a BlueMix Cloudant NoSQL database for future access. BlueMix's huge storage allowed for large amounts of data and quick access.\nAlgorithm - We used algorithms that used user input to give a standard numerical value from 1 - 100 on three categories: extracurriculars, academics, and testing. Since colleges had different criteria for admittance, we knew it was important to create a universal scale in which all colleges are rated. For extracurricular score, for example, key words and phrases were used to create logarithmic growth functions that increased slower as they grew.\nWeb Application - By using a combination of intelligent algortihms, college databases and an intuitive UIUX, we were able to create a useful and good-looking application that planned out the future a high school student should strive for in order to achieve competence in their respective college applications. \nChallenges I ran into\nBecause college decisions seem to take into account many aspects of a student's life, we had to boil the multiple factors down into what would be most important for a college. We had to weight scores differently based on the college's consideration of various factors like different weighting about grades, extracurriculars, and testing. Agreeing on a weighting system for extracurriculars, academics, and testing was the hardest, and we discussed the topic for over half an hour.\nAccomplishments that I'm proud of\nWe messaged our friends late at night to ask them what they felt was the most important part of college applications, and we learned a lot about what makes our classmates unique, whether it's from what their future dream college is to what they feel should be most important when considering an applicant. I'm happy I reached out of my comfort zone and gained many new perspectives I wouldn't have otherwise. I was also able to create algorithms that made sense while still being detailed enough to accurately rate student's abilities and potentials.\nWhat I learned\nWe learned the importance of teamwork. Algorithm-writing and advice-planning would do no good without someone to code segments of it, and no one would look at a website that didn't look awesome. We all helped each other create an amazing product that can give those who can't afford it advice to achieve their dream.\nWhat's next for Schola\nWith some more, updates, we hope to release it to the public! After updating to give it more accurate predictions, Schola will be good to go and bring advice to hose who need it but can't afford it. \n",
        "hackathon_id": "hackingedu",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascripthtml5css3\n",
        "hackathon_id": "hackingedu",
        "winner": true
    },
    {
        "description": "\nThis version is oriented around Bryan's experience. \nI'm a Biochem Major. My original team never made it to HackerEDU - but I met two Canadian students at this event and came up with a strong, student reviewed idea that enhances learning in the classroom. They are software engineers currently working on the backend.\nPut simply, Query allows students to post questions or comments incited from lecture to a web app through a simple text message. Students and individuals who have fears of asking \"stupid questions,\" language issues, or simple lack of time to contribute to the learning environment have the opportunity to store these questions for the professor/lecturer to cover during a different part of class or office hours. While this gets students more involved in large classrooms and lecture halls, we believe that this web app is a useful feedback tool with expandable features. Data collected from students and individuals can assist lecturers gauge the sentiment in the classroom as well as how well material was retained. It can be used to improve future lectures and styles of teaching. This integration of student knowledge with digital tech enables students to interact more with peers and professors while getting the most out of their classroom education. \nLearning has always been inspired by the active participation of all individuals. Inputs made to Query are voted on: The questions that accumulate in our app can be voted on for significance and importance to learning. Whether the raised comment or concern is something the lecturer should clarify, re-iterate, or remember for a following lecturer, participants can get a sense of what questions are being asked by peers and colleagues. Our app is dynamic and has the potential to be applied in large academic, professional, and political venues. \nMe: As a new \"coder\" at my first hackathon, I've worked on the landing page, pitch, and the written portions of the project. My teammates worked hard on the backend and UI to make this project work, using Pebble, Clusterpoint, and namecheap APIs and applications. \nChallenges: Fixed a lot of bugs with Clusterpoint API.\nLearned a lot over 36 hours of little sleep.\nIt was great.\n",
        "hackathon_id": "hackingedu",
        "winner": true
    },
    {
        "description": "\nToucan: wikiHow for Pebble!\nwikiHow for Pebble through voice recognition!\nHow do I flex??? No longer must we fish smart phones out our pockets to google for instructions; simply ask your watch!\nToucan is our solution. Using Pebble's Voice Dictation API to transcribe your voice-question to text, Toucan provides step-by-step instructions from wikiHow straight to your wrist. \nTogether, we can do anything!\n",
        "hackathon_id": "hackingedu",
        "winner": true
    },
    {
        "description": "\nInspiration\nWatching high school students struggle with Pre-calculus, specifically understanding linear graphs.\nWhat it does\nAsks user to plot points for a graph, with the equation given. Uses the leap motion capabilities to allow the data to be plotted.\nHow I built it\nUsing Unity and the LeapMotion SDK\nChallenges I ran into\n\nPlotting good looking graphs from string text on Unity.\nCreating gestures in Leap Motion\nHow to drag points using gestures on the LeapMotion\n\nAccomplishments that I'm proud of\n\nBeing able to drag points from one place to another using hand motions\nBeing able to use Leapmotion fully integrated in the game.\n\nWhat I learned\nHow to implement LeapMotion into Unity\nNew methods/functions associated with the LeapMotion\nWhat's next for GraphMotion\nAdding more feedback based off of how many questions were answered correctly or incorrectly. \nAdding more game modes, like drawing the user drawing the whole graph\nFinish polishing the game.\n",
        "hackathon_id": "hackingedu",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe thought it would be cool if we could write in the air, and it would translate into words on our monitor\nWhat it does\nWe write in the air, and the Leap Motion captures it, puts it in the translator and turns our writing into text\nHow I built it\nChallenges I ran into\nJava GUI is difficult to use.\nAccomplishments that I'm proud of\nWe are proud of what we have built and we wish to improve upon it in the near future.\nWhat I learned\nUsing GUI can open many doors to a great program.\nWhat's next for VirtuaBoard\nIn the near future, we wish to be able to improve upon this project, and make it accessible to many others in the world.\n",
        "hackathon_id": "hackingedu",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe were inspired by the idea of enabling people without internet to learn through toll free messaging. Smartphones and laptop aren't easily available to those struggling in developing countries, so for those who wish to learn, it is a struggle for them to get online resources that are so widely available to the first world. For example, according to Pew Research, in Indonesia, only 15% of people own smartphones however 78% own a mobile phone that has sms capabilites. By providing a toll free number that can provide resources to practice basic knowledge (such as math), it will help those struggle in need to get the education to bring them out of poverty.\nWhat it does\nThe user can subscribe to the database to receive the definition of word of the day daily from which they can guess the word and they can text 'learn math' or 'learn spanish' for easy to hard math and Spanish questions depending of their point count. Points are earned from responding with correct answer and level increases every 10 correctly answered questions.\nHow we built it\nTeam Twilio ~Hui Shi Li and Nguyet Duong. \nHuishi primarily worked with SQLite to create a database recognized subscribed users. She also works with the Wordnik API to retrieve the word of the day, and its definition. She is the primary lead to access the subscriber's database (subscribers.db). Nguyet worked on the input SMSs, and sending out the appropriate SMSs by parsing the input into tokens. Nguyet also set up and manages the server for live interactions.\nTeam Database ~Joyce Scalettar and Sarah Borland\nworked with SQLite to create tables to keep track of questions/answers for each subject level and accounts. To do this they created 2 main programs, database. py and Account_Management.py. Text2Learn db is created in database.py (described more below), referenced in Account_Management.py (described more below), and contains tables for each difficulty level for each subject. Account db is created, referenced and maintained within Account_Management.py.\nTeam Website ~Rosalba Rodriguez \nworked with HTML/CSS onto of Bootstrap to build the team's informational website. She customized the page to best fit the product.\nChallenges we ran into\nSome issues we ran into were, although we got the layout of the code generally correct initially, issues were syntax errors that came from no foreknowledge of python and the SQLite library.\nIn addition to this, setting up the server was definitely difficult and we had to do a lot of research to see how we can host the server in such a way that Twilio can still access it. Using Twilio's API was also slightly difficult, as they have many different forms of ways to send message. It caused a lot of confusion among the team members because we did not realize the variation in ways we can receive and send SMSs.\nAccomplishments that we're proud of\ndatabase.py ~ Using the SQLite library to create a database by reading in a text file with questions and answers for several topic with different levels of difficulty and output a table for easy difficulty topic within each topic in the Text2Learn database. Text file can have as many tables as you'd like and any number of questions/answers per table.\nAccount_Management.py ~ Creating a program that contains several methods bridge between the Twilio server and our two SQLite databases. Functions include subscribe (adds user into in account db), unsubscribe (removes user from account db), send question (sends random question from topic and user's difficulty level in Text2Learn db), receive problem (checks if answer is correct compared to Text2Learn db and gives points if correct), and check points (sends user their current point totals in account db)\nserver.py ~ Getting the server up was definitely difficult, and we ran into a lot of trouble and merge conflicts along the way. But in the end, we learned how to use Flask in order to create a server such that we can generate code to send to devices all around the world. There were definitely a lot of bugs, and it was hard to debug in real time application but we made it!\nWhat we learned\nWe gained a deeper knowledge of Python, SQLite, and learned the necessity for the abstraction barrier.\nWhat's next for Text2Learn\nRight now our services are only available in the US, but we would like to be able to get access to numbers in other countries so that more people have access to practicing these topics where internet is less available. We also want to include other languages and features later on as well as concepts in computer science. Also, we want to incorporate mini-lessons about each of the subjects we have. \nCheck out the website!\n",
        "hackathon_id": "hackingedu",
        "winner": true
    },
    {
        "description": "\nInspiration\nOurselves and other students plagued by a lack of superior speaking skills\nWhat it does\nConverts your speech to text, and allows you to get your personality from it, save it, send it to other people via chat, and even speak it to other people in real time\nHow I built it\nWith Bluemix & Moxtra APIs\nChallenges I ran into\nLearning how Node.JS works and various issues of making a web app\nAccomplishments that I'm proud of\nOvercoming the aforementioned challenges\nWhat I learned\nHow to work with Node.JS and make a web app\nWhat's next for SpeechHacks\nexpand it to further than students, use it for professionals and other people\n",
        "hackathon_id": "hackingedu",
        "winner": true
    },
    {
        "description": "\nInspiration\nIt's important that we learn about security vulnerabilities so we can protect ourselves from potential attacks. The best way to protect yourself from a security attack is to understand how the attack works, and the most engaging and fun way to learn about attacks is to successfully mount an attack yourself.\nWhat it does\nWe use the Bluemix hosting service to spin up instances of web sites and applications which have know security vulnerabilities. We then teach the student about a certain type of attack, how it works, and invite them to employ that attack method to hack into a real live running website. We then teach them how to protect against the attack and have them fix the site so they can see first hand how the protection works.\nHow we built it\nWe are using Bluemix to run instaces of web sites and apps which have security vulnerabilities for students to attack. The site iteself is also running on the Bluemix service.\nThe site is built using Meteor.js framework.\nChallenges I ran into\nGetting Meteor deployed to Bluemix.\nAccomplishments that I'm proud of\nMultiple instances of the vulnerable application running in Bluemix so that users have a pool of servers to work with.\nWhat I learned\nHow to launch and host multiple different types of apps through Bluemix\nWhat's next for Get With The Club\nWe didn't get to the second part of the lesson, which is to show the student how to prevent the attack.\nAdding more tutorials for different types of security vulnerabilities.\n",
        "hackathon_id": "hackingedu",
        "winner": true
    },
    {
        "description": "\n// Inspiration\nWe wanted to make something similar to the app Acorn, but instead of investing your spare change, we donate it. \n// What it does\nAutomates the donation process by rounding off purchases to the next dollar and donating them to the charity of your choice, while logging said data to later be claimed in tax deductibles. We gamify the process by adding achievements in badge form that are earned when certain amounts are donated over time to show the value of what you're donating to. For example: vaccinations for children, clean water in villages or even puppy sanctuaries. \n// How we built it\nWe designed it in node.js because we wanted the fastest environment to produce products. Using Capital One's API Nessie, we were able to simulate financial transactions that would appear on our account to demonstrate the use case of our application.\n// Challenge(s) we ran into\nThinking of ways to gamify the process.\n// Accomplishments that we're proud of\nThat it can help raise funding for groups that make a difference.\n// What we learned\nWe actually conducted some data analysis on college students' purchase trends: daily, weekly, monthly and annually. In correspondence to repeated purchases. To see the amount that could be donated by say one individual, a group, a class, an event as large as this one or even a large user case. The numbers add up really fast and we want to show that for a small part on the user's side they can contribute to a much large difference. \n// What's next for Change\nWe can log user data on their purchases and the charities they donate to for analytic purposes. We can integrate a variety of API's to enable functions such as webhooks. As users continue to grow we can have the various charities demonstrate the initiatives being taken with the donations they've received.\n",
        "hackathon_id": "hackingedu",
        "winner": true
    },
    {
        "description": "\nInspiration\nEven though there is tremendous value in recording and sharing traditional small scale K-12 lectures, this isn\u2019t done because of the high technological complexity and cost. Also, students from the 3rd world do not have access to a quality education like we do in America. We wanted to build something that will help educate the poor and unfortunate.\nWhat it does\nWe used a 3D printed stand to transform any laptop into a Smart Overhead Projector. A teacher can present PDF files along with a live stream from the Smart Overhead Projector. The entire lecture will be recorded from the laptop, with a transcription of the teacher's voice (powered by IBM BlueMix API) and a link to the PDF file. We will eventually have a collection of lectures from different classes and teachers. Students from around the world can now search and relive any lecture at anytime and anywhere.\nHow I built it\nThe laptop stand was printed by Cubify Cube. The voice transcription is done by IBM BlueMix. The database is done with Back&. The app is written in HTML5/JavaScript as a Chrome Extension.\nChallenges I ran into\n-prioritizing time to tackle technical issues\n-learning 3D modelling on the fly\n-learning new APIs (BlueMix and Back&)\nAccomplishments that I'm proud of\nWe have a finished working product.\nWhat I learned\nThe BlueMix speech API is harder to setup than Google Speech API, but it is well worth the time. This is because it is more accurate and it breaks down sentences with punctuation and time stamp. \nWhat's next for De Mobo Classroom\nWe will make this into a real product.\n",
        "hackathon_id": "hackingedu",
        "winner": true
    },
    {
        "description": "\nInspiration\nWhen many of the members of the team go to \"relieve\" themselves, they found themselves bored with no interaction.\nWhat it does\nThe application lets users communicate and connect with other users using the application. Many of the users will be able to chat with others about random or certain topics. They are also able to view images (Memes), and also talk about this images. \nHow we built it\nWe first started with an HTML base. We then used a non-SQL database to save all the information collected. We used a combination of HTML, JS , CSS , J-query , and Bootstrap to get that main page. We then use the Moxtra API to get our chat feature into the website.  \nChallenges We ran into\nSome of the challenges that we ran it too was that was not being able to integrate the API into it. This problem caused the chat to not work, and break our site. Another problem that we ran into was the images within the site were not sized correctly, and cause the site to look awful. \nAccomplishments that we are proud of\nSome of the accomplishments that we are proud of is that we were able to successful integrate an API into our project.Another thing that we are proud of was being able to see the website function correctly, and without errors.\nWhat we learned\nWhat we learned is how to use the moxtra assisted program interface. We learned how to intergrate the user authentication, as well as the chat \"binder\" within the application. This chat is the main feature that is used on the application. \nWhat's next for TheToilet.Club\nWe hope to expand the appilcation user base. We also want to increase the amount of user interaction within the site. We hope to better intergrate a more mobile friendy version.\n",
        "hackathon_id": "hackingedu",
        "winner": true
    },
    {
        "description": "\nBuilt With\ncss-html-angular-nodejs-express-mongodb-bootstrap-jquerycsshtml5angular.jsnode.jsmongodbexpress.jsjquery\n",
        "hackathon_id": "hackingedu",
        "winner": true
    },
    {
        "description": "\nMyoMusic music is an easy and modern way of creating music with significantly less work. \nInspiration\nAs a group of passionate high-school music enthusiasts, our whole team has passion of music. We wanted to mix and match tracks, to play around with all types of music and let our creative instincts take us where they may, but we didn't want to go through the arduous process of finding the necessary equipment. The most relatable role in modern society would be a DJ, but getting all the necessary equipment and then of course learning how to efficiently use that equipment would take up unnecessary time. Thus, to solve this problem in our lives, we made MyoMusic: an easy way to DJ.\nWhat it does\nOur software allows any person with the acclaimed Myo band to play around with music and create. Using the many different gestures and tracking features Myo offers, we essentially \"assigned\" a gesture/orientation to a certain sound. Users can load up any song they desire, and with the correct motions, play around with the music to create new and exciting tracks. And instead of simply letting users modify music, they can also go through the experience of spinning  mixer (which gets data from Myo and updates its position accordingly).\nHow we built it\nWe used Node.js to build our backend system, more specifically the Player module to handle the audio of our system, and the Myo.js for access to the valuable information Myo provides. We connect that to a user-facing front-end with socket.io, where the user can see a virtual mixer being spun as they do in it in real life. To create the effect of the mixer spinning and the necessary animations, we made use of the threejs Javascript library.\nChallenges we ran into\nCouple of problems with the unique method the Player module work, as well as the overlapping audio files playing to create the effect of DJ'ing. We also had some trouble learning and implementing threejs features as we were all fairly new to the library.\nWhat we learned\nWe learned a whole lot about audio API's, data visualization (of Myo data), and of course the Myo band itself.\nWhat's next for MyoMusic\nHopefully we have a sustainable platform in a month :)\n",
        "hackathon_id": "hackingedu",
        "winner": true
    },
    {
        "description": "\nInspiration\nPeople are hungry very often. Most people beat themselves up after consuming a high calorie meal. This app allows people to make healthy food choices at anytime of the day. This also caters to the needs of under weight people, advising them how much more to eat to improve their weight.\nWhat it does\nDepending on the time of the day, the web app gives you the correct kind of meal depending upon your sex, weight, age and workout regime. for ex: if it is 8 am in the morning, it is time for breakfast. This web app makes all kinds of breakfast available and then returns few choices depending on your calculated BMI, BMR and workout regime. The web app then returns the lowest price of each ingredient available at Walmart. In this way, this app allows people to count both their calories and their money.\nHow I built it\nWe used an API provided by the Spoonocular webite, hosted by Mashape, using it to find recipes for breakfast, lunch, dinner and snacks. This app also gave information about the calories present in the snack. The app is then directed to Walmart's Search api, which then gives the minimum price of each individual ingredient available. \nChallenges I ran into\nThe biggest challenge we faced were related to development of the app. We are graduate students of elctrical engineering and didnt have much experience related to app development. We first used IBM Blue Mix services to code in Node JS. But we faced many roadblocks there. We then tried the same using PHP but were once again unsuccessful. Finally we implemented it using pearl. Apart from that we also ran into challenges mainly related to the feasibility of the idea. How i could use the API's available while making people health conscious and also allowing them to value their money in a positive way. We used body parameters and workout regimes to come up with various parameters like BMI and BMR which tell a person how much to eat to remain or become healthy. And the entire calculation happens internally, just advising the person about the calories they might take in and the various choices they may have. This also takes care of the much needed variety required for day to day activities.\nAccomplishments that I'm proud of\nFirst of all we are very proud that we were able to successfully implement it even though we faced many roadblocks.\nThe way in which we have calculated the BMI and BMR using the input parameters and then advising the person about the food they may have along with the choices they can make will have a huge positive impact on many people, making them better at managing health and also getting them the prices so that they are not only health conscious but also money wise\nWhat I learned\nI learned different ways of viewing a problem depending on the resources available. We also learned a lot of adaptability \nWhat's next for Health web app\nUsing smart watches we can compute real time data and make the app more responsive to realtime situations \n",
        "hackathon_id": "tamuhack2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroidnode.jsbluemix\n",
        "hackathon_id": "tamuhack2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nA home automation idea of counting dog barks\nWhat it does\nFlips a switch on an LED when someone mentions a fruit\nHow I built it\nWith Raspberry Pi + Windows IoT + Speech recognition API\nChallenges I ran into\nInstalling Windows 10 + Visual Studio 2015 + Getting everything to simply run\nAccomplishments that I'm proud of\nI turned an LED on with my voice.\nWhat I learned\nHow to use Raspberry Pi + Windows 10 IoT and make cool things with them!\nWhat's next for Banana Voice\nConnecting it to Azure and analyzing data gathered over time. Extending the range of applications from marketing data collection to advertising to homeland security.\n",
        "hackathon_id": "tamuhack2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nI have a problem with impulse buying, especially on the internet, I made this to encourage people to think about, or at the very least, prepare for the affect a purchase will have on your bank account.\nWhat it does\nWhenever you're browsing walmart.com or amazon.com and you go to a product page or (only on walmart.com) your cart, a little button will light up in the corner of your screen. When you press it, it will tell you your current balance in your account, how much the item is going to cost, and what the affect will be on your balance afterwards. \nHow I built it\nI used the chrome extension framework, in addition to a liberal amount of Javascript, HTML, and CSS to construct the bulk of the application. I used the Capital One API to get access to the users balance and allow them to select their desired account. I used the WalMart API to get access to prices for items by pulling the id of the item URL and used their Product Lookup API to collect the price. For Amazon i had to manually scrape the price off the page using Jquery.\nChallenges I ran into\nChrome extensions have many security features, which is good for users because it keeps them protected from careless developers, however for developers it makes things that seem like they should be easy not so easy. \nAccomplishments that I'm proud of\nDoing a hack by myself and showing i can deliver something that works, even without support. This is also my first real experience using a RESTful API to get information for an application.\nWhat I learned\nYou don't always need a team to get something done (but it helps to have one)\nWhat's next for CashTracker\nNot much without access to any real banking info, but it is a good proof of concept\n",
        "hackathon_id": "tamuhack2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroid-studio\n",
        "hackathon_id": "tamuhack2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonnovation-launchpadparrot-ar-drone-2\n",
        "hackathon_id": "tamuhack2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe wanted to make an app that makes it easy for people in group settings to be able to give input as to what music they want played at an event\nWhat it does\nUsers can send a text message, containing a song name, to a number that is provided by the app to queue up their song of choice to a Spotify playlist currently playing.\nHow we built it\nWe use Microsoft Azure as the cloud service to host our app. Twilio API is used to send message between phones and my server. The message will then be parsed to extract song name, which will be used in Spotify API to play track. We used Node.js as our server-side language and HTML, CSS, Javascript as the client-side.\nChallenges we ran into\nOur original idea was to use Socket.io to dynamically update playlist, but the installation didn't turn out well. So we instead use a refresh button to update playlist. \nAccomplishments that we're proud of\nProud that we got everything working at the end. \nWhat we learned\nI (Phong) improved skills and knowledge in terms of back-end development and using APIs.\nI (Shane) increased my front-end programming skills.\nWhat's next for Party123\n\nDynamic playlist update\nBetter UI\nProvide different phone number\n\n",
        "hackathon_id": "tamuhack2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe idea for PausePlease came from when Jeff Zhao was eating pizza on this one fine day and didn't want to get pizza on his hands while he was watching league of legends.\nWhat it does\nPausePlease pauses your currently playing videos when you look away, and reminds you to take your eyes away from the computer to relieve stress from your eyes, to get away from the computer when you've been sitting down for too long, and reminds you of events on your google calendar so you don't forget while you're watching movies.\nHow we built it\nWe used IR sensors to detect the IR transmitters we mounted on glasses. Based on that we can tell if the user is near the laptop, as well as if they are looking to one side.\nChallenges we ran into\nWell,  we took a roundabout approach for taking google calendar values, since we served our node webkit application as a url that started with \"file:///\" and therefore wouldn't work with the calendar API, so that was more work. Also, working with nw.js was a bit of a challenge at first, but really everything turned out to be not that big of a deal compared to none of our particle boards cooperating with us.\n",
        "hackathon_id": "tamuhack2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaxmlbluemixandroid-studio\n",
        "hackathon_id": "tamuhack2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\npython\n",
        "hackathon_id": "tamuhack2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtml\n",
        "hackathon_id": "tamuhack2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nOur inspiration came from workout tracking applications. Motivation to workout from these apps are purely from the individual. We felt that team oriented projects and tasks increase motivation and reinforcement to meet that task. So we thought it would be great to have a task managing app that assign teams instead of a single individual to meet deadlines, maintain dietary plans, meet workout goals, etc. The possibilities are endless.\nWhat it does\nThis program allows you to create an account and name a specific task to want. You can then assign members to each task. After all setups are complete, a summary page is shown to display who has finished which task by the assigned deadline. If the completed check box is not checked, an automatic push notification will be displayed to every team member to remind the team member to do his/her job. The push notification will also have an option to message the team mate through email, text messaging, and other popular forms of communication.\nHow I built it\nFor the front-end, we were building Android application with Google Android Studio.\nFor the back-end, we used Microsoft Azure mobile services.\nChallenges I ran into\nExcept one, rest of the member didn't have much experience in programming.\nThis was the first time that we are actually using Microsoft Azure.\nThe biggest problem was that we didn't have ability to estimate the workload of the project.\nAccomplishments that I'm proud of\nEven this was the first time to use Microsoft Azure, we were able to send and store the data inside of the Microsoft Azure server.\nWhat I learned\nWe always need to make a decent design document for better development process.\nBefore this, we need to estimate the work load of the project and should not overestimate the ability.\nWhat's next for TaskMate\nWe need to finish the rest of the part of this application.\nWe were planning to build a web-based version too.\nFurthermore, we need a great designer.\n",
        "hackathon_id": "tamuhack2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nazurearduinomyohardware\n",
        "hackathon_id": "tamuhack2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nOne huge problem about every student attending a hackathon faces is staring at a screen, sleep deprived, slouching down for over 24 hours. This causes major back pain, eye strain and all the life threatening side effects that come with this. By also sitting at your computer 24/7, you become much less productive by either drowsing off or just not paying as much attention. We created at tool to help solve this.\n\nWhat it does\n HealthyHacker monitors keystrokes and mouse movements and, depending on the type of person at the computer (developer, designer, or anyone else) analyzes their activity while working and keeps an eye on how long the user is staying in one place. You can think HealthyHacker being similar as the alarm clocks that keep from going off during your deep sleep. HealthyHacker pushes you to take a break by stretching, socializing and relaxing but not during your most productive moments.\n\nHow I built it\nHealthyHacker is built on top of Github's Electron framework, to provide a hybrid desktop application experience. This allows for faster build times, as developers can develop once and deploy to multiple platforms. Being a hybrid application, HealthyHacker utilizes the popular Angular.js framework along with bootstrap, charts.js, restful web services, parse, and several others.\n\nChallenges I ran into\nWe ran into multiple challenges building HealthyHacker. Predicting productivity and trying to get accurately predict when a user should take a break, determining accurate and telling levels of productivity and relating those to keyboard inputs and mouse movements. Finally getting the keyboard and mouse inputs were a challenge in themselves \nAccomplishments that I'm proud of\nWe managed to overcome just about every challenge we ran into, with little to no previous experience with Electron. Any challenges we were not able to overcome were completely out of our control \nWhat I learned\nThe usefulness of web development, and the power of hybrid applications, how to function with little sleep and in high pressure situations, and most importantly the value of communication within a team\nWhat's next for HealthyHacker\nHealthyHacker has multiple future applications, while it was originally designed for a hackathon-like environment, it can easily be extended to corporate offices, studying and further. \n",
        "hackathon_id": "tamuhack2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonflaskcassandrahtml5javascript\n",
        "hackathon_id": "tamuhack2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nasp.netmvcc#walmart-openvisual-studio2015big-oven-apirazorhtml5bluemix\n",
        "hackathon_id": "tamuhack2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe Alabama game \nWhat it does\nReveille is moved by the user clicking on a direction button and she \"attacks\" the other teams mascot.\nHow I built it\nLot's of googling and deMorgan's Laws\nChallenges I ran into\nImplementing a collision\nAccomplishments that I'm proud of\nCreating an android app with little experience in Android Studio\nWhat I learned\nHow to draw graphics onto an Android screen\nWhat's next for Rev's Warriors\nCorrection of current bugs and expanding to more levels.\n",
        "hackathon_id": "tamuhack2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nHaving set up camp for tamuhack 2015 at Kyle Field, our team was inspired by the energy and excitement experienced here on game day. As a result, we started brainstorming clever ways to use that energy to power apps. Our seed of an idea germinated and blossomed into Yell It Up! which allows sports fans and general enthusiasm junkies to enjoy a similar high energy, high stakes feeling even while away from Kyle Field. \nWhat it does\nYell It Up! allows users to put their excitement to the test in a daring challenge of vocal mettle. The game's protagonist is controlled by the volume of user vocal inputs which provides for an engaging way to interact with otherwise touch controlled environments.  \nHow I built it\nWe used the iOS development language, Swift, in order to create the application. \nChallenges I ran into\nMy team experienced significant difficulty with implementing sound input into movement input. Initially our microphone input was only reading a steady, constant level of sound, but we managed to re-calibrate it to be more sensitive. We also faced some challenges with establishing counters that incremented when we passed certain checkpoints in the game.\nAccomplishments that I'm proud of\nImplementing physics in the game that simulated gravity and accelerated the screen scrolling as the game became more difficult. \nWhat I learned\nIf you're planning on coding an iOS app, it helps for multiple members of the team to have MacBooks. However, multiple members on the team are required to do research. Not everyone needs to be coding.  \nWhat's next for Yell It Up!\nThe esteemed Yell It Up! team plans to add face recognition to the game allowing users to play with their own face as the cursor. After that, the sky's the limit! We would like to add power ups including temporary invincibility and a mode that inverts the controls to twist up the gameplay.  \n",
        "hackathon_id": "tamuhack2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njqueryfirebaserubycsshtml5\n",
        "hackathon_id": "tamuhack2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nI wanted to learn python.\nWhat it does\nIt plays the first few verses of the Aggie fight song.\nHow I built it\nI typed it in eclipse, once I got it to work.\nChallenges I ran into\nI had to kept redownloading software because the wifi would cut out mid download. Also, I had downloaded python 3.5, and had set up eclipse accordingly. Then I downgraded to python 2.7 (which is more stable and has more support), which apparently messed up the path, which made python stop working entirely.\nAccomplishments that I'm proud of\nThere was an issue of a gap between each note, but I timed it to where it became part of the song and was, in my opinion, not noticeable.\nWhat I learned\nIf you have a friend who's good at python, consult him/her BEFORE making huge changes like using an entirely different version of python AFTER you've finished a project.\nWhat's next for AggieNotes\nMore scripts that are more intricate, and are hopefully done in linux.\n",
        "hackathon_id": "tamuhack2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaandroid\n",
        "hackathon_id": "tamuhack2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nparrot-dronemyoparticlephpazurec++htmlcssjavaandroidxml\n",
        "hackathon_id": "tamuhack2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nA simple robot that makes your day just a little better.\nWhat it does\nHi 5 robot high fives you when you want a high five waves when you don't, and replies to your tweets(most of the time)\nHow I built it\nI took one the small wooden robots that I got at the beginning of the hack from one of the sponsors and attached servo to move the arm, an ultrasonic rangefinder to see when you want a high five, I made a small tactile switch to sense high fives, and I used the twitter api to have it reply to tweets on occasion.\nChallenges I ran into\nI didn't have too many supplies to work with so I had to improvise witw the mechanics of the arm. I am many a hardware dev so implemeting twitter was a challege given my limted CS background.\nAccomplishments that I'm proud of\nthat I actually got him to reply to tweets, definitely the hardest for me.\nWhat I learned\nI found a very useful twitter library for processing that let me really work wtith an api for the first time.\nWhat's next for Hi 5 Robot\nHi 10s, Hi 20s, the sky's the limit for this little robot!\n",
        "hackathon_id": "tamuhack2015",
        "winner": false
    },
    {
        "description": "\nWhat is SpitBars?\nSpitBars is a standalone application (web app in development) that uses an algorithm that can generate statistics for the qualities of a 'good rap' in a rap battle based on thorough research of scholarly articles, blog posts and community forums that discuss the subject. \nWhat does it do? How?\nOur application uses several libraries and APIs, such as Google Speech Recognition and PyAudio, to transcribe the lyrics from each battling rapper. We then use our critical algorithm developed in Python to judge the rap based on several factors, such as: total rhymes, rhyme density, average word complexity, usage of alliterations, and # of unique words. We then quantize and analyze this data, allowing us the say who, based on cold hard facts, is indeed the better rapper out of the battling group.\nWhy we did it?\nRap is the one of the most revolutionary sociocultural movements of the 21st Century and as rap fans, all of us feel like there were not enough contributions in the field of rap and hip hop in the technology industry. From this love of computer science and hip hop, spitBars was born.\nWhat makes it special?\nThis is the first of a kind platform that allows rappers to find try quantifiable results to who won a rap battle. This application has a wealth of growth potential, allowing it to move online where there could be nationwide competitions, to phones where individual users could work on their craft. It is the future of hip-hop.\nWhat it was made with?\nThe program is made with Python and C#.\n",
        "hackathon_id": "kenthackenough15",
        "winner": true
    },
    {
        "description": "\nBuilt With\nobjective-copencvarduinocios\n",
        "hackathon_id": "kenthackenough15",
        "winner": true
    },
    {
        "description": "\nBuilt With\nc#javascriptglsl\n",
        "hackathon_id": "kenthackenough15",
        "winner": true
    },
    {
        "description": "\nInspiration\nOur inspiration came from the Netflix and Chill button and many nights where disorganization within our group of friends has shortened the amount of time we can have fun. \nWhat it does\nOur button sends out a text blast to your closest friends and polls them on where everyone wants to got for the night, while simultaneously preparing an Uber and queuing up some tunes! \nHow we built it\nCaffeine, Python, and a Raspberry PI, and a pretty cool button. \nChallenges we ran into\nThe initial challenges we faced were issues with complying the correct  results from the polling software we are using. \nAccomplishments that we are proud of\nNo one lost their cool. Debugging was fairly simple. Fixing the polling software. Getting the button to work.\nWhat I learned\nPython, Python, and more Python. How to troubleshoot the button. How to send notifications through multi-platform channels.   \nWhat's next for Push 2 Party!\nPull 2 Party, Bop 2 Party, Pass it. Pythong 3.0 lol \n",
        "hackathon_id": "kenthackenough15",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascriptopencvpythonc++\n",
        "hackathon_id": "kenthackenough15",
        "winner": true
    },
    {
        "description": "\nInspiration\nInspired by wanting to visualize all of Wikipedia, because all of us like to browse Wikipedia for long periods of time at once. \nWhat it does\nA chrome extension/website/application pairing which takes your wikipedia browsing information, and records your brain data while reading wikipedia, and then is able to visualize the wikipedia pages that you have read, and changes colors based on your perceived engagement with the material, and gives you suggested wikipedia pages to read based upon your history. \nHow I built it\nThe chrome extension is built with Node.js and the website is built with Node.js and html and css, and the Muse app is made using Processing. \nChallenges I ran into\nIt was very difficult to integrate many modules into the chrome extension. It was hard to communicate between the different parts of the project, because it was worked on by different people. Also, using different languages that we had very little experience with was very difficult. \nAccomplishments that I'm proud of\nDuring these 36 hours, we learned more than we thought we could have. We are proud that we finished a product, and that it is useful. \nWhat I learned\nFunctional Programming, Node.js, D3, Callbacks, Asynchronous\nWhat's next for MindSweeper\nThe next step is perhaps matching together similar users who would like to converse with each other. \n",
        "hackathon_id": "kenthackenough15",
        "winner": true
    },
    {
        "description": "\nBuilt With\nhtmlpythoncss\n",
        "hackathon_id": "kenthackenough15",
        "winner": true
    },
    {
        "description": "\nWhat it does\nDigital Fortress is a network application that allows you to connect multiple slaves to a single master node. The master node is capable of assigning specific calculations to individual nodes in order complete tasks more efficiently with parallel processing. Under a high load, the Raspberry Pis can get quite warm, so I added built in temperature monitoring in order to keep track of over heating Pis. I built both a Pebble smart watch app as long as an HTML web app that displays the temperature of all connected nodes so it is easy to monitor temperatures from anywhere in the wrold. The master node syncs the name and temperature of each slave node to an Amazon Web Services server so that the data can be accessed from anywhere, even outside of the network. \nHow I built it\nJava and lots of redbull!\nA large amount of research went into this topic. I had to begin with building a packet system using TCP sockets in order to transfer data between the master and slave nodes in order to maintain an organized workflow. Otherwise, random data flowing everywhere would have just created an infinite number of problems. Not every task is able to be completely in a parallel fashion. Calculations that are dependent on previous calculations are not good candidates for parallel processing because it still ties up the CPUs while they are waiting for information from previous calculations. Calculations such as finding the nth term in the fibonacci sequence however, is a great candidate for cluster computing because each term is independent to the others so they can be calculated in a parallel fashion. \nChallenges I ran into\nSleeping! Oddly enough sleeping was extremely difficult because everytime I was about to fall asleep I was thinking about another feature that I could add in order to give the project some extra pizzaz!\nAnother issue I ran into however was setting up the networking in such a way that it did not create more than a few threads on the master node. I didn't want to open a bunch of threads because the master node is being hosted on a Raspberry Pi Model B, and I did not want to affect the performance of the Pi.\nI also had issues with creating the pebble app. I was not familiar with the API or the IDE that they recommended, so everything was completely foreign to me. Luckily it was just Javascript, so it was easy to pick up on and figure out along the way.\nWhat I learned\nI learned an incredible amount about interconnecting devices through the internet. I had to route the cluster computer's internet through my laptop's ethernet port, and then forward the traffic through my wireless card onto the KSUEvent WiFi network. I learned alot while researching uses parallel processing and how exactly it works.\n",
        "hackathon_id": "kenthackenough15",
        "winner": true
    },
    {
        "description": "\nWith Friskie, you can sort through cats and cast your judgement on them with no other particular end goal in mind. \nWe built Friskie with the intention of using it as a system for animal adoption by the ASPCA. It would also serve as an enjoyable time killer and stress reducer. \nWe predict the adoption rate of Friskie would be extremely rapid. This is because, cats are simply more viral than dogs in video. \n\"When advertisers are deciding which creative direction to take, data can help. One big finding we uncovered this year was that cat videos are significantly more watched than dog videos online. We looked at the 100 most-watched clips for both furry friends and aggregated their performance. Cat videos have generated over 1.6 billion views. Dog videos have only generated 1 billion views. Cats win on a daily basis as well, with the top 100 videos generating about 1 million views per day. The top 100 dog videos produce 700,000 views on average. So, for the advertiser trying to choose between cats and dogs, audiences watch cats videos more often online\".\n-http://adage.com/article/digitalnext/ten-stats-change-video-2013/238915/\nWe would seek to integrate paid advertising into the stream of Cats. Friskie would also donate a portion of its proceeds to benefit animal shelters. \nFriskie was build on a LAMP stack using the http://thecatapi.com/\n",
        "hackathon_id": "kenthackenough15",
        "winner": true
    },
    {
        "description": "\nBuilt With\nandroid-studiojavaraspberry-pi\n",
        "hackathon_id": "kenthackenough15",
        "winner": false
    },
    {
        "description": "\nInspiration\nWhat's the most important thing at a party? That's right... staying hydrated. You need to make sure you are easily able to portion your liquids, water and juice obviously, into nice 1.5oz servings.\nWhat it does\nShotBot is an autonomous cup filling robot that drives on a table. We use vision processing to track small red party cups and fill them using a water gun. ShotBot will search for a cup if it can't see one, or persue the closest option.\nHow I built it\nWe used mostly toys and recycled plastic waste as our structural materials, this included bottlecaps, bottle, plastice silverware, and cheap toys that were going to be thrown out. We then used an Android phone as a camera that relayed the information to a raspberry pi and then to an arduino to power the motors.\nChallenges I ran into\nIn two words: Raspberry. Pi.\nWe chose to develop most of our control in Processing, because it has nice builtin computer vision support AND can interface nicely with the Arduino. It sounds too good to be true. That's because it was. Processing doesn't run on ARM. After replacing the incuded JVM with openjdk Processing would launch. \nThat was when we had issues with the Pi having  inadequate performance to process the frames in time. We then used the Pi as a relay from a laptop to the Arduino's serial.\nIt was almost working when the Pi died altogether.\nThe robot now runs tethered to a laptop for the time being.\nAccomplishments that I'm proud of\nWe managed to do our vision processing even after learning that the Processing library lacks a lot of the fancy features something like OpenCV has readily available. This lead us to write our own methods in order to identify the cups. Despite having to create our own methods, we were able to achieve a 90% success rate of finding and filling the cups.\nWhat's next for ShotBot\nThe next step is to use a small, more powerful co-processor for the vision processing such as a DragonBoard. This will allow the robot to work fully autonomously without the need for a laptop or supervisor holding a long USB cable.\nAs well as general accuracy tuning and a better quality watergun, this one has a noticeable amont of spray out to the sides.\n",
        "hackathon_id": "kenthackenough15",
        "winner": false
    },
    {
        "description": "\nInspiration\nEnhanced an idea from a school project\nWhat it does\nForks and runs commands inside a Unix environment\nHow I built it\nC, a text editor, and GCC. Utilizes linked list and structs for history.\nChallenges I ran into\nI was very unfamiliar with C and low level languages in general, so it was sometimes challenging to implement even basic functionality that I used to take for granted, such as some more advanced string comparison.\nAccomplishments that I'm proud of\nI haven't had a segmentation fault in a very long time when running (those were very common in debugging and took a while to hunt down)\nWhat I learned\nC, unix commands that I never would have used otherwise\nWhat's next for Sfotm Shell\nPersistent history, maybe some other cool stuff\n",
        "hackathon_id": "kenthackenough15",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavahtml\n",
        "hackathon_id": "kenthackenough15",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe wanted to think of a cool game that would be fun to build. As 3 programmers who have used Unity before, we wanted to make a complete game. We chose something simple so we could see it all the way through and really nail the end result.\nWhat it does\nIts a domino game! Not the pizza. Basically, you as a player have the freedom to create pre-built tracks with dominoes on them, move them around and press go to watch them all topple one by one. Its very satisfying!\nHow I built it\nWe used Unity 3D for the game, Blender for the 3D models, Photoshop for the wood, lava, domino and one of many rock textures we had. It was build in C#.\nChallenges I ran into\nWe ran into problems with GitHub above all else. Unity has lots of metadata files that are required in order to build the scenes where 3D objects are presented but they are so inconsistent across machines that we couldn't push from more than one computer.\nAccomplishments that I'm proud of\nI would say 95% functionality, 100% satisfaction and we probably stayed up the longest at the hackathon.\nWhat I learned\nNic learned more about Unity and how crappy it is when multithreading isnt a thing when you need it most.\nRyan learned more about Unity. He is currently enrolled in a game programming class using it, so he is basically guarenteed an A at this point.\nBen learned a ton more about Unity as well.\nWhat's next for Not The Pizza\nWe will deploy it to the web or something so people can check it out! the link will be posted later! If not here, then check up on link\n",
        "hackathon_id": "kenthackenough15",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtml5javascriptjquerybootstrap\n",
        "hackathon_id": "kenthackenough15",
        "winner": false
    },
    {
        "description": "\nInspiration- Waking up in the morning and having coffee readily available.\nWhat it does- Makes coffee with a click of a button and notifies you when it is done.\nHow I built it- using a spark core and a few restless hours.\nChallenges I ran into- Getting the Spark Core to cooperate with the computer.\nWhat's next for Caffeination- Bringing Coffee to your bedside.\n",
        "hackathon_id": "kenthackenough15",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascript\n",
        "hackathon_id": "kenthackenough15",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe Rookery Radio app was inspired from not having an android app aside from Tunein Radio.\nWhat it does\nThis app streams music from an Icecast2 server, and also streams the Meta Data from the server as well.\nHow I built it\nThe bulk of our core code came fron the Hive365 Android app Source code on Github, from there we took out functions that were irrelevant for what Rookery Radio needs.\nChallenges I ran into\nThe biggest challenges we ran into was getting the app to read the Meta Data from our server. And properly display it.\nAccomplishments that I'm proud of\nI am very proud that I was finally able to get the Meta Data working, since it was the problem we had to deal with since the beginning.\nWhat I learned\nBecause of this project, I now have a deeper insight into Java, JSONObjects, XML, and Working with Android Studio.\nWhat's next for Rookery Radio Android App\nI plan to publish this app on The Play Store for any to use and Listen to Rookery Radio on their android device as they please, while I keep up on minor bug updates.\n",
        "hackathon_id": "kenthackenough15",
        "winner": false
    },
    {
        "description": "\nBuilt With\npebblejavascript\n",
        "hackathon_id": "kenthackenough15",
        "winner": false
    },
    {
        "description": "\nI wanted to produce an extension for google chrome and I wanted to create a tool like this.\n",
        "hackathon_id": "kenthackenough15",
        "winner": false
    },
    {
        "description": "\nBuilt With\nparticlehtml5javascriptc++\n",
        "hackathon_id": "kenthackenough15",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtmlcsscoffeescriptrubybowergrunt.jsmustache.js\n",
        "hackathon_id": "kenthackenough15",
        "winner": false
    },
    {
        "description": "\nDataless: No Data? No Problem.\n\nWe started Cal Hacks tossing around ideas, came to the idea of providing smartphones with internet access through a solely SMS-based platform, and never turned back. To start, we quickly tested out some ideas (Android SMS send/receive, Twilio messaging, Amazon EC2) and found out they all individually worked. Initiate #DanceParty. It was time to get to work. \nSo here's the Android app: An internet portal using no cellular data, only SMS text messages. Access convenient services such as Wikipedia, Bing Search, USDA Nutritional Information, Weather, etc... using only SMS.\nMotivation\n\nYou own a smartphone with an SMS plan, but no data plan. How can you stay connected to the information of the modern world?\n4.5 billion people lack internet access worldwide, yet smartphone ownership is growing faster than ever throughout even the most destitute of geographic locations. A vast number of these new smartphone users, however, lack access to data either because of financial constraints or a lack of geographically-available, data-enabling infrastructure. With an awareness of the power that connectivity and information has on empowering all realms of life, we wanted to create a platform that could provide data-less smartphone users with the power of information. Once we realized what that platform was, the inevitable dance party commenced before jumping into the world of hacking. \n",
        "hackathon_id": "cal-hacks2",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe wanted to be able to allow people to understand the news they read in context because often times, we ourselves will read about events happening on the other side of the globe, but we have no idea where it is.  So we wanted a way to visualize the news along with it's place in the world.\nWhat it does\nVisualize the news as it happens in real-time, all around the world. Each day, GLOBEal aggregates news and geotags it, allowing the news to be experienced in a more lucid and immersive manner. Double click on a location and see what's happening there right now. Look into the past and see how the world shifts as history is made.\nHow we built it\nWe used WebGL's Open Globe Platform to display magnitudes of popularity that were determined by a \"pagerank\" we made by crawling google ourselves and using WebHose API's.  We used python scripts to create these crawlers and API calls, and then populated JSON files.  We also used javascript with google maps, here maps, and google news apis in order to allow a user to double click on the globe to see the news from that location.\nChallenges we ran into\nGoogle blocked our IPs because our web crawler made too many queries/second\nOur query needs were too many for the free version of WebHose, so we called them and got a deal where they gave us free queries in exchange for attribution.  So shout out to webhose.io!!!\nAccomplishments that we're proud of\nLearned how to make web crawlers, how to use javascript/html/css, and developed a partnership with Webhose\nMade a cool app!\nWhat we learned\nJavascript, Firebase, webhose, how to survive without sleep\nWhat's next for GLOBEal News\nINTERGALACTIC NEWS!\nWork more on timelapse\nFaster update times\nTags on globe directly\nClick through mouse rather than camera ray\n",
        "hackathon_id": "cal-hacks2",
        "winner": true
    },
    {
        "description": "\nBuilt With\namazon-web-servicesgolangdockerlxcjavascriptweb\n",
        "hackathon_id": "cal-hacks2",
        "winner": true
    },
    {
        "description": "\nBuilt With\npythonflasksqlalchemy\n",
        "hackathon_id": "cal-hacks2",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe are all avid skater and cyclist. We all notice that the path route provided by either Here or Google isn't best choice for riders and especially for skaters, it's easy to fall at certain bumpy place. So, we developed RiderWay to help avid riders like us to share and find best rider way.\nWhat it does\nRiderWay is a web based app that create a dynamic platform for skaters and cyclist to exchange best rider path info and feedbacks towards road conditions.\nHow I built it\nWe used Here Map Javascript API and Routing API as base to compute the route and Azure and Django as backend server to support the network and database. \nAfter user submit, feedbacks will be stored in database so that anytime when other user's search have overlap, the road's condition report from previous user will be indicated. Red means danger, yellow means medium and green means comfort\nWhat I learned\nWe learned how to user Here API to abstract map information, Django as backend server to support backend access. Exchange info between FrontEnd and backend and update info in database and render latest info to the FrontEnd.\nWhat's next for RiderWay\nCurrently it only has rating system. We expect in the upcoming future to make it more complete by allow user to provide various kind of feedbacks like GoPro video and image of their ride. It will also exclude points that have been marked as danger out of the way when you plan your bike or skateboard path\n",
        "hackathon_id": "cal-hacks2",
        "winner": true
    },
    {
        "description": "\nInspiration\nEvery year, millions of people around the world choose not to recycle because they don't know how! We wanted to simplify recycling for the public.\nWhat it does\nRobot Recycler uses a Kinect to search for recyclables, then either puts things in the trash, or the recycling! It's that easy!\nHow I built it\nWe used the Kinect, Robot Operating System, and Arduino to build Robot Recycler.\nWhat's next for Robot Recycler\nIn the future, we'd like to add more models to our Kinect's library so that no recycling ever gets put in the trash!\n",
        "hackathon_id": "cal-hacks2",
        "winner": true
    },
    {
        "description": "\nInspiration\nNot wanting to keep moving my stuff around all the time while moving between SF and Waterloo, Canada.\nWhat it does\nIt will call a Postmate to pick up your items, which will then be delivered to our secure storage facility. The Postmate will be issued a one time use code for the lock to our facility, and they will store the item. When the user wants their item back, they will simply request it and it will be there in minutes.\nHow I built it\nThe stack is Node+Express and the app is on Android. It is hosted on Azure. We used the Postmate and Here API\nChallenges I ran into\nAccomplishments that I'm proud of\nA really sleek and well built app! The API is super clean, and the Android interface is sexy\nWhat I learned\nWhat's next for Stockpile\nBetter integrations with IoT devices and better item management.\n",
        "hackathon_id": "cal-hacks2",
        "winner": true
    },
    {
        "description": "\nBuilt With\nhereuberazurejquery\n",
        "hackathon_id": "cal-hacks2",
        "winner": true
    },
    {
        "description": "\nInspiration\nAs technology advances, our society is harnessing technology to acquire goods in more convenient ways than ever. With the rise of services such as Postmates, Caviar, Diner Dash, etc., it is now possible to have most basic necessities delivered in a timely fashion. However, one industry that appeals to us is the second hand goods industry. Second hand goods are often a good way to save money while getting similar quality products. One of our favourite sites is Craigslist, and we knew we could improve upon the buying experience.\nWhat it does\nAfter a user has found a desirable product on Craigslist, he/she copies and pastes the URL into craig-o-mation. craig-o-mation will scrape the Craigslist post for information such as cost, and also requests a bit more necessary information from the purchaser. After the purchaser fills out this short form, the poster gets an email describing what the purchaser has offered. Should they choose to accept, after entering some information, the sale is completed. A Postmates courier is instantly dispatched to the purchaser to collect the product and deliver it to the buyer. A payment is made from the purchaser to the buyer through Capital One's APIs. Within minutes, the buyer gets his second hand goods conveniently for an affordable price.\nHow I built it\n\nThe forms are all written in HTML, CSS, and Javascript\nForms send data to our backend written in Go\nGo backend proxies through a Python server running at home in order to bypass Craigslist's imposed restrictions on certain IPs (they are quite strict)\nGo backend talks to Postmates and Capital One APIs to facilitate the transaction and delivery of the item\nEmail and datastore are provided with App Engine, where the app is hosted\nAlso use Google Maps API for frontend forms to ease entering of addresses\n\nChallenges I ran into\nCraigslist is extremely strict about bots and automation. They have IP blocked many large cloud computing companies and have imposed other restrictions to make scraping and automation extremely challenging. We were able to get a home server running that we could proxy requests through in order to scrape data from Craigslist. \nAccomplishments that I'm proud of\n\nThe UI is simple, helpful, and intuitive\nThe emails have styling beyond basic text emails\nThe Craigslist proxy was challenging to implement and works quite well\nThe backend is very efficient due to design decisions\nWe were successfully able to integrate with Postmates and Capital One APIs\n\nWhat I learned\n\nGet it done mentality. There is always a way to make novel innovations, it just takes perseverance\nSome problems stumped us for many hours but in the end we did not need to compromise on functionality\n\nWhat's next for craig-o-mation\n\nWrite browser extensions to store user data and be accessible while browsing Craigslist to decrease friction with users\nFaster and more reliable solutions for scraping Craigslist\n\n",
        "hackathon_id": "cal-hacks2",
        "winner": true
    },
    {
        "description": "\nBuilt With\npebblecandroid-studioazuremagnet\n",
        "hackathon_id": "cal-hacks2",
        "winner": true
    },
    {
        "description": "\nInspiration\nIn a world where a tweet out of context can cost you your career, it is increasingly important to be in the right, but this rigidity alienates a productive and proud group of people in the world--the impulsive. Politically Correct is a solution for those who would risk a slap for a laugh and who would make light of a dark situation. \nThe question of whether we have stepped too far over the line often comes into our minds, sparking the endless internal debate of \"Should I?\" or \"Should I not?\" Politically Correct, leveraging both artificial and natural intelligence, gives its users the opportunity to get safe and effective feedback to end these constant internal dialogues.\nWhat it does\nThrough a carefully integrated messaging backend, this application utilizes Magnet's API to send the text that the user wants to verify to a randomly selected group of users. These user express their opinion of the anonymous user's statement, rating it as acceptable or unacceptable. This application enhances the user's experience with a seamless graphical interface with a \"Feed\" giving the user messages from others to judge and \"My Questions\" allowing users to receive feedback. The machine learning component, implemented and ready to be rolled out in \"My Questions\", will use an Azure-based logistic regression to automatically classify text as politically correct or incorrect.\nHow I built it\nBlood, sweat, tears, and Red Bull were the fuel that ignited Politically Correct.  Many thanks to the kind folks from Magnet and Azure (Microsoft) for helping us early in the morning or late at night. For the build we utilized the Magnet SDK to enable easy in-app messaging and receiving between users and a random sample of users. With the messages, we added and triggered a message 'send-event' based on the click of a judgement button or an ask button. When a message was received we sorted the message (either a message to be judged or a message that is a judgement). To ensure that all judgement messages corresponded to the proper question messages we used special hash ids and stored these ids in serialized data. We updated the Feed and the MyQuestions tab on every message receive. \nFor Azure we used logistic regression and a looooooooonnnnnnnnggggggg list of offensive and not offensive phrases. Then after training the set to create a model, we set up a web api that will be called by Politically Correct to get an initial sentiment analysis of the message.\nChallenges We ran into\nAside from the multiple attempts of putting foot in mouth, the biggest challenges came from both platforms:\nAzure: Perfectionism\nWhile developing a workflow for the app the question of \"How do I accurately predict the abuse in a statement?\" often arose. As this challenge probably provokes similar doubts from Ph.Ds we would like to point to perfectionism as the biggest challenge with Azure. \nMagnet: Impatience\nEver the victims, we like to blame companies for putting a lot of words in their tutorials because it makes it hard for us to skim through (we can't be bothered with learning we want to DO!!). The tutorials and documentation provided the support and gave all of us the ability to learn to sit down and iterate through a puzzle until we understood the problem.\nIt was difficult to figure out the format in which we would communicate the judgement of the random sample of users. \nAccomplishments that I'm proud of\nWe are very proud of the fact that we have a fully integrated Magnet messaging API, and the perfect implementation of the database backend. \nWhat I learned\nAside from the two virtues of \"good enough\" and \"patience\", we learned how to work together, how to not work together, and how to have fun (in a way that sleep deprivation can allow). In the context of technical expertise (which is what everyone is going to be plugging right here), we gained a greater depth of knowledge on the Magnet SDK, and how to create a work flow and api on Azure.\nWhat's next for Politically Correct\nThe future is always amazing, and the future for Politically Correct is better (believe it or not). The implementation for Politically Correct enjoys the partial integration of two amazing technologies Azure and Magnet, but the full assimilation (we are talking Borg level) would result in the fulfillment of two goals:\n1) Dynamically train the offense of specific language by accounting for the people's responses to the message.\n2) Allow integrations with various multimedia sites (i.e.  Facebook and Twitter) to include an automatic submission/decline feature when there is a consensus on the statement.\n",
        "hackathon_id": "cal-hacks2",
        "winner": true
    },
    {
        "description": "\nBuilt With\nobjective-chtmlruby\n",
        "hackathon_id": "cal-hacks2",
        "winner": true
    },
    {
        "description": "\nBackground\nCollaboration is the heart of humanity. From contributing to the rises and falls of great civilizations to helping five sleep deprived hackers communicate over 36 hours, it has become a required dependency in the git@ssh.github.com:hacker/life.\nPlowing through the weekend, we found ourselves shortchanged by the current available tools for collaborating within a cluster of devices. Every service requires:\n\nAuthentication Users must sign up and register to use a service.\nContact People trying to share information must establish a prior point of contact(share e-mails, phone numbers, etc).\nUnlinked Output Shared content is not deep-linked with mobile or web applications.\n\nThis is where Grasshopper jumps in. Built as a streamlined cross-platform contextual collaboration service, it uses our on-prem installation of Magnet on Microsoft Azure and Google Cloud Messaging to integrate deep-linked commands and execute real-time applications between all mobile and web platforms located in a cluster near each other. It completely gets rid of the overhead of authenticating users and sharing contacts - all sharing is done locally through gps-enabled devices.\nUse Cases\nGrasshopper lets you collaborate locally between friends/colleagues. We account for sharing application information at the deepest contextual level, launching instances with accurately prepopulated information where necessary. As this data is compatible with all third-party applications, the use cases can shoot through the sky. Here are some applications that we accounted for to demonstrate the power of our platform:\n\nShare a video within a team through their mobile's native YouTube app in seconds.\nInstantly play said video on a bigger screen by hopping the video over to Chrome on your computer.\nShare locations on Google maps between nearby mobile devices and computers with a single swipe.\nRemotely hop important links while surfing your smartphone over to your computer's web browser.\nRick Roll your team.\n\nWhat's Next?\nSleep.\n",
        "hackathon_id": "cal-hacks2",
        "winner": true
    },
    {
        "description": "\nOverview\nHow we understand and communicate to those around us shapes and determines the person we are. In order to help people better understand the sentiments behind their words, we have incorporated the NLTK sentiment analysis tool to learn and interpret the positive, negative, and neutral meanings behind our words. In addition to d3js illustrations, integration in Moxtra allows for a commonplace setting for different users to benefit from the app.\nThe data is provided in three graphs: sentiment analysis of messages sent, sentiment analysis of messages received, and sentiment analysis over the course of using the website in hopes to help better become more aware of their words and surroundings, to improve the ways that people communicate, and to provide useful and meaningful data where necessary.\nChallenges\nThe areas that we spent the most time on were actually in planning, incorporating Moxtra, and deploying to Azure. We actually encountered an interesting bug with the Moxtra API with user authentication after hours of slamming against it and had a great experience bringing it to the attention of one of the Moxtra engineers to find a workaround. Azure server setup with Flask was streamlined once talking with a helpful mentor - with most of the initial issues cause by hardware setup differences.\nWhat's Next?\nMobile, more robust messaging, stronger analysis tools are all awesome features we would like to see!\nHowever, when we narrowed down the features to one item we would like to work on, we decided ultimately on the ability to retroactively review ALL messages in order to obtain an instant break down of communication over time and to observe any trends over time.\n",
        "hackathon_id": "cal-hacks2",
        "winner": true
    },
    {
        "description": "\nOur Inspiration\nDesigner clothing and high-fashion are extremely expensive luxuries. These clothes and dresses tend to be worn just for a few times, if at all worn more than once. A cheaper way to experience luxury clothing is not prevalent today. The fact that expensive clothing is usually worn less times by the owners can be used as a solution.\nWhat Almari does\nAlmari is a crowdsourced virtual wardrobe that attempts to redefine luxury clothing. Our target audience is millennials. Almari provides a web platform for high fashion products to be shared and thus better utilized. We tried to achieve two objectives:\n1) An efficient way for lending/renting and borrowing high fashion clothing items. Our search criteria uses the type of event (formal, cultural, party etc.) as the method of suggesting possible clothing matches. \n2) A good system of monetization for people who invested in luxury clothing, and a cheap and hassle-free experience for people who want to rent out clothes for specific events.\nAlmari ensures quality of the clothing items put on its store by using a UID of any clothing item.\nWe also have a feature for donating clothes to Salvation Army.\nHow we built it\nThe frontend of Almari is built using the Bootstrap framework and AngularJS\nThe backend is built on Parse and Node.JS\nChallenges we ran into\nNo one knew Parse and one person had to learn it from scratch.\nAccomplishments that we're proud of\nWe built an API for GAP that gives an image for a product code.\nClean and professional UI/UX\nWhat's next for Almari\nSocial media integration. \nGet to know the sentiment of your friends before borrowing/purchasing a dress.\nUse the Postmates API for enabling exchange of clothes from anywhere to anywhere.\n",
        "hackathon_id": "cal-hacks2",
        "winner": true
    },
    {
        "description": "\nBuilt With\nobjective-conenameblockchainpostmatescocoapodsios-postmates\n",
        "hackathon_id": "cal-hacks2",
        "winner": true
    },
    {
        "description": "\nInspiration/What it Does\nKiva is a nonprofit organization that allows anyone to provide micro loans. We wanted to help loaners quantify the impact of their loans in the community of which they are loaning to.\nHow I built it\nKiva Impact uses data points from World Bank and United Nations to determine the power of a loan, the importance of the loan (in terms of impact to GNI), and social implications that surround the loan.  \nWhat's next for Kiva Impact\nWe hope to improve our impact calculator by creating models using historical data. By using machine learning, our algorithm will be able to determine why an impact score was assigned. We also want to improve our data visualization by using more D3 models. In the future, we can use a prediction method to estimate the potential impact of an unfunded project. We can then tell loaners where their money may have the greatest impact before they even issue the loan. \n",
        "hackathon_id": "cal-hacks2",
        "winner": true
    },
    {
        "description": "\nInspiration\nAll the struggling, independent musical artists out there.\nWhat It Does\nMusicians and musical artists can upload there music/song/album/mixtape/ORIGINAL HOT FIRE to the website and share it locally. Others are able to listen and discover new local music and like/dislike it to increase/decrease the \"radius of fire\" of each upload.\nHow We Built It\nWe used Parse on the backend and Google Map's API/JavaScript to handle the mapping and overall interface.\nWhat's Next For SoundFyre\nFull-fledged social media network for local musical artists and listeners and world wide usage.\n",
        "hackathon_id": "cal-hacks2",
        "winner": false
    },
    {
        "description": "\nInspiration\n285 million people are estimated to be visually impaired worldwide: 39 million are blind and 246 have low vision. (WHO Fact sheet, Aug 2014). Many of them are intelligent, smart and passionate. They all want to contribute to the society. So as a society its our responsibility to enable them to do so. With this inspiration we are making a device that will enable those people to walk more freely and make them independent.\nWhat it does\nThe \"Eyes!\" as we call it, is built with sensors to guide visually impaired people while walking. It senses obstacles and notifies user (using voice) about them. \nHow I built it\nChallenges I ran into\nAccomplishments that I'm proud of\nWhat I learned\nWhat's next for Eyes!\n",
        "hackathon_id": "cal-hacks2",
        "winner": false
    },
    {
        "description": "\nInspiration\nQuadcopters a man named Jeffrey.\nWhat it does\nWakes you up\nHow I built it\nmany all-nighters\nChallenges I ran into\nParts didn't arrive on time so we made our own\nAccomplishments that I'm proud of\nWe have a framework for it to work, even though we started with nothing\nWhat I learned\nHow to build flying things\nWhat's next for Alarmcopter\nMusic/Megaphones\n",
        "hackathon_id": "cal-hacks2",
        "winner": false
    },
    {
        "description": "\nInspired by those 2D displays based on spinning LEDs that show simple lines of text, we imagined that multiple layers of spinning LEDs could be used to create 3D objects.  The result is our volumetric display: a display capable of showing a variety of shapes in 3D space.\nThe machine consists of 40 LEDs all soldered to a few bread boards with shift registers on them, and all of the shift registers connect to an arduino, thereby allowing the arduino to fully control all of the LEDs.  The arduino and the LEDs sit on a rotating platform that we made from laser cut acrylic.  The arduino blinks the LEDs in time with the rotation of the platform in order to produce 3D objects.\nOver the course of the project we encountered many difficulties including producing literally hundreds of solder joints, attempting to stabilize a platform that would wobble and rip itself apart when spinning, and syncing the arduino as best as we could to the speed of the motor (while the speed of the motor changed due to draining its battery).  However, we succeeded in producing the device which can indeed produce 3D objects and have a demonstration program that produces the outlines of a cube.\n",
        "hackathon_id": "cal-hacks2",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe three of us love playing Super Smash Brothers together. Unlike many modern games, it cannot be played online: we must be physically present with each other to play.  It's often difficult to know when we're available, or where we'll be at any given time.  The bandwidth of asking, confirming, and scheduling meetups is often enough to deter us from playing.\nIt turns out, we're not the only ones who like this game.  In the past two years that we've attended UC Berkeley, interest in Super Smash Brothers has exploded: what was once a small group of friends has now grown into an active and vibrant community.  We now have a corresponding Facebook page with nearly 900 members.\nWith a growing number of people, we still find ourselves scarce on hardware resources, space, etc.  Organizing meetups is challenging as ever, since everyone is busy.  Sometimes it's scary or embarrassing to post publicly on a Facebook page with so many members, only to not receive a response.  We strove to come up with a solution to this problem.\nWhat it does\nDown to Smash (DTS) is aimed to be a platform where users can create, search, and manage events quickly and efficiently on a whim.  People interested in hosting a gathering can easily create an event that people in the area can view on a visually intuitive map.  Attendees may show interest anonymously as the scour the perimeter, and exchange approval/confirmations with hosts.  Hosts in turn are able to manage their capacity, attendees, and accommodate them as they see fit.  DTS allows people to survey their local area with anonymity, and show interest in multiple events with ease, little commitment, and speed.  The tedious process of meeting up for impulsive events will be no more.  We also see its potential for other activities besides Smash, perhaps such as chess sessions or hangouts.\nHow I built it\nWe first drafted up what we wanted in our application, thinking about the app we wanted -- the app we would use.  We talked about the formats of user interactions, what a user would see, before drawing out the design, models, views, and interactions on pen and paper.  Afterwards, we considered a few web frameworks before deciding upon Django as our full-stack framework: it was a cookie-cutter framework that had the power, tools, support, and documentation for us to learn and work quickly.  First came the creation of models, and tying them to views and templates.  We carefully considered the logic for our application while working with a bare minimum user interface.  From there it was a matter of incorporating basic UI through bootstrap.  \nWe were set on also utilizing Google Maps, which we had our sights on since the conception of DTS.\nChallenges I ran into\nWe may have underestimated the difficulties of incorporating certain features, such as the Google Maps API.  The asynchronous programming associated with JavaScript led to major roadblocks in our progress.  Managing the nuances in interactions between models in the database was more challenging than expected.  \nAccomplishments that I'm proud of\nJust working through a new framework and being able to build a working application within a few days is also quite the accomplishment, I feel.  We worked efficiently as a team, and ultimately managed to integrate Google Maps successfully, which we were strongly considering dropping because of the difficulties despite our strong desire to use it.  \nWhat I learned\nAlways overestimate the time you will need to make even the smallest additions!  Building an app from start to finish is not an easy task to take on.\nWhat's next for downtosmash\nFixing bugs, mobile port, new features, deployment, Facebook login, lots more!\n",
        "hackathon_id": "cal-hacks2",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtmlcss\n",
        "hackathon_id": "cal-hacks2",
        "winner": false
    },
    {
        "description": "\nInspiration\nBlog Post about parent who was unable to get resources to check color vision impairment in child. Every 1 in 10 people have colorblindness.\nWhat it does\nThere are two parts to this website. One is the actual test which tests if a person has color blindness. The second is a game mode which is an interactive way to check whether or not your eyesight is good or not. This is specifically designed for younger children.\nHow I built it\nBuilt it using HTML and JavaScript with the help of StackOverFlow and other websites.\nChallenges I ran into\nMany than I can list. One challenge was how to grade the test. Another was the formatting for the game.\nAccomplishments that I'm proud of\nWe were able to complete the entire project in the allotted time.\nWhat I learned\nLearned how to code in JavaScript.\nWhat's next for Color Vision Test\nImproving the tests. Improve the code and make it more efficient.\n",
        "hackathon_id": "cal-hacks2",
        "winner": false
    },
    {
        "description": "\nThe inspiration for this project is the passion and desire to create a human-machine interactive device in a party setting to bring joy and happiness among the people. While brainstorming for ideas for the hackathon, we came across a lot of cool technologies and party events in which such interactive technologies were used. What we noticed is that an interactive device which would sync with the music being played and involve the user in controlling operation of several exciting tasks is missing. We also realized that Halloween is round the corner. Thus we decided to design and develop our Halloween party station which would interact with the user in an entertaining way. \nThe Halloween Party Station is designed to be synchronized with an interactive audio-visual application so that the user would be able to use motion control to play while seemingly dancing to the dynamic music and visuals. In addition, we added various features to make the user feel like the application will \"react\" to his actions. These include: a balloon that will pop at the peak of the user's performance, a 3D-printed bobblehead that will groove to the beat of the music, and Christmas lights which will either run in random sequence or flash rapidly depending on the user motion. \nMost of the interactive events are controlled by the Arduino and the nrf24L01 wireless RF-transceiver. The nrf24L01 transceivers are used for transfer of data between the custom-designed motion controller and the base controller. \nThe custom-designed motion controller is a device which consists of an arduino nano, a 6-DOF accelerometer, 9-Volt battery and two-channel relay. The motion controller is unique and innovative since we modified the sleeping mask provided by Walmart into a headband which houses the electronics of the motion controller. The motion controller is responsible in sensing the head movements of the user as well as touch inputs to trigger various tasks in the base controller. \nThe base controller is the main hub which smartly analyses the information obtained from the motion controller and the audio signal. The base consists of an arduino nano, 3 two-channel relays, 120-volt battery, power regulator and nrf24L01 chip. The base controller processes the information obtained based on signal processing and sensor fusion algorithms. The base controller is also responsible for the following outputs namely: audio-visual information control, balloon popping, christmas lights control and animatronics head control. All the outputs are driven using relays. In addition, the bobble-head was 3-D printed, our balloon was hanged on a pole made of PVC pipes, and the Christmas lights were controlled by various relays.\nDuring our project, initially we planned to make a dry rocket launcher but were not allowed because of safety issues. We immediately brainstormed and came up with a balloon popping idea to replace the rocket launcher which was really self-motivating for the team. On day 2, we had a lot of trouble in setting up the wireless communication between the nRF24L01 chips and seamlessly send the sensors data to the base controller. We spent several hours coding and testing the device to make sure the algorithm is properly implemented and everything is successfully executed. Overall, system integration was another big challenge. \nI am really proud that my team and I were able to successfully design, develop and integrate an entire system while sticking to a timeline and being able to achieve the planned functionalities. We also were able to learn each others' strengths and weaknesses as individuals. The biggest achievement of this experience is that we intuitively came up with a completely new and unique interactive motion controller. \nThe next stop for the Halloween party station is to entertain Purdue students during Halloween by integrating more features and operations that can be controlled by the user.\n",
        "hackathon_id": "boilermake2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe struggle and often find it awkward to approach and meet new people in the real world. We want to bring the comfort of interacting with people behind a screen to the real world using as simple and unobtrusive a system as possible. In addition, we want to create a tool which can measure the rate of change in the willingness for people to socially interact with one another in any given environment.\nWhat it does\nProject green light breaks the awkward uncertainty when approaching new people through a simple lighting system displaying the status of an empty seat in public places. The user simply sits down and sets the status of all the empty seats at the table. Whether you are looking for company, or looking to concentrate, project green light always works in your favor.\nHow we built it\nThe Beacon For Friends (BFF) was made using an Arduino which controls the manipulation of the product. Buttons were used to change the color on 4 RGB LEDs and the product was housed in a plastic container, which was designed to look modern and elegant. A web application interacting with the device was built using Python and Flask.\nChallenges we ran into\nOne of the main challenges was time constraints, because of which it was not possible to 3D print the case for the BFF. Another challenge was sending data from the device to the web server and maintaining a distributed system with high fault tolerance, which would have allowed endless possibilities for the BFF.\nAccomplishments that we're proud of\nThe greatest accomplishment of this project is its huge market potential of our project. With endless opportunities, this project can be used in almost every cafe, library or dining hall all over the world. We were also able to develop a website for the BFF: http://changethelight.me.\nWhat we learned\nWe learned how to harness the power of the Arduino to create and design projects. We also learned a great deal about hardware-software integration as well as the importance of data in our everyday lives. Project Green Light gave us the ability to take a seemingly unmeasurable dynamic like social interactions and track it.\nWhat's next for Project Green Light\nWe would be able to collect our own API and analyze it to add new features to the product. If the product gets fully implemented, we would be able to have a fault-tolerant system to allow a single user to access a device at any given time. We could also allow users to access the product from the personal device of their choice.\n[http://changethelight.me]\n",
        "hackathon_id": "boilermake2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nA brain blast, to be honest.\nWhat it does\nLaserCom takes user input in the Arduino serial port, decomposes the data into a stream of bits, and transmits them via laser light. The receiver then decodes these bits, using an asynchronous laser clock to determine when the received data is valid, and outputs the decoded data to the serial monitor. After a message is sent, control is transferred to the previously receiving controller and it becomes the new transmitter. Control can be passed back and forth like this indefinitely.\nHow I built it\nWe split up the project into transmission and reception of light signals. In the end, we found our solution was much more robust than we thought it would be so we decided to mash the two together and make a fully functional instant messenger.\nChallenges I ran into\nThe photo resistors responded very strangely to the laser pulses initially and it took us a long time to dial in the laser pulse widths to consistently send accurate data. We also spent a lot of our time optimizing the way in which we read our data such that we could maximize our baud rate.\nAccomplishments that I'm proud of\nWe successfully got our two computers to communicate back and forth while exceeding a baud rate of 100! Our initial measurements showed that we would be limited to a transmission rate of 20 bits per second but we shattered that goal.\nWhat I learned\nWe learned how to implement UART communication protocols in the Arduino utilizing interrupts and handshaking to transfer transmission control during operation.\nWhat's next for LaserCom\nWe'd like to find a way to more evenly share control of the messaging interface. Currently after you send a message you must wait to receive a message before you can send another. We would also like to use higher quality lasers to achieve a much greater communication range.\n",
        "hackathon_id": "boilermake2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe were inspired by the success of numerous up and coming video sharing applications that have been entering the market for years.  From snapchat to vine to beme; they all revolve around sharing who you are with the people around you.  \nBut they are all missing something.  Every _ popular _ user on vine and snapchat super-star are incredibly similar.  They become popular making short crowd mentality inducing videos that really carry no substance.  This is where prompt steps in.\nWhat it does\nRather than a user standing in front of a camera and talking to their audience with pre-prepared speeches, prompt will _ prompt _ you with a question that you will have a few seconds to think about before which you will have to answer it.  This might seem a little bit intrusive at first, but it levels the playing field in the global community, and prevents users from putting up fake walls around themselves just for their audience on their social app.  \nWith this comes added benefits.  You can use this application as a private video journal and make as many personal entries as you like.  This lets people \"scroll back\" on their life and reflect upon what they thought, how they matured, and enjoy nostalgia that the app is sure to bring.  \nHow I built it\nThe front end was built in swift.  The UI is not overly complicated and it is clean and easy to use.  We took advantage of the numerous tools that xcode 7 has to offer which made the application design relatively painless.  The back end however was the real meat of the project.  We decided to build the backend in a way that we could essentially scale to millions of users instantly.  We built the backend on top of kubernetes and amazon ec2 which allows us to dynamically stir up more servers when under high load.  This is theoretically infinitely expandable.  IN addition AWS and kubernetes, we took advantage of many cloud based tools which we deployed to our our cluster running on AWS.\nChallenges I ran into\nThis project was built to scale larger than anything we had previously worked on.  We used best practices from industry giants like Netflix and Apple to build our system.  This was not easy to say the least.  After reconfiguring the cluster over 100 times in 24 hours due to various routing and dependency issues.  Finally we were able to call the cluster stable.\nAccomplishments that I'm proud of\nThe sheer magnitude of the project and how quickly we completed it is beyond comprehension.  We took on this project as an exercise in building a real world scalable service.  And we completed that goal despite none of us ever using swift or ios development before.  And 2 of us never having attended a Hackathon before.\nWhat I learned\nThis whole experience taught us a lot.  For one, ios development is very interesting and we can definitely see ourselves building ios applications again.  But the real lesson was in the sheer magnitude of work and understanding it takes to build a scalable system like we have.\nWhat's next for Prompt\nWe plan on implementing many more features from facebook integration, to prompt suggestions.  Our list of potential features is ever growing and we would love to take this application to a point where it is just as much a household name as snapchat or instagram is today.\n",
        "hackathon_id": "boilermake2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nThe classic 80's game, reinvented for a First Person nom-nom game.\nWhat it does\nIt generates orbs across the room you're in, and makes everybody else a ghost. \nHow I built it\nI build it in Unity3D, and Google Cardboard SDK.\nChallenges I ran into\nGetting the sensor readings accurately.\nAccomplishments that I'm proud of\nWe did it !!!!!\nWhat I learned\nGame development, multiple API integration, cross-platform build constructs. \nWhat's next for I'mPacMan\nApp Store, and Google Play Store\n",
        "hackathon_id": "boilermake2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nswiftiosnode.jssocket.ioazure\n",
        "hackathon_id": "boilermake2015",
        "winner": true
    },
    {
        "description": "\nWhat is Two Carts?\nTwo Carts is an app for shopping with friends. If you have ever been shopping with a group, you know that it is hard to keep tabs on which items have been purchased by each of your friends. Two Carts solves this problem. You can see a running list of each item each person has added to the cart, and you can keep track of how much each person is paying at the register.\nHow it Works\nTwo Carts is super simple throughout the full stack. The client-side is a simple user interface with only a few buttons. We made use of Apple's native, first-party barcode scanning. Additionally, we used the networking capabilities in iOS to communicate with the backend. On the backend, we use PHP and a framework we also wrote to easily access the database.\nWhy We Did It\nWe are roommates, and we go shopping together for things we need in our dorm room. Because we share a lot of the items we purchase, we pay on one bill and divide up the purchases afterward by looking through the receipt. We knew there was an opportunity for us to fix this problem, so we just decided to design and code it!\n",
        "hackathon_id": "boilermake2015",
        "winner": true
    },
    {
        "description": "\nIOT4.US is a user-friendly and easy way for people to develop their own Internet of Things devices, without knowing programming! We created our own drag and drop based language that interfaces with everything from sensors to IFTTT. \nOur main goal of our application was to give the average non-programmer the tools and knowledge to create Internet of Things devices. \nThrough the app, the user is given drag and drop logic and command flows to control sensors, servos, leds and more from a Raspberry Pi, or other IoT device. The user is then given a rough circuit diagram for their IoT board. \nIn the future, we hope to expand the number of input and output devices, as well as add the capability for custom devices with drivers. It is our hope to make this tool flexible and usable for developers like ourselves that are not as familiar with hardware interfacing.\nCome check us out!\n",
        "hackathon_id": "boilermake2015",
        "winner": true
    },
    {
        "description": "\nInspiration Whiteboards and the oculus. What squanch can I say? ## What it does Minimum Viable Product for a whiteboard in an oculus. Squanches not perfect, but it sends the image to a server, draws and saves on other computers, and squanches a pen to draw. It's a squanch whiteboard. ## How I built squanch Most of the code is in Unity. The backend is done over parse, and the drawing web service is in JavaScript ## Challenges I ran into Every single step got in our squanch. That didn't stop us. ## Accomplishments that I'm proud of ## What I learned ## What's next for Virtual Whiteboard It's in the minimum viable state. We can make it really nice though. It would just take a bit of time.\n",
        "hackathon_id": "boilermake2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\npython\n",
        "hackathon_id": "boilermake2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nazureazure-mljavascripthtml5css3tableau\n",
        "hackathon_id": "boilermake2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWhen meeting someone, something that often comes up early on is where that person is from originally. Especially on a large college campus, answers are diverse and can span the entire globe. Hometown provides a fun and easy way to keep track of where your friends are from, and can provide some interesting facts such as how local or global your friend network is. Hometown is not just another social media app - it purposefully requires you to add friends manually, with the goal of being a fun and natural part of your social life and not one more place to import all of your Facebook friends.\nWhat it does\nHometown is based around a very simple contact list that only requires a name and hometown, although it can take extra fields such as a picture or phone number as well. It then plots all of the hometowns on a map to display this information graphically. A third view shows interesting 'metrics' about your friend list, including the furthest and closest hometown to you, average distance to hometowns, and number of friends from nearby your hometown.\nHow I built it\nWe developed apps for android and iPhone in parallel, using Android Studio and Objective-C, respectively. For the android app, Google Places and Google Maps APIs were used for the mapping feature, and Mapkit was used for the iOS app.\nChallenges I ran into\nThe APIs were surprisingly difficult to work with, and getting the API keys to work properly was a roadblock. Getting the data to persist was another challenge at first.\nAccomplishments that I'm proud of\nAlmost none of this worked the first (or second or third) time, and I'm proud of our team for persevering until it did work.\nWhat I learned\nAndroid Studio had a much steeper learning curve than I was hoping, but I was able to use this weekend as time to read all about it and go through several tutorials, and now I think I'm getting the hang of it. -Sam\nWhat's next for Hometown\nWe have a lot in mind for Hometown in the future. One cool feature would be using NFC and/or a QR-code type of system to quickly add friends who already have an account in the app. We still want to stay away from importing friends in bulk, but making the input process easier would be nice.\nAlso, a long-term idea would be to let travel companies (American Airlines, MegaBus, etc.) pay for access to users' data (with their permission) and use it to advertise relevant trips within the app. For example, if I have 7 friends with hometowns in Chicago, I might get a notification from MegaBus that there's a sale on tickets to Chicago this weekend. That way, we can monetize the app while still providing a useful feature to our users.\n",
        "hackathon_id": "boilermake2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nYour health is extremely important, but most people only see their doctor once a year. What if you could have your own doctor in your house, able to give medical information that is specific to you and backed by your primary care physician?\nWhat it does\nEcho, M.D. uses the FHIR protocol to access data from patient charts, then helps you manage your medicines: when you've taken them, when you need to take them, and when you might run out. You can ask Amazon Echo questions like \"Do I need to take any medicine?\" and it will respond with medicines you need to take, as well as how many you have left. It can also log medicines for you with phrases like \"I just took 1 dose of Tylenol,\" to make sure that you are taking the correct dosage every day.\n",
        "hackathon_id": "boilermake2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nMy Amazon wishlist is unfortunately effective at emptying my bank account on the internet, and being able to do that in real life seemed like a pretty solid business plan\nWhat it does\nwyshlist lets users pick categories of items they're interested in buying (\"A new jacket,\" \"A pair of boots\") and then uses iBeacons to connect them to deals at their favorite stores\nHow we built it\nBootstrap, Angular, Haskell, Bluetooth LE. Runs on an AWS instance\nChallenges we ran into\nWe couldn't find a real iBeacon, so we had to get a Mac running Mavericks to emulate one. Our team is very new to the hackathon scene, so understanding exactly what goes on at a hackathon and best practices for sleeping, eating, etc. was a bit rough at times\nWhat's next for wyshlist\nA hardware management system - a handheld watcher that an employee can walk around a store with, to check to see if any beacons have died.\nYou can try our app in person at the expo booth!\n",
        "hackathon_id": "boilermake2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nEveryone we know uses Venmo, and all too often we hear the words, \"Can you spot me? I'll Venmo you later.\" Inevitably, someone else chimes in: \"Can you spot me, too?\" And so on. Wouldn't life be so much easier if you could just take a picture of your receipt or find your latest online receipt and split it with any number of people you choose? \nWhat it does\nSwiftDiv uses Project Oxford for the Computer Vision API so that it can read receipts and process the total cost. Then, it sends out a Venmo request to the participants you list (this part's in progress--we couldn't get access to Venmo. :( ) Through Slice, SwiftDiv can go through your email inbox and retrieve the latest online order. Say, you and your roommate want a new television and you order one online. SwiftDiv can find that order, so that you can charge your roommate easily. \nHow we built it\nWe used Android Studio, a lot of Googling & a TON of help from the lovely sponsors/engineers at BoilerMake!\nChallenges we ran into\nThis is our first app, and our first venture into Java........\nAlong with that, we couldn't register properly with the Venmo API, despite trying three Venmo accounts and talking to every sponsor and participant willing to listen about our Venmo woes. :(\nAccomplishments that we're proud of\nWe made it work!!!\nWhat we learned\nLots and lots of Java, and lots of weird finicky things about Java. \nWhat's next for SwiftDiv\nDefinitely integration with Venmo, as that's what our app centers around in the first place! Everything else is working! :)\n",
        "hackathon_id": "boilermake2015",
        "winner": true
    },
    {
        "description": "\nAs phones add health monitoring capabilites to their features, the question of how to manage the growing heap of personal and private data is paramount.\nHealth data sync is noticeably absent in iOS- regulations make storing it on the cloud complicated, whether there are any real risks or not.\nLocket is a service that uses the new iOS multipeer communication framework to securely share data between your devices, without the data ever touching the cloud.\nWe developed a network filesystem that is centrally managed with CloudKit, but syncs using direct, secure peer-to-peer communication. The result: reliable sharing with complete peace of mind.\n",
        "hackathon_id": "boilermake2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nAt Rose-Hulman, every student is well aware of the annoyances that are SharePoint emails. These emails get sent out to every student, professor, and faculty member and anyone can use this service immediately. While it has its upsides, SharePoint is most often used for students to buy and sell used textbooks. This creates an productive environment where buyers and sellers can meet and do business, but there is absolutely no reason why every student needs to know when someone wants to make an exchange. \nWhat it does\nBookalicious connects people who want to sell their used textbooks to those who want to buy them in a simple, easy to use format. \nPutting up a book for sale is as easy as listing the books title, subject, and a picture of it. then sit back and let the buyers come to you!\nIf you want to buy a book, simply state the subject(s) of interest and books for sale and scroll through the local books for sale until you find the textbook you want. If you see what you like, press the \"I want this!\" button and you will be paired up with the seller in a private chat system. This is the place where the buyer and seller can negotiate prices and meeting places, all without any other student receiving an email in the process!\nHow we built it\nWe created the mobile app through Android studio with Java and XML\nOur website was created using  Bootstrap, html, css, and Javascript\nThe server is running off of two Raspberry Pis\nAll of the data we use (Profiles, Books for sale, etc.) is stored on Parse.\nIcons were made with Paint.net\nChallenges we ran into\nTIME\nAccomplishments that were proud of\nConstructing two platforms that Bookalicious can run on.\nWhat's next for Bookalicious\nPlenty of fine tuning: Fully functional messaging, completion of the web app, better review system.\nWe will push this app towards the Dean of Students at Rose-Hulman and see if this app can get promoted, eventually reducing some of the clutter on Rose's SharePoint.\n",
        "hackathon_id": "boilermake2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nHow many times have you passed your friend on the street without even seeing them> Probably more often than you realize. With such a technology centric society, too many people forget to look up and see the world around them. Our app reminds users to do just that, and to say \"hello\" to a friend that they otherwise would have blindly passed. We believe our app reminds others to see what truly matters in the world: each other.\nWhat it does\nFriendsFindMe notifies users when another user passes them on the street using their GPS locations. An arrow appears on the users' watches' screens, pointing them in the direction of their friend.\nHow I built it\nThis project services multiple platforms. Xcode and swift were used to communicate between iPhones and iWatches,  our Android application, built using Android Studio, communicates with Pebble watches, which were programmed in C. These apps are both served by a back-end written in Ruby on Rails on AWS Elastic Beanstock.\n",
        "hackathon_id": "boilermake2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWhat it does\nIt tracks a person's mouth using facial recognition software and then launches gobstoppers into his or her mouth.\nHow I built it\nThe mechanical design incorporates a pan/tilt mechanism to aim the launcher. The launcher itself consists of two counter-rotating wheels, a magazine tube, a barrel, and a push rod to activate a shot.\nThe pan and tilt mechanism operates using one stepper motor per axis. Each stepper motor drives a timing belt which has ends fixed to a cylinder on the underside of each rotating axis. With 2026 total steps per revolution of each machine axis, this provides an accurate means of positioning the launcher. Concerns include over-travel as the pulley system is not a continuous loop. A potential fix is to keep track of absolute machine coordinates and relative machine coordinates, but has not been implemented due to time constraints.\nThe launcher mechanism went through an iterative design phase. The original goal being to launch Skittles, we pursued two parallel development paths: the first being the launcher currently used, and the second being a system based on a rotating disk attached to a fan motor taken from a microwave. \nThe second option had many drawbacks, one of them including the issue of shattering Skittles on contact instead of launching them. It also had no way to vary the angular velocity of the disk, which would severely limit tuning and distance compensation. This option was abandoned early on in favor of the counter-rotating wheel mechanism.\nThe final launcher presented consists of two counter-rotating brushless DC motors. Adhesive foam on the outside of the motors allows the system to grip the candy being fed into it and also takes up some of the variability in the size and shake of the candy. Candy is fed into a vertical magazine tube which deposits a single candy into the chamber. A servo acts as a push rod to manipulate the candy into the wheels while blocking the magazine. When the push rod retracts, another candy drops into the chamber. The wheels accelerate the candy and the candy gets funneled into the barrel. The barrel helps to minimize angular variability in launches. The speed of the motors is variable and allows for close-range launching or distances in excess of 20 feet.\nChallenges I ran into\nAccomplishments that I'm proud of\nThe cannon frame, launching mechanism, and, rotation mechanisms were made entirely by hand here.\nWhat I learned\nWhat's next for Skyttle\nWe are going to launch skittles and try to keep the cannon's aim and power as consistent as possible.\n",
        "hackathon_id": "boilermake2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe wanted to play competitive Pokemon on the go. We targeted Android and Pebble watches.\nWhat it does\nIt's a client for Pokemon Showdown, a free online simulator for competitive Pokemon. This client only plays random battles against random people.\nHow I built it\nPebble: Pebble.js and Websockets\nAndroid: Java and Websockets\nChallenges I ran into\nPebble.js is a nascent technology, so I had to dig through documentation to find what I wanted. Also the resources on the Pebble were limited, so websockets made the watch lag, and sprites took up a lot of space. Therefore, we omitted a lot of features from the Pebble app. Given more time, we would've found a way to cope with these limitations.\nAccomplishments that I'm proud of\nI now have experience with making Pebble apps. This one was particularly ambitious, but I think I have other, simpler ideas that I want to make Pebble apps out of.\nWhat I learned\nHow to read documentation well.\nWhat's next for PokePebble\nPolishing both the Pebble and Android apps.\n",
        "hackathon_id": "boilermake2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nobjective-cswiftmessageuiphotoscore-data\n",
        "hackathon_id": "boilermake2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe were inspired by S.C.S., sad corner syndrome, a plague affecting many anti social people who opt for playing on their phone in a dark corner instead of being social, and interacting with each other.\nWhat it does\nGilm provides a peer to peer decentralized network and compares user's interests in order to help them find people nearby who like what they like.\nHow we built it\nGlim makes use of Bluetooth Low Emission's peripheral mode to enable passive communication between iOS devices.\nChallenges we ran into\nWe ran into a lot of challenges with coming up with a method of communicating that could work cross platform, finding hardware that supported BLE peripheral which is relatively new technology, and limitations of apple's API for peer to peer communication.\nFurthermore the decentralized structure of our network made the project more complicated. \nWhat we learned\nGarrett learned a lot about low level Bluetooth communication, paradigms of peer to peer connectivity, and how to live with out sleep.\nSam got a crash course in Android development, and made great strides despite that aspect of that project being tabled. \nWhat's next for glim\nWe have started work on an android version (https://github.com/samontea/glim-android), but due to a lack of hardware that supported BLE periphrael mode we had to table it for most of the hackathon But considering the large amount of people who use android phones, finishing the android version is both a natural and necessary extension of this project.\n",
        "hackathon_id": "boilermake2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptcss3html5meteor.jsgoogle-cse\n",
        "hackathon_id": "boilermake2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\npopbootstraphtml5cssphotoshop\n",
        "hackathon_id": "cilocalhackday",
        "winner": true
    },
    {
        "description": "\nInspiration\nFrom real struggles from adults and teens alike\nWhat it does\nGets the easiest routes to your school/work\nHow I built it\nBy using a website\nChallenges I ran into\nVery few complications\nAccomplishments that I'm proud of\nWe managed to make our first app with simple tasks\nWhat I learned\nHow to code even more.\nWhat's next for The Hurry App\nProbably updates.\n",
        "hackathon_id": "cilocalhackday",
        "winner": true
    },
    {
        "description": "\nInspiration\nLack of technological opportunities in low income areas such as Bronx.\nWhat it does\nA website with the functionality of a portfolio for the users where they can showcase their creations.\nHaving information about free opportunities like hackathons, scholarships, sponsorship's, internships, and access to free coding classes hosted by companies, or local organizations like CI, SEP, Google and Microsoft. (Can be done through social media advertisements and even locally)\nHow I built it\nDividing the work with online resources and mentors. (Brandon)\nChallenges I ran into\nFinishing the prototype and coming up with name and features. Rehearsing for the presentation.\nAccomplishments that I'm proud of\nWe submitted the project no matter what and our idea is one in a million.\nWhat I learned\nTeamWork is the one of the only way to succeed as a team.\nWhat's next for FutureWorks\nBuilt in messaging app\nA app for iOs\n",
        "hackathon_id": "cilocalhackday",
        "winner": true
    },
    {
        "description": "\nBuilt With\nhtml\n",
        "hackathon_id": "cilocalhackday",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe transition from Middle School to High School is very tough and challenging for the freshmen and high school students in general. Students usually don\u2019t get comfortable in this new environment and often become very shy, they also feel discouraged to the fact that they don\u2019t know how the school years gonna go. Students don\u2019t get comfortable getting to know other students and teachers or talk with them in person. Most high school students faced this problem, even me and my group members did. This kind of problem affect them socially throughout life.\nWhat it does\nMe and my group think that we could make a social app like facebook for high school students only. Every high school will send the student their own email and password for the app and the the student can have the option to change their own password, students can write reviews, and other tips to make the app better in the online store.This will only be given out to the students who were admitted.The app can be found in Google Play Store or IOS App Store or Windows Store. Students can download it to their phones or the website. This app will be for all high school students from 9th grade to 12th grade. They can sign in to their account using their school's email (provided by their high school) only. In that app students can chat with students from that school and with teachers. Students may post statuses about what they did in summer or anything they want to share with the school. If anything goes wrong, like students bad behavior or inappropriate behaviors, teachers are required to take strict actions. Everything will be recorded by school officials. This would be a great and safe way to know each other before even they start school so they don't feel uncomfortable with their new environment and get along with their new friends.\nHow I built it\nWe built it with html css javascript \nChallenges I ran into\nTrying to figure out the layout that was user friendly\nAccomplishments that I'm proud of\nFully functional app and clean code\nWhat I learned\nHow to make a website and an app\nWhat's next for Connect 2 Konnect\nContinue to build up the website and expand in more high schools\n",
        "hackathon_id": "cilocalhackday",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtml\n",
        "hackathon_id": "cilocalhackday",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtmlcsspythonjavascript\n",
        "hackathon_id": "cilocalhackday",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtmlibuildapp\n",
        "hackathon_id": "cilocalhackday",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtml\n",
        "hackathon_id": "cilocalhackday",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtml5javascriptiosandroid\n",
        "hackathon_id": "cilocalhackday",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe Accidental Superpower: The Next Generation of American Preeminence and the Coming Global Disorder by Peter Zeihan\nWhat it does\nVisualize global energy patterns over time and how we can simplify them\nHow I built it\nJavascript, python, html, css\nChallenges I ran into\nLearning how to interact with the armsglobe open source project.\nAccomplishments that I'm proud of\nData is accurate and displays over years\nWhat I learned\nHow complex energy trade is as it has economic, political, and social repercussions as well as purely environmental.\nWhat's next for energyglobe\nIncorporate more energy sources than oil such as coal, natural gas, and pure current.\n",
        "hackathon_id": "berc-cleanweb-hack",
        "winner": true
    },
    {
        "description": "\nFull project proposal can be seen here:\nhttps://drive.google.com/file/d/0B58rifcsn9OBclZJTjFkQ2d0UEU/view?usp=sharing\nInspiration\nCalifornia, as well as many other parts of the world, is rapidly increasing the percentage of renewables on the grid. However, there are significant challenges associated with having a high penetration of variable and intermittent energy generators.\nThe current approach relies primarily on using natural gas peaker plants; however, this strategy is ultimately incompatible with long-term GHG policy goals, and could result in increased electricity prices.\nAnother method of reducing variability involves promoting technological and geographic diversity among renewable generators. While effective, this tactic is not sufficient to guarantee that power can be provided reliably.\nDeployment of energy storage devices has been proposed as an alternative strategy. Although storage is promising, cost and scale remain as hurdles. Fortunately, there exists another approach that is functionally equivalent to deploying massive amounts of storage infrastructure, yet only requires the use of relatively inexpensive electronics and software: automated demand response.\nDemand response involves strategically shifting demand for electric power away from times when it stresses the grid and towards times when it can be more easily accommodated. Once primarily performed by large industrial and commercial consumers on hot summer days after a phone call from the local utility, DR now has the potential for adoption on a more distributed scale with the introduction of Internet- connected home and commercial appliances. \nOf these, the most promising points of use are thermostatically controlled loads (TCLs) such as HVAC systems, refrigerators/freezers, and hot water heaters.\nOur work is also inspired by a research project at UC Berkeley that one of us worked on last semester. This team developed the FlexBox,  a wireless sensor network developed by TIER and RAEL to monitor and control freezers and refrigerators, which currently has 30 implementations in Managua, Nicaragua.\nWhat it does\nThe Netfridge allows refrigerators to provide grid services and minimize carbon emissions using WattTime data and wholesale Locational Marginal Price data. The fridge would also be capable of being switched between perishables, non-perishables, and off modes using a web app. \nHow I built it\nSensors and relays on the refrigerator are connected to an Arduino microcontroller, which in turn is connected to a Rapberry Pi. The Pi connects to a Heroku-hosted server, which pulls and processes data streams from WattTime and CAISO.\nChallenges I ran into\nWe had some difficulty pulling data from CAISO and WattTime, and were not able to bring the mini-fridge for live sensor data collection. Instead, we used historical data from a fully instrumented refrigerator using a FlexBox, a wireless sensor network developed by TIER and RAEL to monitor and control TCLs in Managua, Nicaragua. The data we used during our pitch was from the first prototype of the FlexBox, which instrumented a refrigerator on the 4th Floor of Sutardja Dai Hall in UC Berkeley.\nAccomplishments that I'm proud of\nWe made great progress on our front-end dashboard and data visualization, and gained experience pulling WattTime API and CAISO LMP data.\nWhat I learned\nWhat's next for NetFridge\nWe're planning to continue work as part of our Cyber-Physical Systems course.\n",
        "hackathon_id": "berc-cleanweb-hack",
        "winner": true
    },
    {
        "description": "\nBuilt With\nd3.jsrpython\n",
        "hackathon_id": "berc-cleanweb-hack",
        "winner": true
    },
    {
        "description": "\nOakland has a tremendous disparity in income and wealth. This dynamic is reflected in unequal access to healthy food. Our tool is meant to help communities, policy-makers and land owners to take advantage of unoccupied spaces, build urban farms and address food inequality. \nView Presentation\n",
        "hackathon_id": "berc-cleanweb-hack",
        "winner": false
    },
    {
        "description": "\nInspiration\n75% of consumers can't install solar on their rooftop.  Community Solar allows retail electricity consumers to subscribe to the energy output of a large centralized solar plant.  It's complex and expensive for a solar plant developer to find subscribers, calculate their savings, and make sure they meet all the state rules.\nWhat it does\nIn the Sunswarm app, subscribers sign up with relevant information about their energy usage, location, etc.  Developers input information about their solar project.  Sunswarm has a database with all the complex state rules and matches subscribers to projects based on those rules.  Also, Susnwarm calculates the savings for the subscriber and the revenue for the developer.\nHow I built it\nWe use node.js and a postgres database\nWhat's next for Sunswarm\nBuild an MVP and take it to market!\n",
        "hackathon_id": "berc-cleanweb-hack",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe're visualizing the Energy Revolution at a human scale.\nData Sources\n\nUS Census Data, 2011 - http://factfinder2.census.gov/faces/nav/jsf/pages/searchresults.xhtml\nNREL Renewable Futures Scenario Data - http://www.nrel.gov/analysis/re_futures/data_viewer/\nNREL Solar Prospector - http://maps.nrel.gov/prospector\n\nCode\nFind us on Github: https://github.com/brandoncurtis/berc-cleanweb-hackathon/\nPresentation\nGoogle Drive: https://goo.gl/otxBBN\n",
        "hackathon_id": "berc-cleanweb-hack",
        "winner": false
    },
    {
        "description": "\nNeighborFood: a food sharing web app for neighbors\nThe website for this project is at http://jljones.github.io/Food_Sharing/.\n\n\n",
        "hackathon_id": "berc-cleanweb-hack",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtmlrpython\n",
        "hackathon_id": "berc-cleanweb-hack",
        "winner": false
    },
    {
        "description": "\nBuilt With\ncsscoffeescriptnode.jsangular.jsd3.jsexpress.js\n",
        "hackathon_id": "berc-cleanweb-hack",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonmapboxhighcharts\n",
        "hackathon_id": "berc-cleanweb-hack",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe were not pleased with existing ticketing solutions so we have decided to make our own app. Most ticketing platforms do not have real-time analytics which is very useful for big events to help organizers dynamically assign tasks to people responsible of letting attendants in.\nWhat it does\nIt can currently allow users to create tickets for their events and then print them from the app. Each ticket created hai it's unique qr code which can be scanned while being logged in to validate the ticket. If someone comes with a counterfeited or duplicated ticket the app will reject it.\nHow I built it\nThe tickets are generated with a unique identifier and each object has fields that cat tell you if a ticket is sold in order to avoid printing it, or if it was already validated. The uid is then put in a url at a specific route with parameters and everything is encoded in the qr of the ticket. When scanned, it loads a view and searches for the ticket in the database. If it exists then it becomes checked and the qr is afterwards useless. We started from a boilerplate project and used as many packages as needed.\nChallenges I ran into\nAlthough meteor packages are 90% of the cases useful some of them are either not well documented or even making the app crash. We wanted to generate a pdf from html client-side to avoid having to do it from the browser when someone wanted to send a ticket online. We later found out how to do it, server-side unfortunately, but decided to drop this feature for now so we could carry on with the rest of the app. Another challange was to think clearly since both of us couldn't get much sleep this week.\nAccomplishments that I'm proud of\nWe are very pleased that we have a working prototype even though we didn't implement all the features we wished to in one night.\nWhat I learned\nBoth of us have a better understanding of how to start a project that won't become a mess while more code is written.\nWhat's next for AweSoft Tickets\nWe will continue to develop the app in our free time and implement everything we want.\nPackages used\naccounts-password 1.1.1* Password support for accounts accounts-ui 1.1.5* Simple templates to add login widg... alanning:roles 1.2.13* Role-based authorization aldeed:autoform 5.5.0* Easily create forms with automatic... aldeed:collection2 2.5.0 Automatic validation of insert and... anti:fake 0.4.1 Random text and data generator china:sweetalert 0.3.2 Sweet Alert without Google web fonts. cmather:handlebars-server 0.2.0* Allows handlebars templates to be ... cunneen:mailgun 0.9.1 Easily send emails using Mailgun a... dburles:collection-helpers 1.0.3 Transform your collections with he... dburles:factory 0.3.10 Factories for Meteor iron:router 1.0.9* Routing specifically designed for ... khrone:img-qrcode 0.1.1 Provides template to generate QR c... less 1.0.14* The dynamic stylesheet language maazalik:highcharts 0.4.0 HighCharts for Meteor, with an eas... matb33:collection-hooks 0.8.0* Extends Mongo.Collection with befo... meteor-platform 1.2.2* Include a standard set of Meteor p... momentjs:moment 2.10.6 Moment.js (official): parse, vali... ongoworks:pdf 1.1.1 Generate PDFs on the client from M... reywood:publish-composite 1.4.2 Publish a set of related documents... richsilv:pikaday 1.0.1 Pikaday JavaScript Datepicker for ... underscorestring:underscore.string 3.2.1* underscore.string (official): Stri... useraccounts:bootstrap 1.12.3* Accounts Templates styled for Twi... useraccounts:iron-routing 1.12.3* UserAccounts package providing ro... yasinuslu:blaze-meta 0.3.1* Blaze-meta makes it super simple t... zimme:iron-router-active 1.0.4* Active route/path template helpers... \n",
        "hackathon_id": "meteor-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nMost lecture and presentation slides are boring and painful. Most people don't want to put the work into making them presentable, readable and beautiful. \nWhat it does\nHyperslides allows anyone to use a set of preset slides to create beautiful presentations and lectures. Think powerpoit + graphic design with Google Docs features. On the website, you can design and modify the elements of your slides to what you need. We've made it so that people can work on it collaboratively. \n\n\nHow I built it\nWe built the core features for hyperslides from the ground up using Meteor. You'll see the reactive canvas/slide elements are all just objects saved into a collection and many of the styling features are Meteor methods or meteor collection updates. Hope you like it!\nList of packages:\nnote: for Hackathon purposes we decided to use packages (like autopublish) that allowed us to ship a uniquely featured product that shows off meteor's strengths (e.g. proof of concept --> app in super fast time)! We'll make sure we remove these unsafe things soon enough! \n\nautopublish           1.0.4  (For prototyping only) Publish the entire database to all clients\nblaze-html-templates  1.0.1  Compile HTML templates into reactive UI with Meteor Blaze\necmascript            0.1.4* Compiler plugin that supports ES2015+ in all .js files \nes5-shim              4.1.13  Shims and polyfills to improve ECMAScript 5 support\nfourseven:scss        3.2.0* Style with attitude. Sass and SCSS support for Meteor.js (with autoprefixer and sourcemaps).\ninsecure              1.0.4  (For prototyping only) Allow all database writes from the client\niron:router           1.0.12  Routing specifically designed for Meteor\njquery                1.11.4  Manipulate the DOM using CSS selectors\nmeteor-base           1.0.1  Packages that every Meteor app needs\nmizzao:jquery-ui      1.11.4  Simple lightweight pull-in for jQuery UI in Meteor\nmobile-experience     1.0.1  Packages for a great mobile user experience\nmongo                 1.1.1* Adaptor for using MongoDB and Minimongo over DDP\nsession               1.1.1  Session variable\nstandard-minifiers    1.0.0* Standard minifiers used with Meteor apps by default.\ntracker               1.0.8* Dependency tracker to allow reactive callbacks\ntwbs:bootstrap        3.3.5  The most popular front-end framework for developing responsive, mobile first projects on the web.\nunderscore            1.0.4  Collection of small helpers: _.map, _.each, ...\n\nOur team @ 3am Sydney time\n\n\n",
        "hackathon_id": "meteor-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtmlcss\n",
        "hackathon_id": "meteor-2015",
        "winner": false
    },
    {
        "description": "\nInspirational\nWe wanted to make a head to head party game that is challenging, addictive, and fun. We need to stop the boring parties!\nWhat it does\nPeople go head to head in a typing challenge. The faster a user types, the faster their opponent\u2019s drink fills up. Once a drink fills to the top, the loser drinks and the winner gains bragging rights (the foundation of any great party game).\nHow we built\nMainly, we used glue, paper clips, and elbow grease. But also Meteor (<3), ecmascript, cordova, stylus and some help of this open source project built by daschwa\nChallenges we ran into:\nDuring the testing phase, everyone got too drunk. \nAccomplishments that we are proud of\nOur team came together under a tight deadline.\nWhat we learned:\nWe learned it is best to implement the idea of \u201cfeature freeze\u201d early on. More often than not, the first and simplest idea is the one you end up having the time to build.\nWhat\u2019s next for Typezy\nSo much! We are going to build out further features, polish the brand, and launch a huge social media campaign to make all parties of the world fun again.\nPackages used\nmeteor-base\nmobile-experience\nmongo\nblaze-html-templates\nsession\njquery\ntracker\nstandard-minifiers\nes5-shim\necmascript\ncrosswalk\nreactive-var\nkadira:flow-router\nkadira:blaze-layout\nstylus\nfortawesome:fontawesome\naccounts-twitter\naccounts-base\nservice-configuration\nparticle4dev:cordova-fb\nongoworks:security\naccounts-password\nastrocoders:geolocation\ndigilord:faker@=1.0.6\nraix:handlebar-helpers\n",
        "hackathon_id": "meteor-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nmeteor.js\n",
        "hackathon_id": "meteor-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nHalloween is right around the corner, it's time for some skull themed apps :).\nWhat it does\nMuerteor is a Deadman's Switch. It sends a message for you by e-mail, text, or call if you don't check in for a period of time of your choosing.\nHow I built it\nMeteor of course! With the Cordova build tools and a lot of packages :)\nChallenges I ran into\nI am still struggling with the login animation, apparently Safari on iOS doesn't like to animate widths the same way every other browser does.\nAccomplishments that I'm proud of\nTwilio integration. Custom email template. A custom animated SVG app icon build with the Assembly iOS app. Learning and using Flow Router for the hack.\nWhat I learned\nFlow Router! This was my first time using Flow Router and it was great!\nWhat's next for Muerteor\nPush notifications to alert you when a message is getting close to it's timeout. Fixing the login animation on iOS.\nFull Package List\nmeteor-base\nmobile-experience\nmongo\nblaze-html-templates\nsession\njquery\ntracker \nstandard-minifiers\nes5-shim \necmascript\nunderscore\naccounts-base\naccounts-password\naccounts-twitter\nservice-configuration\noauth1\ncheck\nlaunch-screen\nemail\nless\nreactive-var\nkadira:flow-router\nkadira:blaze-layout\nmeteorhacks:subs-manager\nmeteorhacks:kadira-profiler\nmeteorhacks:kadira\nmeteorhacks:npm\nfortawesome:fontawesome\nentypo\nmomentjs:moment\nnatestrauser:animate-css\npercolate:velocityjs\npercolate:momentum\nsimple:reactive-method\ntwbs:bootstrap\nnatestrauser:select2\nnatestrauser:x-editable-bootstrap\nmizzao:bootboxjs\ncmather:handlebars-server\nnpm-container\n",
        "hackathon_id": "meteor-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nit's happened 3 weeks ago we sited 3 friend and thought how cool it would be if our childhood games were online and we could play them again without look childish. and then Amit heard about this hackthon and suggest that we should build that in the hackathon and so we did.\nWhat it does\nIt's a game similar to the musical chair game, basically you need to enter a room, if the room is empty you need to wait for some other players to enter (currently room is set to 4 players) if there is an empty room you automatically enter that room. after all the player are in the room the game start and an invisible timer start to run when the timer ends the screen change it's background color to green and then each player need to click the empty chair. all the players who catch a chairs are winners and the one who didn't catch a chair loose. \nHow I built it\nin the first step we created the login to rooms and the rooms system, after that we created the game itself.\nsince we familiar with angular the development went smoothly except the challenges we came across below.\nChallenges I ran into\nthe auto-update in angular meteor is very troublesome and most of the error we got came from there. for example the js splice doesn't update the mongo db and we needed to create an object that recognize the null values in the array.\nAccomplishments that I'm proud of\nWe proud that we finished the game and we can play it. \nWhat I learned\nWe learned that it's better to use single flow data direction instead the 3 way data binding although it really sound cool.\nWhat's next for Musical chairs\nthe first step is to clean the code a bit, since this is an hackathon and we have a time limit we didn't prioritize the clean code. after that we plan to add the next level of the game (usually when you play musical chairs the game doesn't end after one round but it continue until there is one winner) more we want to add user ranking by win strike and to put the expert users in the same games so that the game would be even more challenging.\nDependencies\n\nAngular Meteor\nUi.router\nngAnimate\n\n",
        "hackathon_id": "meteor-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWant to meet new people but big group or meetup is a little bit intimidating for some people. So, this is suitable for those.\nWhat it does\nSimply create/find Individual meetings\nHow I built it\nI simply used Meteor + Blaze template + Flow-Router\nChallenges I ran into\nI mostly struggled on generating ideas about what to build...\nAlso it was hard to organize folders/files/naming, still need to improve\nAccomplishments that I'm proud of\nCould build an working app less than 24hrs! Wow!\nWhat I learned\nLearned that I can build an app with Meteor, and so fast! compared to using custom stack...\nWhat's next for Pukari\nRefactor, Add more features(detailed meeting, better UI/Design, Error/Success handling, Notifications, Friend or Followership, Email, Image uploading, Custom login, etc)\nPackage List\nmeteor-base\nmobile-experience\nmongo\nblaze-html-templates\nsession\njquery\ntracker\nstandard-minifiers\nes5-shim\necmascript\n\nkadira:blaze-layout\nkadira:flow-router\ntwbs:bootstrap\nuseraccounts:bootstrap\nuseraccounts:flow-routing\nservice-configuration\naccounts-facebook\nmeteorhacks:fast-render\ncheck\ntsega:bootstrap3-datetimepicker\nunderscore\n\n",
        "hackathon_id": "meteor-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nmeteor.js\n",
        "hackathon_id": "meteor-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe think Tinder is shallow as user only matches other people based on their profile photos, we therefore want to create a \"healthier\" type of matching/dating app based on a widely applicable sports: Jogging. We bring RunMate to the world for hobby joggers to discover new running routes in the city and meet new joggers based on the running interest.\nWhat it does\nRunMate allow users to first pick a route in the city (currently only Hong Kong is available for this hackathon scope), then swipe left/right from a list of other users who are also interested to run this route. When two users are interested to run with each other, they are matched! They can then chat together and we will let them to improvise what is happening next :)\nHow we built it\nWe built this mobile app using solely Meteor to demo its powerfulness. Our team has done couple of projects using meteor before so we are luckily enough to build a MVP of RunMate just under 24 hours. In this project, we used most of the common meteor packages such as iron router, accounts-password, Blaze etc. Meteoric package is integrated for the frontend UI components and transitions. For Login part, we are using facebook login (accounts-facebook) to smooth the user login experience. Last but not least, to achieve the Tinder-like swipe card interactions, the gwendall:swing package is used.\nWhat's next for RunMate\nWe think RunMate is a fresh and healthy way for urban joggers to discover new running routes and like-minded people in the city. We wish to push this idea out and test the market reaction once it is approved by AppStore and Play Store. Our team is eager to see this app to grow in the future and will continuously to add new features to enhance RunMate. We hope you would like this app!\nPackages used\n\nmeteor-base\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0# Packages every Meteor app needs to have \nmobile-experience\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0# Packages for a great mobile UX\nmongo\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0# The database Meteor supports right now\nblaze-html-templates\u00a0\u00a0\u00a0\u00a0# Compile .html files into Meteor Blaze views\nsession\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0# Client-side reactive dictionary for your app\njquery\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0# Helpful client-side library\ntracker\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0# Meteor's client-side reactive programming library\nstandard-minifiers\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0# JS/CSS minifiers run for production mode\nes5-shim\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0# ECMAScript 5 compatibility for older browsers.\necmascript\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0# Enable ECMAScript2015+ syntax in app code\niron:router\nrandom\naccounts-facebook\nservice-configuration\nstevezhu:lodash\nzimme:active-route\nanti:fake\ngwendall:swing\nzeroasterisk:cordova-geolocation-background\naccounts-ui\nerasaur:meteor-lodash\nmeteoric:ionic\nmeteoric:ionic-sass\nmeteoric:ionicons-sass\nsacha:spin\nraix:eventddp\ncheck\n\n",
        "hackathon_id": "meteor-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe wanted to build a game that you can play while waiting for a train or tram and has some competitive aspects to keep your brain active. Also we liked the idea of playing with nearby players that you might know.\nWhat it does\nWe declared some landmarks and points of interests (train stations, libraries, etc.) as arenas. As you enter the proximity of an arena, you can join in. In the arena you can play mini-games and puzzles to gain points and get to the top of the arena leaderboard. Currently only Sudoku is implemented as single-player and co-op game. Adding games like battleships or mastermind should be quite easy as well.\nHow I built it\nBuilt with Meteor using Bootstrap for the UI and MongoDB for storage.\nChallenges I ran into\nMap integration, Multiplayer, Time\nPackages\nless,jquery,accounts-password,aldeed:collection2,matb33:collection-hooks,tmeasday:publish-counts,meteorhacks:aggregate,iron:router,momentjs:moment,twbs:bootstrap,reactive-var,http,tsega:bootstrap3-datetimepicker,mrt:bootstrap3-typeahead,mrt:filesaver,johdirr:meteor-git-rev,dburles:google-maps,juliancwirko:s-alert,fortawesome:fontawesome,standard-minifiers,meteor-base,mobile-experience,mongo,blaze-html-templates,session,tracker,logging,reload,random,ejson,spacebars,check,mdg:geolocation\n",
        "hackathon_id": "meteor-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe idea comes from various studies (eg. http://www.cnn.com/2015/04/13/health/superfoods-stress-relief/) that demonstrate the effects of specific foods on neuro transmitters involved in mood regulation, and the fact that many people find it hard to progressively include more of these foods in their diet. The application will help people build the habits of consuming more of these foods, more often, in order to reach the full benefits.\nWhat it does\nThe app displays recipes which include specific superfoods that are proven to boost mood. It then suggests a 21-day program to discover and prepare those recipes. It sends a daily notification of \"next actions\", such as planning to buy the mixer, ingredients, make time to prepare and cook the recipe and finally invite friends over to eat them.\nHow we built it\nWith Meteor and MaterializeCSS.\nPackages used\naccounts-ui\naccounts-password\nstandard-minifiers\nmeteor-base\nmobile-experience\nmongo\nblaze-html-templates\nsession\njquery\ntracker\nlogging\nreload\nrandom\nejson\nspacebars\ncheck\nalanning:roles\nsacha:spin\nmeteortoys:allthings\niron:router\nmaterialize:materialize@0.97.0\n\nChallenges I ran into\nThree issues:\n\nWe tried to use React, then Semantic UI but ran into problems with both. Also we ended up spending a lot of time on look and feel instead of functionalities.\nInstability issues with Meteor 1.2.0 and finally a last minute issue with materialize and blaze templates. We needed to revert to an old version of the materializeCSS package.\nOn the server, when we erased the database, the error message misled us in the Router configuration. Instead, we needed to create a remote method to re-populate the database.\n\nAccomplishments that I'm proud of\nWorking fully focused for about 20 hours!\nWhat I learned\nHave a testing environment, so that we only deploy to production when it works!\nWhat's next for SuperHappier, the app that makes you happier every day\n\nDeploy on mobile\nAdd the jobs collection to send reminders,\nFacebook login, compete with friends...!\n\n",
        "hackathon_id": "meteor-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe wanted to use Meteor to create any sort of product, through brainstorming we decided we wanted to use either the Twitter or Amazon API. We also wanted to create something fun and new so this is when we came up with the idea of SurpriseMe.\nWhat it does\nSurpriseMe lets the user choose an amount of money to submit , we then get them a variety of products from different categories. We then direct the user to a basket where they can check out the products they have been randomly given and proceed to checkout to put their ( or their friends ) address. \nHow We built it\nWe used the amazon API to search for listings from a random category with a random title and added multiple items up to a price into a shopping cart, we used an algorithm to split the required value into parts and found items of roughly that price or less. Then we tried to find an item with the left over money and repeated until the cart was as full as possible.\nChallenges I ran into\nWe wanted to make it impossible for the user to know what products they would be getting, however, this was difficult to do through the amazon API ( as expected). We also found that lots of items had postage and packaging which messed with our calculations so we had to find items that had the option for free super-saver delivery.\nAccomplishments that I'm proud of\nProud of successfully using Less for the first time, we had a stage where we decided to change the colour scheme of the entire website. Normally this would be a nightmare, but when asked if I could change the base shade of the website I was very happy to be able to say that I could easily do that by changing one line of code.\nWe are very happy to have been able to achieve our goal of randomly gathering up products and we are really impressed with how much we have been able to develop in such a  short time period.\nWe created an algorithm to add random items to a cart and calculate \nWhat I learned\nHow to work well on Meteor in a team. We learnt the ins-and-outs of the Amazon API. How to use Less to create a much easier editable theme. How to use many packages easily in conjunction with Meteor.\nWhat's next for Surprise Me\nWe would love to make it so that there is no way for the users to know what they are getting and we want to be able to extend it to make it easier for the users to buy \u201cSurprises\u201d for their friends and family. We also want to add a page with past orders showing.\nPackages\nWe used these Meteor packages :-\nnemo64:bootstrap\niron:router\nalexsmr:apac\nless\naccounts-password\nrandom\naccounts-ui\nliangcc:meteor-accounts-amazon\nmrt:nprogress\n",
        "hackathon_id": "meteor-2015",
        "winner": false
    },
    {
        "description": "\nZuldena\nZuldena is a meteor application that allow users to regroup their main activities on the web.\nThe main activity is to merge the main social networks in one application.\nYou can have your facebook notifications, your tweets or instagram pictures in this awesome application.\nDon't lose your time to check each of them when you could use Zuldena.\n",
        "hackathon_id": "meteor-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nmemes, spooky scary skeletons\nWhat it does\nspookify people\nHow I built it\nwith spooky scary skeletons and meteor\nChallenges I ran into\nwhat spooky memes do I pick and the spookyometer \nAccomplishments that I'm proud of\n\nI made an app\nI just learned how to program \n\nWhat I learned\nhow algebra applies in real life\nand{ must be balanced \nWhat's next for 5 spooky 5 me\nmore spooks and memes\nNotes:\n\nOn github: http://github.com/3spooky5you\nMeteor packages: tmeasday:publish-counts, accounts-twitter, accounts-ui\n\n",
        "hackathon_id": "meteor-2015",
        "winner": false
    },
    {
        "description": "\n9 Cells - Business Modelling Tool\nWhat's 9 Cells?\n\nIt's one of business modelling tools.\nJust answer the 9 questions, it's possible to overview your ideas.\n\n9 Questions\nVALUE:\n\nWHO: Whether customers are having any issues?\nWHAT: What to offer as a solution?\nHOW: How to express the differences between alternatives?\n\nPROFIT:\n\nWHO: Who is the profit target?\nWHAT: What is the way to make a profit?\nHOW: How to make a profit?\n\nPROCESS:\n\nWHO: Who do you do together?\nWHAT: What are your strengths?\nHOW: How do you do become a step-by-step instructions?\n\nDEMO\nhttps://nine-cells.meteor.com\nHow to run\nclone https://github.com/nobutakaoshiro/nine-cells\ncd nine-cells/app\nmeteor\n\nThen, open browser and access to http://localhost:3000\nPACKAGES\nmeteor-base             # Packages every Meteor app needs to have\nmobile-experience       # Packages for a great mobile UX\nmongo                   # The database Meteor supports right now\nblaze-html-templates    # Compile .html files into Meteor Blaze views\nsession                 # Client-side reactive dictionary for your app\njquery                  # Helpful client-side library\ntracker                 # Meteor's client-side reactive programming library\n\nstandard-minifiers      # JS/CSS minifiers run for production mode\nes5-shim                # ECMAScript 5 compatibility for older browsers.\necmascript              # Enable ECMAScript2015+ syntax in app code\n\nsemantic:ui\nflemay:less-autoprefixer\naccounts-ui\naldeed:collection2\nkadira:flow-router\nkadira:blaze-layout\nbabrahams:editable-text\narillo:flow-router-helpers\ncheck\naccounts-password\n\nLICENSE\nMIT LICENSE\n",
        "hackathon_id": "meteor-2015",
        "winner": false
    },
    {
        "description": "\nNot all websites support comments and even websites that do support comments will selectively disable comments on specific stories.  Beyond that, websites moderate comments.  Comment moderation may be for legitimate reasons, like eliminating spam, but it may be for less legitimate reasons like suppressing information that contradicts the narrative of the author or media company.\nICanComment allows readers to comment on any page without being concerned that their comment will be deleted and readers can even comment on sites and pages that don't have comments.\nICanComment depends on browser plugins to add commenting functionality to any page on the internet.\nPackages used to build the app:\naccounts-password            1.1.3  Password support for accounts\naldeed:collection2           2.5.0  Automatic validation of insert and update...\naldeed:simple-schema         1.3.3  A simple schema validation object with re...\narkham:comments-ui           0.2.11  Simple templates for disqus-like comment...\nblaze-html-templates         1.0.1  Compile HTML templates into reactive UI w...\necmascript                   0.1.5  Compiler plugin that supports ES2015+ in ...\nes5-shim                     4.1.13  Shims and polyfills to improve ECMAScrip...\nian:accounts-ui-bootstrap-3  1.2.81  Bootstrap-styled accounts-ui with multi-...\niron:router                  1.0.12  Routing specifically designed for Meteor\njquery                       1.11.4  Manipulate the DOM using CSS selectors\nmeteor-base                  1.0.1  Packages that every Meteor app needs\nmobile-experience            1.0.1  Packages for a great mobile user experience\nmongo                        1.1.2  Adaptor for using MongoDB and Minimongo o...\nsession                      1.1.1  Session variable\nstandard-minifiers           1.0.1  Standard minifiers used with Meteor apps ...\ntracker                      1.0.9  Dependency tracker to allow reactive call...\ntwbs:bootstrap               3.3.5  The most popular front-end framework for ...\n",
        "hackathon_id": "meteor-2015",
        "winner": false
    },
    {
        "description": "\nbold I Spy\nThe I Spy team consisted of Junior Developers who wanted to expand coding skills from the simplicity of javascript and Meteor and integrate that knowledge with third party API, libraries, and packages.  The team wanted to build an application the revolved around Google Maps, user interaction, and the real time feature of Meteor. \nI Spy is an application which allow users to upload photos and place location markers on the map of where the photo was taken.  Each location marker is linked to filepicker's S3 database using the url populated by filepicker.  Users are able to click the location marker to view the photo taken at that location.  \nI Spy integrates Meteor, filepicker.io, and Google Maps API.  For styling, the team used Foundation and SASS.  \nCreating I Spy challenged the team's ability to problem solve and find resources due to the complications which arise when integrating third party API, packages, and libraries.  The most time consuming challenge was linking the location marker from Google Map with the url provided by filepicker.  \nThe team's accomplishments and success could not have been achieved without everyone's dedication, drive, and tenacity to complete the Meteor challenge.  Frequent scrum meetings allowed members to discuss current problems and future tasks.  The team is most proud of the design of the application on both the front and back end.  \nTeam members would like to develop more features such as up-votes, down-votes, sorting, and commenting. A possible spin-off of I-Spy would be a game for road trips, schools, and events. \n",
        "hackathon_id": "meteor-2015",
        "winner": false
    },
    {
        "description": "\nrutalking2me\nWhat it does\nA meteor app that sends a message to a channel of your choosing (preferably your private slackbot), whenever you're mentioned in github, trello, and in the future, in any other cloud app that supports mentioning.\nInspiration\nWhen someone mentions you in any of your cloud apps, it is usually something that needs your attention quickly. None of the built in slack integrations explicitly supports putting mentions in a \"priority inbox\" slack channel that can get your attention quickly, such as your slackbot. This app solves that.\nHow we built it\nUsing meteor and meteor packages we've created that are the basis for easily creating cloud integration apps, including support for filters, transforms, smart API endpoint pulling with last modified / since support, etc.\nList of packages\n\ncoffeescript\nhttp\nforce-ssl\nhubaaa:accounts-slack # forked during hackathon\naccounts-github\njsep:accounts-trello\nhubaaa:link-accounts # forked during hackathon\nsemantic:ui-css\nsemantic:ui-icon\novcharik:alertifyjs\npracticalmeteor:loglevel\npracticalmeteor:chai\nmanuel:viewmodel\nhubaaa:easy-meteor-settings\nhubaaa:easy-service-config\nhubaaa:json-pipes\nhubaaa:endpoint-puller\n\nChallenges we ran into\nNeeding to create an accounts-trello package (none existed in atmosphere that worked for us).\nAccomplishments that we're proud of\nGetting this done in a less than weekend.\nWhat we've learned\nThat meteor is perfect for quickly building oauth based cloud integration and automation apps.\nWhat's next for R U Talking 2 Me?\nWe hope that this \"hubapp\" and additional future hubapps will become, with the help of the meteor community, the basis for a meteor based open source integration platform that will drastically cut down the development time of advanced cloud extension, integration and automation apps, as meteor did for web development. \nWe'd like the platform to eliminate most of the boilerplate code required by integration and automation apps, such as code that deals with one-way-sync, two-way-sync, webhooks and pulling, identity mapping, fields changed, data filtering and mapping UIs, and much more.\n",
        "hackathon_id": "meteor-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nAs your project evolves, your data needs to keep up.\nWhat it does\nThis tool analyzes your collections and finds missing parameters within your data. \nHow we built it\nWe iterate through documents in your collections, storing stats about those documents in a \"meta collection\" for your collections. This data is then used to display (and eventually migrate/fix) your data.\nChallenges we ran into\nWe were at the Meteor hackathon in Tokyo and weren't able to put in the full 24 hours worth of work we wanted to.\nAccomplishments that we're proud of\nWe're pretty proud our project's direction and the support we've already received from the community. It seems many people have the same problem we have.\nWhat we learned\nWe hadn't used Flow Router in a project yet, so this part was new to us. An earlier description noted that we hadn't used React before this project, however the official submission didn't have any React components in it. We scratched the idea of using React because of time constraints, however we did some research about it at the beginning of the hackathon.\nWhat's next for 321\nOur plan is to add a migration tool, allowing you to put in update queries across your data (and save those migrations for future modification/use) and add a more advanced view layer which will allow you to customize your displayed data, rather than just the overall stats about that data. Existing administration tools focus too much on CRUD operations and we want something that's actually useful. Additionally, this project sits next to your Meteor app and can theoretically be used with any MongoDB instance. We hope to add additional DB support in the future.\nPackages:\nmeteor-base             # Packages every Meteor app needs to have\nmobile-experience       # Packages for a great mobile UX\nmongo                   # The database Meteor supports right now\nblaze-html-templates    # Compile .html files into Meteor Blaze views\nsession                 # Client-side reactive dictionary for your app\njquery                  # Helpful client-side library\ntracker                 # Meteor's client-side reactive programming library\nstandard-minifiers      # JS/CSS minifiers run for production mode\nes5-shim                # ECMAScript 5 compatibility for older browsers.\necmascript              # Enable ECMAScript2015+ syntax in app code\nautopublish             # Publish all data to the clients (for prototyping)\ninsecure                # Allow all DB writes from clients (for prototyping)\ndburles:mongo-collection-instances\nkadira:flow-router\naccounts-password\ntwbs:bootstrap\nfourseven:scss\nian:accounts-ui-bootstrap-3\nmomentjs:moment\nkadira:blaze-layout\nmeteorhacks:npm\nnpm-container\nrecursive-iterator\n",
        "hackathon_id": "meteor-2015",
        "winner": false
    },
    {
        "description": "\nCANDRA submission to Global Meteor 2015 competition\nFrom Saturday October 10th 16h15 to Sunday October 11th 16h15 CST.\nInspiration\nTech communities characterized by physical space, tooling and memberships such as Hackerspaces, Makerspaces, Fablabs have generally similar requirements for the software to manage their communities. \nWith a pool of technically qualified and ambitious members with a \"just-do-it\" attitude this had led to the creation of tens if not hundreds of different management systems for these communities, with varying degrees of completeness. None of the current solutions on the market have yet have come to dominate and establish themselves as a defacto standard. \nThis creates challenges for new communities when trying to select a system, often resulting in a perverse cycle of creating yet another management system that only sort of works for that particular community.\nAt an high-level, these are the issues preventing widespread adoption of a single system:\n\neach system is often the result of a part-time or short-term volunteer efforts\ndifficult to reach a critical mass of users adoption necessary to sufficient generalize the system\nchallenges in creating a critical mass of developers around the open source project\npoor understanding of global requirements (i18n/l10n, payment gateways integration, taxes, etc)\nhard for individual communities to evaluate the software quality attributes of a particular system\ncomplexity in maintaining the software solutions and the data it generates\n\nThis results in numerous problems, among which:\n\ntime spent on management instead of making\nredundant efforts invested in systems\nlack of support and long term maintenance\nlack of a defacto standard API to third party components (door locks)\n\nFrederic Bazin (founder of agora-space.com) and Ricky Ng-Adam (cofounder of xinchejian.com) with the help of Julien Choulet (a new active member and MeteorJS specialist) face these challenges regularly. Being software developers, we've decided to address these challenges by prototyping a new management system. We hope we can ensure continued development by using it as a teaching tool in addition to making it an exciting app for our members and other developers.\nGoals of the demo\nSome of the questions members can ask are:\n\nwho are the members of the community?\nwho are ACTIVE members of the community?\nwho is in the space right now?\n\nIn addition, authentication is required to gain privileged access to resources (such as Internet or the space itself) after authentication.\nWe've decided to focus on:\n\nregistering new members\nassociating the device they use with members\ntracking presence/absence of members in the space\n\nWho is there?\nA sequence diagram explains the flow we aimed to deliver during the hackathon:\n\nAccomplishments we're most proud of\n\nBridging the gap between networking hardware and modern app development\nFinding creative ways to identify devices and displaying that in the interface\n\nChallenges we ran into\n\nCreating a REST Endpoint the router can post IP -> MAC address mapping associated to public IP\n\n\nmaking sure ARP table is updated for all MAC addresses\ncreating recurring cron job on device\n\nSubmitting and looking up [local IP, MAC address, public IP] on requests\nCANDRA must also deal with the delay in the update of the IP -> MAC association (we know the local IP, but don't know the MAC associated yet)\nsingle organization can actually have multiple physical spaces with their own Internet routers\nN members * N devices * N IP addresses * N access points\nProblems connecting to external API to retrieve MAC specific information (unreliable service)\nFetching and matching information between actually connected devices and ARP table\n\nWhat we learned\nMeteorJS is awesome out of the box:\n\nFast development turn around\nEasier to teach new comers\nFast, responsive, reactive interfaces that update in real-time\nEasier management of complex dependencies\n\nWhat's next for CANDRA\nWe will continue working on the community management system in future hackathons organized at agora-space.com and as a teaching tool for codersfield.com in addition to continuing the development of it as an useful app that can be integrated to our communities. \n",
        "hackathon_id": "meteor-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nLiving in Hawaii, environmental project has always been a big thing. However finding a welcoming that even children enjoy learning about the environment is a challenge. So we want to make a welcoming UI that assists people to learn about the environmental impact they have and how to \"neutralize\" it.\nWhat it does\nAfter it calculates the carbon usage based on lifestyle, it keep tracks of the number of trees the user plants. The more tree they plant, the more \"neutralized\" their carbon usage is. At the end we hope to make it into a competition between communities/  schools.\nHow I built it\nCurrently a lot of it is front-end through templates, so there are a lot of work still needs to be done in the back end.\nChallenges I ran into\nSince we did not have too much experience in using Meteor, we spent a lot of time searching and finding answers. Unfamiliarity with the language is definitely one of the greatest challenges in this hackathon.\nAccomplishments that I'm proud of\nDespite all the language barriers, we are very proud of our designer because he made beautiful icons in such a short time, and worked on the .css that beautifies the website majorly. \nWhat I learned\nMeteor. Pretty much relearned the entire meteor framewaork, but now with a stronger foundation. \nWhat's next for Carbon Neutral\nRight now not many functionalities are implemented, the next step is going to be doing more the back-end database querying with the records.\n",
        "hackathon_id": "meteor-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nI have been teaching a Class and was looking for tools/resources to provide to the students.\nWhat it does\nInspirational Quotes, Maintain a Gratitude Journal, Curated Science to Hack your Mind\nHow I built it\nMeteor.js with material design\nChallenges I ran into\nPackage issues during deployment (worked finally locally)\nAccomplishments that I'm proud of\nWhen the first new piece of code started to work\nWhat I learned\nGreat packages for meteor.\nIt is amazing what you can do with just a little code in Meteor\nSlack forum was great to see and get support while working on the project\nWhat's next for Daily Good\nContinue to enhance and Get users.\n",
        "hackathon_id": "meteor-2015",
        "winner": false
    },
    {
        "description": "\nFabit\nPitch:\nTarget User: \u201cFor any aspiring or experienced programmer who wants to learn something new.\u201d\nFabit helps programmer to form habits that will keep them on track to accomplish their goals. Programmers can share their progress on their public profile and leverage their social network to keep them accountable.   \nRequirements:\nFeatures:\nUsers can enter their goals and create a timeline associated with that goal.\nA goal\u2019s timeline will specify the number of days for achieving the goal and a plan for forming a habit, e.g. coding x hours daily or y hours weekly.\nkudos points:  Other users can give \u201ckudos\u201d points on check-ins.\ncomments/advise\nprofiles\nfollow\nshare\ngithub integration and commits\nDesign:\nblaze layout\nsimple schema\n",
        "hackathon_id": "meteor-2015",
        "winner": false
    },
    {
        "description": "\nA cross-platform social network which users can anonymously send messages to each other. Features include geese sound notifications and an amazing UI. Works on iOS, Android, and Web.\n",
        "hackathon_id": "terriblehack",
        "winner": true
    },
    {
        "description": "\nInspiration\nI love jam, and i'm sure that you do too!\nHaven't you ever wanted to find out if a jam is yo jam?\nCuz i have.\nSo i med Dis Mah Jam, to help ppl find out what der jam be.\nWhat it does\nFinds yo jam, and connects u wid ppl who also luv ur jam.\nHow I built it\nTrial, Error, and offloading most of the work on my partner.\nChallenges I ran into\nNone. I am an wizrard\nAccomplishments that I'm proud of\nEvery facet of this website\nWhat I learned\nErryone has a jam dat is der jam, and dey shud be proud of it!\nWhat's next for Dis Mah Jam\nFirst round funding, IPO's, and eventual buyout by hooli.\n",
        "hackathon_id": "terriblehack",
        "winner": true
    },
    {
        "description": "\nHaiku Chat: Bringing together Haiku lovers from far and wide!\nHaiku Chat was inspired after our team sat around for two hours trying to figure out what to make. Initially we wanted to use IBM's Watson's image recognition API to create Haiku's based on elements in an image. After a struggle with trying to create Haiku's out of nonsense (and trying to use crappy Bluemix) we settled on a chat client. \nHaiku Chat is a glorious place where Haiku lovers can come together and chat through what else, but Haiku's! All messages are tested for their \"Haiku worthiness\" before being sent. If they don't pass our rigorous Haiku verifying algorithm, a Haiku will be made on the user's behalf because they are obviously incompetent (5,7,5!!!!).  \nThe site also comes loaded with a variety of interesting sound effects, all for your chat pleasure. \n",
        "hackathon_id": "terriblehack",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe wanted to build something technically cool, but with no practical purpose.\nWhat it does\nIt turns the camera's \"torch mode\" on and off up to five times a second. A companion app on another phone records this flashing and converts it back to a bitstream. A homebrewed mesh network, sending pictures of delicious foods (like mashed potatoes) without requiring WiFi. Meshed Potatoes.\nHow We built it\nWe created an Android app that takes an image on your phone and turns it into a sequence of toggled camera flashes. We created an iOS app that can film these camera flashes, convert it back into an image, and then display the image. Technically, this is cross-platform.\nChallenges We ran into\nData has a tendency to get misaligned when you're communicating thousands of bytes through a camera, so we had to implement automatic error correction for when clock cycles get slightly out of synchronization.\nAccomplishments that We're proud of\nWe did several tests with 8x8 images (384 bits without overhead, approx. 400 with) and found zero errors across four tests of different 8x8 icons. We're proud that this error rate is so low, considering that millisecond timing errors can accumulate over hundreds of bit communications between two mobile devices.\nWhat We learned\nJava is easier than Swift.\nSending is easier than receiving.\nControl+Y in Android Studio, instead of un-undoing, deletes the line. This caused a surprising amount of errors and lost time, because we didn't notice it was happening.\nWhat's next for Meshed Potatoes\nThe next step is to add CloudSight, a computer vision library that will allow us to prevent users from sending pictures of things that aren't mashed potatoes.\n",
        "hackathon_id": "terriblehack",
        "winner": true
    },
    {
        "description": "\nHack Submission for Terrible Hacks II\nEverything is related to Illuminati. EVERYTHING.\nhttp://illuminaughty.herokuapp.com/\nhttps://github.com/vbardalez/Illuminaughty\n",
        "hackathon_id": "terriblehack",
        "winner": true
    },
    {
        "description": "\nBuilt With\njava\n",
        "hackathon_id": "terriblehack",
        "winner": true
    },
    {
        "description": "\nMeowbook is a revolutionary chrome extension that was inspired by the lack of cats on facebook.\n",
        "hackathon_id": "terriblehack",
        "winner": true
    },
    {
        "description": "\nBuilt With\narduino\n",
        "hackathon_id": "terriblehack",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascript\n",
        "hackathon_id": "terriblehack",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaphpxmlandroidmysql\n",
        "hackathon_id": "terriblehack",
        "winner": false
    },
    {
        "description": "\nBuilt With\njava\n",
        "hackathon_id": "terriblehack",
        "winner": false
    },
    {
        "description": "\nInspiration\nBe optimistic.\nWhat it does\nReplaces \"terrible\" with \"terrific\".\nHow I built it\n5 minutes in vim.\nChallenges I ran into\nI got here at 5:40.\nAccomplishments that I'm proud of\nIt works?\nWhat I learned\nNothing.\nWhat's next for Terrible is Terrific\nIPO. Sell out. Die in a pool.\n",
        "hackathon_id": "terriblehack",
        "winner": false
    },
    {
        "description": "\nBuilt With\nphpcsshtml5\n",
        "hackathon_id": "terriblehack",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaandroid-studio\n",
        "hackathon_id": "terriblehack",
        "winner": false
    },
    {
        "description": "\nBuilt With\njava\n",
        "hackathon_id": "terriblehack",
        "winner": false
    },
    {
        "description": "\nIt's a programming language where it doesn't care about you.\nYou like functional programming, right? Well YesNoMaybe is so functional that the basic variable type is a function! Tell YesNoMaybe that it's a function is like so:\n> work please\nsome shit that can be done maybe\n\nYou can put things in functions too and even run them:\n> do work say \"hello world\" please\noslo world\n\nWhat's that? That's not the right string? That's because the interpreter doesn't really care about you. \"Literals\" are more like \"figuratives\".\n> do work say \"I graduated at the top of my class in the navy seals\"\nit graduated ay mn top lf la class zn the levy seels\n\nAny good language needs Booleans.\n> yes\nno\n> yes\nnope\n> yes\ntrue\n> yes\nyeah\n> no\nfalse\n> no\nyeah\n> maybe\nyes\n\n",
        "hackathon_id": "terriblehack",
        "winner": false
    },
    {
        "description": "\nBuilt With\nfirebasemyojavascript\n",
        "hackathon_id": "terriblehack",
        "winner": false
    },
    {
        "description": "\nThis program will likely not work on your computer\nYou Must Copy the Body of the code\nInspiration\ngive a man a fish, he eats for a day.\nteach a man to fish, he eats for a lifetime.\nWhat it does\nWrites itself.\nHow I built it\nI programmed it all in the main because methods and classes are for losers.\nChallenges I ran into\nThe app tried to close itself.\nAccomplishments that I'm proud of\nPride is a tricky thing.\nWhat I learned\nJava Robot has no major safety measures.\nWhat's next for HelloTerribleHack\nNothing, this program will never be updated. it is perfect anyway.\n",
        "hackathon_id": "terriblehack",
        "winner": false
    },
    {
        "description": "\nYou can easily find out when the next bus will show up, but, what if you wanted how long it's been since the last bus was at your stop? \nNow you have LastBus - which only tells when the previous bus was at a stop.\nWAT??? Why would I want the LAST bus???\nHence, we have WATLastBus\n",
        "hackathon_id": "terriblehack",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptcssactionscriptjsonhtml\n",
        "hackathon_id": "terriblehack",
        "winner": false
    },
    {
        "description": "\nWe just wanted to make beautiful music. ^^\n",
        "hackathon_id": "terriblehack",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptjqueryhtml5\n",
        "hackathon_id": "terriblehack",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaandroid\n",
        "hackathon_id": "terriblehack",
        "winner": false
    },
    {
        "description": "\nInspiration\nHave you ever shopping at Walmart, and found an item that was priced cheaper on Amazon? \nWhat it does\nThe Match It app allows you to scan an item, and it searches for the price of the scanned item on Amazon. The Match It app allows you to set the price of the item for purchase and it will generate the Amazon web page that you can confirm the lower price with the cash register at checkout. Talk about low cost savings! \nHow I built it\nWe used Xcode and Objective-C to build a native iOS app. We leveraged Amazon Web Services, ESRI Map API, and Item Search.\nChallenges I ran into\nAWS, ESRI Geo location inconsistency, creating custom web page with modified domain name\nAccomplishments that I'm proud of\nCompleting a working product in 24 hours. Troubleshooting API issues \nWhat I learned\nHow to think on your feet when dealing with 3rd party sources and having to decide on a different approach to take.\nWhat's next for Match It! - The ultimate price matching app.\nScaling out functionality. \n",
        "hackathon_id": "hacknc",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe can easily find lots of information from online service to schedule our daily activities. But it is not enough, we still miss one more thing. We cannot estimate how much time we need to find a seat in our favorite restaurant, especially during lunch and dinner time. So far, there is no an easy solution for this problem.\nWhat it does\nWe hack this problem by using crowdsourcing. \n\nWe build an iOS app, CrowdFood, which allow users to submit real time information about how many customers is waiting in the line and how much time is estimated to get served. This valuable information can be viewed by other users who want to visit the same restaurant. \nWe also build a web version of our app to let users without smart phone access the timing information. \nWe have fully back-end supported by RESTful APIs deployed on Bluemix. We use MongoDB to store all the data.\n\nHow I built it\n\nXcode7.0, Swift 2.0\nnode.js\nMongodb\nexpress.js\ncloudfoundry\nGoogle Map API\nBluemix\nRESTful API \nCloudinary\n\nAccomplishments that I'm proud of\nWe are so surprised by ourselves that we could accomplish so many work in less than 24 hours. We also appreciated HackNC a lot for giving us such an excellent opportunity to improve ourselves and broaden horizons. And most importantly, we hope the app we develop could benefit many others in the near future.\nWhat's next for CrowdFood\nWe would like to release our app \"CrowdFood\" in App Store. Please check our demo with audio here and our webapp.\n",
        "hackathon_id": "hacknc",
        "winner": true
    },
    {
        "description": "\nInspiration\nThe idea for Bubbles originally started as a suggestion from Edward Liang for a \"message in a bottle\" application. The idea to turn the application into a social media app came from a brainstorming session on how to make it more entertaining. During the brainstorm, we initially envisioned people running after messages to see what was inside. We also thought it would be cool to receive messages that floated from across the country or across the world. \nWhat it does\nBubble is an anonymous social media application that allows users to send messages with pictures and text to various parts of the world in a target direction rather than towards are target individual. Bubble users also have the ability to open messages that float past them. The locations of messages are shown in the application through the use of the Esri Map Tools. \nHow I built it\nThe Esri ArcGis API was used to build the map and display the coordinates of messages that were floating in various directions. The Parse API was used for the backend services; data for each message sent from an individual phone was stored on the server. This data included velocity of the message, location, text, and images. Lastly Inkspace was used to create custom icons and graphics for the app, which were animated using native android methods/functions.   \nChallenges I ran into\nThe largest challenges we faced involved learning the intricacies of the APIs that were used in building the application. For example, debugging some of the Parse and Esri exceptions that we ran into was very time consuming. Furthermore, learning how to use the APIs took a decent amount of time as well.\nAccomplishments that I'm proud of\nThe application is fairly robust and a lot of effort was put into creating a relatively nice UI. We're also pretty proud that we were able to complete the application in 24 hours. \nWhat I learned\nHackathons are very very long. We also learned a lot about using the Parse and Esri ArcGis APIs, and Android programming in general. \nWhat's next for Bubble\nWe'd like to continue working on implementing features for Bubble and scaling the project overall. Some additions that could be implemented in the future include money transfers and sending out advertisements for companies. \n",
        "hackathon_id": "hacknc",
        "winner": true
    },
    {
        "description": "\nBuilt With\namazon-web-servicesjava\n",
        "hackathon_id": "hacknc",
        "winner": true
    },
    {
        "description": "\nInspiration\nAdd more versatility to the Pebble\nWhat it does\nUsing the buttons on the Pebble, when pressed, they communicate to the Android. Android then communicates to the TCP java server, which gives the command to press the corresponding key on the computer's keyboard. \nHow I built it\nWith the Pebble API, the button commands were made. With Android studio, the button commands were received and sent to a server via localhost that gave the computer's keyboard a specific command to press one of the keys.  \nChallenges I ran into\nThe communication between the Android and the computer over wifi was a challenge. Since a port has to be left open to listen for the Android request, it would periodically kick us off the router and We'd have to go to a different location and reestablish connection. \nAccomplishments that I'm proud of\nIt was great being able to dive deep into the Pebble and networking operations. We've seen Pebble many times, so it was nice to explore it further. Likewise, the server side is a weak point for the both of us, so this project was an opportunity to expand our skills and discover more about how these different platforms can communicate. Lastly, after setting up the Oculus and having to manage all the cords, it was nice to know that the Pebble controller has no wires and  doesn't involve as much prep as the rest of the devices. \nWhat I learned\nSo much was learned about the server side of development, and there's still so much left to learn. There's definitely much excitement for another chance to continue growing in that area. The Pebble was simpler, but the more we learned about it, the more we realized how useful it actually can be for daily life if you harness its API in a unique way. I'm curious about the other technologies that can be used in tandem with the Pebble watch. \nWhat's next for Callit\nThe next step would be to incorporate the accelerometer on the Pebble and create a larger variety of apps and games using the added controls. Finally, much can be done via the Android as the primary communicator between various technologies.\n",
        "hackathon_id": "hacknc",
        "winner": true
    },
    {
        "description": "\nI Can't Pay My Mortgage\nThis is a project for HackNC. \nIt is a currency management application that extracts and displays information using the Capital One \"Nessie\" API. A client side user can then conveniently monitor their account activity, transaction history, as well as check their current balance. After a user peruses through their account activity, they can determine the purchases that led them to the unfortunate predicament of not being able to pay their mortgage. :confounded:\n",
        "hackathon_id": "hacknc",
        "winner": true
    },
    {
        "description": "\nInspiration\nThe nessie interface and Google now gave us the idea that we could use the rich source of location information to help suggest places to eat.\nWhat it does\nBased on your transaction location history, we map your transactions, create a heatmap of those transactions, and then use the Yelp API to ultimately recommend areas to eat in commonly visited places.\nHow I built it\nWe used Python for most of the backend. This includes querying the Capital One API to get the transaction history, and then querying the Yelp API to get the restaurants. We use Javascript to interact with the ESRI ArcGIS API to map the restaurants and to visualize the transaction heatmap. Finally, we use Python, PHP and SQLite to create a user account system that saves your bank information.\nChallenges I ran into\nWe had a lot of issues with Cross-Origin-Requests because Flask didn't play well with those requests. We also had some issues figuring out how to do geospatial processing. \nAccomplishments that I'm proud of\nWe finished everything we set out to do in less than we anticipated. We managed to figure out 3 APIs in the short time we were given.\nWhat I learned\nHow to create a Flask server, how to map geospatial data using the ESRI ArcGIS API.\nWhat's next for Pique\nRecommending locations based on time of day, and upcoming events, too. Essentially, predicting into the future rather than just giving recommendations for now.\n",
        "hackathon_id": "hacknc",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe stayed at a very sketchy motel and we wanted to create an app that could show how safe an area was.\nWhat it does\nThe user can select a point on the map and then creates a heat map uses tracts in the selected county.\nHow I built it\nWe used arcGIS to create the map and render the heat maps.\nChallenges I ran into\nCreating the polygons to represent the counties and tracts on the map was difficult.\nAccomplishments that I'm proud of\nWe are proud that we were able to create the polygons.\nWhat I learned\nWe learned how to use the arcGIS sdk to create detailed maps.\nWhat's next for Safe Search\nUsing more data and spending more time developing algorithms to generate the heat maps.\n",
        "hackathon_id": "hacknc",
        "winner": true
    },
    {
        "description": "\nInspiration\nWith finals coming up and summer break drawing closer, the last thing students need to be worried about is where they're going to store their things over the summer. Many college students are familiar with this dilemma: they need to find storage spaces for the summer, but after calling around the area, they find out that most spaces are either reserved already, or they are too large and too expensive to afford on a measly college student salary. We built Tetrispace to help these poor souls (and anyone else in need of a storage solution) find a way to keep their belongings safe and sound over any period of time.\nWhat it does\nTetrispace provides a platform for users to reduce storage costs by renting out a portion of their unused storage space to others in need of storage. For example, due to high demand, a college student may only be able to get a 100 sq ft storage area, when he only needs 30 sq ft of storage. Using Tetrispace, he can rent out the other 70 sq ft with his own custom asking price, and other users can find his listing and instantly reserve the space with the built-in transaction handler.\nHow I built it\nThe frontend was developed with Bootstrap, JQuery, handlebars, the Google Maps API, and the Capital One Nessie API, and the backend is a mix of NodeJS, Express, Posgre SQL, and SQLite.\nChallenges I ran into\nWe had some difficulty making API calls between outside APIs and our project's REST APIs.\nAccomplishments that I'm proud of\nEach team member was working in a role that they were inexperienced in, and we feel that we performed above and beyond.\nWhat I learned\nWe learned how to use Javascript based technologies to develop and debug rapidly.\nWhat's next for Tetrispace\nWe're going to rough out the edges of the UI/UX and implement an authentication mechanism.\n",
        "hackathon_id": "hacknc",
        "winner": true
    },
    {
        "description": "\nBuilt With\npythonarduino\n",
        "hackathon_id": "hacknc",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe wanted to convince people to donate to good causes and get informed\nWhat it does\nYou play with two other people and try to select a state that best matches a given question related to demographics. After the game is over, the players are shown the winner and some information. They are incoraged to donate to a cause relating to the question they were given.\nHow I built it\nback-end: django, python, wolfram-alpha api \nfront-end: ESRI, JavaScript\nChallenges I ran into\nHad to dumb dumb map visualizations due to time constraints. \nAccomplishments that I'm proud of\nHow to manipulate a decent amount of data to get displayed on a map in the front end\nWhat I learned\nLearned a lot about back-end web development. \nWhat's next for Social Demographic Poker\nbetter map visualization and donating capabilities. \nPrizes Targeted\nBest use of Amazon Web Services\nBest Domain.com Domain\nBest use of Capital One API\nBest use of the Esri ArcGIS Developer Platform\nBest use of SQL Database (presented by SQL Sentry)\nBest use of Wolfram Technology\nBest use of Wolfram Technology runner-up\nSQL Sentry raffle\n",
        "hackathon_id": "hacknc",
        "winner": true
    },
    {
        "description": "\nBuilt With\nhtmlcssjavascriptnode.jsbootstrapjqueryajaxandroidbluemix\n",
        "hackathon_id": "hacknc",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavajqueryjsonjavascriptdasheclipsetwitterbluemix\n",
        "hackathon_id": "hacknc",
        "winner": true
    },
    {
        "description": "\nBuilt With\nchromejavascriptleap-motionwolfram-technologies\n",
        "hackathon_id": "hacknc",
        "winner": false
    },
    {
        "description": "\nInspiration\nTo create something that incorporated software and hardware which could be used for education as well as entertainment.\nWhat it does\nThe laser project bends laser beams to render virtually anything onto surfaces.\nHow I built it\nWe started with a galvo-scanner kit.  This kit has two galvanometers which are attached to mirrors, the galvanometers drivers, a power supply and a sample display board.  The display board was key to getting the raspberry pi to communicate with the galvanometers.  The galvanometers need a signal from -5 to 5 volts to move.  We originally started by developing a digital-to-analog converter but realized that we could reverse engineer the board that they had provided.  We started off with what looked like the microcontroller (which was unlabeled) and probed the pins until we found the constant 5v and grounds. We did a search for what microcontroller had that particular pin arrangement and found that it was an Intel 5051 or at least a nock-off of it.  We then used the datasheet to prob the pins for the data wires.  After finding which wires we thought were data we were able to find a chip that was a digital-to-analog converter.  With that datasheet in hand we were successfully able to remove the Intel 5051 and replace the signals with that from an Arduino we used to test with.  After the Arduino test was a success we swapped over to Raspberry Pi.  We then started to write a 3d rendering software for the Raspberry Pi to display 3D shapes using the laser projector.\nChallenges I ran into\nThe inertia of the mirrors caused many issues with using the laser project and having to use delays so that the dot would keep up with the processing power of the Raspberry Pi.  We ran into an issue with paths while developing the 3D engine.  The engine would return the 3d points but not with the dots connected.  We had to develop a algorithm to connect the dots.\nAccomplishments that I'm proud of\nDeveloping the software that communicates with the hardware and making it render 3d.\nWhat I learned\nWe learned some of the complications of rendering 3D and communicating over a network.\nWhat's next for Laser Projector\nThe laser is currently only green.  We would like to make it RGB.  The 3D library needs more work.\n",
        "hackathon_id": "hacknc",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe drove all the way here and then locked our keys (with our gear) inside the trunk of my sedan. The first locksmith failed to unlock the vehicle (but still tried to charge us) and the next one wanted $195 to unlock the car Saturday night.\nInstead we decided to wonder around campus, dig into recycling bins, and hack together our own locksmith tools for free.\nWhat it does\nUnlocks the driver-side door of a modern sedan (and probably others).\nChallenges I ran into\nCar doors don't like to open without keys.\nAccomplishments that I'm proud of\nWe spent $0 and a lot of time designing this thing. Zero damage to the car too!\nWhat I learned\nThe best hacks are the ones you need.\nWhat's next for The $0 Locksmith Hack\nWe're re-branding as MacgyverNC and hiring interns at our SF office.\n",
        "hackathon_id": "hacknc",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavajavascriptnode.js\n",
        "hackathon_id": "hacknc",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonsql\n",
        "hackathon_id": "hacknc",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe Electric Boogaloo\nWhat it does\nWe \nHow I built it\nWe let the grizzly bear grow the tree into the narwhal.\nChallenges I ran into\nKeeping the narwhal from skewering the grizzly bear for dinner at noon-o-clock with a side of geese.\nAccomplishments that I'm proud of\nGrowing the narwhal into a grizzly tree ram.\nWhat I learned\nthe cats have risen the floodgates\nWhat's next for SnackNC\nsup, dawgs\n",
        "hackathon_id": "hacknc",
        "winner": false
    },
    {
        "description": "\nBuilt With\nnode.jsstormpath\n",
        "hackathon_id": "hacknc",
        "winner": false
    },
    {
        "description": "\nBuilt With\njsonjavaandroidsqlite\n",
        "hackathon_id": "hacknc",
        "winner": false
    },
    {
        "description": "\nWhat it does\nRoam helps people make the best of every moment, no matter where they are. Select your mood or play your chances, and Roam will guide you to an unrevealed, crowd-sourced location. Users specify an activity category such as exploring the outdoors, seeking dessert locations, or finding a new date venue and also input a distance that they are wiling to walk. Roam generates a user-vetted location and leads the user to the destination without revealing identifying details--adding an element of surprise to your next adventure. Roam interfaces with the Pebble watch to provide a convenient navigation experience. \nChallenges I ran into\nVersion control and merging project components that were built separately. Issues with adding images into Android Studio and implementing a splash screen. Database push/pull issues due to hosting on an external website. \nInspiration\nRoam is for anyone who has ever struggled to pick a restaurant or other destination, or who has become tired of frequenting the same locations. Benefit from the recommendations of other users, and add an extra element of excitement to your next adventure by navigating to an unrevealed destination. Embrace the spontaneous exploration!\nWhat's next for Roam\n\nUsers' rating and location feedback\nAdd new locations, enlist 'beta' testers to suggest new locations\nStreamlined 'quit' feature once navigation is initiated\nDynamically-updated distance remaining\n\n",
        "hackathon_id": "hacknc",
        "winner": false
    },
    {
        "description": "\nIntroducing Distress Call\nInspiration\nIn many life-threatening situations, there is either no time or not practical for a person to use his/her cellphone and ask for help. This is why we created Distress Call, a smart iOS app that can understand your voice instructions and alerts your friends and family when it hears a preset \u201csecret word\u201d from you.  \nWhat it does\nWhen Distress Call is opened, it will continuously analyze your voice. Distress Call will not do anything unless it hears your \u201csecret word\u201d. Once it detects that your need help, Distress Call will quickly respond and help you, including: \n\nSend a help message to your contacts with your GPS location\nMake a call to your contacts with pre-recorded message or call 911\nUploading your changing GPS location onto the server where your contacts can help where you are\nMake a fake call to yourself when you are in uncomfortable dating or situation similar\nMake audible alarm \nUse the flash on your cellphone\n\nHow we built it\nThe app leverages a natural language processing API for voice recognition. Facebook single sign on is used to help user login, no hassle to register a new account. Twilio is used as backend to send messages and make calls. A cloud app is developed to make the API calls.\nChallenges we ran into\n\nAccurately recognize the voice instruction.\nIntegrate all backend service into one app in just a day.\nDesign an intuitive, straightforward and easy to use user interface.\n\nAccomplishments that we're proud of\n\nA demo app that accomplishes all main goals\n\nWhat we learned\n\nTeam work!\nWork hard, play harder!\n\nWhat's next for HackNC2015\nWe plan to continuously work on the app, including adding more features into the app and improving the app performance. We plan to publish the app to the app store so it can help people out. We will also work on Android app and Windows phone app in the future.\n",
        "hackathon_id": "hacknc",
        "winner": false
    },
    {
        "description": "\nInspiration\nI noticed that there weren't a lot of apps that allowed you to carpool to and from common destinations. Whether it was going from the airport to my school or even across a couple of states to a hackathon, there was no common platform that addressed this issue. This struck me as a little odd considering how useful carpooling turns out to be.\nWhat it does\nHitched in its very essence finds you an optimal rider/ driver based on the overlapping of paths and cost of detours. While thinking of hitched, I knew I did not want it to be a pseudo taxi service that takes you from point A to B, but make use of the fact that this wasn't a completely professional service. There are often cases when a person can be dropped enroute or just at a couple minutes detour relative to another person's trip. The algorithm used for this app makes use of that. The general threshold is that the detour shouldn't cause a delay of more than 8% of the total travelling time of the actual driver. Thus keeping these constraints in mind, and using ESRI's awesome API, this carpooling app recommends ideal drivers to people requesting a trip and then gives the drivers a chance to accept or reject a request.\nHow I built it\nThe backend is built in python. The webapp was built using HTML, CSS and Javascript. Our database is Firebase. Again a huge shoutout to the Esri API\nChallenges I ran into\nWe had a really hard time creating the frontend for this project. This was our first time working on frontend so I learnt alot, but definitely the hard way. We also could not finish understanding how flask works with python hence we werent able to completely sync my backend code and the front end elements. \nAccomplishments that I'm proud of\nOn the other hand I'm really proud of the backend code and I will be more than happy to show you the cool extra features I added that you probably wouldn't see otherwise. I loved figuring out the ESRI API , and despite this being a hackathon I ended up writing clean and elegant code which made me really happy. Also our webpage looks dope.\nWhat I learned\nFlask is annoying. But mighty useful. Also never ever EVER think frontend is easy. I have a newfound respect.\nWhat's next for Hitched\nI would definitely love to fix the obvious kinks, but in addition to that, I would like to use the Uber and Venmo APIs to aid in splitting a ride/ allowing for virtual payments. I would also love to have a rating system for the people offering to carpool and also would love to enable messaging within the app.\n",
        "hackathon_id": "hacknc",
        "winner": false
    },
    {
        "description": "\nInspiration\nCollege is more than just the classes you enroll in. It is the friends you make, the student groups you join, and the ability to explore interests. At many colleges, there are hundreds of options that can define a student's experience. Often, the only information a student has about all of these options are a static and dull list of groups with a brief description. Learning more about the group from a member is challenging and time consuming. \nWhat it does\nWe revolutionize this experience by enabling students to immerse themselves in an example event or meeting for each group to really understand what they do. Through the use of Google Cardboard, our VR app allows students to navigate through the list of activities and experience a meeting or event that group runs. Always wanted to know what the butter churning club at Wash U does but don't really want to actually go to a meeting to find out? Now you can!\nHow I built it\nWe used the game development platform Unity. \nChallenges I ran into\nNone of us have ever done any development for VR before so this was quite the learning experience! We struggled for a really long time trying to get up to speed on what it is. We faced many issues with limitations around unity. We didn't have a pro license which is needed to have videos as textures on our cubes. \nAccomplishments that I'm proud of\nWe believe this app has the potential to bring college campuses to life. As a potential student, being able to see what students do and are like at different universities would be much more valuable than a fact-filled tour. For current students, this could encourage them to try something new and to feel more connected to their campus. We are excited about technology improving the way in which students select and experience college.\nWhat I learned\nWe learned a lot about what is involved in developing for VR and creating games. \nWhat's next for immersifyU\nWashington University's student technology services will receive the idea and prototype and have the option of continuing it. Next steps would include collecting footage from the student groups and releasing the app for student use. \n",
        "hackathon_id": "sts-hack",
        "winner": true
    },
    {
        "description": "\nFrom the start...\nWhen we found out that we were using the Virtual Reality Viewer (VRV) to create an app to better WashU, we were honestly a little unsure of our abilities. Neither of us have ever used Unity or the Google Cardboard SDK, or pretty much anything else required of us to get our project done. Additionally, we didn't have a clear vision of what we wanted the end goal to be. So we got to work.\nWe started messing around with different APIs and Libraries and we started to see some improvements in our abilities and, with them, confidence that we could produce something that we'd be proud of.\nAfter tackling obstacle after obstacle (trust me... there were a few) we accomplished our goal. We created a augmented reality viewer that scans and tracks target images and attaches 3D models to them.\nDetails\nTeam Members:\n    Henry Waill\n    Michael Greer\nAvailable Models:\n    Atomic Orbital 4F, by Michael Greer in 123D Design\n    Bar Graph, by Michael Greer in 123D Design\n    Bust of Beethoven, by user TheNewHobbyist on Thingiverse \n    Dinosaur Skull, by user cyborg527 on Thingiverse\n    Matterhorn, by user gluetolf on Thingiverse\n    Gateway Arch, by user wwebber on Thingiverse\n    Physics Demo, by Henry Waill in Unity\nAll Image Targets created by Henry Waill in Illustrator.\nApp was created in Unity using the Google Cardboard and Qualcomm Vuforia SDKs.\n    Cardboard for integration into the STS VRV.\n    Vuforia for Augmented Reality applications.\nApp was built and tested using XCode.\nTo use app:\n    Print out the included images in the folder \"target images\" to serve as targets for the Vuforia software.\n    8.5 x 11 sheets of printer paper work well.\n    Load app onto an iphone and assemble STS VRV.\n    Start the app and look at one of the target images. The model that appears will depend on the image.\n    The app can recognize up to three targets at a time.\nPotential Uses:\n    Viewing models in 3D that would be confusing as 2D images (Molecules, Complex Structures, etc.)\n    Models could be created and distributed by teachers\n    Target images could replace figures in textbooks\n    Viewing objects in true AR could be helpful for classes that require 3D modeling and prototyping\n    Professors could put target image up on projector, and students would see a giant 3d model\n    Models can be dynamic for physics demonstrations or other animated learning examples\n    Applications in Architecture, History, Geography, Chemistry, Art History, Physics, and other disciplines\n",
        "hackathon_id": "sts-hack",
        "winner": true
    },
    {
        "description": "\nBuilt With\nc++visual-studio\n",
        "hackathon_id": "hackruf15",
        "winner": true
    },
    {
        "description": "\nBuilt With\npebblenode.jsiossendgridjavascriptsocket.ioexpress.js\n",
        "hackathon_id": "hackruf15",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavapython\n",
        "hackathon_id": "hackruf15",
        "winner": true
    },
    {
        "description": "\nInspiration\nLike any University, Rutgers is a university known to have some down time every now and then. This is a way of Keeping track of that.\nWhat it does\nIf Sakai goes down, or the campus emergency operating status goes down you can receive a catastrophic tweet from @RUCatastrophic But that's not all. Students can set RUCatastrophic.com as their home page. Whether it's rainy, sunny, windy, or warm. You'll be the first to know. If a campus service goes down, we'll keep you in the loop.\nYou can view demo of what a catastrophic day looks like below\nhttp://rucatastrophic.com/raindemo/\nAlso is a demo of a sunny day http://rucatastrophic.com/sundemo/\nHow I built it\nThe core of this project is python. Every minute Python runs a small script which polls for information from rutgers and weather sources. It then generates a new index.html file reflecting the conditions. It Operates on a Ubuntu Linode image and was designed to be as minimal is possible.\nChallenges I ran into\nThe largest challenge I overcame was animating various components of the website and creating a modern look.\nAccomplishments that I'm proud of\nSince the HTML is as basic as can be it happens to be aesthetically pleasing not just for the pc, but on mobile too.\nWhat I learned\nWith the help of my friends I learned new ways to apply old concepts through time-sensitive programming.\nSpecial thanks to inspiration contributors Prasant Sinha - prasantksinha@gmail.com - Syed Zaidi - Syed.zaidi525@gmail.com - Deep Patel - deeppatel@live.com\nWhat's next for RUCatastrophic\nThe service could expand by also keeping track of traffic delays around town and informing users when it's congested.\n",
        "hackathon_id": "hackruf15",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe originally planned on creating an 8 bit music generator from converting data metrics to Octal.  Soon thereafter, however, our idea evolved and blossomed into the wonderful speech generator before you.\nWhat it does\nBy utilizing the Bloomberg API's International GDP percentage change data, we normalize the values and correspond them to values in our library of Trumpisms (small audio snippets of Trump).  From there the speech is concatenated and produced.  By utilizing the Twilio API in conjunction with Linode, we were able to allow people to effectively Phone-A-Trump.\nHow I built it\nWith much blood, sweat, tears, and Python27.\nChallenges I ran into\nThe initial audio creation library was not functional.\nAccomplishments that I'm proud of\nGetting everything done with such a small team.\nWhat I learned\nServer inferacing\nWhat's next for A Call from Trump\nNeural Networking\n",
        "hackathon_id": "hackruf15",
        "winner": true
    },
    {
        "description": "\nMed-Guard\nMost of our team didn't know how to code (only one person barely knew Java). However, we wanted to still submit something that wouldn't be laughed at. So, after taking a tour around the booths, we were inspired to create a medical game for kids in hospitals. Merck was asking hackers to relate their work to something medicinal, and Morgan Stanley had a Presbyterian Hospital challenge that was challenging hackers to create programs to ease families through the painful/tedious processes they face when a loved one is hurt. In dire situations, even the tiniest bits of light can be rays of sunshine. In our game, we have a a doctor who runs across the platform fighting invading bacteria while protecting the common folk from harm. What may be seen as a rather simple game to a common person is rather an intensive collaboration of animations and custom artwork to make the game seem and run smoothly. This is our first time doing this, and we hope it can live up to the common standards and bring joy into patients' lives.\n",
        "hackathon_id": "hackruf15",
        "winner": true
    },
    {
        "description": "\nInspiration\nStudies have been done showing that as many as 4 in every 10 people pay for subscriptions that they no longer use or have forgotten about. This statistic shows how difficult it can be to remember what you're paying for and when to cancel what you aren't using. Repetera helps users manage these subscriptions so you don't forget where your money is going.\nWhat it does\nRepetera authenticates with the user's bank account in order to retrieve their recent transactions. The app then runs through these transactions to look for recurring payments, and processes them adequately, presenting them in a very appealing fashion to the user.\nHow I built it\nMagic.\nChallenges I ran into\nSome payment names are not consistent, for example if you're paying for a monthly copy of a magazine from Amazon. Because of this, I had to use regex filters to match the name of the purchase against a database of regular expressions rather than just comparing strings. It doesn't sound bad, but it involved a lot of rewrites.\nAccomplishments that I'm proud of\nIt looks really nice!\n",
        "hackathon_id": "hackruf15",
        "winner": true
    },
    {
        "description": "\nWhat is it\nKareBear is a teddy bear that can talk to children. It helps busy parents communicate to their kids (using speech-to-text and text-to-speech) and provides translations for caregivers of children who don't speak English as their primary language.\nInspiration\nKids don't need more tablets or smartphones. What happened to the good old days where kids used to actually play?\nKareBear embraces technology that does not harm your kids.\nWhat it does\nKareBear can speak (what the parent types) and play songs (determined by the parent). It can transcribe your child's spoken words into text and translate it. It can quiz the child on simple arithmetic. But above and beyond that, KareBear is a loving companion for your child.\nHow I built it\nWe built it using a Express + Node.JS platform. Integration with Google's Speech API. Customized Bootstrap for frontend.\nChallenges I ran into\nDid I mention that hardware hacks are hard?\nAccomplishments that I'm proud of\nIt's a great product! I built something that I would want my kids to use!\nWhat I learned\nHardware hacks are hard. Coming up with a good idea that's doable.\nWhat's next for KareBear\nMore functionalities (such as vocabulary learning and checking for the right answer); different bears: tutor bear - languages, health bear - heartbeat monitor; maybe camera features.\n",
        "hackathon_id": "hackruf15",
        "winner": true
    },
    {
        "description": "\nInspiration\nAs a team, we found that many people look for inspiration for design projects on B\u0113hance. However, B\u0113hance search was not sophisticated enough to find what we exactly wanted. We used our problem of not being able to find an inspiration as an inspiration.\nWhat it does\nYou make a search, and you will get many relevant results based on the project images in a beautiful interface.\nHow I built it\nMagic that even we don't fully comprehend\nChallenges I ran into\nClarifai had an issue where it couldn't take some B\u0113hance images, so we uploaded the images to Imgur to get around.\nAccomplishments that I'm proud of\nBeautiful & sexy interface, and a hack that actually works\nWhat I learned\nHow to efficiently work in a team, Ajax, Node.js, SASS, how to solve hard problems as a team\nWhat's next for S\u0113arch\nWork on efficiency!\n",
        "hackathon_id": "hackruf15",
        "winner": true
    },
    {
        "description": "\nBuilt With\npythongoogle-predictionamazon-web-services\n",
        "hackathon_id": "hackruf15",
        "winner": true
    },
    {
        "description": "\nInspiration\nWanted to treat a disease that mimics Alzheimer's, but is found in kids ranging from 4-10. Most patients do not live past 20, so early detection is crucial.\nWhat it does\nUses puzzles and games as diagnostic tests for the disease. Compares with a baseline to determine whether or not user's responses are normal.\nHow I built it\nMade a web app using Intel-XDK and normal front-end web dev.\nChallenges I ran into\nIntel-XDK would not compile all the parts of the app together and it was not possible to produce a single, functioning copy of the app.\nAccomplishments that I'm proud of\nCreating animations and graphics to invoke visual stimuli.\nWhat I learned\nNavigating Intel-XDK, making interactive web pages.\nWhat's next for Niemann-Pick Disease Type A\nStudy the inner workings of Intel-XDK and make it into a single app.\n",
        "hackathon_id": "hackruf15",
        "winner": true
    },
    {
        "description": "\nInspiration\nThe night before HackRU, we looked at the list of sponsors and saw Merck listed as one of them. Being a Biomedical Engineer, Nick figured this would be one of the very few oppurtunities he would get at a hackathon to do a healthcare hack that would be both impactful and utilize his set of expertise. \nDoctors, although great at what they do, are not always perfect. We have all watched drug commercials, where the list of problematic conditions, side effects, and precautions seems to drag on and on, making many question if a drug is even worth taking. We figured that instead of hiding this information at 250 words per minute or in size 3 text at the end of a commercial, we could empower the consumer by allotting them easier and more digestible access to this information.\nWhat it does\nRxCheck allows patients to input their medication and existing conditions, cross checking for potential prescription violations within our database. \nFurther, RxCheck offers the option for a user to input their email address and phone number, and if any potential new information or recalls are made available, RxCheck will notify the patient immediately.\nHow we built it\n\nCoded automized request bot in Python that would access the FDA drug label API (https://open.fda.gov/drug/label/)\nUsed PyMongo to transfer request data into MongoDB (server refreshes all data from the API based on preset time intervals, we presumed that a weekly update would be a sufficient compromise).\nBuilt front end with HTML/CSS/JS (graphics, user inputs, etc)\nEstablished user notification functionality through Twilio (Text/Call) and SendGrid (email)\n\nChallenges we ran into\nBAD. INTERNET. This was particularly frustrating, as only 2 of our 4 group members had stable internet connections. Our third member only had connection ~50% of the time (with extremely low bandwith, which made sending get requests quite problematic), and the other had connection for a bit more time, but had intermittent disconnections.\nOn a more contextual basis, we got scared once we saw that the list of drugs (~70,000 entries) would have taken about 8 hours to parse based on the limit of 240 requests per minute by the FDA API. We took quite a bit of time figuring out how to circumvent this, but then we realized that each request could handle up to 100 drugs, which completely solved this problem.\nAlthough the FDA requires manufacturers to list product features/warnings in accordance with the SPL, this doesn't require them to normalize synonyms, and this made the data harder to categorize. Examples include Diabetic/Diabetes/Glucose Intolerance, Pregnant/Pregnancy, Breastfeeding/Nursing/Milking/Lactating, and many more. \nAlso, there are identical replicates of entire drugs in the database, which caused a significant amount of errors in our autofill and substring parsing functions.\nAccomplishments that we're proud of\nTwo things we value most about this project are its large potential userbase (anybody who takes a prescription drug) in addition to the streamlining of medical documentation (ease of access). This data is made publically available through the FDA API as well as individual manufacturers' product pages, but these are esoteric and difficult methods for the vast majority of patients. Also, building an extensive 'living' system that will potentially interact with the user in the future is something that goes a long way towards ensuring patient health and security, without requiring constant fear/paranoia of checking news headlines.\nWhat I learned\nThe FDA , despite having a very easy to use API for their drug database, seems to have quite a few redundant variables in their system (12 different variables that all say 'warning'?). They do a fairly good job with the documentation by asserting which variables may be most valuable by listing the general prevalence across OTC/Rx drugs. \nAgain, just a minor gripe that was solved with a few test requests that gauged the specifics of their database formatting.\nHowever, the biggest thing that we learned and were shocked at, is the poor job the healthcare industry (government included) does in ensuring that people who need pertinent recall or medical conflict information (the patients), receive it. We are genuinely concerned that there isn't some sort of legislation in place that mandates notification of patients by pharmaceutical manufacturers, pharmacies, or medical institutions. Intuitively, this doesn't seem to be in the best interest of big pharma firms (class action lawsuits), but we genuinely believe that their moral responsibility to the patients/customers could be prioritized better than it is currently is by sponsoring a system such as RxCheck. \nWe strongly believe that commercials paid for by law firms firms recruiting victims should never be a primary source of recall information, just as size 3 text and hyperspeed reading of warning labels shouldn't be the norm for drug advertisements.\nWhat's next for RxCheck\nExpanding functionality around our core values of empowering the patient to take a proactive role in ensuring proper medication.\nOn more of a 'big data' front, compiling a database of inputs (medication and comorbidities/diseases) could potentially be used for population frequency analysis; revealing causational trends that could spur interest in particular factor interactions. More often than not, this data contains many pieces of confidential information, preventing it from being accessed by anybody except those with specific clearance. By opening up healthcare data to more people, we could take steps towards more quickly solving some of society's biggest health issues.\n",
        "hackathon_id": "hackruf15",
        "winner": true
    },
    {
        "description": "\nBuilt With\nc++pythonmyotwiliosendgridtears\n",
        "hackathon_id": "hackruf15",
        "winner": true
    },
    {
        "description": "\nBuilt With\njava\n",
        "hackathon_id": "hackruf15",
        "winner": true
    },
    {
        "description": "\nBuilt With\nlinodenode.jsamazon-web-servicesiosswiftdomain.com\n",
        "hackathon_id": "hackruf15",
        "winner": true
    },
    {
        "description": "\nBuilt With\nclibsodium\n",
        "hackathon_id": "hackruf15",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascriptgooglehtmlcss\n",
        "hackathon_id": "hackruf15",
        "winner": true
    },
    {
        "description": "\nThe trials and tribulations behind creating Aifred and Lessons learned\nCreating Aifred was a crazy ride. Putting 4 passionate  developers and learners with varying experience levels into one room for 24 hours always calls for a good story but this time, we came out with a great product. But it wasn't so easy, here are some challenges we faced: \n\nBeing beginners in electrical engineering, we didn't know the difference in AC/DC wiring and that we needed to use a relay switch for the arduino. Thanks to the great mentors over at Prudential and Brent from MLH, we finally got it working. \nLearning Android API and PHP. Some of our developers spent their time working and learning the Android API and PHP in order to create the app and run the web server.  We ran into some troubles such as connecting the arduino to the app, but in the end, we prevailed after intense googling and stack overflow sessions.\nDetermining how to communicate between Arduino and android. This was a challenge that took our android dev some time because our arduino didn't have an ethernet or bluetooth shield. We eventually solved it through hours of blood sweat and tears.\n\nWhat we learned: \n\nOur fullstack dev, Srihari,  learned the inside and out of the android API and how to connect arduino to android effortlessly using a PHP server on a machine that talks to the arduino using HTTP post requests.\nOur hardware dev, Ranga,  branched out and used his high school robotics roots to wire the coffee machine together. After many questionable attempts on getting it to work, the great guys over at MLH and Prudential helped us out and gave us some advice on how to correctly wire the coffee machine to the arduino\nOur beginning developer, Jenn, learned about teamwork and python while also helping out on the testing side of things. \nOur web dev and hardware apprentice, Srikant, learned C, java, and bootstrap while creating a website and helping out on the arduino. Also, he learned about electrical engineering and android by assisting his fellow developers.\n\nLangauges and Tech used : Skel, HTML5, CSS3, Javascript, JQuery, Java, C, Gradle, XML, PHP\nSkills used : Hardware and wiring\nHuge shoutout to the Prudential devs and Brent from MLH, without their help we woudn't have been able to create a good final product.\n",
        "hackathon_id": "hackruf15",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe really wanted to make something in unity3D\nWhat it does\nIt is a 3D pong game against an AI\nHow I built it\nUsing the Unity physics engine\nChallenges I ran into\n\nLack of sleep\nInability to rotate things due to lack of sleep\nNew to Unity\n\nAccomplishments that I'm proud of\nSick trigonometry\nWhat I learned\nHow to use the basic Unity functions\nWhat's next for 3D-Pong\nMultiplayer support\n",
        "hackathon_id": "hackruf15",
        "winner": false
    },
    {
        "description": "\nInspiration\nI'm a pharmacy student and I need this.\nWhat it does\nAutomagically generates NLM style citation from PubMed ID and ISBN.\nHow I built it\nJavascript and JSON.\nChallenges I ran into\nFirst Javascript, JSON, and API project.\nAccomplishments that I'm proud of\nI finished.\nWhat I learned\nHow to use APIs.\nWhat's next for NLM Citation Machine\nShare with the world of pharmacy.\n",
        "hackathon_id": "hackruf15",
        "winner": false
    },
    {
        "description": "\nLyric generator using markov chains\nWe scraped data from Lyrics.net in order to retrieve lyrics from many different songs.\nWe then fed it into markov chains in order for it to analyze the seqeuence of words and generate its own lyrics accordinly.\ngithub repo\n",
        "hackathon_id": "hackruf15",
        "winner": false
    },
    {
        "description": "\nBuilt With\njspjavascriptgoogle-mapsapimysql\n",
        "hackathon_id": "hackruf15",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavac#xmlandroideclipse\n",
        "hackathon_id": "hackruf15",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe are a collection of computer science students who met at HackRU IX. Inspired by the New York-Presbyterian/Morgan Stanley Children's Hospital challenge, our mission was to create this website to enable patients to find and interact with those who have similar backgrounds and experiences. We hope that you find this website useful.\nWhat it does\nPatients who are unable to physically interact with others due to limited mobility may find it difficult to develop sustained, meaningful relationships, especially with others like them. This website is intended to help extend the reach of these patients beyond their hospital room or building to connect with patients across the country. While helping patients, we found it important to stop the stigma associated with certail mental illnesses. This led to the implementation of ARTICLES - a compilation of personal stories of patients. We provide a platform to patients for sharing their stories, attempting to increase overall health literacy and empathy for such patients.\nHow I built it\nIntegration of different people knowing different languages in Computer Science. I designed the back-end, other team mates worked on the front-end. It was great fun!\nChallenges I ran into\nDesign, code, break, re-design, re-code and the cycle goes on!\nAccomplishments that I'm proud of\nA small value but useful product for the hospital!\nWhat I learned\nA lot! This was really a unique experience being the first hackathon for all of us! We got exposed to a lot of awesome technologies out there and we hope to increase the horizon of our knowledge.\nWhat's next for Hospital Hack!\n",
        "hackathon_id": "hackruf15",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe love Apple Pay but can't get everything we need from Walgreen's alone. We wanted to build a wireless payments system that works anywhere we do!\nWhat it does\nSNS wirelessly simulates a card-swipe on any credit card terminal right from your phone. SNS works at any credit card terminal that allows you to swipe.\nHow We built it\nWe bottle up a card number and expiration date into a WAV container, play that audio track out of the phone's headphone jack, amplify it just a little, and then blast it through our small induction loop which simulates a credit card swipe by emulating the magnetic field created by a real card stripe on a reader head.\nChallenges I ran into\nBuilding the induction loop.\nConverting the number and expiration date to a WAV file.\nDecoding the WAV file from audio input\nPointers in C...\nAccomplishments that I'm proud of\nSomehow making this whole thing work.\nWhat I learned\nPhysics\nHow WAV files work\nHow credit card payments are handled\nWhat's next for SNS\nSleeping.\n",
        "hackathon_id": "sdhacks",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe wanted to take advantage of innovative hardware along with hard-to-digest public data available to us.\nWhat it does\nGlobalyze displays city data on an interactive globe in virtual reality. No keyboard input is required, and the project is 100% interactive. There are multiple modes to visualize the data: weather, hackathon, Yelp, Twitter, and apocalypse. Given the modularity of the modes, this app is intelligently extensible.\nHow we built it\nThe project was separated into two parts: the visual aspects in C# for Unity, and the data end in Python/Flask integrating APIs.\nChallenges we ran into\nHashing the idea out took a long time - we began our journey with the idea of a pet rock simulator and, after much contemplation and discussion, the project evolved into the global analytics app it is now.\nAccomplishments that we're proud of\nWe were able to develop a project that is applicable to a diverse range of settings. SDHacks was also one of our teammates' first hackathons, so we are extremely proud that we could come this far together.\nWhat we learned\nWe learned to split a project into modular and distinct tasks, which was crucial to this project as the project had two core parts that needed to be executed.\nWhat's next for Globalyze\nThe sky's the limit! Modes and APIs can be added flexibly as the user desires.\n",
        "hackathon_id": "sdhacks",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe always see that one person carrying a notebook and pencil to track their workout when going to the gym. Others use mobile apps that involve manual tracking. Some don't track their workout for the simple fact that it's too much of a hassle. We wanted to change this by making workout tracking automatic. People don't realize they need something until they use it, and this is serves true at our live demo.\nWhat it does\nA custom mount holds any phone on top of a bench press bar. Our app then measures reps, sets, and proper form in real-time. Our machine learning algorithm measures and displays your progress post-workout. \nHow We Built it\nWe use the phone's built in accelerometer to track user reps. We then use timing algorithms to differentiate rest time between sets. The gyroscope measures proper form by helping you level the bar. We also did analytics on the data to view once we see that the exercise is completed.\nChallenges We Ran Into\nThinking of the algorithm to accurately define and measure progress proved challenging initially. Coming up with a way to filter out the noise from the accelerometer data to track reps was difficult since it was so sensitive to even the slightest movement. We had numerous problems with 3D printing since we had no experience with it or even know which software to use.\nAccomplishments\nWe got a 3D printed platform with perfect fit for what we needed. We found work arounds for every technical issue without cutting features, which is a first for us in a hackathon.\nWhat We learned\nWe learned new machine learning algorithms. We learned how to use 3D modeling software and which software to not use the hard way. We learned how to use gyroscopes and accelerometers in android. Also, if you bring in gym equipment to a hackathon, it attracts a lot of attention. \nWhats next\nWe expand the app to include other exercises and build up a more robust website. We also plan on making this app compatible with standard gym machines such as those with a weight stack. We plan to sell the platform to gym owners and keep the app free or freemium for the users.\nOther companies believe that people have to buy wearable devices in order to track their workouts. They want people to buy yet another expensive wearable that requires daily charging, and cannot distinguish between different machines and free-weights. Smart Machine offers a platform for everyone to track their workouts.\n",
        "hackathon_id": "sdhacks",
        "winner": true
    },
    {
        "description": "\nBuilt With\ncss3jadejavascriptnode.jsexpress.jshtml5socket.ioibm-watsonbluemix\n",
        "hackathon_id": "sdhacks",
        "winner": true
    },
    {
        "description": "\nThe lyrics of a song are a powerful source of information about the themes and sentiment in the song.\nWe aimed to build a unique profile of each song based on its lyrical content. \nWe first obtained a large dataset of music lyrics (~200000) and performed topic modeling on it. We specifically used an algorithm called Latent Dirichlet Allocation (LDA), a modern statistical method that can discover themes in corpora in an unsupervised fashion (meaning no hand labeling is necessary). \nWe were able to obtain topic vectors associated with each song, which essentially act as a unique profile. The value in the vector with the highest value is the main genre/theme the song fits into. We decided to use these topic neighbors to construct a music graph. Each song is considered a node in the graph and is connected to several of its closest neighbors. Logically, songs with similar themes are closer to each other, so the graph structure holds a lot of information about song similarity.\nWe first built a simple graph visualizer, where a user can start at a random song (or pick their own) and explore the vicinity by expanding the neighborhood of nearby nodes. We built this in the browser using d3.js, a SVG visualization tool for Javascript. We display an interactive snapshot of the music graph, where nodes are colored by genre. Furthermore, we can listen to any of the songs on the music graph in the interface by double-clicking a node.\nThis interface led us to discover some really interesting trends in the music graph, most obviously that foreign languages have some very dense clusters, and that there exists an 80s \"black hole\", an extremely dense region of lyrically similar songs from the 80s (that is often hard to leave while traversing). This tool actually worked well as a tool of music discovery, as we found ourselves listening to new genres and even languages of music and enjoying the extremely random element to the discovery.\nWe then decided to build a second tool, based on the ideas of random walks on the music graph. Given two songs, we found a random path between the two. This allows us to generate a random playlist where we slowly transition from the first song's genre into the second's. This also acted as a really interesting tool of music discovery, since we could watch the playlist being built in realtime and observe the different genre and theme transitions that were being made. A user can specify the two songs of their choice or pick two at random. After the playlist is generated, it immediately begins playing in the interface.\nThis application is a novel instance of visual music discovery. Most music discovery tools just list out copious amounts of songs and albums, or pick a random chain for you with no context. With our tool, you can begin your music discovery in a familiar place and branch out as you feel, exploring particular clusters of music before moving onto others. Associating the connectivity of the music graph with our own tastes has great power, as it really allows us to understand our own auditory taste from a visual perspective.\nWe feel that this application is a cool proof-of-concept that should be the future of music discovery. The current state of music discovery is not so great; black-box machine learning algorithms make predictions based on past listens. The random element of our approach, along with the unsupervised aspect of our data, gives the user a lot more power to discover music their own interests at their own pace.\n",
        "hackathon_id": "sdhacks",
        "winner": true
    },
    {
        "description": "\nBuilt With\nxcodeswift\n",
        "hackathon_id": "sdhacks",
        "winner": true
    },
    {
        "description": "\nFuture Without Borders\nA iOS application that allows citizens in European Countries to host Syrian Refugees as they are fleeing war \nCheckout our website for more information!  http://futurewithoutborders.org/\nSummary\nHumanity has faced many challenges throughout history, and even though this is the twenty first century we still face many challenges today. Living in the west shelters us from many of these crisis that occur daily, often without our knowledge. One of these issues that has just begun to get noticed here is the Syrian refuge crisis. With over 16 million people displaced, nearly 1 in every 13 Syrians is a refugee; these refugees are flooding into Europe and other nearby countries in attempt to escape civil war, isis, and now recently Russian drone strikes. \nBreaking the problem down\nSo we decided to address this incredible problem. How do we help these countries handle such large influxes of immigration. How do provide basic necessities such as shelter, food, and water? And most importantly how do we make sure these people are not forgotten. Governments are doing very little for these refugees, so we came up with a unique solution. We decided to have citizens across Europe sign up to host just 1 refugee family. Alone it\u2019s very difficult to elicit change, however with many people working together we realized that a large problem could be broken down. \nOur Solution\nHosts across Europe use our mobile app to sign up and offer a family a place to stay. Our app links to a parse, backend that discovers the nearest refugees and displays them to the hosts. So this allows hosts to discover refugees, but how do refugees find hosts? The average refugee fleeing from war won\u2019t have a smartphone, so all they need to do is text our number, and we provide them with essential info on where to go, who to contact, and how to get there, all simply through sms. This we accomplished through the Twilio api sitting on IBM Bluemix as our cloud deployment, from there we interfaced with parse to find the best possible match between refugees and hosts. We used the internet of things to make european cities more responsive to influxes, and are launching a global initiative to help the tragedy from escalating any further. We hope you\u2019ll join us in transcending human borders, and make our product a phenomena across the globe!\n",
        "hackathon_id": "sdhacks",
        "winner": true
    },
    {
        "description": "\nInspiration\nAs they say, friendship is never anything but sharing. However, almost every medium of sharing comes with its own set of challenges and may require a previous point of contact. Platforms of social media and cloud are great at sending information, but require a tedious authentication process and need both parties to consent and share their contact details. This adds unnecessary protocol to an otherwise innocent and streamlined objective.\nWhat it does\nPaper makes full use of the present - it cares about the here and now. You might be attending an event looking to grow your network, sitting in on a lecture looking desperately for a pdf of your textbook, or hanging out with friends and trading those really silly pictures that never found their way out of your phone - Paper is always a swipe away from helping you share your contacts, trade pdfs, and shoot those pictures out of your phone.\nHow It Works\nPaper as a service provides a framework to cluster phones based on location. If you are hanging out with your friends on a Friday night, the app will automatically detect and enable you to share your files within the group with a swipe. This skips the extra overhaul of signing up for an authenticated service and adding new contacts. The mobile app sends the information to our back-end NodeJS server which then points the package towards the right destination(s), providing a cloud-based solution for fast, efficient, and local file sharing. \n",
        "hackathon_id": "sdhacks",
        "winner": true
    },
    {
        "description": "\nWhy Pen Pal?\nMost of the problems in today's world is caused by a lack in communication. From relationships to world affairs, a lack of understanding and openness can be extremely detrimental. All people on this planet are much more similar than we may ever realize. With this desire for communication and the acknowledgment of humanity's commonalities, Pen Pal was born as a homage to elementary school days of writing letters to a friend in a much different place than you were.\nWhat it does\nPen Pal is a unique social app that uses users' greatest interests to match you to someone with similar interests. However, the person that you are matched with is the one the farthest away in location from you. The app will notify you when someone has been found, and you will be able to chat with a user from, potentially, across the world. All while using a beautifully designed UI made to look both fun and interesting.\nHow I built it\nPen Pal was designed in XCode using Swift. Parse was also used to create a user database and for the messaging system. Adobe Illustrator was used to bring some life to the app as well.\nChallenges I ran into\nAccomplishments that I'm proud of\nWhat I learned\nWhat's next for Pen Pal\n",
        "hackathon_id": "sdhacks",
        "winner": true
    },
    {
        "description": "\nBuilt With\npythonfractal-dimension-analysismath\n",
        "hackathon_id": "sdhacks",
        "winner": true
    },
    {
        "description": "\nThe Problem\nPeople want to converse more water but don't know where to start or keep track and don't have the motivation to continue with their efforts.\nThe Customer\nCarl Domingo works a 9 - 5 job and has 2 kids and a wife. He wants to care for the environment but never puts in all of his effort because he has so much other stuff keeping him busy in life. Carl wants something that is cheap, easy to install, and can keep track of his water consumption and compare to his community and city as a whole. Carl also wants to keep track with friends to motivate him and better society as a whole.\nThe Solution\nAn affordable, easy to install solution to keep track of and aid in water conservation. Our solution represents a much cheaper and more efficient finalized product. It hooks onto sources of water and uses a flex sensor and Spark Core Arduino chip to measure water usage and records it to a influxdb database. The data is then used in the iOS app where it is presented to the user in simple and intuitive interface. The user can then use the app to track their progress, compete with friends, and keeps track of the progress as a community.\nChallenges we ran into\nThe Spark Core chip turned out to be very unreliable and would drop signals, constantly disconnect from wifi, and we were not be able to directly program onto the device and had to use their cloud to deploy and compile our code. \nThe standard HTTP request library on the Spark Core chip strips request query parameters.\nAccomplishments that we are proud of\nHaving functional deployed app and device that records real time data and reports it back to a database.\nWhat's next for Stream\nAdding full functionality and developing it into an affordable and easy to install device.\n",
        "hackathon_id": "sdhacks",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe wanted to combine mixology and cocktails with embedded systems and hardware. \nWhat it does\nWe would play a song, and as various colored LEDs would flash on and off based off high and low audio frequency, a set of homemade perastaltic pumps would released fruit juices into a glass. Another jar would contain \"gin\", and sparkling water, and fill the rest of the glass after the fruit juices reaches 100mL. Thus you would have a custom cocktail for every song.\nHow I built it\nA lot of hardware, and embedded systems work! We are a team of computer science majors, but we have to do a lot of building that was mechanical & electrical engineering in nature, when attempting to build the machine. \nChallenges I ran into\nWe went through 6 or 7 prototypes of the water pump, yet could not create enough suction to get the perastaltic pumps to work. We still have a demo of a lid that is rotating, and being controlled by a servo motor, for releasing a plastic pipe into a glass, although it was not originally intended. One of the prototypes was transferring some water, but had leaking which was why we couldn't install the design. \nAccomplishments that I'm proud of\nAlthough we couldn't get the pumps working in time, I was really proud of how many different prototypes we created throughout the weekend. We also got the audio frequency visualizer working which was half the battle. We also got a touchscreen that displays our logo working.\nWhat I learned\nWe need to read more on fluid mechanics, when dealing with water. Debugging hardware, and physical mechanisms is an entirely different world from debugging software, which was what all four of us, as computer science majors, were used to.\nWhat's next for DrinkedIn\nWe're gonna get the pumps working, and bring this to a party!\n",
        "hackathon_id": "sdhacks",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe also want to make products that can help the community. Slice API helps us achieve that by giving the community a better platform to find the best deal they can get.\nWhat it does\nIt will cross reference the purchase data from Slice and find the best deal out of it.\nHow I built it\nWe use AWS for the server and node.js and mongoDB for our backend. Frontend is built with html, javascript, and bootstrap. Slice API as our source of data.\nChallenges I ran into\nFirst time using node.js, mongoDB, and bootstrap. Had some issues with bootstrap's setup and mongoose's aggregation. In addition, we also have to get familiar with Slice API and understand how they expect us to use it.\nAccomplishments that I'm proud of\nWe Did It! A working prototype that will automate the process of finding best deal out of our website's users' purchase history.\nWhat I learned\nLots of new technologies mentioned earlier and Slice API.\nWhat's next for Best Deal Ever\nForming a team and making it a long-term project. Hopefully we can ship it soon.\n",
        "hackathon_id": "sdhacks",
        "winner": true
    },
    {
        "description": "\nBuilt With\nandroid\n",
        "hackathon_id": "sdhacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe were all studying circuits in Mr. Harvie's AP Physics C class at Torrey Pines High School, and we realized that there should be a streamlined method to automatically solve for unknown values in DC circuits. We thought it could be a helpful tool not only for students, but also electrical engineers who need to solve basic circuits in order to analyze more complex ones. After looking online, we found that there is no current service online that can solve circuits with the only input being a picture.\nWe are eligible for all prizes that don't require the use of a specified API or device.\nWhat it does\nThe CircuitSolver5000 can accurately solve missing values in DC circuits. Although limited to batteries and resistors, the algorithm can support a high level of complexity in current paths, and can also be used to solve for smaller circuits that are part of a larger machine.\nIt first takes the user input of a jpeg circuit picture. Instead of traditional symbols for resistors, batteries, and other components, the user must denote parts with color. The resistors and batteries are represented with a red and blue dot, respectively. Additionally, a green dot is drawn on every node, to more efficiently solve for different paths the current can take.   \nThe system uses color thresholding and recognition to detect and solve for the pixel locations of the resistors, nodes, and batteries. Then, output serves as the input for the algorithm to calculate combined resistances, and eventually total resistance. \nTo algorithmically process the resistors, we needed a way to store in paths information about resistors being in series or in parallel. To do this, we created a new method of representing the different resistance paths the current can take. Automatically generated multidimensional nested arrays grouped together series and parallel circuits in unique ways, following the path of the current. When a new array starts in the storage, the algorithm automatically recognizes this as a switch from series to parallel. Through this method, the numerous branches and parallel circuits could be represented in a matrix that then solved for combined resistances.\nHow I built it\nThe color recognition and detection component that found pixel locations of all circuit components and the resistor combination algorithm that then solved for missing components were built entirely by us in python, without the use of opensource code. \nChallenges I ran into\nOne challenge we faced was translating the circuit picture into the locations of all the resistors, batteries, and nodes. At first, we tried to use letter recognition and circle detection by denoting components as letters inside circles. For example, a resistor would be drawn as an R inside a circle. However, we found that using color to denote different components was more efficient, because no training or testing data was necessary. \nThe biggest challenge we faced was translating the locations into concrete information about the circuit, specifically the resistors in parallel and series. To solve this, we used nested arrays and denoted groups of parallel circuits with extra sets of brackets. In the resistance combination, the algorithm would first inversely combine the parallel circuits, then automatically group together all remaining components. \nAccomplishments that I'm proud of\nWe're extremely proud of the algorithm's ability to solve more complicated circuits. At first, we thought that we would only be able to solve the most basic circuits, but our resistance combination algorithm proved to be accurate as we increased the complexity of the pathways. \nWhat I learned\nWe learned so much about the different ways that a computer can turn user input into the needed information. Through our experimenting with binary trees, node maps, and recursive pathways, we learned how to combine these concepts into an algorithm. \nWhat's next for CircuitSolver5000\nWe hope to introduce capacitors, inductors, and more batteries into our algorithm. We also want to turn our system into an app.\n",
        "hackathon_id": "sdhacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe wanted to create an app that could help save energy and electricity. Currently, many households waste electricity when they forget to turn off the light after leaving a room. We wanted to fix this problem and have an app that could potentially eliminate this problem.\nWhat it does\nOur app creates a checklist of appliances per room in a household. Also, with a \"smart\" household system, appliances can turn off in a room when you or your family are not in it.\nHow we built it\nWe used an Arduino Uno to act as our \"smart\" household system. We used a PIR motion sensor to act as the appliances that could turn on or off based on if people are in a room. We also used Android Studio to build our app. \nChallenges we ran into\nWe struggled to figure out a way to connect the Arduino to the Android app via Bluetooth. We were not able to accomplish this due to a few pieces of hardware we were missing.\nAccomplishments that I'm proud of\nWe are proud to say that we learned a lot about hardware in 36 hours. All of us came into this not knowing much about hardware but now we can say that we understand more about how the Ardunio and PIR sensor work.\nWhat's next for ElectroList\nWe did not have time to figure out how to connect our Ardunio to the Android app we created so we would definitely like to implement that sometime in the future!\n",
        "hackathon_id": "sdhacks",
        "winner": false
    },
    {
        "description": "\niMedical\n Your personal medical assistant\n\nBackground\n\nFor centuries, technologies have been used to improve lives of the people. Most notably, the use of computational technology has made many tasks simpler, faster and more efficient. In the medical field, experts constantly seek better ways to deliver quality health care, only to realize the necessity of using information technology to deal with the ever-growing knowledge system. We proposed to harness the power of IBM Watson, one of the smartest AI in the world to achieve our goal. \n\nMotivation\n\nProblem Analysis\n\nShortage in medical professionals\n\n*The shortage of physicians pose a real risk to patients by delaying necessary treatments and decreasing quality of care provided.\n\nProblem of misdiagnosis\n\n*The prevalence of misdiagnosis in outpatients clinics and doctor\u2019s office suggests that the current mode of diagnosis is prone to human errors.\n\nCost of outpatient visits\n\n*The cost of outpatient visits could be frustrated too. Nowadays, patients have to make an appointment to see a doctor and pay the copay each visit plus the fees of physical examinations.\n\n\n\nOur Solution\n\nWe are using IBM Bluemix and several cognitive services such as Dialog, Concept expansion, Concept insight to achieve our goal of creating a personal medical assistant that can do a preliminary diagnosis for you as well as monitoring your entire treatment.\n\nImplementation\n\n-IBM Bluemix for hosting our website\n-IBM Dialog API for conversation generation \n-Concept expansion for grouping and searching similar symptoms\n-Concept insight for giving more information about disease and symptoms\nWebsite Overview\n\nLogin In and Sign up\n\n\n\nChatting with iMedical \n\n\n1.First iMedical can begin the conversation by personalized greeting\n2.After talking with iMedical about your symptoms, iMedical will generate a preliminary diagnosis for you.\n\nMake a Appointment\n\n\n\n\n\nChatting Examples\n\n\nGreeting\n\nDialog Sample 1\n\nDialog Sample 2\n\n\n\nContributor\n\n\nName\nEmail\n\n\n\nScarlet (Jiali) Xie\njlxie@ucsd.edu\n\n\nEsther (Xuanpei) Ouyang\nxuouyang@ucsd.edu\n\n\nStanley (U Tong) Lam\nulam@ucsd.edu\n\n\nCecilia (Kuangcong) Liu\nk8liu@ucsd.edu\n\n\n\n",
        "hackathon_id": "sdhacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nStory telling has historically always been an important means of connecting with other people. We wanted to bring this principle into today's online-driven community with a fun twist. \nWhat it does\nUsers can start their own original stories by pitching a first sentence or contribute to other ones by suggesting what you think will happen next. During each round, each user adds to the story, and all the users will vote on which addition is the best. Because of this, the story can go in many interesting ways, and no story will be the same. Additionally, you can browse through finished stories and relive the creative progression sentence by sentence.\nHow I built it\nFront end was developed with the trandition package of HTML5, CSS, and JS. Additionally, we used Angular.js to enhance the client side experience. In the back end, we used the node.js with express framework to create the foundation of the website. We used socket.io for real time updates during the writing phase of the story and mySQL to store the site's data. \nChallenges I ran into\nOne major issue during development was that we had no dedicated front end developer, so we had to learn and implement front end design on the fly. On the back end side, we also had trouble synchronizing the voting system between server and client sides.\nAccomplishments that I'm proud of\nAs with any hackathon, coming together to actually finish a project along its 36 hour duration was an achievement that we are proud of accomplishing. Furthermore, as most of us are still only novice web developers, we are proud that we were able to integrate so many technologies together to create a fun and exciting app that I'm sure many will enjoy in the future.\nWhat I learned\nCollectively as a team, we gained valuable experience with producing a large scale project with efficient use of git version control. In addition, many of us learned to use new technologies such as socket.io and managed to apply it in such a short span of time.\nWhat's next for FiN.\nThere are several features that we intended to implement that we didn't end up getting time to do. For example, the front end UI is lacking in interesting or exciting page elements. We also wanted to implement a rating system for the stories so that more popular stories can be shown first on the reading page. User profiles was also another feature that we could have used to give notoriety or credibility to users so that they may have extended privileges or access to higher tiered stories, but unfortunately this idea never came to fruition. Lastly, we wanted to classify stories by different genres. Hopefully we will have time to finish the incomplete parts of our app.\n",
        "hackathon_id": "sdhacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\namazon-product-advertisingphp\n",
        "hackathon_id": "sdhacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nOur team consisted of four new transfer students to UCSD. Over the last summer we all shared an amazing new program here called Academy which was made for specifically new transfer students to get an edge and complete some required classes before the start of the regular year. We took three computer science classes over five weeks and it was very difficult, but we all did very well and overcame the challenge. During this time we were also introduced to this fun card game called Set. There's a lot of really cool math involved in the game that gets taken for granted at first glance as 'intuition' or some other vague feeling. Because of our love of Set and our interest in the actual math behind it, we decided to derive an algorithm that would solve a table of cards as efficiently as we possibly can. \nWhat it does\nGiven a properly sorted deck and a list of the cards on the table, it solves the table in O(n^2) time instead of the O(n^3) that would be in the standard implementation. The valid sets are then displayed to the user via a graphical interface. \nHow I built it\nWe originally started working with javascript as an excuse to practice it a bit, but as the algorithm began to increase in complexity I ported it to Java, which is now our final submission. \nChallenges I ran into\nWe had to challenge the way we saw what a card really was. After reevaluating the ways a card is represented we were actually able to model the act of finding a set to be very similar to the 3SUM problem, that is, does a set of numbers contain three values that sum to 0. This thought process almost pigeon-holed us into trying to adapt an algorithm that solved the 3SUM problem. If we had left it at that, it would have worked 'most' of the time and would be less elegant than what we actually achieved. \nAccomplishments that I'm proud of\nAfter deliberating for awhile about how we can use our sorted deck and our new representations of cards, we figured out that we could calculate the exact card needed for a pair to become a Set and then use that information as an index into the sorted deck to find out if that card was on the table or not. This effectively made it so we were looking at each pair of cards and calculating a third instead of looking at each triple of cards. \nWhat I learned\nI learned about the atmosphere of a Hackathon and am so excited to do it again! We did a lot of cool math and though it might not be flashy like some of the other projects here, making algorithms more efficient is extremely important and an infinitely applicable skill beyond just the scope of this project. \nWhat's next for SetSolver\nComputer Vision! Point a web camera at a table of cards or take a picture and let the algorithm do the hard part for you!\n",
        "hackathon_id": "sdhacks",
        "winner": false
    },
    {
        "description": "\nWe've always wanted to develop virtual reality and we were inspired by media such as temple run and Indiana Jones\nDrives through a jungle\nUnity\nIncorporating the myo armband\nsubmitted on my first hackathon\nC# and unity\nSaving up for an oculus rift\n",
        "hackathon_id": "sdhacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe inspiration came from the contrived-word \"Sonder\" which refers to the realization one gets that everyone around you has a story just as intricate, interesting and beautiful as your own.  Unfortunately we go about our daily lives bumping in and around such people without even knowing or acknowledging it. Sonder aims to open our awareness to how interesting that \"stranger on the bus\" can really be, or how that one \"annoying kid\" is actually really really cool.\nWhat it does\nSonder crowdsources compliments for its users from other users who are familiar with him/her. For example, if you have a Sonder account, you may \"sonder\" about someone else, dropping in an anonymous compliment on their wall. The same occurs for you, when other people Sonder about you.  The result? An overwhelmingly positive digital space.\n",
        "hackathon_id": "sdhacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nAfter we recently moved into apartments, we realized that there were many new challenges, responsibilities, and exciting opportunities that came with no longer having an unlimited supply of dorm food. We realized that with an apartment full of busy college students, it was really difficult to keep track of what foods we had in the fridge, what items we had to buy, and what recipes we could make. Thus, we built StayFresh to make our lives easier.\nWhat it does\nUse StayFresh to save time, money, and the environment! Keep track of your food purchases and their expiration dates. Explore a plethora of delicious recipes based on the ingredients you currently have.\nHow I built it\nStayFresh is built using JavaScript, node.js, express.js, HTML/CSS, and sass.\nWhat's next for StayFresh\nThere are many possible expansions for StayFresh, such as using the slice API to help users keep track of their grocery spending and to offer suggestions for lower prices or healthier foods. Since our idea was inspired by the goal of making apartment life easier, StayFresh can expand into an apartment management app, and include other features such as one for keeping track of chores and splitting costs. \n",
        "hackathon_id": "sdhacks",
        "winner": false
    },
    {
        "description": "\nONLINE PRESENTATION WITH VIDEOS\nInspiration\n30% of people are anxious about flying (at least in some point of their lives). About 6% do not fly at all. Fear of flying or aviophobia is a problem that is recognized, but currently only a handful of innovations exist to cope with it. Some airlines provide hands-on courses a couple of times in a year to cope with aviophobia. These courses cost money, but are highly popular. We realized that there is practically zero content available for aviophobic people during flights.\nWhat it does\nNew airplanes have a web server and a wi-fi access point for passengers. We designed a set of apps that utilize an accelerometer attached to the web server and the in-flight portal that provides the landing page for passengers using the airplane wi-fi. We have produced 4 different apps to give you an idea:\nTurbulence meter\ncheck it out\nAirplanes can take much more than what people experience during turbulence. This meter displays the \"safe zone\" for airplane and plots the currently experienced g-forces. emulate accelerometer from devtools, or view with mobile device\nMood meter\ncabin crew view\npassenger app\nPassengers can now communicate their level of anxiety to the cabin crew by using the passenger mood-meter. It is embarrassing to talk directly to flight attendants about your fears when other people are listening. The mood-meter is a very subtle way to inform cabin crew about the level of anxiety of the passenger, and also the reason - another passenger makes you feel uncomfortable, or you're afraid of current flight conditions.\nCabin crew view shows a \"seatmap heatmap\" of passenger anxiety levels, making it possible for cabin crew to react in situations during flight. \nAirplane soundtrack\nA lot of people think that the airplane makes sounds that are not normal. This app plays the passenger all the normal sounds that airplane makes during flights. This way they can reassure themselves that the sounds they're hearing are perfectly normal\nFun in the turbulence\nkekkonen\nNSFW\nWe think that turbulence should be anticipated by the passengers. It is our job to come up with ideas that get into life only during turbulence. There could be games or similar that provide rewards during it, or something like we envisioned with wobbly faces / things. True gentlemen of course never stare..\nFeel free to contact us for work or fun\nCoder Coded\npekka@codercoded.com\njuha@codercoded.com\n",
        "hackathon_id": "hackjunction-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe were walking towards the hackJunction venue and noticed a street musician. Another bystander considered donating to him, but walked away when he realized he had no spare change. Street musicians are important for the life and vibe of a city, but they often don't get compensated. We would like to make it easier for musicians to collect payments from people passing by. \nWhat it does\nBuskr is an app that simplifies the process using an Estimote iBeacon and the Klarna payment system. Whenever the bystander is nearby the musician's iBeacon, he can open the Buskr app and donate some change in seconds. The Klarna payment makes it easy for the bystander to pay, for us to process, and for the musician to collect the money. \nHow I built it\nWe built it using the Estimote iBeacon and associated libraries, as well as with the Klarna API. The android application is programmed in Java on Android Studio and the backend uses JavaScript and is running on pivotal.io. Our domain name is http://buskr.cfapps.io\nChallenges I ran into\nThis was our first app. We had no prior app or Android dev skills, and yet we mangaed to put together a seamless application. Some of things we struggled with: asynchronous HTTP requests and iBeacon detection errors.\nAccomplishments that I'm proud of\nWe are proud of a complete solution that lets a user interact very intuitively and accomplish his goal quickly. It is simple, but very effective. \nWhat I learned\nWe learned that building an app isn't so bad and that we shouldn't be scared to take on something new. \nWhat's next for buskr\nWe'll see. It would be interesting to see how well musicians and people passing by would react to this service. Perhaps if there is favorable response from the community, we can polish the code and release something.\n",
        "hackathon_id": "hackjunction-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaandroid-studio\n",
        "hackathon_id": "hackjunction-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe love spending other people's money. We hate saving receipts, taking photos of them and keep loosing them. \nWhat it does\n\nQuiti.fi sends you notifications of your credit card transactions in real time.\nThe system enables the seller to add their digital receipt to the transaction. \nThe user has an mobile app can view the receipt in her phone next to the transaction data.\nIf the merchant has not attached a receipt, the user can take a photo of the receipt.\nYou can send the receipts and transaction data to your accountant.\n\nHow I built it\nWe did the UI design sketches using Sketch and material UI library.\nWe are using the OP-API for getting the transaction data.\nWe built the transaction simulator with javascript.\nWe used Android material design library to build the UI.\nAndroid app monitors the transactions and we are using android camera app take photos of the receipts.\nWe are using the Azure to store the cloud receipts.\nWe are using Wordpress to host the marketing site.\nWe used Bitbucket for version control.\nWe used Google drive for design asset sharing.\nWe used Skype for team communication.\nWe reserved the domain from the \nChallenges I ran into\nDoing anything on Android takes time.\nThe API's dont really work with real live data.\nAccomplishments that I'm proud of\nGetting everything as ready as they are.\nWhat I learned\nUsing several APIs, Android development, meeting deadlines\nWhat's next for quiti.fi\nWinning the payment track, OP hack and going to Slush finals.\nThen getting a funding and making billions and creating instant love with our millions of users.\nNot really. One step at the time.\n",
        "hackathon_id": "hackjunction-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe are running but how effectively? \nThere is a lot of applications out there calculating the calories based on the runner's distance consumption. Those are usually inaccurate when running outside or on a treadmill. Thus we have decided to build a pebble connected Internet of Things project keeping track of quality of running.\nWhat it does\nIn the running shoe, we have placed some sensors and it is fetching the data of running quality depending on how and where the user steps. The data is being send to the cloud in this case Microsoft Azure via WiFi of the runner's smart-phone. Pebble is fetching the data within the Azure's Mobile Services table.\nSo the runner is able to see the running quality on RUNNY application on pebble real time.\nThe idea, when the runner is running, he/she may simply look at RUNNY on Pebble and take an action in order to run better.\nHow I built it\nWe have used a NodeMcu module. It has a WiFi module on it. We have connected piezo-electric sensors to the NodeMcu using transfer circiuts. We have placed those sensors into a running shoe. This way, NodeMcu was able to fetch the data from the running shoe. Depending on where and how you step, it calculated the quality of your step.\nAll the data gathered from NodeMcu is being send to Azure in a time period. Then the pebble updates the running quality from Azure's Mobile Services.\nChallenges I ran into\nNodeMcu has not documentations. So, the module itself was very challenging. \nAccomplishments that I'm proud of\nWe have created a real-time running tracker and this Runny app, uses the Azure very effectively. The thing we are really proud of we have built some concrete project. \nWhat I learned\nWe have learned a lot about Pebble development. We also have learnt about Azure and NodeMcu.\nWhat's next for Runny\nRunny is going to Pebble store. We would like to make it a application that runners use very oftenly.\n",
        "hackathon_id": "hackjunction-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nA vast majority of wheelchair users struggle to push their chairs around due to weak hands or weak physique. In average, there are about 3000 people in 1 million who tackles such problems. These are people with spinal cord injury, stroke, muscular dystrophies, Parkinson's disease, multiple sclerosis, elderly people etc. \nThe main solution for such people is electric wheelchair. But this sets several limits for them: due to its weight (100-150 kg) every single step is difficult to take; due to its size and weight it cannot be transported using a passenger car, which means that special transportation is needed in order to travel larger distances. Additionally, using a full-electric wheelchair turns the users physically inactive, which decreases their strength and physical conditions even further.\nWhat it does\nOur solution for the problem is the wheels for manual wheelchairs that are equipped with intra-hub electric motors. These wheels boost the thrusting and breaking force of weak hands. They are light weight, easily replaceable and support the physical activity of the users.\nHow we built it\nBoth wheels of the wheelchair will be conveniently equipped with intra-hub electric motor, batteries and control unit. Regular wheels of manual wheelchairs can be replaced with wheel hub drives, using the standard quick-release system. This allows these wheels to be used with most manual wheelchairs widely available on the market.\nChallenges we ran into\nBalancing solution for power-assist wheels, that keeps wheelchair always upright on inclining surfaces, is the main premise to create functionality that helps more easily moving up and down on the stairs. That\u2019s the biggest challenge at the moment.\nAccomplishments that we are proud of\nWe have custom designed electronics to drive the motors. Solution where wheelchair is remotely controlled with a smartphone. We have letters of interest from various organizations. And last but not least - we are proud of our team! That we have a team motivated and dedicated in this project.\nWhat we learned\nWe learned that prototyping comes after prototyping that comes after prototyping. It means, the project will develop with the real work (development, testing, prototyping). Just talking doesn\u2019t help. And it\u2019s very importatnt to participate in different hackathons, it motivates the team and boosts the project. A week ago we won \u201cBest implementation\u201d title in TehnoHack in Tallinn and now we are here!\nWhat's next for I Can Move\nAs you know, the biggest problem for people in wheelchair are stairs. With balancing solution power-assist wheels can keep the wheelchair always upright on inclining surfaces. That solution is necessary in order to create functionality that helps more easily moving up and down on the stairs. \nAlso, the mobile app will collect data from power-assist wheels that is needed by doctors and physiotherapists because in the rehabilitation progress it\u2019s important to find the best posture, technique and physical effort for wheelchair users. Data collected from our power-assist wheels by our mobile application will help them.\n",
        "hackathon_id": "hackjunction-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\npowerpointwearable-technologynon-invasive-sensors\n",
        "hackathon_id": "hackjunction-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonphpjava\n",
        "hackathon_id": "hackjunction-2015",
        "winner": false
    },
    {
        "description": "\n\u03c0-low is a device aiming to wake up only the user, based on his alarm in an intelligent way. \nThe device will consist of an arduino, safely placed with a pillow, and a simple vibrator connected to\nthe arduino. arduino, will be controlled via Bluetooth by a smartphone. The user will be able to\nadd an alarm in his calendar that triggers the vibrator effectively waking up only the user, \nwithout disturbing others.The most important functionnaluty is the smart head detection if the user head is on or off the pillow. \nThe mobile app contains also the possibility of controlling by voice.\n\u03c0-low will also be able to gather information about the health of the user and generate statistics,\nsuch as number of hours slept, these data will be useful to help the user performing his hour sleeping.\nIf you will go to sleep and your head is on the pillow and you forget to set the alarm, \u03c0-low will kindly ask\nyou if you want to set the alarm on and on what time. \n",
        "hackathon_id": "hackjunction-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroid-studio\n",
        "hackathon_id": "hackjunction-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nEvery year thousands of people get lost and buried under buildings because of earthquakes. What if there was a easy and cheap way to find those victims in time? \nA 10\u20ac BLE sticker and any smartphone can do it. \nWhat it does\nUses smartphone app to search for BLE-based cheap, 10\u20ac stickers sewn into one thing every person wears - their shirts. \nHow I built it\nWe used Evothings to have a prototype up and running in 48 hours. \nChallenges I ran into\nBattery life of BLE-equipment - 2 years. Wireless charging in the future? One charger for every village in poorer regions?\nAccomplishments that I'm proud of\nGood distance measuring even in bad reception conditions\nWhat I learned\nWhat's next for Fainderi\n",
        "hackathon_id": "hackjunction-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroidamazon-web-servicesindooratlas\n",
        "hackathon_id": "hackjunction-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWhat make this app new is that men/ and women now have a new way to manage product and check ingredients. \nWhat it does\nI manages hair regimens and hair journey\nHow I built it\nIt built on the meteor platform, integrated with several apis. \nChallenges I ran into\ngetting all the apis to work well together. \nAccomplishments that I'm proud of\nFully function scanner and ingredients. \nWhat I learned\nThat so many moving components to the application that Its hard to manage at scale. \nWhat's next for Hairitage\nFull integration with YT uploads, Length checks, Pebble watch routine reminders, Inventory reminders.  Full social sharing capability. \n",
        "hackathon_id": "hackjunction-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroid-studioklarnaazure\n",
        "hackathon_id": "hackjunction-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nunity\n",
        "hackathon_id": "hackjunction-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nember.js\n",
        "hackathon_id": "hackjunction-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWill be updated later \nWhat it does\nWill be updated later \nHow I built it\nWill be updated later \nChallenges I ran into\nWill be updated later \nAccomplishments that I'm proud of\nWill be updated later \nWhat I learned\nWill be updated later \nWhat's next for Paper Planes\nWill be updated later \n",
        "hackathon_id": "hackjunction-2015",
        "winner": false
    },
    {
        "description": "\nPAYTILE\nPaytile, the easiest way to monetize your online content.\nThe time that you spent writing an article didnt quite give you the return that you desired. \nIt works as an addon to your online content to enable payments through QR codes.\nWe want to give the power to your audience to pay for the content that they want. Simple and fast in a way that they dont \nhave to add their payment details on every website they browse.\nThe possibilities of online payments through QR codes are nearly endless. It can range from simple micro payments to giving \nlarge donations.\nWho are we:\nTeam Paytile:\n-Santamaa Kimmo (https://fi.linkedin.com/in/kimmosantamaa)\n-Skogstr\u00f6m Henrik (https://fi.linkedin.com/in/skogstrom)\n-Suo-Heikki Sami (https://fi.linkedin.com/in/samisuoheikki)\nPaytile?\nWe are enabling payment of online content by reading qr codes or using your Paytile-application.\nUse cases:\n-One-time passes\n** Bloggers and news papers can create micro payments required to read the whole content of the blog/article.\n-Subscriptions\n** Enable premium access by paytile-payments\n-Donations\n** Easy way to make micro-donations to your favourite Youtubers. Scan the qr with Paytile and donate\n-Registrations\n** Finalize your users registrations with Paytile\nWhat we built:\n-Mobile application Paytile (Works on IOS and Android)\n-Demo site for showcasing the use of paytile http://junction.cloudit.fi\n-API Server built with PHP\n-MySQL database to save transactions and other info\n-Plans for creating Paytile CMS integration (Wordpress, Drupal, Joomla!)\nWhat is still to be done:\n-Integrating Klarna API with Paytile\n-Paytile CMS integration\n-Windows phone tests\n-Polishing Paytile-application\nTechnologies used:\n-Javascript\n-Node.js\n-Ionic framework\n-PHP\n-MySQL\n-Bootstrap\n-jQuery\n-CURL\n-Photoshop\n-HTML\n-CSS\n-QR reading and generating\n",
        "hackathon_id": "hackjunction-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe boiled-frog  in a slow heated milk.\nWhat it does\nIt makes slow and therefore unnoticeable environment changes measurable, visible and therefore manageable. \nHow I built it\nGeneral architecture:\nSensors (K-30, DHD-22, BMS085)\nTwo Raspberry Pi (collect and forward data)\nRuby on Rails server (make decisions)\nCozify User rules (external state requests)\nCozify Lamp and Socket (physical actions)\nChallenges I ran into\nExtremely user unfriendly Cozify IDE\nAccomplishments that I'm proud of\nWe made it work!\nWhat I learned\nHardware management by programming.\nWhat's next for Safe Home powered by Cozify\nIt might be implemented at our homes\n",
        "hackathon_id": "hackjunction-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nSlush, conference meetings, always forgetting people you've just met. \nRunning out of / losing business cards.\nWhat it does\nDetects handshake gestures and automatically swaps contacts.\nHow I built it\nUsing Android and Microsoft Band SDK for Android.\nChallenges I ran into\nDetecting the handshake gesture, because everybody performs the gesture in a different way.\nAccomplishments that I'm proud of\nBeing able to detect a handshake, exchange contact info like name, emails, but also compute the level of interest of the person you connected to (by using heartbeat sensor)\nWhat I learned\nUsing the Microsoft Band SDK, Creating an Azure Api App Service (Preview).\nWhat's next for Salute!\nConnecting on social networks, sending invites.\nCreate a Map of Connections - where, who and when did you meet somebody.\nEnhance the algorithm for detecting handshake gesture.\nGive the possibility to the user to define its own gesture.\n",
        "hackathon_id": "hackjunction-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nnode.jsjquery46elksopentravelplannerazurehtmlcss\n",
        "hackathon_id": "hackjunction-2015",
        "winner": false
    },
    {
        "description": "\nWhat it does\nImagine sitting in a restaurant and not having to wait to order. And when you want to leave you can just leave, without having to wait for the receipt.\nWith Taplicious this becomes reality. In restaurants that support it you can place orders and pay through the app (even after you've left). This may seem small but next to improving the customer's experience it opens up a whole new world of data collection possibilities to restaurants.\nAnalytics\nA whole new world of analytics opens up to restaurants that supports ordering through Taplicious. Think stuff like intelligent menu's that present the user with what he/she likes at certain times and translates food names to the user's native language but also more anonymous info like what products are populair at certain times, customer's nationality, age etc. The possibilities are endless.\nTaplicious revolutionises the way you experience restaurants, not just for you (it's users) but for everyone.\n",
        "hackathon_id": "hackjunction-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe work with Shopify every day. One of the things we love about it is the way it's democratised ecommerce - anyone has the platform they need to start an online store. Running on Shopify also means that store owners are able to leverage a huge ecosystem of applications, plugins, 3rd party developers and designers, themes, support channels and resources.\nLooking at a restaurant/hospitality industry chained to expensive and inflexible software platforms, we thought we'd try to bring the advantages of the platform into this new vertical.\nWhat it does\nTasteTable extends Shopify's functionality to make it a perfect fit for the needs of a restaurant, coffee shop or other hospitality-based retail store trying to compete for customers in 2015. \nBuilding TasteTable on top of Shopify means that merchants get:\n\na reliable platform handling order and inventory management;\naccess to an existing ecosystem of apps, plugins, and developers/designers;\ncore functionality specific to the hospitality industry;\na new ecosystem of apps, plugins and developers/designers focused just on TasteTable.\n\nHow we built it\nTasteTable has been built as a Rails application that interacts with a merchant's Shopify store using the Shopify API. That application interfaces with a range of other services to help deliver the additional pieces of functionality developed for the specific use case examples we wanted to showcase.\nChallenges we ran into\nToo many fun ideas, not enough time!\nAccomplishments that we're proud of\nGetting a range of completely different use cases fleshed out and implemented in two days.\n",
        "hackathon_id": "hackjunction-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavanode.jsbootstrap\n",
        "hackathon_id": "techweek-nyc-hackathon",
        "winner": true
    },
    {
        "description": "\nInspiration\nImagine there is a app on your smartphone which memorizes your grocery shopping habits.  \nWhat it does\nAJoure offers a simple and easy going solution for you to get informed about offers you really like to know. By knowing your refrigerator inventory and the text recognition of your receipt the app offers customized shopping tips by nearby stores. \nWhat's next for AJoure\nThere are two main challenges WE are going to face. The implementation of an accurate algorithm which helps to analyze the collected data and offers the greatest value for the customer. \n",
        "hackathon_id": "techweek-nyc-hackathon",
        "winner": true
    },
    {
        "description": "\nInspiration\nBlue mix presentation.\nWhat it does\nDeveloping several apps websites that have large database with querry like mongodb or sql or cloudent management issues, these large data sets need to be transferred and altered on various platform. So we created a bridge to interact between platforms\nHow I built it\nDeveloping several apps in the various platforms creating a bridge with heroku using nodejs to navigate btween platforms\nChallenges I ran into\nSeveral, my entire pivotal platform crashed, and creating the database interface and cloudent wharehousing challenges\nAccomplishments that I'm proud of\nBeing able to focus on complex code and application structure, develop the database endpoints, rest apis to make this exchange operable.\nWhat I learned\nIt is important to stay flexible. Manage the 4x4  identifiers.\nWhat's next for Transfer Socrata.Bluemix\nHopefuly enableleing qa more fluid data exchange and development scenarios with Watson and BlueMix. It will be useful to ue this database from Socrata and use a Watson api for text analytics, to give a more robust data presentation.\n",
        "hackathon_id": "techweek-nyc-hackathon",
        "winner": true
    },
    {
        "description": "\nBuilt With\nrubysinatrarubygemshtml5css3javascript\n",
        "hackathon_id": "wellesleyhack",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe've all been stranded in the cold, waiting for the senate bus to come. Never again! \nWhat it does\nSee a comprehensive overview of where the senate bus is on a map, and get an accurate estimated time on when the next bus is coming (if it's late!). You can even see which buses are full so you don't have to wait out in the cold for the next one. If you're a minute away from the bus stop, you can even request the driver to wait for you! \nHow I built it\nUsed socket.io as a source and built Google Maps APIs into it. Hosted the website on Heroku and collaborated using GitHub \nChallenges I ran into\nHandling the Google API and integrating into the code \nAccomplishments that I'm proud of\nThat we finished a proof of concept, which includes a complete Geolocation tracker & broadcaster, Map markers.   \nWhat I learned\nWe also became familiar with GitHub, APIs, Sublime, Terminal, Javascript, HTML/CSS\nWhat's next for Senate Bus Tracker\nTry and make it fully functional and operational. Integrate a mobile banking system into it so that buying physical bus tokens is not necessary anymore! \n",
        "hackathon_id": "wellesleyhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\nmit-app-inventorpython\n",
        "hackathon_id": "wellesleyhack",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe like outer space, we like ghosts, and we like pong. So why not add them all together?\nWhat it does\nOur game allows players to play a game of pong against a space ghost using hand gestures. \nHow we built it\nWe used Maya to design some graphic objects in the scene and Unity to handle the game physics and the 3D modeling. Scripts for the game logic were written in C# and we used Leap Motion to capture hand gestures.\nChallenges we ran into\nWe struggled with collision detection and momentum preservation problems in Unity's physics engine. Unity assets also made GitHub collaboration really challenging with messy merge conflicts.\nAccomplishments that we're proud of\nWe made a functioning game with cool graphics and we tried out hardware!\nWhat we learned\nWe picked up C# and developed a game using Unity for the first time. We also had fun learning how to interact with Leap Motion and the struggles we had with these technologies were worthwhile. \nWhat's next for Ghost Pong\nIntegration with Oculus Rift as well as more advanced customization features. \n",
        "hackathon_id": "wellesleyhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtmljavascriptcss\n",
        "hackathon_id": "wellesleyhack",
        "winner": false
    },
    {
        "description": "\nWhimsical Wellesley\nA website with fun quizzes for the Wellesley Community\nGetting Started\nWe wanted to make a fun quiz for users\nBugs and Issues\nUsing JavaScript and incorporating Facebook API\nOne group member never showed up; a third group member got sick and left halfway through\nMentor was late and left early\nBoth of us are first years\nCreator\nCreated by Mary DuBard and Evelyn Chen\n",
        "hackathon_id": "wellesleyhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtmlpythoncss\n",
        "hackathon_id": "wellesleyhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\ndjangohtmlcsssqlpythonapi\n",
        "hackathon_id": "wellesleyhack",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe were inspired by the possibilities of Oculus Rift and Myo, as well as the addictiveness of Tiny Wings.\nWhat it does\nPlayers flap their arms to propel themselves off the grassy hills of virtual reality. If they crash, game over. \nHow I built it\nUsing Unity, we custom-created a 3D playing environment with grassy hills and blue skies. Oculus Rift allows players to enter this immersive first-person world. When players flap their arms, the Myo allows them to interact with the game as if they were a real bird. \nChallenges I ran into\n\nIntegrating two unknown pieces of hardware as first-timers to both! \n\nAccomplishments that I'm proud of\n\nFor two members of the team, this was the first time they downloaded and used Unity\nFor all members of the team, this was the first time we've developed on Oculus and Myo\n\nWhat I learned\nSee \"accomplishments.\" Suffice to say, we learned a LOT. \nWhat's next for Tiny Wings First Person Edition\nPoints system, more levels, better UI, more complex environment, more diversity of movement input\n",
        "hackathon_id": "wellesleyhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptinstagram-apihtml5cssmapbox-apiparse\n",
        "hackathon_id": "wellesleyhack",
        "winner": false
    },
    {
        "description": "\nInspiration\nGongBu was inspired by the need to take notes in a more efficient manner. Visual learners have always benefited from formatting their notes, but current applications only allow them to do so through buttons that the user has to press in the middle of the note-taking process, therefore creating challenges for the user to take notes efficiently. \nWhat it does\nGongBu allows you to customize your own shortcuts to format your notes in any way. By incorporating short and simple custom tags while taking notes, your notes automatically get formatted the way you want them to be formatted. In a way - it is you own's markdown language, but much more formatting possibilities than markdown. \nHow I built it\nFirebase for our database, html,js,css, jquery and some bootstrap for frontend, illustrator for icons. \nChallenges I ran into\nRegex, regex, regex, regex\nAccomplishments that I'm proud of\nMaking regex somewhat work\nWhat I learned\nRegex and Firebase\nWhat's next for GongBu\nAdding more custom formatting preferences and fixing regex parsing functions so that we can provide a bugless experience to the user\n",
        "hackathon_id": "wellesleyhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\nmeteor.jsjavascriptgit\n",
        "hackathon_id": "wellesleyhack",
        "winner": false
    },
    {
        "description": "\nWe learned to use databases with parse, Google calendars API, and JavaScript!\n",
        "hackathon_id": "wellesleyhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonhtmlubergoogle-maps\n",
        "hackathon_id": "wellesleyhack",
        "winner": false
    },
    {
        "description": "\nWellesley College students can find the courses they want in the scroll area of all the courses. \nIf they know which ones they want, they can add them to the schedule on the bottom of the page.\n",
        "hackathon_id": "wellesleyhack",
        "winner": false
    },
    {
        "description": "\nWHACK2015\nGit Repository for Wellesley Hackathon Project 10/3/2015\nFBPeak is a Web app that allows you to optimize social media performance by analyzing past post reach. Determine what your peak posts were and the time they were posted by media type to predict when and what your next post should be to reach peak exposure in your network. \nTo run:\nGo to fbpeak.com. \n",
        "hackathon_id": "wellesleyhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtmlcss\n",
        "hackathon_id": "wellesleyhack",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe Tango and the Leap Motion gave us a unique opportunity to create a game that was different from any we had seen before in terms of control elements and thus allows us to provide the user with a truly immersive experience.\nWhat it does\nIt is a game that allows a dungeon master to spawn enemies using the Leap Motion to impede the path of the explorers using the Tango to fight their way through to the end.\nHow I built it\nWe built it in Unity and used Photon Network controls to allow the game to be played on computer and the Project Tango tablet at the same time.  I did the art for Cubey using my drawing tablet and Paint.net.  Other features were built using a combo of built in Unity tools, LeapMotion API, and Tango API.\nChallenges I ran into\nGetting a lot of hardware working together is difficult.\nCreating a multiplayer game and handling real-time synchronization is also difficult.\nAccomplishments that I'm proud of\nIntegrating both the leap motion and the Tango together to create a unique multiplayer experience featuring one player as a dungeon master and additional players as mere explorers of the dungeon.\nWhat I learned\nNetworking in Unity using Photon\nThe Tango Unity API\nThe Leap Motion Unity API\nWhat's next for Cubey's Dungeon\nMore enemy types, better AI, as well as more dungeons to explore and greater power by the dungeon master to design his dungeon will make the game even more amazing.\n",
        "hackathon_id": "vandyhacks2",
        "winner": true
    },
    {
        "description": "\nInspiration\nThe Sensel Morph is a \"pressure-sensitive, multi-touch input device that enables users to interact with the digital world\". It has a lot of applications, from multi-touch games to modeling based education. This project is inspired by one of the pre-existing overlays - the Piano overlay - and aims to convert the Morph into a standard 6-string guitar.\nWhat it does\nAllows you to play the guitar (or any stringed instrument on modification) using the Sensel Morph. You can save your custom tuning profiles, and adjust how the guitar sounds like - type of sound, length of each vibration etc.\nHow I built it\nMorph raw data (x,y,force) -> string & fret data -> SoX\nUses Python.\nI used the SoX command in Linux to generate sounds at different frequencies, enabling me to generate all notes. When played together, these sound like guitar chords.\nChallenges I ran into\nThe biggest challenge was understanding how music and guitars work in the first place. As I had no previous knowledge of this, it took a lot of reading to figure out the math that goes behind music.\nAccomplishments that I'm proud of\nOne of two hacks made by our team this weekend at VandyHacks 2015!\nThe other is Streak\nWhat I learned\nHow a guitar works, Sensel Morph, and Python!\nWhat's next for Strum\nA kick-ass GUI paired with adjustable profiles.\n",
        "hackathon_id": "vandyhacks2",
        "winner": true
    },
    {
        "description": "\nBuilt With\npython\n",
        "hackathon_id": "vandyhacks2",
        "winner": true
    },
    {
        "description": "\nInspiration\nNot everyone types perfectly on a standard keyboard and people have different typing styles/keyboard layouts. Why not make something that will adapt to how people want to type?\nWhat it does\nThe user calibrates their keyboard and then can type based on the layout they imagined.\nHow I built it\nWe used python and the Sensel Morph API\n",
        "hackathon_id": "vandyhacks2",
        "winner": true
    },
    {
        "description": "\nInspiration\nWhile attending a hackathon at Georgia Tech, I couldn't find my wallet. There were two credit cards in the wallet. To make matters worse, one of the cards was issued by a bank in China -- that means I won't be able to replace it soon. In the meantime, what if someone picked up my wallet and decided to buy their next lunch with my credit card? I know the standard protocol in this case: call the bank. However, wouldn't it be better if an app could let you choose if activities on your account are authorized and take actions against unauthorized ones?\nWhat it does\nBankGuard allows users to review and report transactions easily to decrease credit card fraud.\n(If the video on Vimeo doesn't work, please try http://publicservice.andyfang.me/data/BankGuard%20Ad.mp4 )\nHow I built it\nThis app uses Nessie API to access bank account data. It is built with Ionic, Angular JS and Cordova.\nChallenges I ran into\nCordova projects could be hard to debug -- there is no place to see log messages. (In the end we figured out that safari developer tool can help debugging)\nAccomplishments that I'm proud of\nBoth of us have never done an app before. We are proud that we were able to run through all the tutorials and build an actual app.\nWhat I learned\nAngular JS, Cordova, Ionic, hybrid app development \nWhat's next for Bank Guard\nExpand its real-time ability, integrate damaged/lost card reporting service.\n",
        "hackathon_id": "vandyhacks2",
        "winner": true
    },
    {
        "description": "\nInspiration\nThe Sensel Morph's ability to sense varying pressure in a 2-D plane and its exceptional multitouch capability naturally lends it to interacting with spatial simulations.\nWe decided that using the multi-touch capabilities and pressure sensitivity for a physics simulation would be interesting.\nWhat it does\nOur simulation allows for intuitive and simultaneous creation of massive bodies using pressure for size and direction of dragging for velocity.\nIt simulates attractive interactions as well as collisions.\nWith it, the user can create a simple binary system or have fun watching tons of spheres collide around the screen at different angles. \nHow we built it\nWe used the Processing language and the Sensel API to create this program.\nChallenges we ran into\nWe had some issues with learning Processing for the first time, as well as some issues with interfacing with the Sensel API. We also spent a lot of time figured out how to calculate 3D collisions. In addition, drawing the spheres with proper lighting was a challenge, with very little documentation online to refer to.\nAccomplishments that we're proud of\nWe learned how to interface with Sensel Morph, as well as how to use Processing. We also wrote complicated algorithms to calculate 3D elastic collisions and rotate points in 3D space.\nWhat I learned\nAbstract is not always better.  It may have been more expedient to write this in c++ and OpenGL,\nas that would have allowed us to avoid some of the known issues inherent in Processing (although many of these have been fixed in 3.0+). However, learning to create a program through Processing, which was written for visual programs, was nonetheless valuable and beneficial to our continued education in computer science.\nWhat's next for Sensel Morph Planets\nWhile there are many future possibilities for this project, the immediately succeeding ones include the following:\nWe could add the ability to move around and scale the system, rotate the system, and add planets in different areas in that manner.\nWe also may add varying elasticity for planets (all currently have uniform elasticity).\nWe could also add curves showing the predicted and past paths of planets.\nWe could also add a more user-friendly interface to toggle all of these options.\n",
        "hackathon_id": "vandyhacks2",
        "winner": true
    },
    {
        "description": "\nRunCentive\nRunCentive is an app to incentivize yourself to be healthy. It tracks the calories you burn by running, and transfers money into your checking(\"spending\") account from your savings account based on how much you ran. Have a pricey item you want to buy or a concert you want to attend? Go for a run first so you can spend that money guilt-free and be healthy doing it!\nThe app uses:\n\nThe Capital One API to manage your bank accounts and transfer money between them.\nAndroid Geolocation to track the distance you have ran. It uses your location and speed to calculate the calories you burnt using a standard medical formula.\n\n",
        "hackathon_id": "vandyhacks2",
        "winner": true
    },
    {
        "description": "\nInspiration\nPinball is great, but even the best player is a victim of chance and bad luck from time to time. We wondered how we could fix that, and stumbled on the idea of a helpful pinball. So we decided to create a co-op game with one player as a VR pinball, who could help out, with the other playing normally.\nWhat it does\nThe program simulates a normal game of pinball, where the player uses two flippers to keep the ball in play. However, there is also the option to view the game from a first-person perspective, wherein a person wearing an Oculus Rift can see the game from the point-of-view of the pinball. They can also control the speed of time as well as the spin of the ball with a Myo armband in order to nudge the ball away from (or towards) hazards.\nHow we built it\nThe game was built using the Unity3D engine in conjunction with C# scripts and the Myo and Oculus Unity engine scripts. In addition, we used blender to model certain objects.\nChallenges we ran into\nThe Oculus didn't originally show UI elements correctly. We eventually fixed this by mapping an object to the camera, instead of trying to use the new (and buggy) Unity overlay system. We also struggled tuning the physics of our game. Too little force, and the game was slow and boring. Too much, and it broke through our physics objects and sailed into the abyss. After much testing, we finally found a happy medium.\nAccomplishments that we're proud of\nWe wrote a cool script that reorients the camera direction to constantly point in the direction of the pinball's motion instead of rolling with the ball, which the camera (and the Oculus) do by default.  We're also very proud of our Myo integration that allows for the pinball player to control the spin of the ball and the speed of time.\nWhat I learned\nWe had never used Unity or tried game making at all before, so we both learned tons about the game making process and the scripting language C#. We also learned how to use the Myo and the Oculus, and how to integrate them into Unity to make a fun game.\nWhat's next for Pinball Wizard\nWe don't know, but we hope it will be less nauseating. (Just kidding! We're hoping to add boards with different layouts and themes to make it more like a real pinball machine.)\n",
        "hackathon_id": "vandyhacks2",
        "winner": true
    },
    {
        "description": "\nInspiration\n$treak\nHaven't you always wished for an app that pays you to be healthy? Well it's here now! And it's funded by those who aren't...\nWhat it does\nStreak is an Android + Pebble app that incentivizes users to be healthy, by regularly logging their meals and working out. A common problem many users face with fitness apps is that they have to remember to log a meal, or to log their workout. Streak handles that!\nAs soon as the app senses that you are at your designated gym, Streak knows you've worked out and adds another day to your ongoing streak. Eating out? Streak recognizes that and will remind you on the Pebble to log your meal.\nThe longer you're healthy for, the better the reward. Set goals, and compete with friends. But if you break your streak however, you're paying for your friends' rewards.\nHow we built it\nWe used Pebble.js along with Android for the entire app. We also used CapitalOne's API for the rewards and payments section of the app.\nChallenges we ran into\nWe were all first-time Pebble hackers, so it took a while to get started with development, and choosing between C and Pebble.js\nAccomplishments that we're proud of\nOne of two hacks made by our team this weekend at VandyHacks 2015!\nThe other is Strum\nWhat I learned\nPebble.js, Android\nWhat's next for Streak\nIntegration with apps such as runkeeper and myfitnesspal\n",
        "hackathon_id": "vandyhacks2",
        "winner": true
    },
    {
        "description": "\nThe Need is Real\nIf you ask most entrepreneurs if their product or service has a real need, they will mindlessly give their rehearsed pitch on why Product X or Platform Z will truly make an impact on the modern consumer ecosystem. Despite what they say, these visions usually end up hitting a stone wall.\nSpontivity is different. Yes, different. Where Facebook and Twitter keep you pinned up inside the walled garden that is your close network of distant friends, we effortlessly bring you nearest to the one thing that drives society: people. The latest trending hashtag on Twitter or the hottest new video on Youtube, these things don't drive society forward, its human interaction and the willingness to step up and live life well lived that makes us human. Are you convinced?\nLive Life Like You Mean It\nThrough an iOS (and soon to be Android) application, we connect you to the latest activities going on around you. These activities span a diverse set of interests, from ultimate frisbee and hiking to photography meet-ups in a coffee shop and monopoly night at your neighbors house down the street. All of these activities are driven by you and all the people around you, where everyone brings incredible experiences devoted to living life like it was meant to be lived, that is, enjoying life in the company of people with interests just like yours. As our name implies, we are spontaneous, and we hope you will be too. You can only plan events, or spontivities, one week out from the current date. You give us your spontivity, and we make the world around you aware of it; however, should you want it to be private, you can choose this as well and choose who you want to join, but we encourage you to make new connections and explore the lives of those you would have never met otherwise. We also give you a calendar to keep track of all your attending and hosting spontivities, and we use Facebook to hook you into our service, so you should know you are on solid ground if you choose us.\nBuild it, Ship it\nSpontivity is built on the iOS platform written completely in Swift 2, Apple's new open source programming language and state of the art tool for mobile development. Regardless of what modern iOS device you are on, Spontivity will run perfectly. We have built a completely custom UI made within the last two days. The local data storage and ORM layer is built on top of Realm, a Y-Combinator backed company, devoted to excellence. The backend is engineered in a highly scalable and reliable microservices architecture written in Python. On the backend, we use PostgreSQL for persistent storage and Redis for storing things like session cookies and real-time messages. The backend is built on top of Heroku, a PaaS that is itself built on top of Amazon Web Services, both engineered by thousands of brilliant minds to handle massive load and allow for quick iteration in development.\nNOTE ON LOCATION: The way we aggregate local spontivities is by using the Haversine formula (https://en.wikipedia.org/wiki/Haversine_formula) to derive an enclosing circle centered around any latitude/longitude pair and radial distance in miles or kilometers, which we then use to query our PostgreSQL database for all spontivities with latitude/longitude pairs within that region and return only what lies within, thus giving to our amazing users spontivities in their own area.\nOver the Hills\nWe faced several engineering challenges:\n\nLearning how to use a mobile database and deal with local persistence\nMigrating backend database in PostgreSQL with Flask and Alembic\nEngineering a REST API using best practices and proven standards\n\nThere is Always a Lesson\n\nNothing is impossible in development (nearly), always strive to do better in developing great code and reliable applications\nThe user is ALWAYS first and foremost\nSometimes you have to trash what you like most (some of your code that you have an affinity for despite its shortcomings) to embrace what is better, even if you don't like what is better\nTeamwork is quintessential in success of any endeavor. Kyle and I learned more about working together in this short weekend than we have in working together through many a school assignments and mini side projects over the last two years.\n\nNext Steps\n\nIPO?\nKyle and I continue to work together on this and hopefully much more, always looking to build the next great thing\nAbove all else, we want to make a positive difference. By working on Spontivity, we think its our best bet for accomplishing that.\n\n",
        "hackathon_id": "vandyhacks2",
        "winner": true
    },
    {
        "description": "\nInspiration\nWhen giving presentation for school projects, we found it difficult to stick to the time limit imposed upon us. Knowing when you should switch topics/slides during your presentation would be extremely helpful. And thus, On Point was born.\nWhat it does\nIn the PowerPoint add-on, you assign a time with each slide. Then, when your presentation reaches that slide, the timer starts counting down, and will buzz your Pebble when you should switch slides. It also allows you to control the PowerPoint from the Pebble itself.\nHow I built it\nWe used the Microsoft Office Add-in API and the Pebble.js API to create a synchronized presentation that uses Firebase as a database and event manager. \nChallenges I ran into\nThe Office API was poorly documented and there were no mentors that had experience with it so we were pretty much on our own for that part.\nAccomplishments that I'm proud of\nFiguring out the Office API from nothing but the API reference and the fact that we finished with time left to polish and debug the app.\nWhat I learned\nWe learned how to make add-ins for the Microsoft Office Suite, and we learned how to use Pebble.js\nWhat's next for On Point\nAdd support to all smartwatches (Android, iOS, Pebble, etc.). We also want to extend the core functionality of On Point to Google Slides (Google's version of PowerPoint). \n",
        "hackathon_id": "vandyhacks2",
        "winner": true
    },
    {
        "description": "\nInspiration\nHave fun!\nWhat it does\nMove around the room to catch cubes. Aim of the game: gotta catch 'em all!\nHow we built it\nWe used Unity to build the game, and used the Project Tango SDK to integrate input from the hardware (through motion tracking) and the actual code of the game. The scripts in Unity were written in C#.\nChallenges we ran into\nIt was our first time working with Unity, Project Tango, and C#! Setting up the Project Tango SDK cost us a couple of precious hours, mainly because we'd never done anything quite like it before. Even once we'd set it up, it took us a while to be able to navigate Unity efficiently. Integrating input from Project Tango to our game initially proved problematic as well. \nAccomplishments that we're proud of\nCatching Cubes is our very first game, and that it works with Project Tango is (to us) a pretty awesome accomplishment!\nWhat we learned\nUnity, Project Tango, C# basics\nWhat's next for Catching Cubes\nA future version of the game will have a higher difficulty level - the floor is lava!\nAlso, the game could - through 3D mapping - create obstacles in the path of the user. This would create a maze-like environment for the user to navigate.\n",
        "hackathon_id": "vandyhacks2",
        "winner": true
    },
    {
        "description": "\nInspiration\nThe orignial N64 Pod Racer was one of the first console games we played as a kids. Since a good pod racing game hasn't bee released since then, it seemed time for an homage to one of the coolest races in the universe.\nWhat it does\nAllows a player with an Oculus Rift headset to experience a fully immersive first person Pod Racing experience. Players can also use a project-tango device to experience a bird's eye view of the course, watching the player zip around, as well as fire bombs down to knock them off course.\nHow we built it\nWe used Unity3D to develop for both the Oculus Rift and the Project-Tango device. A number of interesting systems were used to achieve the details that add to the immersive experience for the Oculus player. \n\u2022 Inverse kinematics were used to animate the player model dynamically in conjunction with controller input\n\u2022 Custom shaders were used to create a volumetric explosion\n\u2022 Dynamic particle effects were generated for the Pod Racing engines\nAdditionally, we required a realtime multiplayer implementation to allow interaction between the Oculus player and the Project-Tango player, this was accomplished in unity by leveraging the Photon Networking plugin and API.\nChallenges we ran into\nThe Project-Tango Unity SDK requires specific build settings incompatible with the Oculus. This lead to requiring two separate projects, one for the Oculus, and one for Project-Tango. Asset sharing between the two projects was cumbersome, and the Project-Tango's static move scale made adjusting scale a requirement (the difficulty of which was compounded by the network synchronization)\nAccomplishments that we're proud of\nWe made a fun pod racing game, much of the development time was spent just playing the game we made. There are lots of details that were a lot of work that add to the polish of our game. Good 3D models, audio, and effects all add to the Pod Racing experience.\nWhat we learned\nUnlike general consensus, Macs seemed most compatible with the new technology. Even though Oculus has dropped official support for Mac, it was practically plug-n-play once we found the correct UnityPackage. Same with Project-Tango, which just worked as soon as we plugged it in.\n",
        "hackathon_id": "vandyhacks2",
        "winner": true
    },
    {
        "description": "\nBuilt With\nandroid-studiojavajavascripthtmlcssgoogle-mapsproject-tango\n",
        "hackathon_id": "vandyhacks2",
        "winner": false
    },
    {
        "description": "\nInspiration\nLife, I love to learn and program\nWhat it does\nAllow people to get connected with students in classes that you are in, kind of like the homework Yik Yak\nHow I built it\nI built it using XCode and Swift for my first time learning as I go.\nChallenges I ran into\nNot knowing the language, also all the debugging that we went through, but still had a blast!\nAccomplishments that I'm proud of\nI got something that runs. Even if I didn't I would still be proud because I came and I can walk away with more knowledge than I came with.\nWhat I learned\nI learned a lot of the Swift language and how to work my way around the XCode program.\nWhat's next for Guide Me\nTo make it better and put it out for testing and then hopefully release it on the App Store.\n",
        "hackathon_id": "vandyhacks2",
        "winner": false
    },
    {
        "description": "\nInspiration\nEver hear a music that reminds you of a friend, but before you get the chance to tell the friend of the song that you heard, you have forgotten? This is just one of scenarios where Get Rec'd is particular useful, as it provides a seamless way for you to send \"recs\" for media sources to friends.\nWhat it does\nGet Rec'd allows users to view recommendations of media sources from their friends. It lists the various \"recs\" that were sent from your peers, and allows you to sift through those recs at any point in time. Not only that, but it also allows users to send recommendations to as many friends as they pick.\nHow I built it\nGet Rec'd was implemented on two separate platforms, Android and Web, and utilities various frameworks.\nChallenges I ran into\nThe team as a whole ran into a couple of challenges that provided various learning points over the entire period.\nFor the Android app design, one challenge was finding a suitable UI that allows for a smooth user experience. This then needed us to implement multiple Recycler Views that were populated dynamically with items that were recommended (rec\u2019d) by your peers. To generate content we were able to utilize a couple of material design elements that allowed the user to paste links across different categories such as Floating Action Buttons and Navigation Drawers.\nFor the Web design aspect, the biggest challenge was getting the front end and back end to sync based on how we represent the data and presenting that data back to the user.\nFor the Android app, we managed to provided most of the intended functionality. The various UI elements work well and smoothly and make for a pleasurable experience. The data is there and able to be opened in app to encourage use of app.\nFor the Web app, we have a responsive and dynamic UI that very well conveys what we were going for in terms of look and feel.\nWhat I learned\nWe learned how to implement various Android features such as asynchronous website processing, image processing and smooth scrolling, Viewpagers and RecyclerViews. For the Web, we learned how to integrate Parse with Facebook and our own app generated data.\nWhat\u2019s next\nWe plan on making it functional for 4 additional media types and then focusing first on a college audience and then perfectly integrating it with the web side for better media generation. Also implementing an uproot/downvote system for articles\n",
        "hackathon_id": "vandyhacks2",
        "winner": false
    },
    {
        "description": "\nInspiration\nOver three quarters of teenagers in the US own a smartphone. So why do teachers still use paper quizzes or even clickers?\nWe created an app where anyone can create quizzes and trivia sessions, send to anyone else. The app alerts you if users leave the quiz to prevent cheating.\nThere's also a competitive aspect of triva crack that is super enticing - you just want to know you're beating other people. We wanted to bring this to the classroom to make teachers' lives easier, and students' study hours more fun.\nWorkflow\nTeacher uploads PDF of their quiz to our web portal. \nWe scan and parse through the quiz spitting it back.\nThey can edit the questions and answers, select the right answers, then push it to their students.\nWithin the mobile app, students can search for that set of questions then challenge each other.\nWe aim to replace the use of clickers and paper quizzes in the classroom, but also integrate a social competitive aspect.\n",
        "hackathon_id": "vandyhacks2",
        "winner": false
    },
    {
        "description": "\nPrior to the beginning of the hackathon, my team members and I were discussing NFC technology; our fascination with it; and how impactful it will be in future. As such it was only natural that the idea we decided to work on involved NFC technology. We settled on a game of tag using NFC, hence NFC Tag.\nNFC Tag is an android game where a game session is started by a game master on the NFC Tag website and users can then join the game on their app. Upon joining, they see a map indicating the locations of other players who they can then find and tag by simply bumping their phone to theirs. The game master has the ability to give hints and increase or decrease the five minute game time. \n",
        "hackathon_id": "vandyhacks2",
        "winner": false
    },
    {
        "description": "\nBuilt With\nasp.netjavascript\n",
        "hackathon_id": "vandyhacks2",
        "winner": false
    },
    {
        "description": "\nInspiration\nCollege has a plethora of events to explore.  We wanted a way for students to stay up to date on events going on around campus.\nWhat it does\nThe app allows the user to view posted events as well as post their own.  the experience is completely anonymous.\nHow I built it\nWe used android studio and created our servers through firebase.\nChallenges I ran into\nWe ran into trouble with syncing progress from different users together.\nAccomplishments that I'm proud of\nWe are proud to have been able to build an app in this small time frame.\nWhat I learned\nWe learned a lot from each other when it came to working with android studio, which i have never worked in.\nWhat's next for College Night\nWe hope to streamline the app and create a better user experience.\n",
        "hackathon_id": "vandyhacks2",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythontheanodeep-learningkeras\n",
        "hackathon_id": "vandyhacks2",
        "winner": false
    },
    {
        "description": "\nWe got tired of clicking on long articles and feeling obligated to read them all the way through so we created a service that tells you how long it will take you to read the page so you can better select what you do and don't read.\n",
        "hackathon_id": "vandyhacks2",
        "winner": false
    },
    {
        "description": "\nInspiration\nI was working out with a friend and his apple watch would automatically track his exercise via his heartbeat. I wanted a similar thing so that I wouldn't have to remember numbers which I'm really bad at when I'm running. \nHow I built it\nI average the accelerator data in order to determine if it's in enough motion and if it's in enough motion i start the clock. \nChallenges I ran into\nThe accelerometer in pebble produced really weird values for acceleration that I found very confusing. Furthermore the AUR had a lot of issues this weekend and that made it hard to get the pebble dev environment set up.\n",
        "hackathon_id": "vandyhacks2",
        "winner": false
    },
    {
        "description": "\nBuilt With\ncsshtmlclojurescriptom\n",
        "hackathon_id": "vandyhacks2",
        "winner": false
    },
    {
        "description": "\nBuilt With\nunityarduinoleap-motionoculusc#c++\n",
        "hackathon_id": "wearhacks-nyc",
        "winner": true
    },
    {
        "description": "\nHoneybee\nAn iOS and Pebble app to help keep the busy New Yorker on track.\nWhat the app does\n\nInstall the Honeybee task management app on the iPhone and the Pebble using the Pebble app store.\nEnsure that your Pebble is connected to your iPhone.\nCreate a task in the task management app and select the location of where you task is to be accomplished on the iPhone.\nThe app automatically updates your Pebble with the list you created on the iPhone.\nYou can view your tasks on your Pebble watch and mark them as complete from there, which will update the list on your iPhone, as well.\nAdditionally, when you are in proximity to the location of where you could accomplish your task, The iPhone sends a notification to your Pebble, which in turn notifies you with a vibration that you are in range of the location that is relevant to completing your task.\nYou may either complete the task or snooze it, which gives you the options of ignoring the alert of proximity for 1 hour or 1 day.\n\nTechnologies and tools used\n\nCreated a geofence within a set radius of user's task location (wireless \"fence\" that you walked into an area and receive an alert) using the Google Maps API.\nRequired researching different libraries that were written either in Swift 1 or Objective-C in order to learn how to integrate them with Swift 2 syntax.\nUsed JavaScript with PebbleJS framework to write the Pebble Honey Bee app's UI/UX by doing quick emulation in both CloudPebble IDE and Pebble SDK in command line.\nUsed Swift 2 to build the native task manager app for the iPhone.\nUsed Balsamic for wireframing.\nUsed Photoshop, Illustrator, HyperDither to design and export creatives for use in both the iOS and Pebble apps.\n\nChallenges\n\nWe were able to create functioning components for the work we divided up, but we did not have time to successfully integrate our pieces in order to have the devices communicate to each other.\nThe blocker was not being aware that writing in Xcode does not behave in the manner we usually expect with git, which blocked us from integrating with each other.\n\nAccomplishments that we're proud of\n\nLearning how to not only implement the Google Maps API into an iOS app, but to send JSON after successful triangulation.\nMaking a functioning Pebble app.\nLearning and programming apps in iOS/Swift and Pebble. Never programmed hardware before.\nFinding out very efficient tricks/workflows on Illustrator during the creative design process.\nStill awake!!\n\n",
        "hackathon_id": "wearhacks-nyc",
        "winner": true
    },
    {
        "description": "\nInspiration\nThe desire to become a better surfer\nWhat it does\nWe built a wearable learning tool to teach beginner surfers how to catch waves.\nHow I built it\nLinkIt One, accelerometer, gyroscope, magnetometer, GPS, temperature sensor, vibrator/buzzer, LCD.\nWe have sensors in the front of the board that measure paddle speed, surfboard angle, temperature of water, and GPS. The sensors communicate with 1) the LCD display in the front of the board to indicate surf conditions, and 2) the buzzer attached to the leash to tell surfers when to stand up. \nChallenges I ran into\nGyroscope not working.\nAccomplishments that I'm proud of\nFirst hackathon!\nWhat I learned\nHackathons are awesome!\nWhat's next for Surfbot\nMultidimensional sensors\nBluetooth technology\nWaterproofing\nCommunicaing with surf websites to upload and retrieve data\nIntegrating with smartphone apps\n",
        "hackathon_id": "wearhacks-nyc",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe wanted to allow users an easy, efficient, and quick way to reach out to a friend in an emergency situation.\nWhat it does\nWhen in an emergency situation, the user can open the app and enter the emergency number with different gestures comes different actions. With a twist the user can call the emergency contact, with a flick the user can text message for help using their GPS location.\nIn short, twist it to call, flick to send location. \nHow I built it\nWe built it using Presto API along with Android geolocation, calling, and texting. \nChallenges I ran into\nWe had never worked with Android Studio or Java. In addition we found a bug when cloud sync is on the phone the smartwatch cannot connect using our Presto app. It was also tricky to parse the location coordinates into the messaging function. \nAccomplishments that I'm proud of\nLearning Android development (both mobile and wear), Presto API. \nWhat I learned\nAndroid development. Teamwork. Management. \nWE LOVE HACKATHONS.\nWhat's next for Alertify\nImprove UI/UX. Access the app without unlocking the phone. Publish on Android Play! \n",
        "hackathon_id": "wearhacks-nyc",
        "winner": true
    },
    {
        "description": "\nInspiration\nAn easter egg in a popular game called Spl-t\nWhat it does\nYou use the Myo sensor and wave to move a tilting platform and try to balance a marble.\nHow I built it\nWe designed a 3d printed platform and used a Sevro motor to tilt it. Then wrote an Arduino program to turn the motor depending on what input you get. Then we built a Javascript program to communicate the Myo's input to the Arduino.\nChallenges I ran into\nDealing with physical calibration issues with the Myo. \nAccomplishments that I'm proud of\nHaving completed this project while leaning Javascript and Aurdino along the way.  \nWhat I learned\nAurdino and Javascript.\nWhat's next for Myo Marble Balance\nPossibly a bigger version with pneumatic tubes. \n",
        "hackathon_id": "wearhacks-nyc",
        "winner": true
    },
    {
        "description": "\nInspiration\nIs computer gaming really a sport? Some call it e-sport, but our definition of the sport was \"social\" and \"dynamic\". \nSo we came up with an idea making this a real athletic experience\nthat not only exhausts you, but also makes the gaming experience a social and a collaborative one.\nWhat it does\nWe built a platformer game that requires a collaborative effort of two users in order to win, \nso users can have a true athletic experience controlling each component of a character.\nHow I built it\n\nIt is on top of opensource platformer robot game made by Bayaba.\nWe used Unity with C# to prototype the service. All the assets were given by a open source project and \nwe arranged assets and built on top of it to make it as a complete prototype service.\n\nChallenges I ran into\n\nWe tried to use Kinect but it did not install on the computer.\nWe spent too much time configuring how to work with Myo and configuring Unity.\n\nAccomplishments that I'm proud of\n\nGood looking\nGreat effect\nLearn to use Unity\n\nWhat I learned\n\nUnity is a great tool\nThe Myo Armband we used are only reliable in certain scenario but not all\nBut they have a lot of potential\n\nWhat's next for Muscle\n\nComplete the game with better GUI\nMore Assets\nExpand the multiplayer interface to secondary Myo Armband.\nExport to a mobile application\n\n",
        "hackathon_id": "wearhacks-nyc",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaandroid-studioandroid-wear\n",
        "hackathon_id": "wearhacks-nyc",
        "winner": false
    },
    {
        "description": "\nBuilt With\nlua\n",
        "hackathon_id": "wearhacks-nyc",
        "winner": false
    },
    {
        "description": "\nBuilt With\nmacprocessing\n",
        "hackathon_id": "wearhacks-nyc",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavac++objective-c\n",
        "hackathon_id": "wearhacks-nyc",
        "winner": false
    },
    {
        "description": "\nInspiration\nInspired by easy use of Google cardboard\nWhat it does\nHow I built it\nChallenges I ran into\nAccomplishments that I'm proud of\nWhat I learned\nWhat's next for SpaceWalk\n",
        "hackathon_id": "wearhacks-nyc",
        "winner": false
    },
    {
        "description": "\nInspiration\nComing to WearHacks, we were inspired by the variety of hardware available for us to use. At first, we wanted to use Oculus Rift and Leap Motion together to create a virtual reality application, but learning Unity proved to be too complicated for us. We ultimately decided on focusing our attention on Leap Motion in combination with Twilio.\nWhat it does\nIn a world with increasing emphasis on convenience, gesTEXT aims to send text with simple hand gestures. gesTEXT captures specific hand gestures, transcribing them into text and sending the text to a mobile device. \nHow I built it\ngesTEXT was coded based on open source materials written in JavaScript, HTML, and PHP. The Leap Motion Controller was used to sense specific hand gestures, and Twilio\u2019s services were used to send text messages.\nChallenges I ran into\nOne challenge was trying to implement JavaScript HTML, and PHP. Also, the gesture recognition of Leap Motion was too sensitive. For instance, a swipe was mistakenly identified as a circle.\nAccomplishments that I'm proud of\nWe were proud of being able to understand the logic behind Leap Motion. Learning how to set up a local server to run our program was also a great experience. Overall, discovering different ways to complete a complicated task boosted our confidence as computer programmers. \nWhat I learned\nIn the process of creating gesTEXT, we learned how to use Twilio and setting up the server. Along the way, we also picked up a bit of JavaScript and understood how to use the data obtained by the Leap Motion Controller. \nWhat's next for gesTEXT\nAfter successfully sending a basic text message and image, gesTEXT aims to perform more advanced tasks, such as sending recorded audio.\nBuilt With\nLeap Motion, Twilio, MAMP server, JavaScript, HTML, PHP\n",
        "hackathon_id": "wearhacks-nyc",
        "winner": false
    },
    {
        "description": "\nInspiration\nOur school has a college sponsored organization called Women in Computing. Every year we have an Outreach program for incoming students and do a paper scavenger hunt. We wanted to make a digital one that would engage participants more while fostering a community.\nWhat it does\nIt's a simple app for now, but it will look for a beacon and then when it's recognized, you can take a picture with it. The picture is saved to the phone. When approaching a beacon, you able to see a hint regarding the beacon's location. This achieved through the name function on the Estimote Nearables. Typically the range for the Hackathon was about 10ft so you have to get fairly close.\nHow I built it\nJava, XML, Android Studio, Git, Estimote SDK, Gimp, Inkscape, and Makeappicon. The application heavily utlizes the Estimote SDK in the application. This is a native application.\nIn addition to the programming aspect, the design is centered around the Estimote Nearable colors. The design's aim was to be simple, but yet engaging through the use of colors and triangles to capture the user's attention.\nChallenges I ran into\nWe didn't know much about android studio or android applications so we learned how to do everything from the ground up. In addition to this we also learned extensively about and programmed classes connecting to the Estimote SDK. The design was somewhat difficult since the designer did everything on a touchpad! Things kept moving when they shouldn't and not moving when they should.\nAccomplishments that I'm proud of\nManaging to make an application in 24 hours after getting side tracked by the Myo! While again, the app is simple, it's been made as product that will carry over in the long term. It has the ability to be used or altered for museums, day care centers, young kid open houses, workshops, and more.\nWhat I learned\nAndroid Studio is organized weird, but the XML portion of it is really nice for customizing features! I also learned even more about how Beacons work.\nWhat's next for Campus Sprawl: Nearables Scavenger Hunt\nMore features! Admin approval, team formation, ability to upload pictures to servers and social media, and customizing the beacon name interface for admins.\nA straightforward video of the application on the phone itself\n",
        "hackathon_id": "wearhacks-nyc",
        "winner": false
    },
    {
        "description": "\nBuilt With\nunityleap-motionc#\n",
        "hackathon_id": "wearhacks-nyc",
        "winner": false
    },
    {
        "description": "\nBuilt With\nsoft-circuitryestimotebluetootharduinophonegapjavascript\n",
        "hackathon_id": "wearhacks-nyc",
        "winner": false
    },
    {
        "description": "\nInspiration\n\nPacific Rim\nGodzilla\nEvangellion\n\n\nWhat it does\nKinect game where you walk around a city destroying as many buildings as you can before time runs out. You need to swat missiles out of the sky as you stomp through the city.\n\nHow we built it\nWe take Kinect input for the hands, Occulus head tracking for the head and to simulate spinning around, Xbox Controller to walk and strafe. Runs in the Unity game engine.\nWhat's next for Awkward Giant Robot Urban Sandbox\n\nSound design\nMore things to do in the city\nMore things fighting you\nLasers\n\n",
        "hackathon_id": "wearhacks-nyc",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhardware\n",
        "hackathon_id": "wearhacks-nyc",
        "winner": false
    },
    {
        "description": "\nInspiration\nI want to use Myo to build up my Robot Hand, but my Robot hand was broken down and I don't know why. It really make me feel like that I want to hit the earth, and then, I realized that I can use Myo to build-up a boxing game\nWhat it does\nWhen you hit your fist, the myo will calculate your speed of your fist, and a ScoreBoard will show your level based on the LEDs and Arduino, and the system and the GUI is built with Processing. You can use Gestures to decided when to start and when to restart.\nSpecial Thanks to Zhang Yuxiang\nHow I built it\nCoffee and Energy + Myo-processing Library by darius_morawiec + Laser-Cut&Fabrication in ITP \nChallenges I ran into\nTo fix my robot hands, to earn OpenBCI, to find the exact library, to restart the Myo once error happens\nAccomplishments that I'm proud of\nIt looks cool and it works good, and it really release my pressure after four midterms\nWhat I learned\nThe library of Myo, the usage of OpenBCI, bunch of new friends\nWhat's next for One Punch\nInstead of One-Punch, maybe do something else, still continue to do the robot hands, maybe use Myo and OpenBCI to control it.\n",
        "hackathon_id": "wearhacks-nyc",
        "winner": false
    },
    {
        "description": "\nInspiration\nA real life incident which was backed by the magnitude of data.\nWhat it does\nSaves lives, acts as a safety belt.\nHow I built it\nTeam work - keeping user needs at the heart, emotional quotient and technical quotient. Tools used - java, JDK, Xcode and Metaware Pro API's\nChallenges I ran into Hiding the complexity from the user.\nAccomplishments that I'm proud of My team.\nWhat I learned Team work, time management, project management.\nWhat's next for Wear Bear MWPro\n",
        "hackathon_id": "wearhacks-nyc",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroid-studio\n",
        "hackathon_id": "wearhacks-nyc",
        "winner": false
    },
    {
        "description": "\nInspiration:\nAnxiety related to health care\nWhat it does:\nRedefines patient's experience in a health care setting.\nHow we built it:\nMicrosoft band for heart rate monitoring alongside with an android companion app, a NodeJS backend with Socket.IO for real-time data streaming and front-end in AngularJS to have a very aesthetic and functional interface.\nChallenges we ran into:\nSocket.IO was new but we figured most of it with the help of each other.\nAccomplishments:\nWe build a whole system in the course of less than 18 hours.\nWhat I learned:\nWe have a huge capacity and talent pool on this team.\nWhat's next for this project\nRefining the existing technologies and gathering more data in order to deliver more effective care.\n",
        "hackathon_id": "wearhacks-nyc",
        "winner": false
    },
    {
        "description": "\nBuilt With\nruby-on-railshtmlcsscloud9\n",
        "hackathon_id": "unituhack-london",
        "winner": true
    },
    {
        "description": "\nBuilt With\nangular.jsjquerycssandroidjavaandroid-studiohtml5javascript\n",
        "hackathon_id": "unituhack-london",
        "winner": false
    },
    {
        "description": "\nInspiration\nFrustration when looking for quality learning resources at university.\nWhat it does\nIt allows users to submit their lecture notes and any other learning resources they may have found and share them with all other users. Users will then be able to like/dislike and give feedback on the resource allowing the platform to sort the content so the most useful content is always the most visible.\nHow I built it\nWe built the backend with PHP and mysql and the front end with html css and jquery\nChallenges I ran into\nNot knowing how to transfer files across the web at the start of the day despite choosing to make a web app that nearly entirely relies on this.\nAccomplishments that I'm proud of\ncreating an idea that both me and my team are proud of as well as building a demo'able app\nWhat I learned\nHow php and jquery work as well as FTP\nWhat's next for Dumpy\nAdding support for more users and adding an algorithm that sorts content based on time\n",
        "hackathon_id": "unituhack-london",
        "winner": false
    },
    {
        "description": "\nInspiration\nhelp young people get started with social impact\nWhat it does\nAllows projects to crowdfund time\nHow I built it\nChallenges I ran into\nAccomplishments that I'm proud of\nWhat I learned\nWhat's next for We.DO\n",
        "hackathon_id": "unituhack-london",
        "winner": false
    },
    {
        "description": "\n\u041f\u0440\u043e\u0431\u043b\u0435\u043c\u0430: \u043f\u043b\u043e\u0445\u0430\u044f \u043e\u0441\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u043d\u043e\u0441\u0442\u044c \u0433\u043e\u0440\u043e\u0436\u0430\u043d \u0432 \u0441\u0444\u0435\u0440\u0435 \u0416\u041a\u0425\n\u0420\u0435\u0448\u0435\u043d\u0438\u0435: \u043f\u043e\u0434\u0430\u0447\u0430 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u0432 \u0443\u0434\u043e\u0431\u043d\u043e\u043c \u0444\u043e\u0440\u043c\u0430\u0442\u0435, \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0430, \u0437\u0430\u043f\u0440\u043e\u0441 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438\n",
        "hackathon_id": "hack4piter2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nphphtmlcssjavascriptjsonyandex-maps\n",
        "hackathon_id": "hack4piter2015",
        "winner": false
    },
    {
        "description": "\n*\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435  \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b  \u0438 \u0435\u0435 \u044d\u0444\u0444\u0435\u043a\u0442 \u043d\u0430 \u0432\u0441\u0435, \u0430\u043a\u0442\u0443\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c, \u043c\u0430\u0440\u043a\u0435\u0442\u0438\u043d\u0433\u043e\u0432\u044b\u0435 \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u044f *\n\u041f\u0440\u043e\u0435\u043a\u0442 \u00ab\u0418\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \u0442\u043e\u0440\u0433\u043e\u0432\u0430\u044f \u043f\u043b\u043e\u0449\u0430\u0434\u043a\u0430 \u0434\u043b\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u043b\u043e\u0434\u043e\u043e\u0432\u043e\u0449\u043d\u043e\u0439 \u043f\u0440\u043e\u0434\u0443\u043a\u0446\u0438\u0438\u00bb \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d \u043d\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043c\u0435\u0445\u0430\u043d\u0438\u0437\u043c\u0430, \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0449\u0435\u0433\u043e  \u0441\u0435\u043b\u044c\u0441\u043a\u043e\u0445\u043e\u0437\u044f\u0439\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u043c\u0443 \u0442\u043e\u0432\u0430\u0440\u043e\u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044e \u0441\u0431\u044b\u0432\u0430\u0442\u044c \u0441\u0432\u043e\u044e \u043f\u0440\u043e\u0434\u0443\u043a\u0446\u0438\u044e \u0438 \u0438\u0441\u043a\u0430\u0442\u044c \u043f\u043e\u0442\u0435\u043d\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u043e\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u0435\u0439 \u0447\u0435\u0440\u0435\u0437 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442.\n\u042d\u0442\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043e \u043a\u0430\u043a \u043e\u043d\u043b\u0430\u0439\u043d \u0431\u0438\u0440\u0436\u0430 \u043e\u0432\u043e\u0449\u0435\u0439 \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u043e\u0434\u0430\u0442\u044c \u043a\u0430\u043a \u0443\u0436\u0435 \u0432\u044b\u0440\u0430\u0449\u0435\u043d\u043d\u0443\u044e \u0444\u0435\u0440\u043c\u0435\u0440\u043e\u043c \u043f\u0440\u043e\u0434\u0443\u043a\u0446\u0438\u044e \u0442\u0430\u043a \u0438 \u0444\u044c\u044e\u0447\u0435\u0440\u0441\u044b \u043d\u0430 \u043f\u0440\u043e\u0434\u0443\u043a\u0446\u0438\u044e \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0440\u0430\u0449\u0435\u043d\u0430 \u0432 \u0431\u0443\u0434\u0443\u0449\u0435\u043c.\n\u0411\u0438\u0440\u0436\u0430 \u043e\u0432\u043e\u0449\u0435\u0439 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u2014 \u0441\u043e\u0431\u0440\u0430\u0442\u044c \u0435\u0434\u0438\u043d\u044b\u0439 \u0440\u0435\u0435\u0441\u0442\u0440 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439 \u0440\u0430\u0441\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u0440\u043e\u0434\u0443\u043a\u0446\u0438\u0438 \u0438 \u043f\u043e\u043a\u0443\u043f\u0430\u0442\u0435\u043b\u0435\u0439 (\u0441\u0435\u0442\u0438 \u043c\u0430\u0433\u0430\u0437\u0438\u043d\u043e\u0432, \u043a\u0440\u0443\u043f\u043d\u044b\u0435 \u0443\u0447\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u044f, \u0437\u0430\u0432\u043e\u0434\u044b \u043f\u043e \u043f\u0435\u0440\u0435\u0440\u0430\u0431\u043e\u0442\u043a\u0435, \u0438 \u0442.\u00a0\u0434.).\n\u0412 \u0431\u0438\u0440\u0436\u0435 \u0435\u0441\u0442\u044c \u0441\u0438\u0441\u0442\u0435\u043c\u0430 \u0440\u0435\u0439\u0442\u0438\u043d\u0433\u0430 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439 \u0438 \u043f\u043e\u043a\u0443\u043f\u0430\u0442\u0435\u043b\u0435\u0439. \u0420\u0435\u0439\u0442\u0438\u043d\u0433 \u0441\u0442\u0440\u043e\u0438\u0442\u0441\u044f \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043f\u043e\u043a\u0443\u043f\u0430\u0442\u0435\u043b\u0435\u0439. \u042d\u0442\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u044c \u043b\u0443\u0447\u0448\u0438\u0445 \u0444\u0435\u0440\u043c\u0435\u0440\u043e\u0432 \u0430 \u0444\u0435\u0440\u043c\u0435\u0440\u043e\u0432 \u043f\u043e\u0434\u0442\u0430\u043b\u043a\u0438\u0432\u0430\u0435\u0442 \u0443\u043b\u0443\u0447\u0448\u0430\u0442\u044c \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u0430\u0431\u043e\u0442\u044b. \u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u0440\u0435\u0439\u0442\u0438\u043d\u0433\u0430 \u0438 \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043f\u043e\u043a\u0443\u043f\u0430\u0442\u0435\u043b\u0435\u0439 \u2014 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0444\u0435\u0440\u043c\u0435\u0440\u0430\u043c \u043e\u0446\u0435\u043d\u0438\u0442\u044c \u0434\u043e\u0431\u0440\u043e\u043f\u043e\u0440\u044f\u0434\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u0442\u0435\u043d\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u0430\u0440\u0442\u043d\u0435\u0440\u043e\u0432.\n\u0422\u0430\u043a\u0436\u0435 \u043a\u0430\u043a \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u043e \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044f \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0430 \u0442\u043e\u0432\u0430\u0440\u0430 \u043d\u0430 \u0431\u0438\u0440\u0436\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043e\u0431\u0440\u043e\u0432\u043e\u043b\u044c\u043d\u0430\u044f \u0441\u0435\u0440\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0430 \u0442\u043e\u0432\u0430\u0440\u0430. \u0422\u0430\u043a \u043a\u0430\u043a \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u0443\u044e \u0441\u0435\u0440\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044e \u0440\u0430\u0441\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u0440\u043e\u0434\u0443\u043a\u0446\u0438\u0438 \u0438\u0441\u0447\u0435\u0437\u043b\u0430 \u043c\u044b \u0432\u0432\u0435\u0434\u0435\u043c \u0441\u0432\u043e\u044e \u0441\u0438\u0441\u0442\u0435\u043c\u0443. \u041d\u0430\u0448 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0442\u044c \u0442\u043e\u0432\u0430\u0440 \u043d\u0430 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u043d\u0438\u0442\u0440\u0430\u0442\u0430\u043c,  \u0434\u043e\u043f\u0438\u0441\u0430\u0442\u044c!!!!!.  \u0414\u043e\u0431\u0440\u043e\u0432\u043e\u043b\u044c\u043d\u0430\u044f \u0441\u0435\u0440\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u0447\u0442\u043e \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0432\u043e\u0435\u0433\u043e \u0442\u043e\u0432\u0430\u0440\u0430 \u0438 \u0435\u0433\u043e \u043e\u0440\u0433\u0430\u043d\u0438\u0447\u043d\u043e\u0441\u0442\u044c. \u042d\u0442\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u043e\u043a\u0443\u043f\u0430\u0442\u0435\u043b\u044f\u043c \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u044c \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439 \u0441\u0430\u043c\u043e\u0433\u043e \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0433\u043e \u0442\u043e\u0432\u0430\u0440\u0430.\n\u041f\u043e\u0441\u043b\u0435 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u0438 \u043d\u0430\u043b\u0430\u0434\u043a\u0438 \u0440\u0430\u0431\u043e\u0442\u044b \u0431\u0438\u0440\u0436\u0430 \u043f\u0435\u0440\u0435\u0439\u0434\u0435\u0442 \u0432 \u0440\u0435\u0436\u0438\u043c \u0441\u0430\u043c\u043e\u043e\u043a\u0443\u043f\u0430\u0435\u043c\u043e\u0441\u0442\u0438 \u2014 \u0444\u0438\u043d\u0430\u043d\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0431\u0443\u0434\u0435\u0442 \u0438\u0434\u0442\u0438 \u0441 \u043a\u043e\u043d\u0441\u0430\u043b\u0442\u0438\u043d\u0433\u043e\u0432\u044b\u043c \u0443\u0441\u043b\u0443\u0433 (\u043f\u043e\u043c\u043e\u0449\u044c \u0444\u0435\u0440\u043c\u0435\u0440\u0430\u043c \u0432 \u043e\u0444\u043e\u0440\u043c\u043b\u0435\u043d\u0438\u0438 \u0441\u0434\u0435\u043b\u043e\u043a, \u043b\u043e\u0433\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u043f\u043e\u043c\u043e\u0449\u044c), \u0447\u0430\u0441\u0442\u044c  \u0444\u0438\u043d\u0430\u043d\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0431\u0443\u0434\u0435\u0442 \u0438\u0434\u0442\u0438 \u0441 \u043f\u0440\u043e\u0446\u0435\u043d\u0442\u0430 \u043f\u043e \u0441\u0434\u0435\u043b\u043a\u0430\u043c.\n\u0422\u0430\u043a \u043a\u0430\u043a \u043f\u0440\u043e\u0435\u043a\u0442 \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d \u043d\u0430 \u043f\u0440\u0438\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u0444\u0435\u0440\u043c\u0435\u0440\u043e\u0432 \u043c\u043d\u043e\u0433\u0438\u0435 \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0435 \u0440\u0430\u0437\u0431\u0438\u0440\u0430\u044e\u0442\u0441\u044f \u0432 \u0418\u0422 \u0442\u0435\u0445\u043d\u043e\u043b\u043e\u0433\u0438\u044f\u0445 \u0432 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u043e.\n\n*\u041c\u0435\u0442\u043e\u0434\u044b \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u2014 \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b (\u0442\u0435\u043b\u043e) *\n** 1.  \u0421\u043d\u0438\u0436\u0435\u043d\u0438\u0435 \u0443\u0431\u044b\u0442\u043a\u043e\u0432 \u043e\u0442 \u043f\u043e\u0440\u0447\u0438 \u043f\u0440\u043e\u0434\u0443\u043a\u0446\u0438\u0438 \u2014 **\n \u043e\u0434\u043d\u0430 \u0438\u0437 \u0441\u0442\u0430\u0442\u0435\u0439 \u0443\u0431\u044b\u0442\u043a\u043e\u0432 \u0444\u0435\u0440\u043c\u0435\u0440\u0430 \u044d\u0442\u043e \u043d\u0435\u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u043f\u0440\u043e\u0434\u0443\u043a\u0446\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u0440\u043e\u0441\u0442\u043e \u0433\u043d\u0438\u0435\u0442 \u043d\u0430 \u0441\u043a\u043b\u0430\u0434\u0430\u0445.  \u041e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u043d\u0430 \u043e\u0434\u043d\u043e\u0439 \u043f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u0435 \u0444\u0435\u0440\u043c\u0435\u0440\u043e\u0432 \u0438 \u043f\u043e\u043a\u0443\u043f\u0430\u0442\u0435\u043b\u0435\u0439 \u043f\u0440\u043e\u0434\u0443\u043a\u0446\u0438\u0438 \u043f\u043e\u0437\u0432\u043e\u043b\u0438\u0442 \u043d\u0430\u043b\u0430\u0434\u0438\u0442\u044c \u043f\u0440\u044f\u043c\u043e\u0439 \u043a\u0430\u043d\u0430\u043b \u0434\u0438\u0441\u0442\u0440\u0438\u0431\u044c\u044e\u0446\u0438\u0438 \u0434\u043b\u044f \u0444\u0435\u0440\u043c\u0435\u0440\u0430, \u0438 \u0438\u043c\u0435\u0442\u044c \u0432\u044b\u0431\u043e\u0440 \u0441\u0440\u0435\u0434\u0438 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0440\u043e\u0437\u043d\u0438\u0447\u043d\u044b\u0445 \u043f\u043e\u0441\u0442\u0430\u0432\u0449\u0438\u043a\u043e\u0432. \u0422\u0430\u043a \u0436\u0435 \u0434\u043b\u044f \u0433\u0430\u0440\u0430\u043d\u0442\u0438\u0438 \u043f\u0440\u043e\u0434\u0430\u0436\u0438 \u0432\u044b\u0440\u0430\u0449\u0435\u043d\u043d\u043e\u0439 \u043f\u0440\u043e\u0434\u0443\u043a\u0446\u0438\u0438 \u0432\u0438\u0434\u043d\u0430 \u0441\u0438\u0441\u0442\u0435\u043c\u0430 \u0444\u044c\u044e\u0447\u0435\u0440\u0441\u043e\u0432 \u2014 \u043a\u043e\u0433\u0434\u0430 \u043f\u043e\u043a\u0443\u043f\u0430\u0442\u0435\u043b\u044c \u043c\u043e\u0436\u0435\u0442 \u043a\u0443\u043f\u0438\u0442\u044c \u0435\u0449\u0435 \u043d\u0435 \u0432\u044b\u0440\u0430\u0449\u0435\u043d\u043d\u0443\u044e \u043f\u0440\u043e\u0434\u0443\u043a\u0446\u0438\u044e, \u0438 \u0444\u0435\u0440\u043c\u0435\u0440 \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u0442 \u0435\u0435 \u0432 \u0431\u0443\u0434\u0443\u0449\u0435\u043c. \u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u043f\u043e\u043a\u0443\u043f\u0430\u0442\u0435\u043b\u044c \u043a\u0443\u043f\u0438\u0442 \u0442\u043e\u0432\u0430\u0440 \u043f\u043e \u0431\u043e\u043b\u0435\u0435 \u043d\u0438\u0437\u043a\u043e\u0439 \u0446\u0435\u043d\u0435 \u0442\u0430\u043a \u043a\u0430\u043a \u0434\u0435\u043b\u0430\u0435\u0442 \u043e\u043f\u043b\u0430\u0442\u0443 \u0437\u0430\u0440\u0430\u043d\u0435\u0435. \u0410 \u0444\u0435\u0440\u043c\u0435\u0440 \u0433\u0430\u0440\u0430\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043e \u0441\u0431\u044b\u0432\u0430\u0435\u0442 \u043f\u0440\u043e\u0434\u0443\u043a\u0446\u0438\u044e, \u0431\u0435\u0437 \u0440\u0438\u0441\u043a\u043e\u0432. \n**  2.  \u0423\u043c\u0435\u043d\u044c\u0448\u0435\u043d\u0438\u0435 \u0442\u043e\u0432\u0430\u0440\u043d\u043e\u0439 \u0441\u043f\u0435\u043a\u0443\u043b\u044f\u0446\u0438\u0438 \u2014 **\n\u0427\u0430\u0441\u0442\u043e\u0439 \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u043e\u0439 \u0432 \u0430\u0433\u0440\u043e \u0440\u044b\u043d\u043a\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0441\u043a\u0443\u043f\u043a\u0430 \u043f\u043e \u0437\u0430\u043d\u0438\u0436\u0435\u043d\u043d\u043e\u0439 \u0446\u0435\u043d\u0435 \u0443  \u0444\u0435\u0440\u043c\u0435\u0440\u043e\u0432 \u043f\u0440\u043e\u0434\u0443\u043a\u0446\u0438\u0438 \u0430 \u043f\u043e\u0442\u043e\u043c \u043f\u0435\u0440\u0435\u043f\u0440\u043e\u0434\u0430\u0436\u0430 \u0435\u0435 \u043f\u043e \u0437\u0430\u0432\u044b\u0448\u0435\u043d\u043d\u043e\u0439 \u0446\u0435\u043d\u0435 \u043d\u0435\u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u0432 \u0440\u043e\u0437\u043d\u0438\u0447\u043d\u044b\u0435 \u0441\u0435\u0442\u0438. \u0424\u0435\u0440\u043c\u0435\u0440\u044b \u0438\u0434\u0443\u0442 \u043d\u0430 \u043d\u0435\u0432\u044b\u0433\u043e\u0434\u043d\u044b\u0435 \u0434\u043b\u044f \u0441\u0435\u0431\u044f \u0441\u0434\u0435\u043b\u043a\u0438 \u0438\u0437 \u0437\u0430 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043f\u043e \u0430\u043b\u044c\u0442\u0435\u0440\u043d\u0430\u0442\u0438\u0432\u043d\u044b\u043c \u043a\u0430\u043d\u0430\u043b\u0430\u043c \u0441\u0431\u044b\u0442\u0430. \u0418\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \u0431\u0438\u0440\u0436\u0430 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0441\u0432\u0435\u0441\u0442\u0438 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439 \u043d\u0435\u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u0441 \u0440\u043e\u0437\u043d\u0438\u0447\u043d\u044b\u043c\u0438 \u0441\u0435\u0442\u044f\u043c\u0438. \u0418 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0438\u0437 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u043f\u0435\u0440\u0435\u043a\u0443\u043f\u0449\u0438\u043a\u043e\u0432 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0442\u044c \u0431\u043e\u043b\u0435\u0435 \u0441\u0432\u0435\u0436\u0443\u044e \u043f\u0440\u043e\u0434\u0443\u043a\u0446\u0438\u044e \u043d\u0435\u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u043e\u0442 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f \u0438 \u043f\u043e \u0432\u044b\u0433\u043e\u0434\u043d\u043e\u0439 \u0434\u043b\u044f \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0438\u0442\u0435\u043b\u044f \u0446\u0435\u043d\u0435.\n** 3.  \u041a\u043e\u043d\u0442\u0440\u043e\u043b\u044c \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0430 \u043f\u0440\u043e\u0434\u0443\u043a\u0446\u0438\u0438 - **\n \u0432\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0434\u043e\u0431\u0440\u043e\u0432\u043e\u043b\u044c\u043d\u043e\u0439 \u0441\u0435\u0440\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u043f\u0440\u043e\u0434\u0443\u043a\u0446\u0438\u0438 \u0432 \u0431\u0438\u0440\u0436\u0435  \u043f\u043e\u0437\u0432\u043e\u043b\u0438\u0442 \u0432\u0432\u0435\u0441\u0442\u0438 \u043d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u044b\u0439 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044c \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0430 \u043f\u0440\u043e\u0434\u0443\u043a\u0446\u0438\u0438 \u043f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u0435\u043c\u043e\u0439 \u043d\u0430 \u0431\u0438\u0440\u0436\u0435 \u043e\u0432\u043e\u0449\u0435\u0439. \u042d\u0442\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u0438\u0442 \u043f\u0440\u043e\u0434\u0430\u0432\u0438\u0442\u044c \u0447\u0435\u0440\u0435\u0437 \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u0431\u043e\u043b\u0435\u0435 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u0443\u044e \u043f\u0440\u043e\u0434\u0443\u043a\u0446\u0438\u044e \u0430 \u0444\u0435\u0440\u043c\u0435\u0440\u044b \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0442\u043a\u0430\u0436\u0443\u0442\u0441\u044f \u0438\u043b\u0438 \u043d\u0435 \u043f\u0440\u043e\u0439\u0434\u0443\u0442 \u0435\u0435 \u0431\u0443\u0434\u0443\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043c\u0435\u043d\u044c\u0448\u0438\u043c \u0441\u043f\u0440\u043e\u0441\u043e\u043c \u0443 \u0434\u0438\u043b\u0435\u0440\u043e\u0432. \u0418 \u0438\u043c \u043f\u0440\u0438\u0434\u0435\u0442\u0441\u044f \u0438\u043b\u0438 \u0432\u044b\u0439\u0442\u0438 \u043d\u0430 \u0431\u043e\u043b\u0435\u0435 \u0432\u044b\u0441\u043e\u043a\u0438\u0439 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0441\u0442\u0432\u0430 \u0438\u043b\u0438 \u0441\u043e\u0432\u0441\u0435\u043c \u0432\u044b\u0439\u0434\u0443\u0442 \u0438\u0437 \u0440\u044b\u043d\u043a\u0430 \u043d\u0435 \u043f\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044f \u043d\u0430 \u0440\u044b\u043d\u043e\u043a \u043e\u0432\u043e\u0449\u0435\u0439 \u043d\u0435\u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u0443\u044e \u043f\u0440\u043e\u0434\u0443\u043a\u0446\u0438\u044e. \u0422\u0430\u043a \u043a\u0430\u043a \u043f\u043e\u043a\u0443\u043f\u0430\u0442\u0435\u043b\u0438 \u0441\u0442\u0430\u043d\u0443\u0442 \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0441\u044f \u043a \u0444\u0435\u0440\u043c\u0435\u0440\u0443 \u043e\u0442\u043a\u0430\u0437\u0430\u0432\u0448\u0435\u043c\u0443\u0441\u044f \u043e\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043d\u0430 \u043d\u0438\u0442\u0440\u0430\u0442\u044b \u043a\u0430\u043a \u043a \u043f\u043e\u0441\u0442\u0430\u0432\u0449\u0438\u043a\u0443 \u0437\u0430\u0432\u0435\u0434\u043e\u043c\u043e \u043d\u0435\u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0439 \u043f\u0440\u043e\u0434\u0443\u043a\u0446\u0438\u0438. \u0421\u0435\u0440\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044e \u0431\u0443\u0434\u0443\u0442 \u043f\u0440\u043e\u0432\u043e\u0434\u0438\u0442\u044c \u043d\u0430\u0448\u0438 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\u044b. \u0421\u0435\u0440\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u0434\u043e\u0431\u0440\u043e\u0432\u043e\u043b\u044c\u043d\u0430\u044f \u043f\u043b\u0430\u0442\u043d\u0430\u044f. \u041e\u043a\u0443\u043f\u0430\u0435\u0442 \u0432\u044b\u0435\u0437\u0434 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\u0430. \u0424\u0435\u0440\u043c\u0435\u0440 \u043f\u0440\u043e\u0448\u0435\u0434\u0448\u0438\u0439 \u0441\u0435\u0440\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044e \u0438 \u043f\u043e\u043b\u0443\u0447\u0438\u0432\u0448\u0438\u0439 \u0440\u0435\u0439\u0442\u0438\u043d\u0433 \u00ab\u043e\u0440\u0433\u0430\u043d\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u043f\u0440\u043e\u0434\u0443\u043a\u0446\u0438\u044f\u00bb \u0437\u0430\u0441\u043b\u0443\u0436\u0435\u043d\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 \u0437\u0430\u043a\u0430\u0437\u043e\u0432 \u043d\u0430 \u0441\u0432\u043e\u0439 \u0442\u043e\u0432\u0430\u0440, \u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u0443\u0432\u0435\u0440\u0435\u043d\u043d\u043e\u0441\u0442\u0438 \u043f\u043e\u043a\u0443\u043f\u0430\u0442\u0435\u043b\u0435\u0439 \u0432 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438 \u0435\u0433\u043e \u043f\u0440\u043e\u0434\u0443\u043a\u0446\u0438\u0438.\n** 4.  \u041f\u0440\u043e\u0433\u043d\u043e\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0446\u0435\u043d \u0438 \u0441\u043f\u0440\u043e\u0441\u0430 \u043d\u0430 \u0442\u043e\u0432\u0430\u0440 \u2014 **\n\u0411\u0438\u0440\u0436\u0435 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043e\u0442\u0441\u043b\u0435\u0434\u0438\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0434\u0438\u0441\u0442\u0440\u0438\u0431\u044c\u044e\u0442\u043e\u0440\u043e\u0432 \u043d\u0430 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0435 \u043f\u0440\u043e\u0434\u0443\u043a\u0442\u044b \u0438 \u0435\u043c\u043a\u043e\u0441\u0442\u044c \u044d\u0442\u0438\u0445 \u043f\u0440\u043e\u0434\u0443\u043a\u0442\u043e\u0432 \u043d\u0430 \u0440\u044b\u043d\u043a\u0435. \u0421\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0444\u0435\u0440\u043c\u0435\u0440\u044b \u0440\u044b\u043d\u043a\u0430 \u043e\u0432\u043e\u0449\u0435\u0439 \u0431\u0443\u0434\u0443\u0442 \u0441\u0442\u0430\u0440\u0430\u0442\u044c\u0441\u044f \u043f\u043e\u043a\u0440\u044b\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441 \u0438 \u043d\u0435 \u043f\u0440\u0435\u0434\u043b\u0430\u0433\u0430\u0442\u044c \u043d\u0435\u0432\u043e\u0441\u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u043f\u0440\u043e\u0434\u0443\u043a\u0446\u0438\u044e. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0435 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 \u0441\u043f\u0440\u043e\u0441\u0430 \u0438 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0422\u0430\u043a \u0444\u0435\u0440\u043c\u0435\u0440 \u0437\u0430\u0439\u0434\u044f \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0447\u0442\u043e \u0432 \u043f\u0440\u043e\u043b\u043e\u043c \u0433\u043e\u0434\u0443 \u0432 \u0435\u0433\u043e \u0440\u0430\u0439\u043e\u043d\u0435 \u043f\u043e\u043a\u0443\u043f\u0430\u0442\u0435\u043b\u0438 \u0445\u043e\u0442\u0435\u043b\u0438 \u043a\u0443\u043f\u0438\u0442\u044c 140 \u0442. \u044f\u0431\u043b\u043e\u043a \u0430 \u0441\u0434\u0435\u043b\u043e\u043a \u0441\u043e\u0432\u0435\u0440\u0448\u0435\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0430 100 \u0442., \u0444\u0435\u0440\u043c\u0435\u0440\u044b \u0436\u0435 \u0441\u043c\u043e\u0433\u043b\u0438 \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0441\u0442\u0438 \u0442\u043e\u043b\u044c\u043a\u043e 80 \u0442. \u0417\u043d\u0430\u0447\u0438\u0442\n** 5.  \u0422\u043e\u043b\u0447\u043e\u043a \u043a \u0440\u0430\u0437\u0432\u0438\u0442\u0438\u044e \u0444\u0435\u0440\u043c\u0435\u0440\u0441\u043a\u0438\u0445 \u0445\u043e\u0437\u044f\u0439\u0441\u0442\u0432 \u2014 **\n\u043e\u0434\u043d\u043e\u0439 \u0438\u0437 \u043f\u0440\u0438\u0447\u0438\u043d \u0441\u043b\u0430\u0431\u043e\u0433\u043e \u0440\u0430\u0437\u0432\u0438\u0442\u0438\u044f \u0444\u0435\u0440\u043c\u0435\u0440\u0441\u043a\u0438\u0445 \u0445\u043e\u0437\u044f\u0439\u0441\u0442\u0432 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0435\u0430\u043b\u044c\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044e \u0440\u044b\u043d\u043a\u0430 \u0440\u0430\u0441\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u0440\u043e\u0434\u0443\u043a\u0446\u0438\u0438 \u0432 \u0442\u043e\u043c \u0440\u0435\u0433\u0438\u043e\u043d\u0435 \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043f\u043b\u0430\u043d\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u043f\u043e\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0442\u0435\u043f\u043b\u0438\u0446\u044b. \u0411\u0438\u0437\u043d\u0435\u0441\u043c\u0435\u043d \u043f\u0440\u043e\u0441\u0442\u043e \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0437\u0430 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435\u043c \u0430\u043a\u0442\u0443\u0430\u043b\u044c\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u0438\u0442\u044c \u0444\u0438\u043d\u0430\u043d\u0441\u043e\u0432\u044b\u0439 \u0440\u0430\u0441\u0447\u0435\u0442 \u043e\u043a\u0443\u043f\u0430\u0435\u043c\u043e\u0441\u0442\u044c \u0437\u0430\u0442\u0440\u0430\u0442. \u0411\u0438\u0440\u0436\u0430 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043e\u0442\u0441\u043b\u0435\u0434\u0438\u0442\u044c \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0443 \u0446\u0435\u043d \u0438 \u043f\u043e\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u0443\u044e \u0441\u043f\u043e\u0441\u043e\u0431\u043d\u043e\u0441\u0442\u044c \u0440\u044b\u043d\u043a\u0430. \u041e\u043d\u0430 \u0432\u044b\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u044e\u0442 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 \u0446\u0435\u043d \u043f\u043e\u0434\u0434\u0430\u043d\u043d\u043e\u0439 \u043d\u0430 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e \u043f\u0440\u043e\u0434\u0443\u043a\u0446\u0438\u044e, \u0438 \u0434\u0430\u0435\u0442 \u0438\u0441\u0447\u0435\u0440\u043f\u044b\u0432\u0430\u044e\u0449\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043f\u043e \u0446\u0435\u043d\u0430\u043c \u0432 \u0440\u0435\u0433\u0438\u043e\u043d\u0435, \u0440\u0430\u0439\u043e\u043d\u0435 \u0438\u043b\u0438 \u0433\u043e\u0440\u043e\u0434\u0435. \u0424\u0435\u0440\u043c\u0435\u0440\u044b \u0436\u0435 \u043c\u043e\u0433\u0443\u0442 \u043f\u043e\u0434\u0431\u0438\u0440\u0430\u0442\u044c \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0446\u0435\u043d \u043a\u0430\u0440\u0442\u0443 \u0440\u0430\u0437\u0432\u0438\u0442\u0438\u044f \u0441\u0432\u043e\u0435\u0433\u043e \u0431\u0438\u0437\u043d\u0435\u0441\u0430 \u0442\u0430\u043a \u043a\u0430\u043a \u0431\u0443\u0434\u0443\u0442 \u0432\u0438\u0434\u0435\u0442\u044c \u0444\u0438\u043d\u0430\u043d\u0441\u043e\u0432\u044b\u0435 \u0432\u044b\u0433\u043e\u0434\u044b, \u0438\u043b\u0438 \u0443\u0431\u044b\u0442\u043a\u0438 \u043e\u0442 \u043f\u043b\u0430\u043d\u0438\u0440\u0443\u0435\u043c\u044b\u0445 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0439.\n\u0421\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 \u043f\u0440\u0435\u0437\u0438\u043d\u0442\u0430\u0446\u0438\u044e\n\u041f\u0420\u0415\u0417\u0415\u041d\u0422\u0410\u0426\u0418\u042f \u041f\u0420\u041e\u0415\u041a\u0422\u0410 \u0410\u0413\u0420\u041e\u0411\u0418\u0420\u0416\u0410\n",
        "hackathon_id": "hack4piter2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nmeteor.jsandroidhtml5xamarinmongodb\n",
        "hackathon_id": "hack4piter2015",
        "winner": false
    },
    {
        "description": "\n\u041c\u044b \u0445\u043e\u0442\u0438\u043c, \u0447\u0442\u043e\u0431\u044b \u0433\u043e\u0440\u043e\u0434\u0441\u043a\u0438\u0435 \u0434\u0432\u043e\u0440\u044b \u0431\u044b\u043b\u0438 \u0447\u0438\u0441\u0442\u044b\u043c\u0438, \u0430 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0442\u043e\u043c, \u043a\u0430\u043a \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0435 \u0438 \u0442\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u044e\u0449\u0438\u0435 \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0438 \u0434\u0435\u043b\u0430\u044e\u0442 \u0441\u0432\u043e\u044e \u0440\u0430\u0431\u043e\u0442\u0443, \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0435\u0435.  \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043c\u044b \u043f\u0440\u0435\u0434\u043b\u0430\u0433\u0430\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435, \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0449\u0435\u0435 \u043f\u0440\u043e\u0441\u0442\u043e\u043c\u0443 \u0436\u0438\u0442\u0435\u043b\u044e \u0433\u043e\u0440\u043e\u0434\u0430 \u0441\u0444\u043e\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u043d\u044b\u0439 \u0438\u043b\u0438 \u043e\u043f\u0443\u0441\u0442\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u043c\u0443\u0441\u043e\u0440\u043d\u044b\u0439 \u0431\u0430\u043a \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0444\u043e\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u044e \u0441 \u043f\u0440\u0438\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u043d\u043e\u0439 \u043a \u043d\u0435\u0439 \u0433\u0435\u043e\u043c\u0435\u0442\u043a\u043e\u0439. \u0412\u0441\u0435 \u0441\u043e\u0431\u0440\u0430\u043d\u043d\u044b\u0435 \u0444\u043e\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0438 \u0431\u0443\u0434\u0443\u0442 \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u044b \u043d\u0430 \u0441\u0430\u0439\u0442 \u0436\u0438\u043b\u0438\u0449\u043d\u043e-\u043a\u043e\u043c\u043c\u0443\u043d\u0430\u043b\u044c\u043d\u044b\u0445 \u0441\u043b\u0443\u0436\u0431 \u0433\u043e\u0440\u043e\u0434\u0430, \"\u0437\u0430\u043f\u043e\u043b\u043d\u044f\u044f\" \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u043a\u0430\u0440\u0442\u044b \u0421\u0430\u043d\u043a\u0442-\u041f\u0435\u0442\u0435\u0440\u0431\u0443\u0440\u0433\u0430 \u0438 \u0441\u0438\u0433\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u044f \u043c\u0443\u0441\u043e\u0440\u043d\u044b\u043c \u0442\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0449\u0438\u043a\u0430\u043c \u043e \u0442\u0435\u0445 \u0442\u043e\u0447\u043a\u0430\u0445, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u044b \u0432 \u0431\u043b\u0438\u0436\u0430\u0439\u0448\u0438\u0439 \u0440\u0430\u0431\u043e\u0447\u0438\u0439 \u043c\u0430\u0440\u0448\u0440\u0443\u0442. \u0422\u0430\u043a\u043e\u0439 \u043a\u0440\u0430\u0441\u043d\u043e-\u0437\u0435\u043b\u0435\u043d\u044b\u0439 \u0433\u043e\u0440\u043e\u0434 - \u044d\u0442\u043e \u043f\u0440\u044f\u043c\u0430\u044f \u0441\u0432\u044f\u0437\u044c \u043c\u0435\u0436\u0434\u0443 \u043c\u0435\u0441\u0442\u043d\u044b\u043c \u0436\u0438\u0442\u0435\u043b\u0435\u043c \u0438 \u0436\u0438\u043b\u0438\u0449\u043d\u043e-\u043a\u043e\u043c\u043c\u0443\u043d\u0430\u043b\u044c\u043d\u044b\u043c \u0445\u043e\u0437\u044f\u0439\u0441\u0442\u0432\u043e\u043c, \u0430 \u044d\u0442\u043e \u0437\u043d\u0430\u0447\u0438\u0442, \u0447\u0442\u043e \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043f\u043e\u0441\u0440\u0435\u0434\u043d\u0438\u043a\u0430 \u044d\u0442\u0438\u0445 \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u0439 - \u043a\u043e\u043c\u0438\u0442\u0435\u0442\u0430 \u043f\u043e \u0431\u043b\u0430\u0433\u043e\u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0443. \u0422\u0430\u043a\u043e\u0439 \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442 \u044d\u043a\u043e\u043d\u043e\u043c\u0438\u0442 \u043d\u0430\u043c \u0432\u0440\u0435\u043c\u044f, \u0430 \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u044f\u043c\u0438 - \u0440\u0435\u0441\u0443\u0440\u0441\u044b.\n\u041f\u0440\u043e\u0431\u043b\u0435\u043c\u043d\u044b\u043c \u043f\u0440\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u043e\u043a\u0430\u0437\u0430\u043b\u043e\u0441\u044c \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0442\u043e\u043c, \u0437\u0430 \u043a\u0430\u043a\u0438\u0435 \u0442\u0435\u0440\u0440\u0438\u0442\u043e\u0440\u0438\u0438 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u043c\u0443\u0441\u043e\u0440\u043e\u0442\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u044b\u0435 \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0438 \u0433\u043e\u0440\u043e\u0434\u0430. \u041f\u043e\u044d\u0442\u043e\u043c\u0443  \u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043e\u0442\u043a\u0440\u044b\u0442\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0441\u0444\u0435\u0440\u0435 \u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0441\u0442\u0438 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0445 \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0439 \u0421\u0430\u043d\u043a\u0442-\u041f\u0435\u0442\u0435\u0440\u0431\u0443\u0440\u0433\u0430 \u0441 \u0441\u0430\u0439\u0442\u0435 \u0440\u0435\u0444\u043e\u0440\u043c\u044b \u0416\u041a\u0425.\n\u041f\u043e \u043d\u0430\u0448\u0435\u043c\u0443 \u043c\u043d\u0435\u043d\u0438\u044e, \u043f\u0440\u043e\u0435\u043a\u0442 \"Clean Bin\" \u043c\u043e\u0436\u0435\u0442 \u0433\u043e\u0440\u0434\u0438\u0442\u044c\u0441\u044f \u0432 \u043f\u0435\u0440\u0432\u0443\u044e \u043e\u0447\u0435\u0440\u0435\u0434\u044c, \u0441\u043b\u043e\u0436\u0438\u0432\u0448\u0435\u0439\u0441\u044f \u0434\u043b\u044f \u0435\u0433\u043e \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u0435\u043d\u0438\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u043e\u0439 \u0438 \u043f\u043e\u0434\u0447\u0435\u0440\u043a\u043d\u0443\u0442\u043e\u0439 \u0441\u043e\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0439 \u0437\u043d\u0430\u0447\u0438\u043c\u043e\u0441\u0442\u044c\u044e \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043f\u0440\u043e\u0435\u043a\u0442 \u043f\u044b\u0442\u0430\u0435\u0442\u0441\u044f \u0440\u0430\u0437\u0440\u0435\u0448\u0438\u0442\u044c. \n\u0412 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u043c \u043c\u044b \u0445\u043e\u0442\u0435\u043b\u0438 \u0431\u044b \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043a\u043e\u043d\u0442\u0430\u043a\u0442\u044b \u0441 \u0441\u0430\u043c\u0438\u043c \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u043c\u0438 \u0438 \u043c\u0443\u0441\u043e\u0440\u043e\u0442\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u044e\u0449\u0438\u043c\u0438 \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u044f\u043c\u0438, \u0447\u0442\u043e\u0431\u044b \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0438\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u044b\u043c \u0438 \u0441 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 \u044d\u0442\u0438\u0445 \u0430\u0433\u0435\u043d\u0442\u043e\u0432, \u0441\u043e\u0431\u0440\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0442\u043e\u043c, \u0437\u0430 \u043a\u0430\u043a\u0438\u0435 \u0442\u0435\u0440\u0440\u0438\u0442\u043e\u0440\u0438\u0438 \u043e\u0442\u0432\u0435\u0447\u0430\u044e\u0442 \u0433\u043e\u0440\u043e\u0434\u0441\u043a\u0438\u0435 \u043c\u0443\u0441\u043e\u0440\u043d\u044b\u0435 \u0442\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0449\u0438\u043a\u0438, \u0438 \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0432 \u043f\u0440\u043e\u0435\u043a\u0442 \u0442\u0430\u043a\u0436\u0435 \u0442\u0435\u0440\u0440\u0438\u0442\u043e\u0442\u043e\u0440\u0438\u0438 \u0441 \u0441\u0438\u0441\u0442\u0435\u043c\u043e\u0439 \u0440\u0430\u0437\u0434\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u0441\u0431\u043e\u0440\u0430 \u043e\u0442\u0445\u043e\u0434\u043e\u0432. \n",
        "hackathon_id": "hack4piter2015",
        "winner": false
    },
    {
        "description": "\n\u041f\u0440\u043e\u0431\u043b\u0435\u043c\u0430\u0442\u0438\u043a\u0430\n\u0421\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0441\u0431\u043e\u0440\u0430 \u043e\u0431\u0449\u0435\u0433\u043e \u0441\u043e\u0431\u0440\u0430\u043d\u0438\u044f\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u043e\u0442\u0447\u0435\u0442\u0430 \u043e \u043f\u0440\u043e\u0434\u0435\u043b\u0430\u043d\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u0435\n\u041d\u0435\u0442 \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043e\u0431\u0441\u0443\u0436\u0434\u0435\u043d\u0438\u044f \u0432\u043e\u043f\u0440\u043e\u0441\u043e\u0432\n\u0427\u0442\u043e \u043c\u0435\u043d\u044f\u0435\u0442 \u0441\u0435\u0440\u0432\u0438\u0441\n\u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043e\u0431\u0441\u0443\u0436\u0434\u0435\u043d\u0438\u044f \u0438 \u0433\u043e\u043b\u043e\u0441\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u043e \u0432\u043e\u043f\u0440\u043e\u0441\u0430\u043c\n\u041e\u043f\u043e\u0432\u0435\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u043e\u0431\u0449\u0435\u043c \u0441\u043e\u0431\u0440\u0430\u043d\u0438\u0438 \u0437\u0430\u043d\u0438\u043c\u0430\u0435\u0442 5 \u043c\u0438\u043d\u0443\u0442, \u0432\u043c\u0435\u0441\u0442\u043e 2 \u043c\u0438\u043d * \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u043e\u0432\n\u0423\u043f\u0440\u043e\u0449\u0435\u043d\u0438\u0435 \u0446\u0435\u043b\u0435\u0432\u043e\u0433\u043e \u0441\u0431\u043e\u0440\u0430 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\nHow I built it\nChallenges I ran into\n\u0421\u043b\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0433\u043e \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430\nAccomplishments that I'm proud of\nWhat I learned\n\u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043d\u0435\u043a\u0432\u0430\u043b\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0439 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u0439 \u043f\u043e\u0434\u043f\u0438\u0441\u0438.\n\u0424\u0443\u043d\u043a\u0446\u0438\u0438 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u043b\u043e\u0436\u0430\u0442\u0441\u044f \u043d\u0430 \u0431\u043e\u043b\u0435\u0435 \u0448\u0438\u0440\u043e\u043a\u0438\u0439 \u043a\u0440\u0443\u0433 \u0437\u0430\u0434\u0430\u0447, \u043a\u043e\u043c\u043c\u0443\u043d\u0438\u043a\u0430\u0446\u0438\u044f \u0432\u043d\u0443\u0442\u0440\u0438 \u043d\u0435\u0431\u043e\u043b\u044c\u0448\u043e\u0433\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u0441\u0442\u0432\u0430\nWhat's next for Country house society\n\u041f\u043e\u0431\u0435\u0434\u0430 \u0432 \u0445\u0430\u043a\u0430\u0442\u043e\u043d\u0435 (\u0441\u043e\u0446 \u043f\u0440\u043e\u0435\u043a\u0442 \u0438 \u0441\u043e\u043b\u043e \u043f\u0440\u043e\u0435\u043a\u0442)\n\u041d\u0430\u0439\u0434\u0435\u043d\u044b \u0445\u043e\u0440\u043e\u0448\u0438\u0439 \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u044b\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0438 \u0434\u0438\u0437\u0430\u0439\u043d\u0435\u0440\n",
        "hackathon_id": "hack4piter2015",
        "winner": false
    },
    {
        "description": "\nInspiration\n\u0416\u0435\u043b\u0430\u043d\u0438\u0435 \u043f\u043e\u043c\u043e\u0447\u044c \u043b\u044e\u0434\u044f\u043c \u0436\u0438\u0442\u044c \u043e\u0431\u044b\u0447\u043d\u043e\u0439 \u0436\u0438\u0437\u043d\u044c\u044e.\nWhat it does\n\u041d\u0430\u0448\u0430 \u0446\u0435\u043b\u044c - \u043f\u043e\u0434\u0430\u0440\u0438\u0442\u044c \u043b\u044e\u0434\u044f\u043c \u0441\u0442\u0440\u0430\u0434\u0430\u044e\u0449\u0438\u043c \u044d\u043f\u0438\u043b\u0435\u043f\u0441\u0438\u0435\u0439 \u0438 \u0438\u0445 \u0440\u043e\u0434\u043d\u044b\u043c, \u0441\u043f\u043e\u043a\u043e\u0439\u0441\u0442\u0432\u0438\u0435 \u0437\u0430 \u0436\u0438\u0437\u043d\u044c \u0438 \u0443\u0432\u0435\u0440\u0435\u043d\u043d\u043e\u0441\u0442\u044c \u0432 \u0442\u043e\u043c, \u0447\u0442\u043e \u043e\u043d\u0438 \u043d\u0435 \u043e\u043a\u0430\u0436\u0443\u0442\u0441\u044f \u043e\u0434\u043d\u0438 \u0432 \u0442\u043e \u0432\u0440\u0435\u043c\u044f \u043a\u043e\u0433\u0434\u0430 \u0438\u043c \u043d\u0443\u0436\u043d\u0430 \u0431\u0443\u0434\u0435\u0442 \u043f\u043e\u043c\u043e\u0449\u044c.\nHow I built it\n\u041f\u0430\u0446\u0438\u0435\u043d\u0442 \u043e\u0434\u0435\u0432\u0430\u0435\u0442 \u0431\u0440\u0430\u0441\u043b\u0435\u0442 \u043d\u0430 \u0440\u0443\u043a\u0443 \u0438 \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u043f\u0440\u0438\u0441\u0442\u0443\u043f\u043e\u0432, \u0434\u0430\u0442\u0447\u0438\u043a  \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0432 \u0431\u0440\u0430\u0441\u043b\u0435\u0442\u0435 \u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442 \u0441\u0438\u0433\u043d\u0430\u043b \u043d\u0430 \u0435\u0433\u043e \u0441\u043c\u0430\u0440\u0442\u0444\u043e\u043d, \u0430 \u0442\u043e\u0442 \u0432 \u0441\u0432\u043e\u044e \u043e\u0447\u0435\u0440\u0435\u0434\u044c \u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442 \u0441\u0438\u0433\u043d\u0430\u043b \u0432 \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u043d\u0443\u044e \u0440\u044f\u0434\u043e\u043c \u0431\u043e\u043b\u044c\u043d\u0438\u0446\u0443 \u0438 \u0440\u043e\u0434\u043d\u044b\u043c \u0441 \u0435\u0433\u043e \u0433\u0435\u043e-\u0434\u0430\u043d\u043d\u044b\u043c\u0438.\nChallenges I ran into\n\u041f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u0441 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0441\u0442\u043e\u043b\u043a\u043d\u0443\u043b\u0430\u0441\u044c \u043d\u0430\u0448\u0430 \u043a\u043e\u043c\u0430\u043d\u0434\u0430 \u0435\u0449\u0435 \u043d\u0430 \u0441\u0442\u0430\u0434\u0438\u0438 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 - \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430 \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0435\u043d\u0438\u0435 \u043b\u043e\u0436\u043d\u043e\u0433\u043e \u0441\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u043d\u0438\u044f \u0432 \u043f\u043e\u0432\u0441\u0435\u0434\u043d\u0435\u0432\u043d\u043e\u0439 \u0436\u0438\u0437\u043d\u0438 \u043d\u0435 \u043d\u0430\u0440\u0443\u0448\u0430\u044f \u0435\u0433\u043e \u043f\u0440\u0438\u0432\u044b\u0447\u043d\u043e\u0433\u043e \u043e\u0431\u0440\u0430\u0437\u0430 \u0436\u0438\u0437\u043d\u0438.\nAccomplishments that I'm proud of\n\u041f\u0440\u043e\u0434\u043b\u0435\u043d\u0438\u0435 \u0436\u0438\u0437\u043d\u0438.\nWhat I learned\n\u041d\u0430\u0448\u0430 \u043a\u043e\u043c\u0430\u043d\u0434\u0430 \u043d\u0430\u0443\u0447\u0438\u043b\u0430\u0441\u044c \u0433\u0440\u0430\u043c\u043e\u0442\u043d\u043e \u0441\u043e\u043f\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0442\u044c \u0441\u0432\u043e\u0438 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438 \u0441\u043e \u0441\u0432\u043e\u0438\u043c\u0438 \u0430\u043c\u0431\u0438\u0446\u0438\u044f\u043c\u0438.\nWhat's next for Epihelp\n\u0414\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u0435 \u0440\u0430\u0437\u0432\u0438\u0442\u0438\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u0444\u043e\u043d\u0434\u0443 \"\u041e\u0442\u043a\u0440\u044b\u0442\u044b\u0439 \u0413\u043e\u0440\u043e\u0434\" \u0438 \u0435\u0433\u043e \u0433\u0440\u0430\u043d\u0442\u0443.\n\u041d\u0430\u0448\u0430 \u0426\u0435\u043b\u044c - \u0432\u0434\u043e\u0445\u043d\u0443\u0442\u044c \u0436\u0438\u0437\u043d\u044c \u0432 EpiHelp.\n",
        "hackathon_id": "hack4piter2015",
        "winner": false
    },
    {
        "description": "\n\u041f\u043e\u0445\u043e\u0436\u0438\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u044b \u0435\u0441\u0442\u044c \u0432 \u041d\u044c\u044e-\u0419\u043e\u0440\u043a\u0435, \u0410\u043c\u0441\u0442\u0435\u0440\u0434\u0430\u043c\u0435, \u041c\u043e\u0441\u043a\u0432\u0435\n\u0412\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0434\u043e\u043c\u043e\u0432 \u043f\u043e \u0434\u0430\u0442\u0435 \u043f\u043e\u0441\u0442\u0440\u043e\u0439\u043a\u0438, \u0438\u0441\u0442\u043e\u0440\u0438\u0447\u0435\u0441\u043a\u043e\u043c\u0443 \u043f\u0435\u0440\u0438\u043e\u0434\u0443, \u0438 \u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u043d\u043e\u043c\u0443 \u0441\u0442\u0438\u043b\u044e.\n\u0422\u0430\u043a\u0436\u0435 \u0435\u0441\u0442\u044c \u0434\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0432\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u041f\u0435\u0442\u0440\u043e\u0433\u0440\u0430\u0434\u0441\u043a\u043e\u0439 \u0441\u0442\u043e\u0440\u043e\u043d\u044b.\n",
        "hackathon_id": "hack4piter2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nI missed the rare aurora borealis over St. Petersburg the last time. Turns out, there is an accurate real-time aurora forecast model run by NOAA, with data access API. Some people took advantage of this, and built subscription-based SMS alerting services, charging a monthly fee. It's time we build an open-source solution!\nWhat it does\nIt is a Telegram (and WhatsApp, etc.) bot accepting user requests for aurora alerts at specified locations. It scans the NOAA data at regular intervals, the 3-day, 4-hour and immediate aurora location forecasts, and posts messages to subscribers.\nHow I built it\nThis is a weekend hackaton project, built with Python, Telegram API and RabbitMQ.\n",
        "hackathon_id": "hack4piter2015",
        "winner": false
    },
    {
        "description": "\n\u041f\u0440\u043e\u0431\u043b\u0435\u043c\u0430: \u043f\u043b\u043e\u0445\u0430\u044f \u043e\u0441\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u043d\u043e\u0441\u0442\u044c \u0433\u043e\u0440\u043e\u0436\u0430\u043d \u043e \u0440\u0430\u0431\u043e\u0442\u0435 \u0443\u0447\u0430\u0441\u0442\u043a\u043e\u0432\u044b\u0445\n\u0420\u0435\u0448\u0435\u043d\u0438\u0435: \u043f\u043e\u0434\u0430\u0447\u0430 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u0432 \u0443\u0434\u043e\u0431\u043d\u043e\u043c \u0444\u043e\u0440\u043c\u0430\u0442\u0435 (\u0438\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u0430\u044f \u043a\u0430\u0440\u0442\u0430, \u0438\u043d\u0444\u043e\u0433\u0440\u0430\u0444\u0438\u043a\u0430, \u0440\u0430\u0441\u0441\u043a\u0430\u0437 \u043e \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u0445 \u0441 \u043f\u0440\u0438\u043c\u0435\u0440\u0430\u043c\u0438)\n",
        "hackathon_id": "hack4piter2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njdk-1.7apache-tomcat-7.xapache-maven-3.xmongodb\n",
        "hackathon_id": "hack4piter2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWhen ever girls go to a shopping mall, they always end up in the make up section.  Sephora, MAC, or even the make up section of Walgreens.  The problem is that, most of the time, they don't remember all this complex makeup brands, names, numbers and others.\nWhat it does\nYou take a picture, and you will receive a list of all the make up that match your skin tone.\nHow I built it\nWe hacked into Sephora's Web Site to look a way to obtain the web service they use to obtain their products.  Created libraries in php to be a middle man to communicate with the application and the sephora web service.\nChallenges I ran into\nWeb Service Not Responding, obtain the color of a specific pixel.\nAccomplishments that I'm proud of\nObtain the data, working as a team, and be able to complete the app.\nWhat I learned\nHow to obtain the data,\nWhat's next for Pic My Tone\nImproving the speed, obtain more api's to use other makeup stores like MAC.\n",
        "hackathon_id": "include-a-thon",
        "winner": true
    },
    {
        "description": "\nInspiration\nInspirada en el desarrollo pre-escolar y ni\u00f1os con necesidades especiales de aprendizaje (como el autismo).\nWhat it does\nPermite al ni\u00f1o aprender los colores b\u00e1sicos, figuras, n\u00fameros, vocales y otros objetos a trav\u00e9s de la interacci\u00f3n entre \"software\", \"hardware\" y juego (gamefication).\nHow I built it\nSoftware: Aplicaci\u00f3n M\u00f3vil y Aplicaci\u00f3n Web utilizando tecnolog\u00edas HTML, CSS, Javascript, JQuery, PHP, MySQL, Apache, PhoneGap.\nHardware:  Near Field Communication or RFID en aparatos m\u00f3viles.\nOtros Programas: Audacity, Adobe Photoshop, Text To Speech (TTS)\nRaw Material: Foam y otros materiales (figuras, colores, n\u00fameros, otros).\nChallenges I ran into\nInteracci\u00f3n entre aplicaciones remotas y \"hardware\".\nAccomplishments that I'm proud of\nDesarrollo de un modelo o prototipo de bajo costo para el desarrollo educativo de ni\u00f1os pre-escolares y para ayuda terapeutica a ni\u00f1os con limitaciones en su desarrollo (autismo y otros problemas de aprendizaje).\nWhat I learned\nInteracci\u00f3n entre distintos ambientes y recursos tecnol\u00f3gicos.\nWhat's next for Little Wizard\nBusqueda de inversionistas o auspiciadores para el desarrollo de un protot\u00edpo con todas las alternativas propuestas e incluir la opci\u00f3n para ense\u00f1ar a contar.\n",
        "hackathon_id": "include-a-thon",
        "winner": true
    },
    {
        "description": "\nBuilt With\nunityc#leap-motionamazon-web-servicesnode.jsghost-bloghtmlcssjavascript\n",
        "hackathon_id": "include-a-thon",
        "winner": true
    },
    {
        "description": "\nBuilt With\nparseionicangular.js\n",
        "hackathon_id": "include-a-thon",
        "winner": true
    },
    {
        "description": "\nWhat is this witchcraft?\nIt's a flood monitoring and early-warning network based on data from wifi-enabled sensors.\nWhy?\nFloods happen and people lose property to them.  In some cases, it's possible to forecast their happening.  That's our purpose here.\nHow?\nWe made two kinds of sensors (a flow sensor and a pressure sensor), a server to gather their data and push it into a nice front end & tweet warnings.\nSensors\nBoth sensors (for this hackathon) are built on ESP8266 chips (\u00b5Controller + WiFi) and out of \"garbage\" we had lying around.\nThe flow sensor is a rotary encoder that counts each turn and sends this count out to the server every minute (effectively an RPM value).  This is what would be used for the early warnings; a large enough amount of rain - dependent on time and intensity - means the amount of water flowing down to the area of interest.\nThe turbine that drives the rotary encoder is a cut medicine cup mounted on a broken marker and a nail.  This marker has a slot cut in it, which allows IR light to pass through to an IR photodiode hanging inside it and give the \u00b5cu a value each time the slot passes the IR LED on the outside.  What holds everything together is a broken pair of sunglasses and the top half of a water bottle (of course, this is all for demo purposes, as the turbine would need to be in a drain pipe and made waterproof).\nThe depth sensor is simply a pressure sensor that would be mounted between a buoy and a clamp to the ground at the lowest point of the flood area (also needs to be made waterproof).\nBack end\nSensors send data to a nodejs + postgresql server running on Red Hat's Openshift service.  The database stores historical data to later be used for learning and better predictions.\nFront end\nAlarms are sent out via twitter ( https://twitter.com/ABFloodNet ) and data is presented in a jQuery interface with current water level on a Google map.\nTL;DR\nThe main student parking lot in UPRM (University of Puerto Rico at Mayag\u00fcez) floods with little warning when enough rain starts pouring over campus. We're working on a monitoring and early warning system to help students not lose belongings or have their cars damaged.  Also, the system is designed to be scalable and easily portable to any location where floods are the norm.\n",
        "hackathon_id": "include-a-thon",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe as students, want to help other students by making an app to organize their study sessions. \nWhat it does\nIt helps you divide your study time into time sessions. \nHow we built it\nWe incorporated a web app with the pebble smart watch. We used Meteor.js, MongoDB and Pebble.js. \nChallenges we ran into\nFirst, we started building the pebble app in C language, but we encountered a lot of problems importing the data that the pebble received from the web app. Due to this, we decided to use Pebble.js. \nAccomplishments that we're proud of\nBeing able to merge our web app idea with the pebble watch. \nWhat we learned\nWe learned more about JavaScript, how to make apps for the pebble and add new functionalities using Meteor.js. \n",
        "hackathon_id": "include-a-thon",
        "winner": true
    },
    {
        "description": "\nInspiration\nSince computer science is an area that people are not familiarize with, we decide to encourage our society by creating a platform. \nWhat it does\nIs a drag and drop website that will teach the user to learn the basic and general idea of a high level pseudo code. \nHow I built it\nWe used a combination of HTML+JavaScript.\nChallenges I ran into\nThe complexity to verify the program.\nAccomplishments that I'm proud of\nCreate something functional.\nWhat I learned\nYesenia- Learn how to write a pseudo code.\nGenesis- Learn how to program in HTML\nVictor- Make the work WORKS! \nWhat's next for pSeudoLearn\nTake the project to a whole new level. \nOur HomePage - Free Domain! Domain.com MLH\nhttp://unknownsource.org\n",
        "hackathon_id": "include-a-thon",
        "winner": true
    },
    {
        "description": "\nBuilt With\nhtmljavascriptcss\n",
        "hackathon_id": "include-a-thon",
        "winner": false
    },
    {
        "description": "\nInspiration\nI wanted to make something with a technology that I don't usually use.\nWhat it does\nThe webpage detects your hand and their motion through the Leap Motion Sensor, displays them on your screen, and gives you points if you pinch your hands.\nHow I built it\nI built it with Javascript and getting ideas from the Leapjs examples github\nChallenges I ran into\nTime, Javascript.\nAccomplishments that I'm proud of\nI made a functional app for the Leap Motion in just a day!\nWhat I learned\nJavascript sucks, and I probably won't be using it again for a while.\nWhat's next for Viva la Trump!\nMaking interface prettier, adding some more features, and general cleaning of the code.\n",
        "hackathon_id": "include-a-thon",
        "winner": false
    },
    {
        "description": "\nBuilt With\nswiftnode.jsflorabluetoothblec\n",
        "hackathon_id": "include-a-thon",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe inspiration behind MapYourFashion was to create an interactive way to know which brands of fashion are popular on distinct geographical places around the world. \nWhat it does\nIt takes social data from twitter and creates an interactive map in which it plots where people have tweeted about famous fashion brands.\nHow I built it\nIt was built using the Twitter API, the Twython python package and python. Also, the statistic software package R and shiny.\nChallenges I ran into\nI would say that the most challenging thing we ran to was the data mining process. \nAccomplishments that I'm proud of\nThis is my first time using an API  of any kind so I'm really proud of that. Also, I've used shiny before but not anything like what was accomplished with MapYourFashion.\nWhat I learned\nI further my knowledge in python and R. Also, I learned how to use the Twitter API.\nWhat's next for MapYourFashion\nWe want to create a full fed web application that uses live social data to create an interactive map that plots hot fashion brands all around the world in order to know what to wear and where to where it. We think that the application has a lot of potential in the marketing field, specially for this big fashion brand companies. \n",
        "hackathon_id": "include-a-thon",
        "winner": false
    },
    {
        "description": "\nInspiration\ni wanted to make an watch app that not only would activate the normal ring mode of and android phone but also would enable it to broadcast a sound that would help the user be able to find it if the case is that has been lost in vibrate mode or don't remember where it was placed the last time\nWhat does it do\nRight now it just shows the interface between the android phone and the pebble where it tells the user when the pebble phone locator is offline or when tit is online and on the pebble watch we created a pebble app to try to enable the phone from vibrate mode to normal ringing mode\nHow I built it\nMe and my teammates built the app on Java for the android to do the interface between the android and the pebble watch  and JavaScript to build the watch app \nChallenges I ran into\nWe really didn't have any knowledge of programming in java or JavaScript either so we had a a pretty tough time\nAccomplishments that I'm proud of\nwe were at least able to create the interface between the pebble watch and android phone with out any knowledge of any on the languages\nWhat I learned\nWe learned that teamwork is a great help in these hack-a-thons and we learned a lot in a few hours and we are very grateful\nWhat's next for Pebble Phone Locator\nwe would like to be able to make our project do what we really wanted from the beginning  and continue improving it with different features\n",
        "hackathon_id": "include-a-thon",
        "winner": false
    },
    {
        "description": "\nBuilt With\nember.jsruby-on-railsjavascriptgemnpmember-cligoogle-web-speech-api\n",
        "hackathon_id": "include-a-thon",
        "winner": false
    },
    {
        "description": "\nInspiration\nEstefani is a fashion geek, which follows a lot of fashion designers, but she had a problem... None of those designers were from Puerto Rico, so she didnt have a way to acquire their designs and that made her very sad. But then it hit her FashionSpot.\nWhat it does\nMobile app that lets designers from all over the world showcase their work through this platform, and encourage the community to apreciate and make it easy obtain their fashion.\nHow we built it\nWe used android studio as our IDE of choice to work on the mobile app and we managed all of our users within Parse (PaaS) and surprisigly our iconography was built with power point, which is not common at all (nailed It :p).\nChallenges we ran into\nGetting all of it to work toghether as smoothly as possible\nAccomplishments that we are proud of\nWe managed to finish most of the features which are the ability to follow designers buy their designs and create a simple and beautiful UI that everybody loved.\nWhat we learned\nWe learned how fast we can build a functional mobile application using a platform as a service and how it makes it easier for the team to help with the free tasks\nWhat's next for FashionSpot\nWe hope to upload it to the Google Play Store and let designers from all over the world make their fashion global.\n",
        "hackathon_id": "include-a-thon",
        "winner": false
    },
    {
        "description": "\nBuilt With\nreactjsbootstrapnode.jshtmlcss\n",
        "hackathon_id": "include-a-thon",
        "winner": false
    },
    {
        "description": "\nA hack to help people become more aware of what's up!\nWe want to take full advantage of the many features the pebble provides and in the process bring a lot of useful information to the many stargazers among us.   \nFrom tanking advantage of the GPS capabilities the pebble inherits from the phone to display local weather information, to displaying the current position of the International Space Station.\n",
        "hackathon_id": "include-a-thon",
        "winner": false
    },
    {
        "description": "\nDo you need to think what to wear to university or to work?  Or did you just spent your whole paycheck upgrading your regular clothes to designer clothes?  Don't worry anymore, Dress Me will match your wardrobe according to the last trend or your preferred personal brand to produce the best outfit for an evening at the city or an outfit to go for a road-trip.  \nThe goal of Dress me is to implement sorting algorithms that will take into account the skin tone of the person, the contrast of the clothes according the wanted type of outfit, the dominant color in the clothes that the person wants or a no-restrictions clothing match of your available clothes.\nOur biggest challenge was to integrate complex and cutting-edge technologies of Amazon Web Services, Node.js, and MongoDB.   \nWhat's next for Dress me? \nWe scheduled Social API's incorporation so you can start bragging about your awesome clothes combinations. \nWhat we are prod of?\nWe are proud to have paired the best full-stack developers, with ninjas back-end and front-end developers for this hacking event..  \nWhat problem we overcame?\nWe had to learn Amazon Web Services and image processing in Java in less than 24 hours in order to complete our hack.  \nWhat's next for Dress Me?\nWhat is next for Dress Me is the social integration of major social networks focused on photography as:  Instagram,P interest, Tumbler, and Facebook.\n",
        "hackathon_id": "include-a-thon",
        "winner": false
    },
    {
        "description": "\nInspiration\nRepeating clothes to often because forgetting when was the last time I use it. \nWhat it does\nAllow you to add items to your closet and scan your current outfit to see when was the last time that you use it.\nHow I built it\nAndroid App. \nChallenges I ran into\nConnecting our image recognition API to uploads new images. \nAccomplishments that I'm proud of\nWe hack our way to present this. \nWhat I learned\nPerseverance\nWhat's next for DalePercha\nLet's see. \n",
        "hackathon_id": "include-a-thon",
        "winner": false
    },
    {
        "description": "\nInspiration\nOnBoardMe was founded as a result of the team experience in several pain points whilst booking group travel with friends. \nWhat it does\nOnBoardMe offers a simple way for groups of friends to organize and pay for travel. OnBoardMe aggregates data from all major travel websites (in flight, accommodation, and events categories) into one platform and allows users to create holiday boards, share them with friends, discuss and vote on ideas, and split the booking costs.\nOnBoardMe is an app that offers a simple way to bring friends together to create, share and pay for group travel (events/flights/accommodation). \nHow we built it\nThe prototype was built using Azure interactive prototyping and the journey was published using Invision design. We built the background using Node.js and SQL (via sequelize) to store our data as our data was very relational (board is related to users and events, etc). The front-end was done using JS and jQuery, as well as HTML5 and CSS. \nChallenges we ran into\nWe wanted this hackathon to be an amazing learning experience as well as a chance to build something useful. Thus, we decided not to use a service to build our backend but built it from scratch ourselves. We had to deal with some async problems like requests not finishing on time/properly/in order. We also had to think about how to use cookies and create persistent sessions so users are not logged out. This was our first time using Sequelize so it took a while for us to figure the logistics out. \nAccomplishments that we're proud of\nDespite trying out new languages and building the application from scratch, we believe that we were able to create a well-made prototype that followed our envision for this travel app. We also think that despite never having met each other before this Hackathon, our team came together very well, as each of us had a defining role that was essential to the completion of our application prototype.\nWhat we learned\nWe learned a variety of different things from many sides of this project. From the business side, we learned the importance of customer validation for a new product. From the development side,  we learned that we should work in short iteration cycles and not focus too much on the initial design; at the end of the day, we need to produce a working software (especially for these types of events where time is limited).\nWhat's next for OnBoardMe\nWe hope to continue working on this to add the rest of the features that we had designed for, such as the payment feature using Stripe, a chat/forum feature, pulling data from third party APIs, get an initial customer basis and validate our type of customers, create the product that the customers want, and take over the travel market.\n",
        "hackathon_id": "hackgeny-london",
        "winner": false
    },
    {
        "description": "\nBuilt With\napi's\n",
        "hackathon_id": "hackgeny-london",
        "winner": false
    },
    {
        "description": "\nBuilt With\nphplaravel\n",
        "hackathon_id": "hackgeny-london",
        "winner": false
    },
    {
        "description": "\nInspiration\n3d printing is taking the world by storm! There are hundreds of companies, 3d printers are getting cheaper (Peachy printer is ~100$), but it is still cumbersome to make 3d models.\nWhat it does\nTake in a video of a scene and make 3d models of the objects in that scene.\nHow I built it\nI built it by using ffmeg to segment a video into images,  structure from motion and patched based multiview stero to do the scene reconstruction, and unsupervised machine learning to do object parsing.\nChallenges I ran into\nGetting a large system across multiple pieces of software to work. \nAccomplishments that I'm proud of\nThe end to end system works reasonable well! I was able to get something awesome in 36 hours.\nWhat I learned\nI learned a lot about computer vision, data processing, and video formats. \nWhat's next for 3d Object Parsing\nGet it faster and easier to use. Get more accurate results.\n",
        "hackathon_id": "hackgeny-london",
        "winner": false
    },
    {
        "description": "\nBuilt With\nnode.jsmongodbfirebase\n",
        "hackathon_id": "hackgeny-london",
        "winner": false
    },
    {
        "description": "\nA long time ago, there was a Polar Bear. The glacier was melting away. He heard that Penguins had a spaceship. so he decided to march to the South Pole to find the Penguins.\n",
        "hackathon_id": "hackcmu",
        "winner": true
    },
    {
        "description": "\nInspiration\nI saw an article about a Japanese man going around the whole Japan to spell out his girlfriend's name for a marriage proposal, and I was curious if I can use Google Maps to make a route that resembles and alphabet.\nWhat it does\nThe user gets a 3-letter word, and the site will lead to the Google Map website that displays the route that is a shape of the word.\nHow I built it\nWe had 3 functions, vertical, horizontal, and diagonal, and we made a function for each letter in how to create such a letter using the longitude and attitude of the Google Maps position\nChallenges I ran into\nDisplaying the letter and choosing a right position to successfully spell out the name were the hardest tasks. First, \nAccomplishments that I'm proud of\nFinishing the project on time.\nWhat I learned\nI learned many new programming languages and skills, from Flask to HTML, and since it was our first hackathon project, we were happy about the fact that we were able to finish a big project like this.\nWhat's next for Trace\nTrace still needs a lot of improvement. First, the limitation of 3 letters is the biggest challenge, and the accurate shape of the letter using the route can be a very interesting problem.\n",
        "hackathon_id": "hackcmu",
        "winner": true
    },
    {
        "description": "\nInspiration\nDigital assistants like Siri and Cortana have trouble recognizing proper nouns and programmers have to spend hours hard coding in the phonetics for names that cannot be predicted algorithmically.\nWhat it does\nOur app is a social game in which one person tries to construct a sentence to make the other user laugh. In addition to being an entertaining and addicting game, it contributes to the advancement of voice recognition technology by collecting and associating text and speech clips of hard-to-predict proper nouns.\nHow we built it\nWe used PostgreSQL for the database, Python, Flask-ReSTful, ORM, and Microsoft Azure for the backend and Android and iOS Swift apps for the frontend.\nChallenges we ran into\nThe iOS app had difficulty connecting to the API we made, especially since the Android and iOS audio formats were incompatible. We started later than we had anticipated because we struggled to come up with a game that would make people want to speak proper nouns into their phones.\nAccomplishments that we're proud of\nOur backend functions and database calls are all usable! We have a fully functional Android app and mostly functioning iOS app despite early struggles.\nWhat we learned\nWe learned about 5 different ways to play an audio file in an iOS app and how to divide and conquer effectively.\nWhat's next for LaughOutLoud\nWe scale up our apps and sell the data to bigger companies.\n",
        "hackathon_id": "hackcmu",
        "winner": true
    },
    {
        "description": "\nBuilt With\nebaypythondjangobootstrap\n",
        "hackathon_id": "hackcmu",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe wanted a way to store chess games instantly from the analog world into the digital one. It has some real use for chess players everywhere.\nWhat it does\nGiven an image of a chess board, it detects the positions of all the pieces, and outputs the board in FEN notation, which can be imported into any chess viewer for analysis.\nHow it was built\nThis was developed using Java and OpenCV. OpenCV was used extensively for the image matching to determine which images correspond to which images.\nWhat's next for chess\nThe next step would be to make it a mobile app so that a user can simply snap a picture on their phone and get the output instantly, rather than having to get the picture onto their computer somehow. The piece recognition could also be improved.\n",
        "hackathon_id": "hackcmu",
        "winner": true
    },
    {
        "description": "\nWhat it does:\nSimple Security utilizes a phone's camera to take pictures of any intruders. By tracking the changes in picture frames, the app will take snapshots of the current scene. The app will then immediately begin to upload the files to a web server, to make sure that the data is not lost in case the phone is stolen or destroyed.\n\nWhat we learned:\nProjects work best when people specialize in different areas.\n\nWhat is next for Simple Security:\nWe hope to add image compression features in order to save data when uploading pictures.\nWe also hope to bring this technology to developing countries to utilize, especially when the cost of security cameras is so high.\n\n",
        "hackathon_id": "hackcmu",
        "winner": true
    },
    {
        "description": "\nBuilt With\nandroidpythonphpmysqlhtmlcssjavascript\n",
        "hackathon_id": "hackcmu",
        "winner": true
    },
    {
        "description": "\nBuilt With\npythonnode.jskinect\n",
        "hackathon_id": "hackcmu",
        "winner": true
    },
    {
        "description": "\nBuilt With\nandroid-studioaudio-capture\n",
        "hackathon_id": "hackcmu",
        "winner": true
    },
    {
        "description": "\nBuilt With\nruby-on-railspythonmicrosoft-project-oxfordherokubroadcastifypydubazureubuntujson\n",
        "hackathon_id": "hackcmu",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascripthtmlcssshell\n",
        "hackathon_id": "hackcmu",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonjscriptflaskhtml5javascript\n",
        "hackathon_id": "hackcmu",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonflaskhtml5css3javascript\n",
        "hackathon_id": "hackcmu",
        "winner": false
    },
    {
        "description": "\nBuilt With\nios\n",
        "hackathon_id": "hackcmu",
        "winner": false
    },
    {
        "description": "\nInspiration\nCarrying a box for an elderly lady as she was crossing the street, we realized that if she had had a way of getting in touch with people around her willing to help, she would not have had to rely on chance.\nWhat it does\nIt is an app that allows users to submit tasks that they need help with. The users then get help from other users who are in the area and received a notification. It promotes micro-volunteering and random acts of kindness.\nHow I built it\nWe started with a back end server hosted through Microsoft Azure, and we interfaced with it through android studio, where we did most of our main development in Java. \nChallenges I ran into\n\nSetting up the server\nFiguring out how to interface with the server through the back end\ncreating a clean and friendly UI/UX\n\nAccomplishments that I'm proud of\n-Setting up a useful and versatile server in Azure.\n-Successfully interfacing with XML to setup layouts in the app\nWhat I learned\n-How to properly use a back end mobile service, such as Azure.\n-How to manipulate layouts and UI in XML and Java\nWhat's next for HelpPls\n-Integrating a map and location service for people to more easily find people around them\n-breaking down users by skills\n-Widening into the campus community\n",
        "hackathon_id": "hackcmu",
        "winner": false
    },
    {
        "description": "\nBuilt With\ncsshtmljavascriptpythonspotifygoodreads\n",
        "hackathon_id": "hackcmu",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroidandroid-studiojavaxmlgoogle-playjsongoogle-nearby-apiscandit-productgithubgit\n",
        "hackathon_id": "hackcmu",
        "winner": false
    },
    {
        "description": "\nWhat is Virtual Refrigerator?\nVirtual Refrigerator is a web app made in Unity allowing you to keep a real time account of what food you have in your refrigerator at any time, and what recipes you can make based on the foods you chose to use. Virtual Refrigerator can also be used to find what foods need to be bought so you may make new recipes!  \nWhat makes Virtual Fridge special?\nVirtual Fridge solves two major problems:\n1) Right now, it is impossible to be sure of what is in your refrigerator without going to it and looking inside, even then not always being absolutely sure of all the contents.\n2) Not always knowing what kind of food you can make based on the items you have available.\nHow does this work?\nFirst our team made a web application in Unity that consisted of a 3D fridge whose 3D food contents could be programmatically changed, a menu screen that allowed the display of recipes through web scraping, and a counter on which the food was made. Combining javascript, html, and css, our team created a website that sent data to this web application.\n\nBuilt With:\nunity c# javascript html5 json jquery\n",
        "hackathon_id": "hackcmu",
        "winner": false
    },
    {
        "description": "\nBuilt With\njava\n",
        "hackathon_id": "hackcmu",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtmlcssshelljadenode.jsexpress.jsbootstrap\n",
        "hackathon_id": "hackcmu",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaswiftpython\n",
        "hackathon_id": "hackcmu",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonopencvwx\n",
        "hackathon_id": "hackcmu",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe inspiration of this project is our love for music. First, Apoorva heard the song, \"Simarik\" and fell in love with it (it's pretty catchy, you know). Then, Shantanu, Nikhil and Nancy joined in. Eventually, all the people in our housing block got hooked to that song. We wanted a way of enjoying it together across our laptops simultaneously. And hence, we came to HackCMU and built this!\nWhat it does\nSurroundify gives you an opportunity to convert your boring dorm room into a party without much effort! It gives you a platform to synchronize an MP3 file across your friends' computers and play it on all of their machines to create a surround-sound effect!\nHow we built it\nWe used Tornado, which is a Python WebSockets framework, to create a protocol which synchronizes audio across multiple machines. We also integrated Python with the VLC command line to be able to play songs and ensure that they are in sync across multiple machines. All our front-end used HTML5, CSS3, and Bootstrap. We wrote our own algorithm to synchronize the audio file across all machines by sending a \"play\" command using the VLC command line. In addition, we did a sinusoidal manipulation on the network latency to improve the quality of sync.\nChallenges we ran into\nIt took us a lot of effort and whiteboarding to flush out the algorithm that would ensure that the audio is in sync. In addition, we ran into a multitude of bugs with WebSockets while implementing it. \nAccomplishments that we're proud of\nWe're really proud that we could make a tool that would sync songs with very little lag. We knew it was a hard problem to solve when we took up this idea, but we're proud that we went through with it and made a cool project in the end.\nWhat we learned\nThe first few hours of our project involved a lot of research into network latency which gave us a feel of what we had got ourselves into. It was undoubtedly a great learning experience for all of us. In addition, we also gained experience working with front end development in HTML5 and formatting with CSS. \nWhat's next for Surroundify\nWe'd like to achieve continual interaction across different listeners to improve the reachability and the quality of user experience for our users, and allow for support of different user broadcasts.\n",
        "hackathon_id": "hackcmu",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonhtmlcssflask\n",
        "hackathon_id": "hackcmu",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe're tired of algorithms tailoring our web experiences to intensify tunnel vision around our interests. How do you talk to a person that is perfectly filtered out of your view? And if you can find that person, what should you do with that conversation?\nWhat it does\nA survey will pair you with a user whose profile opposes yours the most, and a conversation dialog will be opened between the two of you. The Anti-Pen Pal stream will then be available for a specific topic and question on the home page, to be vote upon by other users. The merit of the discourse is rewarded with upvotes and unproductive conversation is downvoted to the bottom of the page. Dynamic voting and messaging encourages an Anti-Pen Pal pair to improve their comments and engage actively in their discussion.\nHow I built it\nWe built it our web application using flask on heroku.\nChallenges I ran into\nOur backend development couldn't be correctly synced with our frontend work in time for the demo, but our work could be built upon for a functional application with a bit more time. \nAccomplishments that I'm proud of\nI've never built a webapp from the ground up before, and I'm new to flask/python development. I'm glad I learned how to get a webapp up and running quickly, and I learned the basics of working with flask on heroku. I'll definitely be using heroku again and building with flask will help me develop my python abilities. \nWhat I learned\nI learned a lot in a short amount of time and I'm excited to improve my skills by hacking on the project further. I came in with specialized experience that I worried wouldn't be helpful to my group at all -- but I stuck it out and I was happy to find parallels between what I knew and what we were working with. \nWhat's next for Anti-Pen Pal\nI would like to clean up the backend so the app runs cleanly, it would be cool to see how a small group of people interact with the app. \n",
        "hackathon_id": "sharkhack",
        "winner": true
    },
    {
        "description": "\nBuilt With\njava\n",
        "hackathon_id": "sharkhack",
        "winner": true
    },
    {
        "description": "\nBuilt With\nhtmljavascriptcss\n",
        "hackathon_id": "sharkhack",
        "winner": true
    },
    {
        "description": "\nby the CrocodileSharks\nInspiration\nWe thought it would be fun to highlight the ridiculous aspects of Donald Trump's speeches and books by transforming normal sentences in to their trumpified equivalents.\nWhat it does\nAccepts sentences and returns their trumpified versions.\nHow I built it\nPython, python, python. We created a language model (word2vec) based on Trump's books and speeches, tagged parts of speech and then calculated the cosine similarity between the input words and Trump's words. \nChallenges I ran into\nSome python modules gave us issues, such as Flask.\nAccomplishments that I'm proud of\nWe finished on time! And you can share on social media\nCategory\nWeb/UX/UI\n",
        "hackathon_id": "sharkhack",
        "winner": true
    },
    {
        "description": "\nInspiration\nBeing a frustrated college student needing to talk our professors.\nWhat it does\nLet's professor's update their status and location to alert students what they are available for. \nWhat's next for What's Up Doc?\nBecoming live with a database online.\n",
        "hackathon_id": "sharkhack",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe are really lazy and don't have personal websites\nWhat it does\nIt takes information from your LinkedIn and puts it into a personal site to download.\nHow I built it\nWe used Node!\nChallenges I ran into\nWe have never used Node before!\nAccomplishments that I'm proud of\nWhat I learned\nA lot about Node!\nWhat's next for InstaPP\nProbably smoothing things out since we ran out of time to fully implement all features.\n",
        "hackathon_id": "sharkhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtmljavascriptcssbootstrapjquerymongoose\n",
        "hackathon_id": "sharkhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtmlcss\n",
        "hackathon_id": "sharkhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\njava\n",
        "hackathon_id": "sharkhack",
        "winner": false
    },
    {
        "description": "\nBuilt With\nunityoculusleap-motion\n",
        "hackathon_id": "hackcuu",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptleap-motionnode.jsmongodbhtml5jquery\n",
        "hackathon_id": "hackcuu",
        "winner": false
    },
    {
        "description": "\nBuilt With\ncssjavascriptnode.jsmongodbhtml5express.jspassportmongoosecookie-parsermersnode-restfulejs\n",
        "hackathon_id": "hackcuu",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaandroid-studioandroid\n",
        "hackathon_id": "hackcuu",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptarduinolinuxphpsql\n",
        "hackathon_id": "hackcuu",
        "winner": false
    },
    {
        "description": "\nInspiration\nEl Clasificador con visi\u00f3n artificial nace de la necesidad de facilitar el trabajo al momento de utilizar componentes electronicos, de una forma sencilla sin tener conocimientos de electr\u00f3nica. Es una demostraci\u00f3n del potencial industrial que la vision artificial posee.\nWhat it does\nCalcula el valor de resistencias electr\u00f3nicas en base a un sistema de visi\u00f3n artificial en dispositivos m\u00f3viles con Android, y en base a esos datos, distribuye en cuatro categor\u00edas.\nHow I built it\nCon la ayuda de _ opencv _  para Android, Arduino en hardware y electronica.\nChallenges I ran into\nProcesamiento de imagenes, comunicaci\u00f3n serial entre Android y Arduino. \nAccomplishments that I'm proud of\nTrabajo en equipo, desarrollo de un proyecto innovador y de gran utilidad en tan poco tiempo.\nWhat I learned\nUso de opencv para distintas plataformas aplicado a procesamiento de imagenes.\nWhat's next for Clasificador con visi\u00f3n artificial\nFormalizarlo.\n",
        "hackathon_id": "hackcuu",
        "winner": false
    },
    {
        "description": "\nInspiration\nLa problematica social de la falta de transporte\nWhat it does\nCompartir vehiculo con estudiantes\nHow I built it\npagina web que crea viajes y solicita pasaje dentro de las rutas seleccionadas\nChallenges I ran into\nProblemas con la base de datos\nAccomplishments that I'm proud of\nWhat I learned\nTrabajo bajo presi\u00f3n, creac\u00f3n de ideas \nWhat's next for Mochilappzo\ndesarrollo mejor \n",
        "hackathon_id": "hackcuu",
        "winner": false
    },
    {
        "description": "\nBuilt With\nplaygoogle-mapsgoogle-distance-matrix\n",
        "hackathon_id": "hackcuu",
        "winner": false
    },
    {
        "description": "\nES una aplicaci\u00f3n que proporciona consejos en base a un checklist el cual el usuario que no est\u00e1 familiarizado con la seguridad inform\u00e1tica tenga en cuenta los principios b\u00e1sicos de esta.\nDormimos 2 horas en 2 dias...\nNos divertimos mucho\n",
        "hackathon_id": "hackcuu",
        "winner": false
    },
    {
        "description": "\nWhat it does\nHow I built it\nChallenges I ran into\nAccomplishments that I'm proud of\nWhat I learned\nWhat's next for Oxnorux\n",
        "hackathon_id": "hackcuu",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroid-studio\n",
        "hackathon_id": "hackcuu",
        "winner": false
    },
    {
        "description": "\nInspiration\nAl ser estudiantes de las carreras de mec\u00e1tronica y electr\u00f3nica, enfrentamos el reto de competir contra estudiantes de carreras dedicadas a la programaci\u00f3n, por lo que despu\u00e9s de reflexionar decidimos dedicar nuestros esfuerzos a un proyecto personal, en el que aplic\u00e1ramos todos nuestros conocimientos enfoc\u00e1ndonos a una aplicaci\u00f3n sencilla y \u00fatil, volviendo a las ra\u00edces de la mec\u00e1tronica.\nWhat it does\nEl proyecto esta dedicado a la dom\u00f3tica, aplicando el control mediante dispositivos de ultima generaci\u00f3n, como lo son el Leap Motion y Myo gesture control armband, mediante el uso de varios dispositivos se controlan par\u00e1metros como el encendido de las luces, la cantidad de luz, el control del clima, y la apertura y cierre de la puerta. Asi mismo con prop\u00f3sitos de seguridad, se activa y desactiva la alarma de la casa, y la apretura de la puerta principal de manera personalizada mediante un gesto manual.\nHow I built it\nUsando gestos manuales en Myo se controlan los par\u00e1metros como el encendido de las luces, el nivel de luz, el clima de la casa, etc. Las variables son manipuladas en una tarjeta de desarrollo Arduino, la cual entrega las salidas fisicas y las entradas. Usando un Leap Motion se reconoce la gesticulaci\u00f3n manual para poder activar y desactivar de manera personalizada la alarma, o abrir la puerta de la casa, laboratorio, oficina, etc.\nChallenges I ran into\nEl principal reto fue el de idear algo \u00fatil y a la vez sencillo, que nos permitiera aplicar nuestros conocimientos, a la vez que \u00edbamos adquiriendo nuevas ideas al experimentar con los nuevos dispositivos como el Myo y Leap Motion, sin perder de vista el objetivo principal del equipo, divertirse y aprender.\nAccomplishments that I'm proud of\nEl haber controlado los nuevos dispositivos como el Leap Motion y Myo, esto nos ayudo a darnos cuenta de las barreras que se rompen al trabajar en equipo.\nWhat I learned\nConocimos nuevas tecnolog\u00edas, aprendimos a crear un proyecto de manera divertida y creativa.\nWhat's next for Myo - Domo\nGanar el concurso! :D\n",
        "hackathon_id": "hackcuu",
        "winner": false
    },
    {
        "description": "\nInspiration\nAl ser una persona introvertida, comprendo que el hacer preguntas a un profesor sobre un tema que no comprendes puede ser algo intimidante y se que muchos otros alumnos sienten lo mismo, es por eso que la idea de una aplicaci\u00f3n que permitiera hacer esto de manera mas sencilla y sin tener que interrumpir directamente al profesor o hablar frente a toda la case.\nWhat it does\nLa aplicaci\u00f3n cuenta con 2 partes para alumno y para maestro, al abrirla un alumno este genera una instancia en la pantalla del profesor, el cual puede ver mediante emoticons y colores que tan bien a entendido el alumno, los alumnos pueden cambiar en cualquier momento su nivel de entendimiento haciendo un swipe en su celular, asi el profesor puede ver de manera general cual es el entendimiento del tema en la clase, los alumnos tambien pueden hacer un swipe para abajo para enviar una pregunta al profesor la cual en la pantalla de profesor mostrara una animacion y el signo de ?. \nHow I built it\nLa aplicacion fue creada con nodejs el cual me permitio crear en tiempo real el estado de varios alumnos y cambiarlo sin tener que estar actualizando la pantalla del profesor, todo esto en un servidor gratuito de heroku.\nChallenges I ran into\nAl principio no comprend\u00eda como detectar cambios en cada persona conectada a la aplicaci\u00f3n, gracias a los asesores del hackaton me mencionaron del uso de sesiones y fue as\u00ed como pude terminar la aplicaci\u00f3n de la manera que necesitaba.\nAccomplishments that I'm proud of\nComo primera vez utilizando nodejs, me siento feliz de basado en la documentaci\u00f3n y ejemplos de otros proyectos ya hecho el poder implementar mi idea, ademas que al usar por primera vez las interacciones en tiempo real es algo agradable.\nWhat I learned\nSobre el uso de nodejs, como funcionan los sockets, el uso de middleware y express.\nWhat's next for School App\nPasar de prototipo a una aplicaci\u00f3n real, buscar la manera de implementarse en escuelas, tambien pienso que se le puden dar usos en conferencias grandes o donde sea dif\u00edcil la interacci\u00f3n con la persona exponiendo. \n",
        "hackathon_id": "hackcuu",
        "winner": false
    },
    {
        "description": "\nBuilt With\nruby-on-rails\n",
        "hackathon_id": "hackcuu",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtmlbootstrap\n",
        "hackathon_id": "huskie-hack-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaandroid-studio\n",
        "hackathon_id": "huskie-hack-2015",
        "winner": false
    },
    {
        "description": "\nSector\nCivic [table 8]\nWhat it does\nProvides location-based poverty statistics based on your zip code.\n",
        "hackathon_id": "huskie-hack-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nbootstraphtml5less-cssflaskpythonopencvmatplotlibgithub\n",
        "hackathon_id": "huskie-hack-2015",
        "winner": false
    },
    {
        "description": "\nWe really wanted to create a cool and fun Leap Motion hack.\nOur first attempt was a touch screen application, that got hard so we made a cool keyboard instead last minute\nThe piano tracks you side movements and plays your notes as your press your fingers down\nby swiping the screen you can switch synths \nalso by pinching either index and thumb together, you can change the volume\n",
        "hackathon_id": "huskie-hack-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nruby-on-railspostgresqljavascriptrubyscsshtml5bourboncssjquery\n",
        "hackathon_id": "huskie-hack-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nphpjavascripthtmlmusecssmysql\n",
        "hackathon_id": "huskie-hack-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtml5javascriptmeteor.jscss\n",
        "hackathon_id": "huskie-hack-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nazurejavascriptcsshtml\n",
        "hackathon_id": "huskie-hack-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njquerybootstrap.netsqlknockout.js\n",
        "hackathon_id": "huskie-hack-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nopencvandroid\n",
        "hackathon_id": "huskie-hack-2015",
        "winner": false
    },
    {
        "description": "\nLink\nVisit 104.236.221.207 to view the project!\nInspiration\nOur idea is inspired with the idea of making it possible for homeless people to easily find the nearest warm bed. \nWhat it does\nHome Fly allows users to type in an address and it will return the list of nearest homeless shelters. We have a Twilio account set up to be able to text an address to our server and it will automatically return the nearest shelter's information.\nHow I built it\nWe built it with the Meteor framework which allows us to utilize MongoDB for data storage. The rest was written in Javascript, HTML, and CSS.\nChallenges I ran into\nOne of the biggest challenges we ran into was efficiently managing our time. We had to cut out some great features that we would have loved to implement - we will be sure to add these over the course of time!\nAccomplishments that I'm proud of\nWe're most proud of the fact that we have text message integration. Soon enough we would like every user to have the text message functionality!\nWhat I learned\nWe learned more about the Meteor framework.\nWhat's next for Home Fly\nComing soon...\n",
        "hackathon_id": "huskie-hack-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\narduinocled\n",
        "hackathon_id": "huskie-hack-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nIn the debate about privacy, everyone says they have nothing to hide, but few of us really do.\nWhat it does\nThis project mines the Twitter social graph to find evidence of politically subversive friends and followers.\nWhat's next for Nothing to Hide\nWe are collecting more data at the fastest speed allowed by Twitter. As our database grows, so will our ability to prove that everyone really does have something to hide.\n",
        "hackathon_id": "huskie-hack-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nonedrive\n",
        "hackathon_id": "huskie-hack-2015",
        "winner": false
    },
    {
        "description": "\nA response to the health sector challenge at Huskie Hack.\niReceptionist is a kiosk based application that uses voice recognition and speech APIs to help patients submit basic identifying information about themselves even before actually seeing a triage nurse in an emergency room, thus saving time and making the ER more efficient.\n",
        "hackathon_id": "huskie-hack-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptjavacsshtmlmeteor.jsmongodb\n",
        "hackathon_id": "huskie-hack-2015",
        "winner": false
    },
    {
        "description": "\nApplication made during HuskieHack as a response to a challenge posed by DeKalb Community Gardens for Volunteer Registration and informations for weeding. The App takes in informations from the user if he/she wishes to volunteer for serving in the DeKalb Community Gardens. The information entered by the user is stored on an online spreadsheet in Google forms and forms a pseudo cloud database. The Volunteers are also offered options to know about the various weeds that grow in these community gardens and which is also the main subject around which volunteering would revolve. The app would also provide information about the various locations of the gardens in which the volunteers can work and also navigate their way to the particular location through the usage of the Google Maps API.\n",
        "hackathon_id": "huskie-hack-2015",
        "winner": false
    },
    {
        "description": "\nGathr\nFind cool things to do, wherever you are!\nGathr uses your location to find events around you in an easy to display list, or view the map to see how close local events are to your location! Have an event that you would like to host? You can! Simply click the \"+\" button on the EventListView to add your own event that will show up to all the users around your location.\n",
        "hackathon_id": "huskie-hack-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nxcodetrulio\n",
        "hackathon_id": "huskie-hack-2015",
        "winner": false
    },
    {
        "description": "\nwatdo\nThis project was made to address the difficulties in finding local community events offered through all nearby organizations. By pulling information from local Dekalb RSS feeds as well as the Eventiful API, watdo aggregates data in order to provide a streamlined user experience. Sort by type of organization, or simply scroll through the feed. \nBefore any day out, make sure you know watdo.\n",
        "hackathon_id": "huskie-hack-2015",
        "winner": false
    },
    {
        "description": "\nInspiration: there was no KVRX Radio app!\nWhat it does: Streams music live with artist info!\nHow we built it: Android\n",
        "hackathon_id": "hacktx2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe thought it would be really cool if there was a program that could scan tweets of your favorite Twitter friends or celebrities and helps you discover music that everyone is listening to!\nWhat it does\nIt scans tweets of a twitter user, pulls out all the hashtags and then creates a playlist and adds songs that match the list of hashtags to your newly created playlist.\nHow we built it\nWe used the Twitter API and Spotify API in a Node.js module.\nChallenges we ran into\nProblems with asynchronous requests causing random ordering.\nAlso we had problems with authorization when using Twitter and Spotify's APIs.\nLastly we had a little bit of trouble with integration because all 3 of us worked on different pieces and had to put them together in the end and make them work.\nAccomplishments that we're proud of\nThis whole project!\nBeing able to scan tweets, and being able to create Spotify playlists, search for songs, and add them to a playlist.\nWhat we learned\nLearned two different APIs in one day as well as JavaScript, Node.js, and Express.js.\nWhat's next for Twitify\nWe want to work on making the code more sophisticated using machine learning so it can actually scan tweets to find song titles, albums, artists, or lyrics, and then use these to create a playlist that is a more accurate representation of the tweeter's interests.\n",
        "hackathon_id": "hacktx2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nEverybody makes presentations; not everybody makes them well. With Butterfly, we wanted to make it easy for people to make awesome presentations.\nWhat it does\nFirst, Butterfly records a user's presentation. Then, using Watson's Speech-to-Text service, it transcribes the presentation to text and sends the text to Keen IO. Once Keen IO calls back, Butterfly queries their analysis API, and then shows the results in a visual format in order to suggest ways in which the user can improve their future presentations.\nHow we built it\nWe forked IBM's speech-to-text app off of GitHub, added our interface with Keen IO's API, then designed and coded our web interface.\nChallenges we ran into\nJumping into the code base we forked was difficult. We also ran into a few hiccups using the Keen API; we realized halfway through the hackathon that Keen IO processes data in near-real-time rather than real-time, a delay that propagated to our users. We responded to this by sending the speech to Keen in real-time rather than all at the end of the speech.\nAccomplishments that we're proud of\nWe're proud that Butterfly will help people significantly improve their presentation skills. We're also excited that the interface ended up as clean and user-friendly as it did.\nWhat we learned\nWe learned that by taking advantage of existing API's, we could develop what is an extremely complicated application in less than 24 hours.\nWhat's next for Butterfly\nWe plan to analyze speech patterns such as inflection-detection in order to better help users. We also plan to allow users to link to YouTube videos, or upload videos of their own, and analyze their gestures and other movements.\n",
        "hackathon_id": "hacktx2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe wanted to modernize the gaming experience.\nWhat it does\nOur game allows users to create puzzles of their own liking and share with friends.\nHow I built it\nWe used the HTML5 canvas.\nChallenges I ran into\nOriginally we wanted to implement the idea with an Android App, but we found we were not able to learn Android app development in <48 hours; in the end, since we had more experience with HTML5 we decided to use that instead.\nAccomplishments that I'm proud of\nThis.\nWhat I learned\nWe learned HTML5 canvas operations and keeping track of sprites' z-orders in the HTML5 canvas.\nWhat's next for Puzzle HackTX 15\nThere is a desire to improve the interface a little to enhance the gaming experience.\n",
        "hackathon_id": "hacktx2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe didn't know what to do\nWhat it does\nArmed Tetris\nHow I built it\nProgramming\nChallenges I ran into\nPhasing into walls, rotating out of bounds, crashing the JVM\nAccomplishments that I'm proud of\nNot doing the above\nWhat I learned\nGDX and Myo\nWhat's next for Turbulent Giggle\n???\n",
        "hackathon_id": "hacktx2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njava\n",
        "hackathon_id": "hacktx2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nThis project's sub-parts had three primary inspirations.\nD2D was inspired by team member Austin's desire to know the distance between his current location and the country of Djibouti; this project was a chance to use the WC3 Geolocation API.\nRotMan Under Attack was inspired by Xavier Rotnofsky's moving HackTX 2015 call for an app. We took up the challenge, despite their lack of an API, and combined a head-tracking library with game logic.\n50S^2 (50 Shades of Shade) was inspired by a conversation about shielding one's face from the sun with a smartphone.\nWhat it does\nThe three sub-parts of this project are all similar in that they are fairly pointless. D2D tells you your distance from Djibouti, while RotMan Under Attack is a game where you play as Xavier Rotnofsky and move your head (in real life) to dodge bullets, preventing them from hitting Rotnofsky's head (in the game). 50S^2 is an Android app that shows a grid of different shades between black and white. You can select one of the shades from the grid to fill the screen with that shade, allowing for personalized sun-blocking.\nHow we built it\nWe used JavaScript for the web apps and Java for the Android app (50S^2).\nChallenges we ran into\nWe do not know JavaScript.\nAccomplishments that we are proud of\nThis was our first hackathon, so we are glad that we successfully completed our HackTX project!\nWhat we learned\nLearning programming skills before entering a hackathon is preferred.\nWhat's next for the project?\nLasers.\n",
        "hackathon_id": "hacktx2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nGoogle Calendar handles time-zones poorly 'n offers no tools t' resolve conflictin' events.  Th' UT CS calendar be also incredibly cluttered wit' events that don't 'ave as high o' a priority fer all users. Th' interface needed t' become more visually appealin' 'n easy t' use. We set out t' fix that. \nWha' it does\nPirate-themed Calendarrgh! uses th' Google Calendar API t' fix timezone errors 'n automatically create events drawn from UTCS emails.  It also offers a visualization tool, allowin' th' user t' prioritize conflictin' events 'n swab up calendars as ugly as gizzards.  Th' visualization tool displays bubbles in a slice o' time on an analog tog, correspondin' t' an event's start 'n end time. (Events from 1 t' 2 are stored in th' 1-2 pie slice).\nHow we built it\nGoogle Calendar API 'n Python fixes time zones 'n automatically creates events from emails.   Visualization tool uses jQuery, PHP, 'n HTML. \nChallenges we ran into\nGettin' a Python file t' run from our website.  Looked into CGI, mod_wsgi, etc. but could nah implement in time :(\nAccomplishments that we be proud o'\nUtilizin' Google Calendar API, none o' our crew has any prior experience workin' wit' APIs. Makin' a pretty cool basic mind map\nWha' we learned\nUnless ye _ know _ how t' run a Pythons script from th' web, jus' code in Javascript from th' beginnin'. We were greedy fer too much _ booty _ 'n ended up drinkin' more rum than our livers could handle (worry nah, fer that be a metaphor).\nWha's next fer Calendarrgh!\nIntegratin' th' Python scripts into th' website, usin' NLP t' scan all emails fer events rather than jus' those from UTCS, 'n improvin' our visualization tool.  Move everythin' o'er t' our domain: www.calendarrgh.com. Integrate interactive features into th' clock like changin' priority o' events 'n scuttlin' unnecessary events. Also allow th' synchronization o' multiple calendars.\nYe needs t' open th' URL below in Google Chrome, Firefox, or Internet Explorer.  Safari doesn't work as o' yet.\n",
        "hackathon_id": "hacktx2015",
        "winner": false
    },
    {
        "description": "\nCapitalOneHACKTX\nThis project is an exploration of the Nessie API: http://api.reimaginebanking.com/\nFor the HackTX 2015 Session\nGoal: Visualize ATM and Bank Location and Perform Transactions Among Peers\n\nTeam members:\n\nKahli Holmes @kahlih\nManny Pamintuan @mannypamintuan\n\n\nOriginally the idea was to take the ATM and Branch locations with the Austin,TX area and display them on a googlemap with traffic data and bus routes and bus locations from Capitol Metro's Vehicle Location API data (http://www.capmetro.org/metrolabs/).\nIt turns out that the data provided by the Nessie API contains only data for the MD and VA area. (and one bank in Missouri? )\n\nChris Longe was awesome and reached out to the Dev who made Nessie and it was confirmed.\nWe then pivoted and decided to localize our map to the MD and VA area and add additional functionality for transactions!\nThis is an interesting project that will be visited even after HackTX to see if we can add additional functionality.\n",
        "hackathon_id": "hacktx2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroidazure\n",
        "hackathon_id": "hacktx2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nMy family and I have always appreciated art by going too museums and other preforming art venues. However, the majority of my family was artistically challenged in painting. Therefore, I wanted to create an easier way to create a true masterpiece that shows everyone's creativity in a fun and educational fashion.\nWhat it does\nThe WinApp connects to the Sensel board to get x and y coordinates as well as pressure indicators. With this information we use it to create a drawing app. Some feature built in are viewing outline to help you sketch as well as a set of colors and brushes to make your experience more unique.\nHow I built it\nI built it using the Python interacting with the Sensel and sending the information over OSC packets to C# for the GUI.\nChallenges I ran into\nUsing the Sensel API (C/C++) to interact with C# turned out to be quite the challenge. Initially, the group and I tried wrapping the C functions in C++/CLI. Unsuccessful, we tried marshalling a C .dll into C#. Afterwards, we decided to send the information through OSC from the Python API to C#.\nAccomplishments that I'm proud of\nOverall, I didn't know how to interact with OSV packets. Learning more at the this level was extremely intriguing.\nWhat I learned\nI learned how to interact between Python and C# through OSV packets. I also learned alot about the lower level coding for the Sensel platform.\nWhat's next for Easel-y\nThe initial though for Easel-y was to have unique tutorial system that helps you learn how to paint more effectively. In order to achieve this the next steps would to be to implement more accuracy, more painting functions, and a more robust tutorial system.\nMembers\nFor some reason I couldn't add utexas.edu's to the team but both Jessica Slaughter, Justin Rubio, Karthik Konath, and George Tang contributed an enormous amount to the project.\nJessica Slaughter: jessicaslaughter@utexas.edu\nJustin Rubio:  justinrubio3634@utexas.edu\nKarthik Konath: karthikkonath@utexas.edu\nGeorge Tang: george.tang@utexas.edu\n",
        "hackathon_id": "hacktx2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nrubyhtmlcssjavascriptcoffeescript\n",
        "hackathon_id": "hacktx2015",
        "winner": false
    },
    {
        "description": "\nlace-wish\nHackTX 2015\nThis project is a wishlist matchmaking website for the Japanese street fashion, specifically the lolita fashion.\nThis fashion has tons of collectible dresses, with specific names, and specific shapes. Buyers and sellers in the community connecting by posting in social media sites and hoping that the other half sees the buying or selling post.\nThis website would connect the sellers and potential buyers and help facilitate the process of selling and buying a specific collectible dress. \nThe site would have a database of dresses, and each dress would have two main buttons: 'Wish for this dress' and 'Sell this dress.' When there is a seller for a dress that someone is wishing, they would be sent mutual emails with each other's contact information.\nAt HackTX, we started a Ruby on Rails skeleton. It was both of our first times working with Ruby on Rails, but we chose it for the fast development of a simple model. We created working tables for Users, Wishlists, and Dresses that one can edit/createnew/destroy. It's deployed via Heroku. We gave Bluemix about two hours before we gave up attempting to deploy with Bluemix and moved to Heroku. We also went ahead and nabbed the domain 'lace-wish.com' for one year.\nI learned a lot about using Ruby on Rails, the importance of reaching out to tutors for help, as well as working with Github's Shell, when it seemed like the GUI didn't ever work.\nI intend on continuing to develop the project after the hackathon.\n",
        "hackathon_id": "hacktx2015",
        "winner": false
    },
    {
        "description": "\nWe wanted to do a project that would be fun but also practical. It is common for people to have several different cloud storage accounts, but there isn't a way to easily manage files across them. We saw this as an opportunity to create an app that would help users organize, move, download, upload, and delete files easily not only across different storages but also in one setting.\nThe technology we used included Node/ExpressJS and MongoDB in the back end and Javascript/jQuery in the front end. We divided our team into two, but everyone ended up tackling the full stack together throughout the duration of the event. Challenges we encountered included designing the interface to be intuitive, easy to use, and aesthetically pleasing, as well as deciding how exactly the front end would communicate with the back end, which ultimately heavily influenced how we built our REST APIs. Some of the most difficult experiences however were working with Google oAuth and trying to deploy the app via Bluemix.\nUnfortunately, we did not have the time to implement everything we had aspired to originally. The next step to Lakitu (a nod to the cloud-riding Koopa from Mario) would be to implement more features and extend the app to support more cloud storages.\nOverall, Lakitu was a very rewarding experience, both in terms of developmental experience as well as team growth. We plan to keep working on Lakitu and hope to see you in the cloud soon!\nhttps://upload.wikimedia.org/wikipedia/en/2/2d/Lakitu.png\n",
        "hackathon_id": "hacktx2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nHigh School, College, and intramural team management can be a tedious process, especially in paired sports for finding the best match between players to improve and develop their skills. With a fast, efficient way of managing a team throughout the sport season, team managers will be able to pair players together in the most optimal way possible for them to expand and build upon their skills, overall resulting in much more effective practice sessions. \nWhat it does\nTeam managers can take a roster of players of their team, pair them together based on each player's respective ability to a specific court, and dynamically track and update their progress throughout a sport season. This is particularly useful because this web service provides fast access to player data, plans & schedules sessions between players on a criteria, and record individual match statistics.\nHow I built it\nWe coded the backend using php and javascript, mysql handled the storage of data, bootstrap was used for handling the front end.\nChallenges we ran into\nLearning the syntax of Javascript, linking it with php and having the front end call back end functions, formatting the interface to be as user-friendly as possible.\nAccomplishments that we're proud of\nFunctional web application, can be used and accessed with ease on a mobile device. Simple and efficient for team managers to use. All completed under a 24 hour time period. Future versions of this application hold a lot of potential.\nWhat I learned\nTeam experience and collaboration. Learning a new language. Gaining knowledge on web development.\nWhat's next for MatchMakr\nCurrently, the system is only structured to dynamically support a 1v1 system; due to the ubiquity of 2v2 systems, we would like to see the current system augmented to help support this matching style. Additionally, we would like to implement an Elo-based skill level system to relatively rank the players rather than using a win loss ratio, which is not exactly correlative with skill level; in fact, just winning a single game and not losing one renders the function invalid because it would yield an indeterminate error (divide by zero). This improved skill system and multi-personal matching upgrade are the next steps to the growth of our project.\n",
        "hackathon_id": "hacktx2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\npython\n",
        "hackathon_id": "hacktx2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nAn unnecessary amount of time is spent by families to find their car in a parking lot, either at the supermarket or the mall. Thus, we developed a mobile application that would facilitate the search and allow users to quickly locate their parked vehicle, be it a car or a bicycle.\nWhat it does\nParkit stores the vehicle's location and saves it in local storage, allowing the user to find their vehicle in a shorter amount of time. They are also able to take notes and pictures of the location and send this information through text to others. \nHow I built it\nUsing Swift in Xcode, we built the app implementing MapKit, UIKit, and CoreLocation.\nChallenges I ran into\nGetting MapKit to work, along with displaying values and table cells, proved to be rather difficult, but not impossible.\nAccomplishments that I'm proud of\nSince we were using Swift, finding help was rather a challenge itself, thus most of the problems we faced, we had to solve ourselves. Thus, the feeling of accomplishment was very satisfying.\nWhat I learned\nWe learned how to handle various technical issues, as well as implementing successful teamwork strategies that allowed us to quickly solve the problems thrown at us. \nWhat's next for ParkIt\nImprove sharing and finding parking spaces\n",
        "hackathon_id": "hacktx2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtml5javascriptcsspython\n",
        "hackathon_id": "hacktx2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njquerynode.jsgobootstrapjavascriptableton-liveweb-audio-api\n",
        "hackathon_id": "hacktx2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nDuring our first year attending UT, we often found ourselves sitting on the patio outside of our dorm in the glow of the tower. We learned, through this, of how much our student body and faculty achieved--awards, grants, games, all lauded through this visual herald. After we left that dorm, we realized that not everyone has as great of a view of the tower as we did, and that because of this people lose the connection they had to their university. The UT Tower lights orange to celebrate the achievements of its students and faculty, and someone who takes pride in their university might want to have that connection to its achievements. The TableTower allows someone who isn't able to see the tower to continue to be connected.\nWhat it does\nWhenever the Tower is orange, the TableTower lights up orange.\nHow I built it\nTableTower is an edge-lit, laser etched acrylic art-piece. The different panels allow us to manipulate configurations so that we can accurately convey the same message as the Tower. We laser cut the panels in the Longhorn Maker Studio prior to HackTX. We worked with Arduino Pro Minis to set the light configurations. We used an esp8266 to receive wi-fi signals. We built a back-end that scrapes information to determine which configuration the tower should replicate, and deployed it on Azure.\nChallenges I ran into\nInitially we had planned to use a chain of LEDs to light the acrylic, but after building the circuits and writing the code necessary to test this method, we found that the domes on the LEDs were too diffused to work. We attempted to cut the LED domes and tried using sandpaper to shape the LEDs, but in the end nothing we did changed our outcome. We decided to swap our LEDs for an LED strip, which supplies light at a much less diffused rate.\nThe wi-fi module (esp8266) was finicky, and sometimes wouldn't accept a flash. \nSince TableTower is a multimicrocontroller project, we had to be very conscious of how things interacted with each other.\nThe LED strip we checked out had a short circuit built in, and melted upon plug-in. \nAccomplishments that I'm proud of\nWe finished. The problems we encountered were larger than we initially expected, and we ended up scrapping nearly three hours worth of work, but the end result is what we dreamed it would be despite our hardships.\nWhat I learned\nI am not more familiar with the Arduino IDE, and now I have a deeper understanding of MOSFETS. I learned about LED Driving circuits, and about the limitations of current drivers. My partner learned about embedded servers, and inter-controller communication. He also learned about using Azure.\nWhat's next for TableTower\nWe would like to see if the Co-op might be interested in mass producing and selling a product similar to TableTower, since it's something a Texas-Ex might enjoy. We produced a smaller version, TinyTableTower, which is more suitable to being placed on a desk than being a centerpiece, and we would like to produce a larger version with a functional clock.\n",
        "hackathon_id": "hacktx2015",
        "winner": false
    },
    {
        "description": "\nVA\nA music visualizer for the Spotify API\nInspiration\nWanting to do something with music and visualization for this hackathon.\nWhat it does\nSearch for any song on Spotify, click on it, see an awesome visualization of that song\nChallenges I ran into\nWhat the visualization should be. Limiting the scope of the hack. Making the frontend respond to the endpoints we created for the backend. \nWhat We learned\nUsing Three.js for visualization using components that are built into Chrome. A little bit of Bluemix but ultimately decided not to use it. Creating an OAuth2 flow for the Spotify API. Creating endpoints on the backend for the frontend to communicate to and formatting JSON for each endpoints. etc.\nWhat's next for VA\nAdding more to the visualization\nMaking it interactive\nCustom shaders\nExporting the visualization and being able to 3D print it\n",
        "hackathon_id": "hacktx2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nHave you got issues deciding who is going to do the next nasty task on your team ?.\nWhat it does\nDream Volunteer picks a person at random from any Office365 group.\nHow I built it\nUsing Android and awesome Office 365 API and examples.\nChallenges I ran into\nLack of time. I didn't want to miss the conference so, I just had a couple of hours to work on it.\nAccomplishments that I'm proud of\nIt is fully functional.\nWhat I learned\nTo use Office 365 platform and its API. I was surprised how powerful and easy is.\nWhat's next for Dream Volunteer\nSend a mail to the picked volunteer. Package properly and upload to Google Play.\n",
        "hackathon_id": "andevcon-us2015",
        "winner": false
    },
    {
        "description": "\nMicrosoft Hackathon Project - TraveLog\nTraveLog is an android app that allows users to log their journey when they're out and about (to new places, events, etc.). The app utilizes Microsoft Open365 Graph APIs.\nContributors\n\nSundar Siva (mail@sundarsiva.com)\nPrerak Trivedi (prerak.d.trivedi@gmail.com)\nKrunal Shah (krunal.shah.neu@gmail.com)\n\nUser Stories\nThe following functionalities are completed:\n\n[x] User can authenticate using the Microsoft Open365 Account\n[x] User can view their profile information (using the Navigation Menu)\n\n\n[x] User can see their Name, Profile Photo, Email, Phone Number\n[x] User can view a list of their Friends (Contacts) \n\n[x] On the Homescreen, user can swipe between different categories of their logs (sections in the notebook)\n\n\n[x] In each section on the homepage, user can see a list of the log entries (pages in that section)\n[x] User can click on a single log entry to view the detail of that Log\n[x] User can view the text & HTML content along with rich media such as Images that are part of that Log entry (page).\n[x] User can share this log entry via [Microsoft Graph Email API] with their friends.\n[x] User can long click on a single log entry to view more options such as:\n[x] Share the Log with other apps (using ShareIntent)\n[x] Copy a URL to that Log entry\n[x] Delete the Log entry from that section\n[x] User can create a new Log entry in that section by adding at least a Title and Description\n[x] User can create a plain text Log entry \n[x] User can add images to the Log entry\n[x] User can create a new Category on their Homepage (by using the Toolbar action)\n\n\nThe following Microsoft Graph APIs were Used are used:\n\nAuthorization using the AuthenticationManager\nGet the User Detail\nGet the User's profile photo\nGet the User's friend list\nGet the User's sections\nGet the Pages in a section\nGet the Details of a page\nGet the image/resource content of a Page\nCreate a simple page or with embedded media\nCreate a section along with a page\nMail the page via the send mail API\nDelete a Page\n\nGeneral Feedback\n\nThe team present was really helpful at debugging/answering queries.\nThe GitHub sample repository is helpful but not fully comprehensive.\nRegistration process was too dispersed \nThe documentation for some of the APIs were incorrect/incomplete.\nProvide an explicit resolved URLs for the image content instead of providing byte streams\nThe [/me/notes/pages] endpoint creates a new notebook and not a section inside the existing primary notebook\n\nOpen-source libraries used\n\nRetrofit - For network calls\nPicasso - Image loading and caching library for Android\nGSON - For deserializing the JSON to POJOs etc.\n\nLicense\nCopyright [2015] [Team TraveLog]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n",
        "hackathon_id": "andevcon-us2015",
        "winner": false
    },
    {
        "description": "\nThis applications intends to make all the image operations over OneDrive much easier and nicer for the users.\nThe end goal is to have adding/removing folders and images, nice browsing of the albums and images.\nWe experienced problems downloading the images (discussed with John Austin, but couldn\u2019t fix them) so for now we are downloading accessible images from the internet.\n",
        "hackathon_id": "andevcon-us2015",
        "winner": false
    },
    {
        "description": "\nInspiration\n\nWe don't want to miss greeting our friends on their birthday.\nWe wanted to build a fun and simple application for our Android Developer Conference Hackathon that utilizes the Office 365 API while incorporating a social aspect. \n\nWhat it does\nOur Android application checks all contacts of a user in Office 365 and checks whether there are any contacts whose birthday falls on today. If there are birthdays today, the user is then able to record a birthday greeting and send them the video through email. \nHow we built it\nWe built it with Android Studio using the supplied sample provided by the Office 365 and using the Office 365 API (Microsoft graph api). \nChallenges we ran into\nGetting set up with the correct credentials and configuration with Office 365 took a little longer than expected. After we got set up, we were able to make the appropriate calls to get the data we needed.\nAccomplishments that we're proud of\nWe're happy to be able to complete our simple hackathon project in time for the noon deadline. We wanted to create a project that was able to be finished in the allotted time. \nWhat we learned\nWe learned that Office 365 Graph is quite powerful and gives us easy access to a lot of the data used by the Office Suite. In an Enterprise setting, there is endless potential from data visualization in an organization to managing large amount of users quickly. \nWhat's next for Birthday Greetings Video\n\nPolish the UI\nMove the video attachment over from GMAIL sharing to utilize the Office 365 email attachments. Going forward share Image and Videos on One Drive.\nSave videos for future Birthdays and send then automatically on event.\nAdd support for more events like New year, Anniversary etc.\nAdd First time user experience module.\n\n",
        "hackathon_id": "andevcon-us2015",
        "winner": false
    },
    {
        "description": "\nInspiration\n1st Office 365 Hackaton\nWhat it does\nImport all contacts, let user select contact, and send email\nHow I built it\nAndroid Studio\nChallenges I ran into\n1st time with Office 365 API\nAccomplishments that I'm proud of\nWorking App within a day\nWhat I learned\nNeed teammate and rest when I need to\nWhat's next for HiOffice365\nContinuous update!\n",
        "hackathon_id": "andevcon-us2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nc++pythonarduinosails.jsherokuleap-motion\n",
        "hackathon_id": "mxhacks-iii",
        "winner": true
    },
    {
        "description": "\nBuilt With\nparsefacebookiosobjective-cispeech-automated-speech-recognitionsabre\n",
        "hackathon_id": "mxhacks-iii",
        "winner": true
    },
    {
        "description": "\nInspiration\nEncontramos la problem\u00e1tica de que en los lugares como fiestas, reuniones o eventos, la m\u00fasica que ponen suele ser de gusto de unos pocos, por lo tanto creemos que si hacemos \"Zonas musicales\" en las cuales la gente alrededor pueda votar por las canciones que quiere escuchar, el ambiente ser\u00e1 m\u00e1s c\u00f3modo y genial para los que est\u00e9n en ese momento, ah\u00ed, escuchando la m\u00fasica que quieren escuchar\nWhat it does\nLa aplicaci\u00f3n utiliza conexiones peer to peer (Como Bridgefy) para poder crear zonas musicales de varias personas en las cuales 1 funge como administrador, este provee a los clientes de una lista de reproducci\u00f3n de spotify. Los clientes se encargan de votar las canciones que quieran escuchar, mediante un algoritmo WIPPLI ir\u00e1 poniendo en la cola las canciones m\u00e1s votadas. S\u00ed la canci\u00f3n actual no es de gusto para todos, los usuarios pueden votar para que se cambie de canci\u00f3n\nHow I built it\nPara Android se us\u00f3 P2PKIT.IO para las conexiones p2p, y el sdk(beta) de spotify, as\u00ed como un Cliente de la web api ajeno.\npara iOS se utilizo la librer\u00eda nativa de p2p, as\u00ed como el sdk(beta) de spotify para iOS\nPara el backend ( que alimenta a la app de iOS) se utiliz\u00f3 Express.js.\nChallenges I ran into\n\nAPRENDER P2P\nLidiar con una api muy joven (Spotify), la cual no siempre nos daba los resultados esperados.\n\nAccomplishments that I'm proud of\n\nEntender el protocolo p2p\nSer de los primeros en realmente darle provecho a la api de spotify\n\nWhat I learned\n-p2p (manejo de clientes, conexiones y transferencia de datos por medio de bytes), manejo del cliente de spotify, \nWhat's next for WIPPLI\n\nSeguir con el desarrollo y mejorar el modelo de negocio, nos inspira realmente terminar la aplicaci\u00f3n para que jam\u00e1s tengas que sufrir el hecho de que en el mejor momento de la fiesta, a alguien se le ocurra poner una canci\u00f3n ranchera.\n\n",
        "hackathon_id": "mxhacks-iii",
        "winner": true
    },
    {
        "description": "\nInspiration\nproblemas diarios que tenemos los habitantes de la ciudad de m\u00e9xico\nWhat it does\nda mapas de la ruta \u00f3ptima, es todo un sistema de pagos para los peseros, permite el rankeo de rutas y choferes\nHow I built it\npor m\u00f3dulos \nChallenges I ran into\nelaboraci\u00f3n de un sensor de subida y bajada de pasajeros\nAccomplishments that I'm proud of\nel sensor, aprender nuevos lenguajes, analisis sentimental\nWhat I learned\nmanejo de estr\u00e9s, manejo de APIs nuevas\nWhat's next for PayBus\nusar NFC\n",
        "hackathon_id": "mxhacks-iii",
        "winner": true
    },
    {
        "description": "\nBuilt With\ndjango\n",
        "hackathon_id": "mxhacks-iii",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaandroid-studioxmlphp\n",
        "hackathon_id": "mxhacks-iii",
        "winner": false
    },
    {
        "description": "\nInspiration: We try to find a new way to reduce the delivery cost for people who wants to buy on online stores.\nWhat it does: It join the people who wants to send packets with a low cost and that they dont have trouble with the time of arriving like some poeple who can buy in \"Mercado Libre\".\nHow I built it: We create an interface where the people can check the next deliveries, you can access from de web page in your computer, from small devices and smarthphones and also we create an app, were you can check the same information, also you can have acces with your facebook account, either way, it doesnt matter if  you are using the app or the explorer, and all that using android studio, xampp and boostrap.\nChallenges I ran into: We have trouble trying to find the way to use the API of facebook, the network problems, the trouble that we had when we wanted to use the free domain, that we didn\u00b4t know until the last hour that we should buy it using the private windows of the explorer\nAccomplishments that I'm proud of: That we learn a new ways to do what we like to do, helping always from each other, and trying to reach as high as possible considering that is the first time for the 4 of us to came to an event like this.\nWhat I learned: To use the facebook API, some of us how to use PHP, how to do a right desplay and new tecnies of the android programing.\nWhat's next for Envipack: Make an agreement with buy-sell companies like MercadoLibre, Amazon etc. creating a new way to share expenses between people and for that we have to create the apps for Apple and Windows Phone, make and improve all the modules of the wep page.\n",
        "hackathon_id": "mxhacks-iii",
        "winner": false
    },
    {
        "description": "\nInspiration\nComo cada d\u00eda la crisis econ\u00f3mica azota m\u00e1s a la poblaci\u00f3n, el ahorrar se ha vuelto m\u00e1s dif\u00edcil. As\u00ed que nuestra inspiraci\u00f3n se bas\u00f3 en la premisa de un sistema de ahorro muy riesgoso llamado tanda; el cual propon\u00eda que se ahorrara una cierta cantidad en un cierto tiempo, y as\u00ed turnarse ese c\u00famulo hasta que todas las personas hayan recibido su parte. Pero nunca con la seguridad de que la persona jamas escapar\u00eda con el dinero.\nWhat it does\nNuestra aplicaci\u00f3n lo que crea es un sofisticado sistema, el cual otorga la seguridad a las personas para que puedan meter desde peque\u00f1as cantidades de dinero en periodos cortos, hasta grandes cantidades de dinero en largos periodos entre muchas personas conocidas o desconocidas.\nHow I built it\nComenzamos con una interfaz amigable en HTML para cualquier tipo de usuario que contenga una tarjeta de cr\u00e9dito y acceso a internet.\nLos procesos din\u00e1micos los desarrollamos con JavaScript.\nLa base de datos las construimos desde node.js para una comunicaci\u00f3n m\u00e1s efectiva.\nChallenges I ran into\nNos enfrentamos a diversos problemas de conocimientos; como el manejar distintos lenguajes desconocidos, o errores dif\u00edciles de detectar por la inexperiencia en el sector.\nAccomplishments that I'm proud of\nAl final logramos sacar a la luz un prototipo confiable y practico para el uso de la clase media  de 18 a 55 a\u00f1os. El sistema operativo requiri\u00f3 de una ardua labor ya que se ensambl\u00f3 y se aprendieron nuevos sistemas. Y por supuesto, el aterrizar una idea y juntarse para ser un equipo, requiri\u00f3 de un car\u00e1cter decisivo y eficaz. \nWhat I learned\nComo equipo aprendimos que cada idea cuenta por sencilla que sea, de una en una se engrandece. El apoyo y la dedicaci\u00f3n de cada integrante fue de mucha importancia para llevar a cabo este prototipo. \nToda idea lleva un sacrificio, nosotros la tomamos y esta aqu\u00ed. La comunicaci\u00f3n y la participaci\u00f3n fueron factores imprescindibles en este equipo. \nWhat's next for jocular-waddle\nLo siguiente es seguir con este prototipo. Se tiene que aterrizar a\u00fan m\u00e1s la idea y claro, mejorarla con otros servicios para que tenga una gama y as\u00ed pueda ser m\u00e1s atractiva. Seguir innovando y mejorar el sistema operativos ser\u00e1n de mucha importancia para que despegue. \n",
        "hackathon_id": "mxhacks-iii",
        "winner": false
    },
    {
        "description": "\nBuilt With\nc++codeblocks\n",
        "hackathon_id": "mxhacks-iii",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonjavascripthtmlcssshell\n",
        "hackathon_id": "mxhacks-iii",
        "winner": false
    },
    {
        "description": "\nBuilt With\nphphtmlcssjavascriptapacheconf\n",
        "hackathon_id": "mxhacks-iii",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtml5javascriptmysqlbootstrapphp\n",
        "hackathon_id": "mxhacks-iii",
        "winner": false
    },
    {
        "description": "\nInspiration\nLa optimizaci\u00f3n del m\u00e9todo de publicaci\u00f3n para ventas de art\u00edculos \nWhat it does\nA trav\u00e9s de la toma de una fotograf\u00eda se obtienen las caracter\u00edsticas del articulo que fue fotografiado, nombre, modelo, especificaciones t\u00e9cnicas, generaci\u00f3n de precios sugeridos, generaci\u00f3n de un titulo atractivo para la publicaci\u00f3n,  etc, etc.  \nHow I built it\nTodo fue hecho en forma divida y estructurada y orientada hacia la plataforma android para la cual utilizamos android studio y java. \nChallenges I ran into\nescasos conocimientos sobre el lenguaje android y sus diferentes funciones, ademas de la conexi\u00f3n de APIs a nuestra apk.\nAccomplishments that I'm proud of\ntrabajo en equipo, termino de procesos de forma separada(backend, interfaces, etc), auto aprendizaje, organizaci\u00f3n.  \nWhat I learned\nnuevos lenguajes de programaci\u00f3n, creaci\u00f3n de backends, conocimiento de dominios, desarrollo de interfaz en android estudio, optimizacion de c\u00f3digo.\nWhat's next for ChallengeML\nMejorar gradualmente los conocimientos adquiridos, asistir a mas HACKATONS! y as\u00ed poner en practica lo aprendido \n",
        "hackathon_id": "mxhacks-iii",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtml\n",
        "hackathon_id": "mxhacks-iii",
        "winner": false
    },
    {
        "description": "\nInspiration\n\"La falta de tiempo de los Empresarios \"\n\nWhat it does\n\" Manejo de Contenido e impacto en redes con movimientos decisivos para que impulsen sus ventas.\"\nHow I built it\n\"Se creo una plataforma Web donde el usuario podr\u00e1 registrarse para que en un futuro obtenga contenido que necesita para que no sea olvidado\"\nChallenges I ran into\n\"Hacerlo a tiempo siempre dando lo mejor, aprendiendo lo que no se sabe, levant\u00e1ndose de las ca\u00eddas y programando.\"\nAccomplishments that I'm proud of\n\"De el impacto que las Pymes y peque\u00f1as empresas tendr\u00e1n a esta plataforma\"\nWhat I learned\n\"La importancia de la influencia social en un negocio emergente si no saben de ti, no vendes.\"\nWhat's next for Merkup\n\"Publicar la plataforma y comenzar a atender PYMES\"\n",
        "hackathon_id": "mxhacks-iii",
        "winner": false
    },
    {
        "description": "\nBuilt With\nc++accessarduinogroovelasser\n",
        "hackathon_id": "mxhacks-iii",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavac#xml\n",
        "hackathon_id": "mxhacks-iii",
        "winner": false
    },
    {
        "description": "\nBuilt With\ncssjavascripthtmlpython\n",
        "hackathon_id": "mxhacks-iii",
        "winner": false
    },
    {
        "description": "\nBuilt With\njsonpythondjango-json-api-mercado-libredjangonatural-language-processinggithubhtml5ccs3api-mercado-libre\n",
        "hackathon_id": "mxhacks-iii",
        "winner": false
    },
    {
        "description": "\nInspiration\nNos inspiramos en el mercado emergente de cerveza artesanal que inunda a nuestro pa\u00eds. Ten\u00edamos como objetivo apoyar a los emprendedores que hacen su propia cerveza y a la gente que quiere probar cosas completamente nuevas\nWhat it does\nEs un estilo de red social sobre cerveza artesanal, tiene como objetivo que la gente comparta sus gustos sobre la cerveza y se fomente de cierto modo el emprendedurismo.\nHow I built it\nLo construimos en swift, dividi\u00e9ndonos tareas entre todo el equipo. Aprendimos cosas nuevas y empleamos conocimientos que ya ten\u00edamos.\nChallenges I ran into\nEl tener poco o nulo conocimiento en bases de datos. Creemos que fue el mayor reto el cual nos enfrentamos pero gracias a la delegacion de tareas, pudimos adentrarnos en conocimientos de Parse y poder desarrollar lo necesario para nuestra aplicacion\nAccomplishments that I'm proud of\nEl haber cumplido este reto, ya que fueron horas en las que no sabiamos que hacer y despues de horas de investigacion, tutoriales y apoyo de mentores; pudimos cumplir con nuestro objetivo.\nWhat I learned\nAmpliamos nuestros conocimientos en Clases y Objetos, algunos se adentraron un poquito mas en Swift y Parse pero sobre todo a delegar actividades en un proyecto, dependiendo de nuestras capacidades, para poder cumplir con el objetivo.\nWhat's next for Craft it!\nUna constante mejora. El equipo planea que craft it no sea un proyecto de solo un hackaton, esperamos que el proyecto siga creciendo poco a poco, con el constante trabajo de todos los integrantes y que alg\u00fan d\u00eda logremos ser el cambio por el cual nos inspiramos a hacer esto.\n",
        "hackathon_id": "mxhacks-iii",
        "winner": false
    },
    {
        "description": "\nInspiration\nEl sufrimiento de los estudiantes, respecto a los problemas de qu\u00edmica. \nWhat it does\nEs una aplicaci\u00f3n que permite ayudar a los estudiantes que tienen problemas de qu\u00edmica.\nHow I built it\nCon dedicaci\u00f3n entrega, compromiso y con mucho entusiasmo.\nChallenges I ran into\nEl tiempo, problemas con el software y la perdida de tiempo en la espera de comida.\nAccomplishments that I'm proud of\nQue concluimos la aplicaci\u00f3n.\nWhat I learned\nA trabajar bajo presi\u00f3n y concluir con nuestros objetivos.\nWhat's next for ChemistryEasy\nMejorarla con la finalidad de llevar a los estudiantes un sistema de aprendizaje continuo, as\u00ed como facilitando las dificultades en la materia de Qu\u00edmica.\n",
        "hackathon_id": "mxhacks-iii",
        "winner": false
    },
    {
        "description": "\nBuilt With\nphplaravelmaterialize\n",
        "hackathon_id": "mxhacks-iii",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaobjective-cnode.jssails.jsphpjquerycss3html5material-design\n",
        "hackathon_id": "mxhacks-iii",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonjavascripthtmlcssshell\n",
        "hackathon_id": "mxhacks-iii",
        "winner": false
    },
    {
        "description": "\nBuilt With\nc#htmlcssjquery\n",
        "hackathon_id": "codeone-omaha-2893",
        "winner": true
    },
    {
        "description": "\nInspiration\nThere are no products on the market that give us a full view of all our finances on an easy to understand dashboard with educational tools and content that demonstrate why we need to pay attention to our finances. \nWe wanted to keep things simple, providing an aesthetically pleasing user experience, and giving users a clear picture of what steps to take to make sure their finances are where they need to be. \nWhat it does\nThe application first gathers the user's demographic information and uses it to create a Perspective Profile. The process is simple - answer the questions as the application guides you through the completion of your profile.\nAfter your Perspective Profile is generated, the user will be taken to the Perspective Dashboard where they will see three lists - Current Situation, Goals, and Achievements. \nCurrent Situation is a snapshot into the user's profile based on the responses given at profile creation. \nGoals are the next steps that the user needs to take with their finances. Perspective provides the initial set of goals that pertain to the Perspective Profile, but the user can add additional Goals that align with their own financial aspirations. Selecting a Goal on the Perspective Dashboard will take the user to another page with tools and information pertaining to that specific goal and why its important. These tools range from interactive graphs that simulate financial scenarios to informational articles with helpful tips.\nAchievements are the Goals that the user has completed. \nHow we built it\n\nWe built Perspective using the popular javascript framework, AngularJS. It allowed us to quickly bootstrap the application and get a solid working product to expand upon. \nWe used Google's material design specifications to design the user experience, which was greatly simplified through the use of Angular Material. \nFirebase was used to store the Perspective Profile and host the application. \n\nChallenges we ran into\n\nWe weren't completely familiar with all the technologies we used (Flexbox, Firebase)\nFlexbox - The layout paradigm is very different than the current popular grid frameworks like Bootstrap\nFirebase - We probably waited too long to integrate with the API, so there were some pains converting from mock services to live services and schema design differences\n\nAccomplishments that we're proud of\n\nWe completed a working application\nThe user experience is clean and fresh\nWe were able to utilize some bleeding edge technologies\n\nWhat we learned\nWe learned that by keeping your idea simple, its much easier to execute within the short timeframe of the competition. Keep it simple and focus on the user experience. \nWe also learned a lot about the new web technologies (Firebase, Material Design, Flexbox)\nWhat's next for Perspective\nWe would have liked to integrate with some third party services to track account data, credit score, or other assets. That would give the Dashboard a more real-time feel instead of having to manually complete out goals or update their Profile data.\n",
        "hackathon_id": "codeone-omaha-2893",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe all have different financial goals, different starting points, and different things we're trying to do to get there. None of us are completely sure we're doing the right thing. Overwhelming people with a large plan just ensures that they do nothing out of fear of doing the wrong thing. Enter Budget Bear.\nWhat it does\nBudget Bear uses a straight-forward questionnaire that starts with what you want to do, takes some basic financial information, runs that through its decision engine, and ends with a single focus to advance your financial well-being.\nHow we built it\nBudget Bear is built entirely in HTML and JavaScript, no logic runs on the server. Our engine runs on the user's browser, meaning that the user's information never leaves the browser, keeping their information safe.\nChallenges we ran into\nWe need to ask a fair number of questions to get to a decent recommendation. We had to do a fair amount of work to keep the questions short, clear, and easy to answer.\nAccomplishments that we're proud of\nWe're very happy with the input controls we built around our numeric entry areas. This improved the touch interactions greatly. When we had some bystanders try out website, they were very positive of not having a keyboard pop up and having to type numbers throughout the process. It made everything flow better, even if it looked a little overwhelming at first.\nWhat we learned\nWe got a lot more familiar with JavaScript, TypeScript, and Git through this project.\nWhat's next for Budget Bear\nWe'd love to run our algorithm and our copy past some actual experts so that what we're suggesting is more accurate and more actionable.\nWe're on GitHub!\nCheck out our GitHub repository!\n",
        "hackathon_id": "codeone-omaha-2893",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavahtmlpaintgimp\n",
        "hackathon_id": "codeone-omaha-2893",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe wanted to allow people to be able to have trusted resources help them make financial decisions. You listen better when you know and trust the source.\nWhat it does\nIt allows people to link to various parts of application and create realtime collaboration in regards to financial information. While we envision various types of activity, we only had time to build 1.5. The \"How Much Car Can You Afford\" is the only one that actively allows collaboration, while \"How much cash can you stash?\" shows the same activity with a different skin, but doesn't function properly.\nHow I built it\nWe built it using IOS for the native iPad UI and Parse for the backend.\nChallenges I ran into\nA fun challenge was the realtime nature of the collaboration. We used a variety of available APIs to create a rich collaboration.\nWe also wanted to incorporate motion and animation, so we utilized explored and utilized some native iOS animation APIs.\nAccomplishments that we're proud of\nThe design and the collaborative nature. This is definitely something we would use on a regular basis when needing to grow our financial education. Who doesn't love collaborating with friends on important matters?\nWhat We learned\nWe learned that if you take an ambitious goal like real time collaboration, it is possible to hit it in 48 hours. We started not even sure if it was possible, then as the hours ticked by we were like \"It's really gonna work!\" We also started working on the animations right at the start. We typically leave the eye candy for last, but we knew that the \"fun factor\" was going to be an important aspect so we started on it right away. Oddly enough, the simple animations took just about as long as the real time collaboration feature, since we worked on them concurrently.\nWhat's next for Financial Base\nHopefully find a partner to help us finish it off with more types of activities as well as better snippets of information.\n",
        "hackathon_id": "codeone-omaha-2893",
        "winner": false
    },
    {
        "description": "\nBuilt With\nnode.jsmongodbexpress.jsangular.jsjquerybootstrapd3.js\n",
        "hackathon_id": "codeone-omaha-2893",
        "winner": false
    },
    {
        "description": "\nInspiration\nCurrent data is convoluted and overwhelming. \nWhat it does\nAllows experts to create interactive documents, and individuals to find the documents, by category. \nHow I built it\nWe used an MVC php framework, for the structure. We used CKEditor for a base of the expert editor, and built a plugin that allows experts to create interactive documents. \nChallenges I ran into\n=\nWe only had two team members write code. One of the members only worked for about 8 hours. \nAccomplishments that I'm proud of\n\nGot the interactive equation editor to parse equations dynamically, and it is simple to use. \n## What I learned\n\nHow to build a CKEditor plugin. \nWhat's next for The Solution\n\nFinish search\nAdd a Question and Answer function, similar to stack overflow, except interactive answers. \nAllow embedding of dynamic pages. \nAdd question fields for experts to create quizzes.\nAdd progress tracking. \n\n",
        "hackathon_id": "codeone-omaha-2893",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonflasknltkangular.jsjavascriptperform\n",
        "hackathon_id": "codeone-omaha-2893",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptcss3html5jqueryknockout.jscolorbox\n",
        "hackathon_id": "codeone-omaha-2893",
        "winner": false
    },
    {
        "description": "\nBuilt With\nbeacon-pushibeacon\n",
        "hackathon_id": "codeone-omaha-2893",
        "winner": false
    },
    {
        "description": "\nInspiration\nMany high school and colleges do not require financial literacy in the education system. We feel there is a lack of information, options, and visualizations to persuade anyone in high school or above to take a look at their current financial situation and ponder about the future.\nWhat it does\nOur tool first profiles users when they come in to see where their current financial situation and what tools and options can guide them to a better overall future and be prepared for tomorrow.\nHow I built it\nWe had two developers and one designer building a Ember.js front end application.\nChallenges I ran into\nTime limitations and any technical limitations\nAccomplishments that I'm proud of\nWe are amazed to get this far within a 48 hour range of time. The design looks professional and we almost achieved every goal and idea we wanted to accomplish. \nWhat I learned\nWe learned a lot more about the finance, web design, and our chosen framework of Ember.js\nWhat's next for Financial Wellbeing\nWith some polishing and user testing we can see what the next step for Financial Wellbeing\n",
        "hackathon_id": "codeone-omaha-2893",
        "winner": false
    },
    {
        "description": "\nInspiration\nBeing an international student I know how important it is to get information about financial services\nWhat it does\nOur site educates customers on different loans and provides them with a calculator\nHow I built it\nIt is build using HTML5, CSS3,jquery and java script\nChallenges I ran into\nAs we are new to the financial services in USA we had little idea on the financial services provided here\nAccomplishments that I'm proud of\nImplemented loan calculator and depicted it in a pie chart\nWhat I learned\nHTML5,  CSS3, jquery and java script\nWhat's next for Financial Education Services\nWe can extend the application to incorporate audio and video chat so that customers can get the required information promptly from anywhere\n",
        "hackathon_id": "codeone-omaha-2893",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtml5cssiphone-sdk\n",
        "hackathon_id": "codeone-omaha-2893",
        "winner": false
    },
    {
        "description": "\nInspiration\nComing into this event, we didn't know a whole lot about personal finance. We were essentially builing a project for students like ourselves. We intially thought about ways that we enjoy learning and how we could incorporate them into this project.\nWhat it does\nFuture First provides helpful insight for people who are just starting to learn about personal finance. The main tools for providing insight are various calculators that students can use to see what types of loans they can afford, what return they will get for investments, and the return on IRAs or 401(k)s.\nHow We Built it\nWe built this using mostly JavaScript. We used Knockout.js for two-way data binding for updating models based on data changes on the page and used Morris.js for a graphing library. The system runs on a simple Python server.\nChallenges We Ran Into\nWe weren't sure what to build initially. We were trying to think of what tools students would be most likely to use to learn. We knew that we couldn't expect to just be able to put static text on a page for them to read. Instead, we wanted to create an interactive web application that students could use more than once.\nAnother issue we ran into was correctly implementing the complex formulas used for financial calculations. Specifically, we struggled with calculating the time it would take to pay back a loan at a certain rate due to the complexity of the equation. We eventually figured out how to correctly implement the equations after many attempts.\nAccomplishments that We're Proud of\nA major accomplishment we are proud of is the incorporation of the complex financial equations with live-updating graphs. These were very complicated to get working correctly, especially graphs that featured multiple lines for different periods of time.\nWhat we Learned\nWe learned a lot about using Knockout.js to create responsive web applications. Coming into the competition, only one member of our team had experience with Knockout. Now, each team member feels confident using Knockout.\nWe also learned how difficult product development can be. It is easy to try to add too many features to a project, and it can be even more difficult to decide on the correct project in the first place. It is especially hard to create a product that people want to use and will benefit from using.\n",
        "hackathon_id": "codeone-omaha-2893",
        "winner": false
    },
    {
        "description": "\nWhat We Plan to Solve\nPut bluntly, our project plans to solve the problem of an inefficient bar or restaurant. We plan to not only provide invaluable data to establishment owners and staff, but to improve the experience for the customer at the same time. \nHow We'll Solve it\nAtlas will augment a current bar using our analytics hub and LEDs. We will have a single-person countertop with a raised section. One side, show to the customers, has LEDs that light up when a customer is sitting there with a drink. The other side is for use by the bartender. The bartender has multiple colored LEDs that will change color based on how full the customer's drink is (using our pressure sensors). He/she can then glance around the bar and use the LEDs to determine who needs service and who doesn't. From an analytics standpoint, we can obtain real-time data and graph it for bar owners and employees.\nTeam Members\nRangarajan Thiruvengadam, Tanishq Dubey, Harrison Qu, Shray Chevli, and Alex Kapustka\n",
        "hackathon_id": "smartbarhackathon",
        "winner": true
    },
    {
        "description": "\nInspiration\nBars are fun places to go however they are lagging behind the newest technology.\nWe are trying to achieve three goals with our revolutionary cup.\nFirst, we want to let drinkers at a bar be fashionable by allowing them to customize the cup appearance.\nSecond, bars can now promote deals directly to individuals by presenting advertisements on the cup.\nThird, we want to bring in SNS experience to the cup. The smartest cup is so smart it will present drinkers with tailored news.\nWhat it does\nOur main component, the smartest cup is capable of displaying images, gif (in development), and texts.\nIt is able to change content in real-time and have animations.\nOur server is capable of tailoring tweets to our cool cup.\nHow I built it\nCup is made up of three layers acrylic plastic. The outer most layer is the cup. The second layer can hold beer. The inner layer has led lights attached and spins. We have a motor and controller that is used by drones and it can be maneuver very precisely.\nThe image and text contents are generated by our server as a bitmap. When images are given as an input, we read in pixel by pixel and get the rgb (red, green, blue) values and save the information. The information on the server is retrievable by the the cup through the arduino. When a text is given as an input, we generate bitmap style of every characters and store in the server. Our arduino checks for the newest data store on the server and present it on the cup when new information is available.\n1 x arduino\n1 x nodejs server\n1 x motor\n3 x led strips\nChallenges I ran into\nFirst challenge we ran into was representing the text as a bitmap. We needed a way to represent all 50 characters into a bitmap. We overcame it by testing out different combination of font style and getting the most legible style.\nSecond challenge was getting the images to be in sync with spinning motors. The motor speed needed to be controlled with delicacy to have an exact speed to show the texts.\nAccomplishments that I'm proud of\nThe biggest accomplishment is the fact that our members were able to collaborate really well and utilize our different speciality. Also we overcome difficult challenges by helping each other. We are happy to show your our final cup.\nWhat I learned\nThe first thing we did was to plan out before we actually started the project. Looking back, it was actually good that we took time to do this since we are very limited in time. We all agree that we had a lot of fun. We love what we tried to do and I think that was a reason we could work tirelessly\nWhat's next for smartestCup\nThere are some additional features that we planned out but sadly could not demo. We would like to be able to have better resolution so that we can display more vibrant images. This would allow us to show gif (moving images). Also our cup can possibly show football highlights.\n",
        "hackathon_id": "smartbarhackathon",
        "winner": true
    },
    {
        "description": "\nInspiration\nSome people just want to have a beer. Those people who are busy dancing, chilling with friends, or trying to catch a bus don't have time to wait for the bartender...\nWhat it does\n\nIt creates a virtual tab through an android app that tracks payments throughout the night and allows users to pay their bills through their phones.\nIt saves users time and gets them their drinks much faster.\nIt facilitates social interaction by allowing users easy ways of purchasing drinks for each other. \nIt allows bartenders access to detailed data and analytics directly from users.\n\nHow I built it\nWe wrote server side code in python and deployed it to a raspberry pi which takes inputs from volumetric flow sensors in order to track the amount of beer poured at one time. \nWe wrote client software for Android that interfaces with the raspberry pi server to open tabs and track how much beer was dispensed and how much money a user would be charged\nWe created functions to scrape real time data off of the sensor box to create a faster app.\nChallenges I ran into\nSocket communication was a challenge, so was properly configuring the raspberry pi to get sensor input.\nAccomplishments that I'm proud of\nWe're proud of finishing a functional prototype.\nWhat I learned\nHow server-client models work.\nWhat's next for Bar Flow\nExpanding the range of data collected by the server, Implementing more secure payment options.\n",
        "hackathon_id": "smartbarhackathon",
        "winner": true
    },
    {
        "description": "\nProblem\nMany times, bar-owners have no idea what is going on inside their own bar. With multiple rooms and multiple floors, it is hard to keep track of all of the patrons. \nSolution\nIntroducing Gr\u00fcve, the distributed data platform that helps owners collect analytical data and even help customers find the best bar depending on their preferred mood.\nData is collected through the Weissberger Analytical Hub (temperature, volume, brightness, foot-count, etc) and Raspberry Pi 2 (video stream). The sensory and video information are processed in real-time to calculate and determine certain qualities of the environment for the end-user, such as mood and motion, depending on the collected data. \nEverything is then streamed through our Firebase where it can be pulled from our beautiful Android App (for patrons) and to our dynamic administrative dashboard webpage (for the bar-owner).\nImpact\nWhy is this useful? Because our platform can be placed around the environment, we can then create heat maps of the most popular location of the bar to increase service in those areas, calculate vital statistical data about the general atmosphere and mood for the bar and determine the most popular activities within the bar, such as dancing or just sitting down. This way, the consumer can decide which kind of bar they want to visit depending if they want to party hard-core, or just simply chill.\nThe Team\nAnselmo Shim, Derek Chen, Akshay Shetty, Xichen Shi\n",
        "hackathon_id": "smartbarhackathon",
        "winner": true
    },
    {
        "description": "\nBuilt With\nobjective-cparseqrprovided-alcohol-analytics-api-and-hardware\n",
        "hackathon_id": "smartbarhackathon",
        "winner": false
    },
    {
        "description": "\nInspiration: In a booming college town, no one wants to go to just one bar and stay there. With BarToBar, customers receive deals on many bars in their area, get to customize their experience, and discover their favorites while allowing bars to tailor to their patrons.\nWhat it does: BarToBar is basically a portable bar. Before you even get to a bar, you can see how many people are in it, what drinks you might want to order, and even get special pricing based on your drink history. In turns, bars get an inside look on not only what customers buy at the own bar, but also what they buy at other bars in the area. Bars can analyze timestamps, pricing, and drink options to maximize profits.\nHow I built it: We used Android Studio to develop the app and Parse to store our data.\nChallenges I ran into: Storing data into Parse and then calling it from Parse took some time to figure out. We also had to try and implement Google Maps into the app.\nAccomplishments that I'm proud of: Even with little to no experience in Android Development, we were able to figure things out slowly and have something up and running.\nWhat I learned: We learned how to apply our java skills in making an app in environments we had never worked with.\nWhat's next for BarToBar: Using personal history of \"likes\" and \"dislikes\" or drinks, patrons can be recommended different drinks. Also, a rewards system based off of the number of points.\n",
        "hackathon_id": "smartbarhackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\narduinomatlabc\n",
        "hackathon_id": "smartbarhackathon",
        "winner": false
    },
    {
        "description": "\nInspiration\nMusic has the power to set the mood in the bar. We have found that when the music playing in the background is not preferable for us that we do not have the best experience. We wanted to create a more interactive bar experience. As the consumer stays a longer time in the bar, constantly refilling their drink, they will have a higher say over the music. Instant deals will be provided based on customers\u2019 favorite beers and the music selected. This idea also provides value to the bar by creating an incentive for consumers to spend more.\nWhat it does\nTunes on Tap is a mobile app that allows a user to have a say in the music. When the app is initially downloaded the user will log-in to their Spotify and their account will be synced from that moment on. When a customer arrives at a bar they will open the app and select which Spotify playlists they would like to send to the DJ. \nHow I built it\nThe server was built using Node.js and a MongoDB database. Node.js was used because it is scalable and real-time. We also created an iOS app for bar goers to use, and also a webapp in case bar goers want to bring their laptops along.\nChallenges I ran into\nAlong the way there have been several smaller roadblocks that we have overcome.\nOne specific challenge was setting up the Spotify API and getting used to authentication. That was compounded by the fact that the primary Node.js module for interfacing with Spotify\u2019s API was incomplete. Manually calling the Spotify API endpoints would\u2019ve been more complete, but more complicated. We chose to use the Node.js module instead of mixing the two methods.\nAnother was differentiating between production and development environments. This was compounded by the fact that we were using a database. In the development environment, it would be preferable to use a local database so that only one developer can tinker around with a specific database, but no one else could access it. In a production environment, using a local database won\u2019t work -- a shared database must be used.\nWhat I learned\nWe learned that the first idea is not always the best and through a long brainstorming session, an idea can morph greatly. We also realized that some API\u2019s pose greater problems than others and that by thinking critically, we managed to work around those challenges. We developed our product planning skills while under a time constraint. As a marketing major, I was able to expand my understanding of technical terms as well as learning about the process of an app being designed and built. \nWhat's next for Tunes on Tap\nEventually this app could be automated as to replace an actual DJ. We also think that this could be beneficial to integrate with programs organized by bar owners such as sports night, and trivia night\n",
        "hackathon_id": "smartbarhackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\nlovejavacoasters\n",
        "hackathon_id": "smartbarhackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\nlegopythonarduinomysql\n",
        "hackathon_id": "smartbarhackathon",
        "winner": false
    },
    {
        "description": "\nNo life is lived in black and white and colours fulfill their purpose by bring more variety and expression to our lifes. \"Don't believe me just watch!\" Our name is Couleurs and our vision is to bring people together through colors and provide them experiences that can only be enjoyed in the bar!\nWe would be actively working with the Dataflow Meter to monitor consumption of different kinds of beer in the bar and in turn, use the data to push out dynamic promotions to the general population in the bar through an iOS app.\nAdditionally, we will be utilizing a smart glass with an LED that has 4 different colors with a certain population within the bar tagged to a color, so that people with the same color can come together to socialize. The bar owner will have the option to push dynamic promotions to a certain population as well.\n",
        "hackathon_id": "smartbarhackathon",
        "winner": false
    },
    {
        "description": "\nWhat we plan to solve\nWe'd like to give people reasons to come to bars.\n\nUser can see what's going on inside SmartBar quikcly.\nUser can have more fun with other bar attendees and obtain various perks through augmented reality game called \"AngryBuds\".\nUser can drink safely by setting limit easily. \nBar owners can visualize consumption easily and collect consumer's drinking patterns.\n\nHow we'll solve\nWe will make augmented reality games. Although Angry Birds concept is used, the app can modify theme such as AngryQB, AngryGolf, AngryBaseball, AngryBowl, etc.\n\nA bar customer enters a SmartBar.\nFootfall sensor collects image with timestamp.\nThe SmartBar recognizes user profile via AngryBuds app.\nAngryBuds app changes background scene that matches bar atmosphere through light sensor and sets up Pigs with current bar users. \nCustomer purchases glass or bottle of Budweiser. POS will signal AngryBuds app.\nAngryBuds adds a Bud with SmartBar sensor information such as volume, temperature, pressure, etc. For example, A bud's color changes based on temperature.\nA dedicated bigscreen TV will start broadcasting the game. \nBud flings to Pigs who are the current attendees at the bar. \nThere can be a king Pig that user can pick as a future soul mate and ask for contact info in Cupid mode. User may choose king Pig as his rival in War mode. For example, Boston Redsox fan may use NY Yankees image. \nThe crushed Pig can accept/reject the contact request. If the Pig revenges next with the Bud as target, contact information establishes automatically in Cupid mode.\nAngryBuds app keeps the record of drinks purchased including user's favorite beer.\nThe app can set the limit in consumption and can call Uber if the user is completely drunken.\n\nOur measurement of success\nWe measure success through adaption by end-users and bar owners.\n\nRead relevant sensor values using RESTful APIs.\nVisualize sensor values through gamification.\nPopularity in app store and number of downloads.\nPeople make a good connection through this app.\nBar owners customize app to make their background more fun.\n\n",
        "hackathon_id": "smartbarhackathon",
        "winner": false
    },
    {
        "description": "\n------------------------------------------------------------------------------\n\n                       D'abort, une *\u00e9quipe* incroyable!\n\n    [1st time]   Sebastien Cabot         Papa de 2  Programmeur (sp\u00e9cialisation: hardware) --- [Papa de 2]\n    [1st time]   Pascal Prado            Papa de 3  Ing\u00e9nieur   (specialisation: m\u00e9canique - suivi du projet) [Papa de 3]\n    [3rd time]   Kevin Vicrey                       Programmeur (sp\u00e9cialisation: aspect visuel - r\u00e9partition des t\u00e2che)\n    [1st time]   Pierre Voisin           Papa de 2  Programmeur (sp\u00e9cialisation: int\u00e9gration) [Papa de 2]\n    [1st time]   Mehdi Aouami                       Designer    [\u00e9tudiant] (sp\u00e9cialisation: concept)\n    [1st time]   Fran\u00e7ois Cabrol                    Programmeur (sp\u00e9cialisation: son)\n    [1st time]   Marcial Lopez-Ferrada              Programmeur [\u00e9tudiant] (sp\u00e9cialisation: support-moral)\n\n------------------------------------------------------------------------------\n\n                             Perversion du \u00abhacks\u00bb\n\n  WearHacks\n  ---------\n\n    Les articles \u00abwearable\u00bb ont une tentance \u00e0 voir leur taille r\u00e9duite \u00e0 chaque nouvelle g\u00e9n\u00e9ration.\n\n  xxxxHacks (notre sujet ne porte rien de tecnologique)\n  ---------\n\n    Nous avons r\u00e9ussi minimaliser \u00e0 l'extr\u00eame ce que le sujet doit porter pour profiter de notre \u00abhack\u00bb.\n    Il peut \u00eatre compl\u00e8tement nu et notre hack fonctionne!\n\n  WhereHacks \n  ----------\n\n    Notre hack est un object fixe qui interagie avec ses mouvements\n\n------------------------------------------------------------------------------\n\n                                  Inspiration\n\n  Le besoin\n\n      Ma fille de 5 ans, qui ne sais ni lire ni \u00e9crire, me demande quotidiennement\n      de lui transcrire ses phrases afin de les \u00e9crire sur les cartes quelles\n      donne \u00e0 ses amis.\n\n  La solution\n\n      Automatiser la transcription pour qu'elle n'ait plus \u00e0 attendre que\n      son papa soit disponible afin d'avoir son textes.\n\n  Les buts\n\n      - Fournir une autonomie \u00e0 l'enfant pour l'apprentissage de l'\u00e9criture.\n      - Stimuler son int\u00e9r\u00eat pour l'apprentissage de la lecture/\u00e9criture.\n      - Proposer \u00e0 l'enfant un object technologique unique\n        qui peut \u00e9voluer avec lui en m\u00eame temps que ses besoins.\n\n  Les composants (\u00e0 faible co\u00fbt)\n\n      1. Technologies offertes que nous avons retenues:\n\n          ZX Motion / Estimote / Raspberry PI / Arduino / Nuance Web API\n\n      2. Ce que nous y avons ajout\u00e9:\n\n          Miroir / Micro / Hauts parleurs / adapteur WiFi et Bluetooth / JavaScript\n\n------------------------------------------------------------------------------\n\n                                  Les sc\u00e9narios\n  Sc\u00e9nario I (compl\u00e9t\u00e9)\n\n    1. Le \u00abmiroir magique\u00bb est situ\u00e9 dans la chambre de l'enfant.\n    2. Un passage de la main devant le \u00abmiroir magique\u00bb l'active.\n    3. Le \u00abmiroir magique\u00bb lui tends l'oreille.\n    4. L'enfant lui dit sa phrase.\n    5. Le miroir lui r\u00e9p\u00e8te ce qu'il a compris.\n    6. Puis ce dernier affiche la transcription.\n      6.1 . Ici on peut retourner \u00e0 l'\u00e9tape 2.\n    7. Autrement, apr\u00e8s un certain temps le texte s'estompe.\n    8. Le miroir est revenu \u00e0 son \u00e9tat initial.\n\n  Sc\u00e9nario II (non compl\u00e9t\u00e9)\n\n    ...\n    7. On pointe un mot du doigt 2 seconde pour entendre sa lecture.\n\n  Sc\u00e9nario III (non compl\u00e9t\u00e9)\n\n    ...\n    7. On approche une photo d'un destinataire (identifi\u00e9 avec Estimote)\n    8. Un passage de la main indique qu'on veut lui envoyer le message.\n    9. Le message est envoy\u00e9\n      9.1  \u00e0 un enfant: donc vers un autre \u00abmirroir magique\u00bb\n      9.2  \u00e0 un parent: en SMS vers son t\u00e9l\u00e9phone\n\n\n------------------------------------------------------------------------------\n\n       Question: Pourquoi utiliser un miroir plut\u00f4t qu'un simple \u00e9cran ?\n\n\n- Co\u00fbt\n\n       \u00c9cran: En g\u00e9n\u00e9ral, plus l'\u00e9cran est grand, plus le prix est \u00e9lev\u00e9.\n\n      Miroir: L'\u00e9cran dissimul\u00e9 derri\u00e8re le mirroir peut-\u00eatre toute taille: petit, moyen ou grand.\n              Peut importe la taille de l'\u00e9cran, le mirroir lui peut rester grand.\n              De plus, l'\u00e9cran dissimul\u00e9 ouvre la porte au recyclage.\n\n- Acc\u00e8ss privil\u00e9gi\u00e9 (disponibilit\u00e9) \u00abAlways ON\u00bb\n\n    \u00c9cran: Si l'\u00e9cran n'est pas en marche rien ne se passe.\n           \u00c0 chaque utilisation il est n\u00e9cessaire de l'allumer\n           avant de pouvoir interagir avec.\n\n   Miroir: Le mirrior est intrinsectment toujours en op\u00e9ration.\n           La plateforme technologique reste en veille\n           et s'active d\u00e8s l'instant qu'un int\u00e9raction se produit.\n\n\n- Esth\u00e9tique (chambre d'enfant)\n\n       \u00c9cran: Grand \u00e9cran LCD noir ou argent dans un d\u00e9cord de chambre d'enfant, c'est laid.\n\n      Miroir: Int\u00e9gration parfaite, aucune alt\u00e9ration visuel.\n              L'aspect technologique est compl\u00e8tement dissimul\u00e9.\n\n\n- Encombrement\n\n       \u00c9cran: Un grand \u00e9cran qui occupe une grande surface d'un mur, ou pire le dessus d'un bureau\n              et tout \u00e7a pour une utilisation sporadique.\n\n      Miroir: L'espace utilis\u00e9 est quasi nul, \u00e0 toute fin pratique indiscernable.\n\n\n- La Magie\n\n          \u00abEvery great magic trick consists of three parts or acts\u00bb\n                                                                        Le film \u00abThe prestige\u00bb\n\n      \"The Pledge\"   : Un mirror, tout ce qu'il y a de plus conventionnel.\n      \"The Turn\"     : Quelque chose qui n'est pas le r\u00e9sultat d'une r\u00e9flexion appara\u00eet sur le mirroir.\n      \"The Prestige\" : Le texte s'estompe et dispara\u00eet. Le mirroir est revenu \u00e0 son \u00e9tat initial.\n\n\n- La m\u00e9thaphore\n\n         Le miroir : Il permet de nous voir telle que les autres nous voit,\n                     seul avec soi-m\u00eame, on en profite de notre reflet pour s'am\u00e9liorer(s'embellir).\n\n  \u00abMiroir magique\u00bb :  Il permet d'entendre comment les autres nous entend,\n                      seul avec lui, on peut am\u00e9liorer nos habilit\u00e9s de lecture et d'\u00e9criture.\n\n\n- On a une relation sp\u00e9cial avec le miroir\n\n------------------------------------------------------------------------------\n\n                                Le\u00e7ons apprises\n\n- La reconnaissance vocale des enfants est un champs tr\u00e8s particulier qui est difficile de couvrir.\n\n- L'API Web de Nuance retourne plus d'un r\u00e9sultat possible de transcription,\n  souvent 3 r\u00e9sultat dont 1 est exact mais les autres farfelus.\n  On a donc seulement 33% des chances d'avoir la bonne transcription.\n\n- On ne veut pas \u00e7a: [Error affich\u00e9 sur le mirroir]\n\n\n------------------------------------------------------------------------------\n\n                                  Perspective\n\n  La plateforme que nous avons mis en place aujourd'hui \u00e0 \u00e9t\u00e9 utilis\u00e9e afin de\n  satisfaire un besoin d'apprentissage de l'\u00e9crite/lecture.\n\n  Par contre la plateforme offre une expressivit\u00e9 unique qui peut permettre de\n  satisfaire bien d'autre besoins.\n\n  Ex. Aspect de la communication entre \u00abmiroir magique\u00bb. Dans un premier temps\n      on envoie des messages texte, mais il serait possible d'envoyer des\n      animations pour surprendre notre destinataire. On pourrait d\u00e9velopper une\n      genre de \u00abApp store\u00bb pour ses applications pour \u00abmiroir magique\u00bb.\n\n  Ex. Le \u00abmiroir magique\u00bb est un portail de choix pour acc\u00e9cer \u00e0 la r\u00e9alit\u00e9\n      augment\u00e9 sans avoir pour autant \u00e0 porter de casque, gants ou autre\n      senseur sur soi.\n\n  Ex. Favorise l'exploration des maquillages personalis\u00e9s.\n\n  Ex. Aujourd'hui le miror est fixe comme l'on \u00e9t\u00e9 nos anciens ordinateur a\n      cause de la taille de la technologie. Mais avec les progr\u00e8s de la\n      miniaturisation, demain on pourrait faire le m\u00eame \u00abhack\u00bb sur un miroir de\n      10 pouces qu'on transporte avec soi, un peu \u00e0 la mani\u00e8re des tablettes.\n\n------------------------------------------------------------------------------\n\n                        D\u00e9marche, progression, r\u00e9sultat\n\nmini \u00e9cran oled\n\nmini lcd\n\nplacer un laptop derri\u00e8re\n\nutiliser \u00e9cran HDMI standard\n\nR\u00e9partition des t\u00e2ches\n\n------------------------------------------------------------------------------\n\n",
        "hackathon_id": "wearhacksmontreal",
        "winner": true
    },
    {
        "description": "\nC13_VoComi_2MQ\nWelcome to VoCoMi, the Voice Controlled Mixer! What would you like me to do next?\n\nThis is how our hack greets you. Play music with a purely voice and gesture-driven interface using Nuance TTS, speech recognition and speech understanding technologies (with a custom, overnight coded Voice Activity Detector), and the MYO armband.\nOur hack lets you navigate sound sample collections with voice, and then compose a loop using gestures.\nThe video demos speak for themselves!\nhttps://www.youtube.com/watch?v=6dSAh7H_kys\nhttps://www.facebook.com/shehaz.saif/videos/10156082573670655/?pnref=story\nOur hack does not implement analytics and is not especially relevant to healthcare.\n",
        "hackathon_id": "wearhacksmontreal",
        "winner": true
    },
    {
        "description": "\nInspiration\nhacking our way into hackathons. we never actually registered. this is fake.\nWhat it does\nwhat does it not do ? exactly.\nHow I built it\nsat in a dark room and lost track of time.\nChallenges I ran into\nbeing spoken to. showering. changing underwear.\nAccomplishments that I'm proud of\nchanging underwear.\nWhat I learned\nbeing responsive to other human beings.\nWhat's next for beatrmusic\navocado sandwiches. OFTEN.\n",
        "hackathon_id": "wearhacksmontreal",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe want to integrate  technology and help people with use American Sign Languages (ASL) to communicate.\nWhat it does\nIt has the capability to translate a limited ASL dictionary into speech.\nHow I built it\nWe use Leap Motion to read the finger motions such as numbers and letters where it translates the motions into a speech through Nuance's SDK. We also use Myo Armband to read more complicated motions that involves big movements to translate them into speech. \nChallenges I ran into\nFinding the right pattern to recognize ASL and to get a better accuracy of using tech\nAccomplishments that I'm proud of\nWe are able to combine Nuance technology with the Leap Motion and Myo.\nWhat I learned\nWe learn more about ASL and Wearables.\nWhat's next for D-SIGN\nWe would like to make communication to be more practical and accessible \n",
        "hackathon_id": "wearhacksmontreal",
        "winner": true
    },
    {
        "description": "\nInspiration\nWhile driving from Ottawa, we had a truck driver drift into our lane almost causing an accident. After recollecting our thoughts, we realized that this must be a bigger problem that others have experienced and began our research.\nWe found that in 2012, around 3900 people were killed in road accidents involving trucks and sleepy truck drivers, and another 104000 people were injured in the U.S. alone.\nThere's got to be a way to combat this.\nWhat it does\nWe were able to come up with a solution that monitors the brain activity and physical state of truck drivers and alerts them in times of loss of concentration to keep the roads safer.\nHow we built it\nDriveSafe consists of 2 major components: The Muse headband and a Pebble watch.\nThe muse headband gets EEG readings from the brain through 4 sensors and classifies it to alpha, beta, delta, gamma and theta waves in real time. The data is backed up on a cloud for further analysis.\nThe program also collects data from Muses\u2019 accelerometer, gyroscope, and blink detection. It serves to know the person\u2019s head position at all times and if their eyes are shut.\nThe algorithms we\u2019re using monitor concentration, blinking rate and closed eyes, and relative head position to send alerts through the pebble\nChallenges we ran into\nThe hardware setup, while mostly simple, introduced a small challenge in the concentration measurement method.\nAccomplishments that we're proud of\nIn the grand picture, we're very proud to have produced a solution to such an important issue and one that can literally save lives.\nWhat's next for DriveSafe\nTo optimize our algorithms to not only produce better tiredness and drowsiness detection, but to also use those algorithms and others to detect alcohol consumption, stress levels, and emotional state. Furthermore, to expand on the use of the Muse and the Pebble by using other hardware for eye detection and lane detection.\n",
        "hackathon_id": "wearhacksmontreal",
        "winner": true
    },
    {
        "description": "\nInspiration\nCommunication is the key to developing connections, but can be inaccessible to those who do not communicate orally.  Each of us in the group has been affected by an inability to fluidly communicate with someone who uses sign language as their primary form of communication. \nWhat it does\nWith the aim of a complete ASL to speech converter, our project uses machine learning and the infrared capabilities of a Leap device to detect the first six letters of the alphabet in sign and translate them with 70% confidence levels to text.\nHow we built it\nThe code we developed uses the data recorded from a USB connected Leap-Motion device to accumulate a database of a dozen or so different people signing the first six letters of the alphabet.  We used a principle component analysis (PCA) along with a random forest classification on the database to \"teach\" our program to properly interpret live input Leap-Motion data and print out to screen the signed letters as text. \nChallenges we ran into\nUnfortunately, even within the first six letters of the alphabet (all of which are static signs), the signs have similar attributes.  This makes it important to have large, varying data sets in order to distinguish letters. \nAs well, just like voices, each person signs with a different tone.  Even with something as fundamental as the first six letters of the alphabet, each hand has subtleties to them that again requires a large data base for machine learning.\nWhat's next for Hands Hear\nAs a long-term project, Hands Hear would develop into a wearable device (such as a broach or necklace) which enables an ASL native signer to sign naturally while their signs are translated in real-time to speech.  In a first step, we would expand the database for all letters in the alphabet. From there, we would use a side program developed during the project that allows a user to sign out words one letter at a time and then output them to speech. \nDeveloping the capabilities for  visual signal analysis is analogous to the development of acoustic signal analysis in the world of speech recognition.  In line with this analogy, the next step involves determining the base unit of recognition.  In oral languages this is the phoneme; for speech recognition, the triphone (or syllable depending on your philosophy).  Once this has been determined, an ASL to text converter can be developed.  With the infrastructure for text to speech already on the market, the wearable ASL to speech device becomes a reality.\n",
        "hackathon_id": "wearhacksmontreal",
        "winner": true
    },
    {
        "description": "\nSubmission name format: B5_a-team\nVideo/proof of concept: done\nDevices and technologies used: Kinect, Visual Studio, Nuance HTTP Requests\nFull Source Code (if you have questions, come see Mack at the Hardware Lab / 3D Printers): Done\nWhether or not you are implementing Analytics in your hack: No\nWhether or not your hack is relevant to HealthCare: Yes\nDocumentation\nThis is a personal assistant for your workouts. It can track you while you do a number of exercises, to ensure you have proper form and to keep track of your reps. \nCurrently the app has support for four workouts (shoulder press, bicep curls, jumping jacks, squat), although the code is scalable to track any sort of exercises.\nTo run the program, find the folder called at a-team/executable. In that folder, you will find FitPro3D.exe, which runs the program. \n**Note:\nThe body tracking and exercise comparison works best with as few people in the frame as possible. Make sure you are the only one being tracked to get the best results.\nAbout our choice of project:\nWe chose to create our program using a Kinect because it offers the best full body motion tracking on the market today. Although a Kinect is not a wearable, our technology can easily be adapted to any kind of sensor that can provide 3D coordinates of key joints on the body. In the future, we foresee a shirt or miniature stickable sensors that can give us that kind of data. Unfortunately, we are not hardware guys, and we don't think we'd be very successful at trying to build that in a weekend! \nThanks for reading!\n",
        "hackathon_id": "wearhacksmontreal",
        "winner": false
    },
    {
        "description": "\nBuilt With\nour-custom-linux-distributionmusecmachine-learningspipwm\n",
        "hackathon_id": "wearhacksmontreal",
        "winner": false
    },
    {
        "description": "\nInspiration\nGains\nWhat it does\nAttach the sensor to a weight and the app will count your curls and shoulder lifts. \nDemo part 2:  https://youtu.be/cgONKjbo13A \n",
        "hackathon_id": "wearhacksmontreal",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe were inspired to build something that would be helpful for hackers like ourselves at hackathons. Hackathons require multiple hours of staying awake, hence we wanted to build software that would help hackers stay awake and productive for long hours.\nDescription\nUsing Kinect's facial detection tools and pebble's wrist notifications, Project Vigil monitors the user's productivity level by monitoring their eyes and determines if they focused or not. Additionally, it gives the users notifications on their pebble, to when they should rest, or take a break. If the user falls asleep, Vigil monitors how long they have been asleep for and tells them to wake up at the appropriate time. \nFurthermore, all the user's data is then recorded into MongoDB and presented to the user in forms of graph analysis.\nKey Features\n-Facial Detection with Kinect\n-Monitoring Algorithms\n-Pebble Notification\n-Graphical Analysis\nWhat's next for Project Vigil\nIn the future, the kinect camera's 3D feature will be coming to regular laptops. Hence, this can be leveraged and incorporated into every laptop and thus reducing cost. Additionally, we wish to add user defined variables to better suit an individual's needs. Furthermore, using further functionalities of the kinect such as the heart rate sensor, we can build more features on it to monitor health problems such as sleep disorders.\n",
        "hackathon_id": "wearhacksmontreal",
        "winner": false
    },
    {
        "description": "\nInspiration\nMuse is an awesome technology that grant access to how we think. Would it be awesome to get brain data when testing interfaces design, program features, movie feeling or game learning curves.\nWhat it does\nShow data of brain activity and screen capture to analyse the behavior of users testing an app, a video game and more, with the muse headband.\nHow I built it\nWe used a python framework (Turbogear) as a backend to deliver the data streamed from the muse and a desktop app to a web dashboard interface.\nChallenges I ran into\n\nLearning how to use the information provided by the muse.\nNew technologies and language (network, backend)\nMaking work together many languages and frameworks\nPackaging of the solution so it can be used by many (Docker file)\n\nAccomplishments that I'm proud of\n\nLearning so many things in a short period\n\nWhat I learned\n\nHow to use websocket, ftp and sftp file upload\nNew language : python\nShell usage\nHow to build a web server from scratch\n\nWhat's next for QAmuse\n\nDesigning a dashboard for tablets and phones.\nAdd other metrics:\n    - Eye motion tracking (with webcam/camera)\n    - Mouse and keyboard heatmap\n    - Ability to see many users at one time\n    - Pulse and body motion\n    - Live data\n\n",
        "hackathon_id": "wearhacksmontreal",
        "winner": false
    },
    {
        "description": "\nWearhacks 2015\nD5_VuWall Motion\nInspiration\nIron Man.\nIn all seriousness, our team comes from the video wall market where we have customers who would like to collaborate on a video wall in their board room or meeting room using touch screens. But in reality this is unusable! Imagine a 5x5 wall with 55 inch screens in a board room for a total diagonal of 275 inches. First of all if you are touching your video wall at one end you will not be able to clearly see what is at the other end so every time you move a window you will have to move back to a reasonable distance. And then there's the fact that not everybody is 9 feet tall so unless you run a company of giants, your board room is gonna need a ladder.\nWhat it does\nWith the Myo armband, you have full gesture and motion control of your desktop windows\n\nUses hand poses to interact with available windows\nUses gyroscope data to detect spacial orientation and associate the cursor on the screen\nSupports sequences of poses\nSupports multiple connected Myo armbands at the same time\n\nChallenges we ran into\n\n3D calculations using quaternions, euler angles and directional vectors.\nAccelerometer data not accurate enough for 3D positioning.\n\nAccomplishments that we're proud of\nWe got 40 green, mean, and lean passing tests (integration and unit). Like a boss.\nWe also achieved multi myo band window control and collaboration.\nWhat's next for VuWall Motion?\nUtilization of more gestures, resizing of windows, transition animations, integration with VuWall2 (recalling layouts, calling scripts, talking to network devices such as lights or blinds)\nThe greatest improvement would be using Euler angles only for screen positioning so the calibration would tell the software at what angle the edges of the screen are and this would allow us to get rid of the distance from screen.\n",
        "hackathon_id": "wearhacksmontreal",
        "winner": false
    },
    {
        "description": "\nPet Therapy is a game using the Leap Motion allowing players to pet a cat! Experience the soothing and peaceful experience of petting a digital cat - it's almost like petting a real cat!\nInstructions: -Press A and D to rotate the cat\n",
        "hackathon_id": "wearhacksmontreal",
        "winner": false
    },
    {
        "description": "\nInspiration\nEverybody who goes dancing at the club wants to find the place where people are having the most fun. People don't like to be stuck at dead areas, you know.\nWhat it does\nOne way to measure approximately how much fun someone is having is by monitoring their heart rate. Using a wearable sensor* and Estimote beacons placed throughout the venue, the iPhone app measures the wearer's heart rate and location. This information is sent every two seconds to a local server hosted on a Raspberry Pi. An average heart rate is calculated for each \"area\", and that is reflected as a colour gradient back on the user's phone. Areas with higher heart rate averages are redder; those with lower averages are greener. This way, clubbers can easily find the area where people are having the most fun.\n*For the demo, the user's heart rate is adjusted with a slider in the app.\nHow we built it\nAn Apache2 web server is hosted on a Raspberry Pi and given an IP address. The phone sends the user's information via a GET post (encoding it in the URL). The response from the server contains the calculated values, including the locations of each beacon specific to the room, and the average heart rate in each area. The phone parses and interprets the information, then shows it graphically to the user.\nChallenges we ran into\nBy nature, Estimote beacons are limited in their ability to accurately calculate distances, as signal strength is susceptible to attenuation from interference. This could sometimes lead to discrepancies with which area the user is located in.\nAs well, the team had only one iPhone to simulate a situation that should in reality involve tens or hundreds of people. In order to create an \"average\" heart rate of many users, each instance of the app is given a unique ID. This means that terminating the app creates a \"ghost\" user that remains in its location and whose heart rate is taken into account.\nAccomplishments that we're proud of\nThis is the first IoT project that we successfully finished.\nWhat we learned\nWe learned how to manipulate and manage MySQL server, and communicate with devices through Wi-Fi.\nWhat's next for FunFinder\nThe most important step in making this project a reality is finding a way to incorporate a very cheap heart rate monitor circuit into disposable wristbands. This way, they can easily be distributed to people as they arrive and do not need to be returned.\n",
        "hackathon_id": "wearhacksmontreal",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe wanted to provide game that utilizes multiple wearable technologies in a fun and healthy way. \nWhat it does\nIt uses the nod ring to control a space ship in the game which is used to destroy asteroids that are the size of planets that are coming at you from random directions in a Unity-made game. \nIt also uses the Estimote beacons to have a second player that moves from one beacon to the other in order to win the game and to change the state of the first player. The first player could be on fire due to the Android device being close to one beacon and the fire could be extinguished when the second estimote beacon, which could be on the other side of the room, is reached. \nThis means that the game has to be cooperative and that's why we named it Galactic Cooperation. One player has to motivate the other player to run faster from one beacon to the other in order to extinguish the fire, while the first player has to concentrate on destroying planet sized asteroids. \nIf the second player doesn't extinguish the fire for in a couple of seconds, the they both lose the game. This gives an extra layer of challenge where neither of the players are allowed to lose focus on their own tasks.\nHow I built it\nWe used Unity engine to make the game and the logic for the nod ring itself and Android Studio to make an Android app that connects to the Unity-made game using TCP sockets and the estimote SDK. \nThe estimote beacons are constantly detected using Bluetooth 4.0 low energy and we are able to know if the first beacon is 'fire' and the second beacon is 'extinguish' due to the fact that they have unique ID, major and minor.\nWe also know how far the beacons are due to the fact that we are using estimote SDK to range monitor the signal strength of the beacons and convert the signal strength to meters (distance).\nThe Unity engine is able to directly get the nod ring coordinates in 2D space because we are using nod ring libraries and SDK for the Unity engine game portion. This means that the Nod ring could be connected via Bluetooth on a Mac or a PC, since Unity is cross-platform. \nThe Android device is constantly detecting how close you are to each estimote beacon and once you reach a certain beacon and a certain size (~ 0.5 meters) it sends a Socket byte packet to the Unity engine to either light the space ship on fire or extinguish it, which means that the Android player could be very far away from the computer that runs the game and it will still connect via WiFi.\nMinimum Android version needed is Android 4.3\nChallenges I ran into\nBeing able to connect Android to Unity engine, we needed to create a C# Socket server and a Java client that constantly need to maintain connection in order to send the 'fire' and 'extinguish' beacons. This was very time-consuming as the sockets are blocking and we need to properly thread each of the socket implementations to make it work both ways (Android with Estimote and Unity with Nod Ring).\nAccomplishments that I'm proud of\nWe are very proud of the fact that we were actually able to build a full finished project on our first (for Adrian) and second(for Maksim) Hackathons.  \nTo individually learn to use so many new subjects and tools that we were not taught in our CEGEP computer science program as well as implementing subjects we were taught in a professional and then to be able to bring all of these aspects together into one big project that just works. \nTo be able to finish the project in less than 48 hours is quite an accomplishment and we are both proud of that fact.\nWhat I learned\nWe learned to use sockets (client/server), we learned to use estimote SDK and to range the signal strength of them, as well as learned how to use the nod ring in a Unity environment.\nWhat's next for Galactic Cooperation\nWe plan on polishing it up and hopefully submitting it as a free game and perhaps even implementing other wearable technologies for even more players to increase cooperation.\n",
        "hackathon_id": "wearhacksmontreal",
        "winner": false
    },
    {
        "description": "\nNeatSpace\nUse beacons to find out where employees spend their time in-office to better plan spaces for productivity and collaboration\nBeacon Application\nEmployees can run a beacon application on their laptop that will keep track of how much time they spend in different rooms in an office and report to a central server about these \"sessions\".  The application uses the laptop's builtin bluetooth card to detect when it has come into the proximity of an estimote and when it is leaving its proximity.\nAnalytics Application\nEmployers can run the analytics software that will collect information from employees and generate helpful graphs about where employees are spending their time. They can use this information to:\n\nMake more informed choices for future office choices\nSchedule collaborative work in ways that will not disrupt productivity\nDesign communication policies to improve focus\n\nIf only we had more time!\nIn the future, this application could be extended to report more information from estimotes, such as temperature information.  It could also easily grow to compute more useful statistics and generate more graphs.  For more short-term value, the beacon application could also be extended to integrate with Slack to notify colleagues of when an employee enters a quiet zone and thus would prefer to not be disturbed.\n",
        "hackathon_id": "wearhacksmontreal",
        "winner": false
    },
    {
        "description": "\nInspiration\nCombatting depression as it effects everyone even if only indirectly and affects the potential for human flourishing.\nDepression is a debilitating condition which requires careful attention and so we aim to introduce scientifically-based design choices to best suit the needs and opinions of mental health care professionals.\nWho is the team\nA diverse group of Hackers, developers, communicators and designers\nWhat it does\nAmi-app seeks to provide data-driven insights to mental heath-care professionals about their patients in between sessions. By delivering a platform that can easily be refined by scientific knowledge from the world of psychology, we wish to see this application grow to be useful for professional therapists and patients alike.\nWho is it aimed at?\nPaying market ($\u00a3\u20ac\u00a5)\nPsych pain\nPsychiatrist\nformerly depressed patient\n( and anyone else ! )\nWhy ?\n\nfollow up\nStability\nprogression\npride \n(+ alert if crisis )\n\nHow ?\nBy offering a warm, caring, friendly interactive app to patients undergoing therapy, we provide their psychologists/psychiatrists with data driven insights for the often long periods in between visits.\n\ninteractive \ncompanion \n\"Talk to self\" - uses nuance communication latest API\nQ + A\nReport\n\nHow we built it\nWe tried to do a reactive meteor website with mongodb but it had problems so we redid the backend and finally settled on nodeJS and deployed it with Heroku.\nWe are still integrating NLU technology but development is under way.\nWhat's next for Ami-app\nAt wearhacksMTL 2015, team Ami-app is leveraging Nuance's Natural Language Understanding technology to deliver an application prototype poised to enhance patient care in the mental healthcare profession. \nTherefore, moving forward, we wish to deliver a platform upon which the scientific community can participate in iterating the application towards an effective treatment enhancing solution. \nThis technology integrates seamlessly with existing text-based medical software developed in Montreal in the psychiatric field.\n",
        "hackathon_id": "wearhacksmontreal",
        "winner": false
    },
    {
        "description": "\nInspiration\nIt helps you to remember stuff easily and makes life a whole lot easier.\n",
        "hackathon_id": "wearhacksmontreal",
        "winner": false
    },
    {
        "description": "\nharrawr\nThe exotic horror game you have come across ! \n",
        "hackathon_id": "wearhacksmontreal",
        "winner": false
    },
    {
        "description": "\nInspiration\nWith NLU technology provided by nuance.com, a software we got acknowledged with in the WearHack event, a idea of using speech to text software to make a virtual staff came up to our mind.\nWhat it does\nIt simulates as a staff in Subway that can take your order by talking to you and finally build a pizza based on your description,by doing this, imagine a scenario you are in rush and has no time to line-up for ordering food, you may use such a voice-command app to order your sandwich/hamburger in advance to go to the store, this will save the your time on buying your meal. More on that, instead of other conventional on-line food ordering App which you have to browser and watch your App all the time, you may voice-command to finish your order, this function may apply into the case you want to order something when you are driving, and we think our app can apply to all other fast food restaurant (MacDonald, Burger king) as well. \nHow I built it\nUsing java to build it's logic and database, and you Bolt to train build up and train the language understanding intelligent. And then combine and test them on our android device.\nChallenges I ran into\nIt wasn't easy to get familiar with the Bolt. The training process and database design was really time consumed. To make the virtual staff seemed more natural, a lot of logic was used to realize its functionality. And all language bases cost a lot of time of us.\nAccomplishments that I'm proud of\nBut, it really worth it. As the robot can talk to us and serve us like a real human, recognizing or voice and understanding the sentences, we are proud of the work we programmed.\nWhat I learned\nWe learned speech to text and text to speech, and logic constructions in this project, including a lot experience of android application developing, uses of API etc.\nWhat's next for Subway_Samaritan\nTo make it more intelligent, and can cover more cases, even learn scenarios on its own by feeding it with big data of real sentences. That would perfection its performance.\n",
        "hackathon_id": "wearhacksmontreal",
        "winner": false
    },
    {
        "description": "\nInspiration\nCoffee is just so... 20th century. By combining the most cutting-edge technologies of today, we have created the  ultimate mind-altering chemical dispensing \"Thing on the Internet\" device. You've heard of IoT furniture, utilities, and entertainment. Now we bring you... IoT beverages.\nWhat it does\nYou can control it using SMS. It turns off automatically using computer vision. We have a sophisticated access-control system managed entirely via SMS. It makes coffee.\nIt sends you fortune cookie quotes.\nHow I built it\nWe took an ordinary $20 crappy little drip coffee machine and brought it... to webscale.\nA Raspberry Pi acts as the main controller for Twilio, OpenCV, and of course for coffee making.\nChallenges I ran into\nDealing with voltage drop across transistors. Also strings in Redis. Holy shit. False != False evaluates to True.\nAccomplishments that I'm proud of\nMaking this badass coffee machine.\nWhat I learned\nCoffee is really great. Especially if you can brew it over SMS. Just makes it taste that much better.\nWhat's next for Text4Coffee\nWe're going to think about that over some Internet coffee.\n",
        "hackathon_id": "wearhacksmontreal",
        "winner": false
    },
    {
        "description": "\nMotivation\nRemember the time when you were comfy in bed, but the lights were on and you didn't feel like getting up? Well, that's what teachers ask in history class because ever since Monica, your personal assistant, you will never have to worry about this kind of struggle...again!!\nWhat Monica does\nMonica employs a complex network of electronics encompassing a Particle Photon, Raspberry Pi, and voice recognition technologies to control electric devices all around in a seamless fashion. Its functions range from checking Facebook notifications to loading Spotify playlists, cooking rice to telling jokes. Monica potentially covers all household chores, letting you capitalize on that time to work on what really matters.\nHow it's built\nA elementary layout to illustrate the circuitry would look as follows:\nUser talks. Microphone picks up voice. Photon sends the signal to the Raspberry Pi. Pi runs a program to convert speech to text. Pi analyses text and executes command. Pi converts text to speech. Pi sends the signal to speaker\nChallenges we ran into\nAs of now, we've spent almost a day dealing with the inadequate wifi. \nDealing with undocumented Particle Photon was hard, mainly because of the lack in example projects and libraries. We couldn't get the Photon to output sound waves to the speaker. \nAccomplishments that we're proud of\nMonica can communicate with Wolfram alpha. \nWhat we learnt\nWe should do further research on the hardware before deciding to use them. ie: We chose the Particle Photon for its Wifi integration, but we didn't expect it to process audio waves at a resolution (too low) that the speech-to-text program has trouble recognizing the voice.\nWhat's next for Monica\nAsk Monica. Making it more \n",
        "hackathon_id": "wearhacksmontreal",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe were inspired to make the Pea Pod possible because vast majority of patient we see at the clinic and emergency room are suffering from cardiovascular disease and many of them do not know enough to maintain their own health.\nWhat it does\nPea Pod was design to help inform and alert the user about their personal cardiovascular health. When Pea Pod detect any abnormal rhythms an alert and information (recommendation and educational information) will be transmitted to the user so they can make the best decision for themselves.\nHow I built it\nUsing a Intel Edison and the Arudino breakout board, we were able to attach a buzzer and a muscle sensor that we specifically used to read the heart beat. Moreover, using a LCD attachment that can visually show data as well as a portable battery to have the entire device portable.\nChallenges I ran into\nMain challenge was the high learning curve with software and hardware such as Intel Edison, Docker, and Intel Edison. \nAccomplishments that I'm proud of\nUsing the 3D Printer to create a physical prototype of our product.\nWhat I learned\nWe have learned how how hard it is to create something from start to finish within 24 hours. Moreover, how complex and resources that goes into building simple device such as the hear rate monitor.\nWhat's next for PeaPod\nWith this being a very crude and early design, we will continue to expand my expertise in electronics and use that to close the gap between the initial idea and the final product for future hackathons.\n",
        "hackathon_id": "sasehack2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nnode.jspythonscikit-learnarduino\n",
        "hackathon_id": "sasehack2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nintel-edisonsparkfun-heart-rate-monitorpython\n",
        "hackathon_id": "sasehack2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nRunning can be a boring task sometimes and many of us often lose motivation. We are working on an app that will enable runners to run with people all around the world, form celebrities to professional athletes and keep them motivated!\nWhat it does\nHow I built it\nChallenges I ran into\nAccomplishments that I'm proud of\nWhat I learned\nWhat's next for BandRunner\n",
        "hackathon_id": "hackdartmouth2",
        "winner": true
    },
    {
        "description": "\n\u201cSleep, those little slices of death; oh how I loathe them.\u201d\n                                                                                              -Edgar Allan Poe\nInspiration\nThe importance of sleep is a hot topic in science right now. Research suggests everything from several mini power-naps a day to giving up alarm clocks to shifting the school day later. Falling asleep is hard, but staying awake is harder. When you\u2019re on a deadline and down to the wire, sleep is often the first thing to go. When you pulled a double shift and are driving home at zero-dark-thirty, you can\u2019t afford to doze off. If you\u2019re waiting up late for a roommate or family member, you don\u2019t want to pass out. There are so many times when you prioritize consciousness and productivity over the bags under your eyes. Caffeine or loud music can help, but are not always affective and generally disruptive. We want to let you sleep on your terms: only when you choose.\nWhat is Jolt?\nJolt is an IOS app, written in Swift, that collects data from the Microsoft Band, a wearable fitness tracker. By analyzing data on the wearer\u2019s motion and heart rate, Jolt is able to predict when you\u2019re close to dozing off. It notifies you with a haptic notification, which can be turned off on both a phone and the Band itself. There are low and high priority settings that represent different intensities. If a user is driving, they cannot dose off for even a moment, and can utilize the high priority setting that will buzz them fully awake when they have not yet fallen asleep. Low priority is better suited for students or workers, who can accept getting closer to dozing off if that means fewer interruptions.\nHow We Built It\nWith a lot of help from Stackoverflow. \nHow We Did It\nThe main technical challenge was calculating sleep onset. We skimmed a lot of papers that all had different biological markers for when a person actually falls asleep. We experimented for most of the night--hackers make ideal test subjects--to figure out a trigger that wasn't too conservative or frequent. We ended up with a complicated set of constraints. We first determine if the gyroscope has moved recently, and if it hasn't, the first test has passed. Then we examine current heart rate against the average value. This average is frequently refreshed with small sample sizes, but only when the subject is moving. We found that if we factored in \"still\" heart rates, the average came too close to the sleeping rate. We also added a sloth factor. If the user doesn't move for an extended period of time, the criteria for sleeping heart rate slowly rises. This is best suited for athletes, who's heart rate's don't change nearly as much upon sleep onset. In their case, even if their heart rate doesn't drop below the appropriate percent, the percentage keeps increasing. This sloth factor is reset if the user moves again.\ntl;dr: If the user's heart rate drops too far, we wake them up. If he or she stays still for a long time, we prompt them to move.\nChallenges We Faced\nWe came to Dartmouth thinking that we'd use the Apple Watch as our wearable-of-choice. We'd never developed with it before, and had borrowed a couple from friends to test out. We struggled for about five hours before we figured out that the Watch couldn't do what we wanted. Despite having the sensors we needed, we couldn't access heart rate data when the phone was off, making it unusable for monitoring. We switched over to the Microsoft Band--another wearable we weren't used to--and went for it. Thankfully, we were able to access sensor data and the documentation was very thorough. \nAccomplishments\nOur team came into this hackathon with a huge range of experience and skills. For two of us, this is our first hackathon. That alone is something we are proud of. But we each picked up some new skills. Alex learned how to write Swift. Claire learned how to mock up a UI. Lee developed with wearables for the first time. We are better and badder than we were a day ago, and that's pretty cool. \nLooking Forward\nJolt works pretty well, but we\u2019re not done yet. In the future we\u2019d like to expand Jolt\u2019s functionality to incorporate a skin temperature analysis, which would improve our accuracy. We\u2019d also like to create an Android version of the app.\n",
        "hackathon_id": "hackdartmouth2",
        "winner": true
    },
    {
        "description": "\nBuilt With\nnode.jsreactjsexpress.jsazureindicochromemicrosoftbing\n",
        "hackathon_id": "hackdartmouth2",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe are international graduate students who have just come to Dartmouth. Having a very hectic academic schedule to follow, we have no time to cook food for ourselves. Further we are not that insistent on spending large sums of money on food from restaurants outside. In the initial weeks we had to attend a lot of orientation meetings which provided a lot of free food for us thereby saving us the trouble of having to find food. Over time we have come to understand the power of free food within the campus and how searching for free food is a integral part of graduate student life. But finding free food in this large campus is very difficult and students have to dig a lot to get them. As the saying goes 'Necessity is the mother of invention', we decided to empower graduate students with technology to find free food within the campus.\nWhat it does\n-App to find free food within the campus.\n-Most of the information is available online to students.\n-But hidden beneath all the pages of the university.\n-Student has no time to look at it or search for it.\n-Students forget the information.!\n-foodRoach to the rescue.\n-Inspired by the mighty cockroach which can find food anywhere.!\nHow I built it\n\nWe basically crawl the Dartmouth events website. \nPerform fuzzy search using Algolia. \nRails app provides a REST API for the android app\nThe android application accesses the REST API provided by the rails app and communicates with the Microsoft Band. \n\nChallenges I ran into\nGeo-Encoding not accurate enough.\nOur own fuzzy search for geo-encoding.\n3 major platforms \u2013 Smart Phones, Smart Band, Web Application\nNo accurate data source for Hanover available.\nAccomplishments that I'm proud of\nDeploying to mobile, microsoft azure and the microsoft band! Implementing mobile app, smart phone application, Ruby on Rails, and NodeJS, and solving a real time problem for Dartmouth Students! \nWhat I learned\nValue of time\nTeamwork\nDivide and Conquer\nHow to handle pressure, adrenaline rush\nNot drink too much caffeine\nSolving realtime problems with an organised thought process \nHow difficult geo-encoding is (Especially in NH)\nNo events happen in NH (At least on Meetup) :(\nIntegrating Smart phones with cloud, and smart bands, to deployment (All done and decided on the fly!) \nWhat's next for FoodRoach\nShare the free food.!! \u2013 Goal of reducing food wastage \u263a \u263a\nAdd more institutions under the umbrella.\nPublic domain search.\nCrowd sourcing and ratings \u2013 Share the love.!\n",
        "hackathon_id": "hackdartmouth2",
        "winner": true
    },
    {
        "description": "\nBuilt around indico\u2019s powerful machine learning API,\naggregater pulls together articles from top news sites\nacross the web and brings them together. Summarize\narticles to get just the facts in seconds, or dive deep\nand see all sides of the story with indico\u2019s\ngroundbreaking Political Analysis functionality.\nIt\u2019s the news, equalized.\n",
        "hackathon_id": "hackdartmouth2",
        "winner": true
    },
    {
        "description": "\nInspiration\nDartmouth has a problem - a huge one actually. Since we first ran around the bonfire during Homecoming, Dartmouth students have faced obstacles in maintaining friendships, from a busy academic schedule to the unpredictable D-Plan. Too often, students promise and say: \u201cLet\u2019s Get a Meal!\u201d but never are able to schedule it\nWhat it does\nWe developed an app that takes the hassle out of scheduling. With a quick shake, the 2 students are able to immediately schedule a meal together to catch up. Let\u2019s GAM makes that meal a reality. Users are able to register and login with Facebook. When users encounter each other and want to schedule a meal while meeting on the go, they simply just shake their phones at the same time and Let\u2019s GAM will automatically look at the two parties\u2019 calendars to schedule a meal during their next common availability. No need to pull out their calendars and guess and check availabilities. Let\u2019s GAM does it instantaneously. Meals are organized chronologically and are automatically scheduled into both users\u2019 calendars. By setting a date and time on their smartphones , students will be more likely to meet. There\u2019s also the function that allows users to click on scheduled meals on the app to start chatting via Facebook Messenger to talk logistics before the meal. \nHow I built it\nWe built the app with android. The backend was built with Parse\nChallenges I ran into\nThere were 2 major challenges: detecting when 2 people shake their phones, and then going through their calendars to to figure out intersecting available hours.\nWhat's next for GAM\nWe hope to implement it on campus to help create a tighter community at Dartmouth. Those red cups during 2012-13 didn\u2019t quite work in helping people eat together at FoCo but we hope Let\u2019s GAM will bridge the gap.\n",
        "hackathon_id": "hackdartmouth2",
        "winner": true
    },
    {
        "description": "\nInspiration\nWhat does a \"like\" mean in social media anymore? Has it become something less meaningful? We wanted to bring more human emotion to the \"like\" button and to emojis.\nWhat it does\nUsing your laptop's webcam, we capture your reaction from an Instagram post on your newsfeed as either positive or negative and like posts on your feed accordingly!\nHow we built it\nWe used the Indico.io and Instagram APIs, along with Python, Flask, Webcam.js, Javascript, HTML, CSS.\nChallenges we ran into\nToo many to name.\nWhat's next for Smile to Like\nDeployment and possibly an Android and/or iOS app!\n",
        "hackathon_id": "hackdartmouth2",
        "winner": true
    },
    {
        "description": "\nBuilt With\npythonmicrosoftazureflask\n",
        "hackathon_id": "hackdartmouth2",
        "winner": false
    },
    {
        "description": "\nInspiration\nThere is no free alternative to this useful software, so we tried to create it!\nWhat it does\nMakes a flowchart based on the code in a file.\nHow we built it\nPython with svgwrite.\nChallenges we ran into\nLack of sleep.\nAccomplishments that I'm proud of\nEthan: \"It does a pretty good job at parsing things\" (well formed python that is)\nWhat we learned\nHow much we actually love staticly typed languages.\nWhat's next for Flowchartr\nMaking it for multiple languages and fixing the bugs.\nUsing existing documentation formats like Doxygen to make less code-y and more informative flowcharts.\n(note: this is a working title. When stable, it will most likely be on Github eventually)\n",
        "hackathon_id": "hackdartmouth2",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptjsonpythonajax\n",
        "hackathon_id": "hackdartmouth2",
        "winner": false
    },
    {
        "description": "\nBuilt With\ndelete\n",
        "hackathon_id": "hackdartmouth2",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptcsshtml5azurefacebookgoogle\n",
        "hackathon_id": "hackdartmouth2",
        "winner": false
    },
    {
        "description": "\nBuilt With\nindicoyoutubegoogle\n",
        "hackathon_id": "hackdartmouth2",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptindicoyoutubenoodlejsangular.jshapihtml\n",
        "hackathon_id": "hackdartmouth2",
        "winner": false
    },
    {
        "description": "\nInspiration\nSometimes when we go to a restaurant, we may look at the menu, but do not wish to take the time to enter the restaurant\nWhat it does\nFoogle uses location tracking to find nearby restaurants and automatically links the user to their menus, without the need for users to take the time to enter the multiple restaurants or search for their menus online. Users can also click on their menu and go to their website.\nRestaurants sign up for the service.\nHow I built it\nWe used Android Studio to develop the android app. We used Parse for the Backend.\nChallenges I ran into\nWe were unable to include push notifications, but decided that this was an extraneous portion of the app, as people would not need notifications outside the use of this app\nWhat I learned\nWe learned a lot about using Java through the use of Android Studio, as well as designing logos and images in Illustrator.\nWhat's next for Foogle\nWe hope to add options for the user to choose certain criteria for restaurants they want to eat at. These include options for price range, vegetarian or gluten-free options, and average customer review.\n",
        "hackathon_id": "hackdartmouth2",
        "winner": false
    },
    {
        "description": "\nEver find yourself taking pictures with a new friend that you met? Friendm=Me is a great way to become friends with them on Facebook using a fun new technique.\nWhen you download the app for the first time, you will upload a picture which looks like you so that we can get a facial recognition baseline, and you will also associate your Facebook account with the photo. Then if you take a selfie with a new friend you just met (and they have previously used the app), the app will recognize your friend using Kairos facial recognition and offer you a prompt to add them on Facebook!\nThe app was built in iOS with a Node,js backend and API calls to Facebook and Kairos.\n",
        "hackathon_id": "hackdartmouth2",
        "winner": false
    },
    {
        "description": "\nInspiration\nSometimes when you're in a bit of trouble and need some help, you wish you could just shout your struggle to the world and have some kind-hearted person help you. Maybe you are a good samaritan who likes to help others with small tasks, but don't know where or who needs help. This application seeks to bring together those who request help and those who are willing to give it.\nWhat it does\nIt's the middle of winter; you are sick in the River Cluster dying for a cup of hot tea. You mark your position on Together App with the label \"Sick in the River; Can someone please please please bring me a cup of tea?\" By the magic of human kindness a fellow student brings you what you most hope for to ease your illness. This is what Together brings.\nUsers can log in to the application to do one of two things: see what posts for assistance there are for people who are nearby, or post a message to request assistance. \nHow we built it\nWe developed the entire app in Android Studio. We used Parse for back end services and Google Maps for location services.\nChallenges we ran into\nThe google maps and parse APIs were both unintuitive to use. Synchronous development of using different APIs created problems in merging dependencies.\nAccomplishments that we're proud of\nIntegrating multiple API's into a final working app. Creating an app that promotes social good.\nWhat we learned\nUsing multiple SDK's takes substantial effort to make them work while also screening out redundant dependencies.\nWhat's next for Together\nA more robust and fluid user interface. A more interesting point system. Real time global rankings. Facebook login and rankings within friend groups.\n",
        "hackathon_id": "hackdartmouth2",
        "winner": false
    },
    {
        "description": "\nInspiration\nOur inspiration came largely from our own personal experiences as incoming Dartmouth freshmen. For us, it is difficult to acclimatize and find events we may be interested in. Aside from the publicly announced club events, there is a whole new region of fun, informal events. Organizing and publicizing spontaneous events was a hassle - until now.\nWhat it does\nDarthub is meant to offer students a way to connect with each other to participate in casual events such as pickup sports games, late-night food runs, or watching a movie. This eliminates the need for mass emails and makes sure no one misses out. \nHow I built it\nAll the front-end of the website was built by Michael with HTML and CSS. It was all built from scratch, which is impressive to say the least. The backend was worked on by the rest of the team. We decided to go with Parse because it would allow us to deal with minimal backend coding. The Android app was completely designed and created using Parse as a backend by Agastya. Seb created the layout for the IOS app as well and helped with coding and debugging the backend. Nathan did a large part of integrating Parse with the website.  \nChallenges I ran into\nOne of the large challenges was making sure all of our parts fit together. We really had to work as a team to integrate the frontend seamlessly with the backend and also to have the android and website use the same database. Additionally, for some of the errors we had with our website, the error would only appear on certain computers, while other computers worked fine. \nAccomplishments that I'm proud of\nI have to say bringing everything together was the proudest accomplishment. Seeing the gorgeous frontend mesh with the backend code in such a small amount of time, as well as see the Android app come to life will remain a proud moment for our entire team. \nWhat I learned\nI learned massive amounts about Parse and how to integrate it across IOS, Android, and websites, using Javascript, Swift and Java.\nWhat's next for darthub\nWhat our team would love to see happen with darthub is just for the community at Dartmouth to use it. We would love, in the future, to continue to expand our idea to other schools and wherever people want to create pickup-games or other relaxed activities.\n",
        "hackathon_id": "hackdartmouth2",
        "winner": false
    },
    {
        "description": "\nInspiration: Dartmouth invented Pong, and all was good. Without Dartmouth, the world would be in a dark, dark place. This family friendly game has allowed many around the world to bond over the shared love of Dartmouth goodness. I for one, have enjoyed playing pong (strictly water, of course) over the last few weeks I have spent here. I have learned techniques and finesse far beyond the scope of my age, and attained wisdom I would not have achieved if not for pong. For one, I have realized that inner peace really pays off. I guess what I am trying to say is that I hope this app fosters lifelong friendships, teaches ageless lessons, and promotes healthy competition.\nWhat it does: Our app provides a competitive ranking system for pong players. Our app enables users to rank themselves and set up games with other players to improve their ranking.\nHow I built it: Our app has two sides: the client and the server. The client consists of a simple Android app that provides the user with personal stats as well as ranking with other players. The client also allows users to challenge each other in games that effect each player\u2019s ranking through an elo system.  The azure hosted server side consists of a simple API written in python using the Restful library for http requests. The server also maintains a SQLite database for storing and retrieving player data.\nChallenges I ran into:\n--Django configuration issues\n-Realized we only needed Django for HTTP requests and database handling, so we scrapped the entire Django VM\n-Switched to using Restful and JSON to handle HTTP requests and transmitting data between the app and our Azure based server\n-Another problem with JSON was that we were limited to sending single large strings at any time\n-This made it very tedious to parse requests/data sent to the app and server side, much more difficult on the Python side due to ease of modifying strings in Java and relative difficulty on Python\nAccomplishments that I'm proud of\n-William: Figuring out how to integrate Restful and JSON into the app and server sides to transmit data (this took a VERY long time)\n-Vibhor: Creating a data structure and complicated string parsing methods in Python using SQLite3, especially since I only learned Python on Codecademy almost exactly one month ago \nWhat I learned\n-Data Structures, how they function and how to set them up efficiently\n-How to use Android-Studio\n-Json\n-Data Management\n-Front-end back-end connectivity\n-Data transmission\n-VM Setup\n-Azure usage\n-Better grasp of classes\nWhat's next for DPong\n-Adding more schools broadening demographics\n-Adding public/private games\n-Scalability testing\n-Build into larger app to replace the inefficient Dartmouth student apps available publicly today\n",
        "hackathon_id": "hackdartmouth2",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonhtmlindicomicrosoft\n",
        "hackathon_id": "hackdartmouth2",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe love virtual reality, and we love space.  We saw that NASA just released this huge 3D map of Mars, and we found a feature where you could download STL files of parts of the map, so we decided to become rovers in VR and trek around the Red Planet.\nWhat it does\nYou are a rover.  Hear your tires screech.  Rove.  Rove really really fast.  Like fast enough it would be illegal on Earth.  All over the actual, real, data-based topography of Mars, beneath a super cool Mars sunset sky.  All in glorious 3d virtual reality in an Oculus Rift.  (only controls are WASD).\nHow I built it\nWe downloaded a portion of the Mars topography map, turned it into an OBJ, put it in Unity, set up some super sophisticated physics scripts for the car motion, added the Oculus SDK and partied.\nChallenges I ran into\nWe had not worked with car control or physics scripts like that before and it took us a while to figure it out.\nAccomplishments that I'm proud of\nGetting this in on time, honestly.\nWhat I learned\nTo figure out my idea earlier so I'm not so crunched for time!\nWhat's next for Whoa, Mars!\nWe want to make this open source online and let anyone use and improve it!\n",
        "hackathon_id": "hackdartmouth2",
        "winner": false
    },
    {
        "description": "\nInspiration\nMeasuring an abstract value has always been a challenge. Advances in technology, particularly machine learning, have enabled us to represent the feelings of people as quantitative values. Thus, we set about using the indico API to do just that.\nWhat it does\nOur project takes in a person's social media presence and gives a 0 to 100 sentiment rating.\nHow we built it\nWe made a chrome extension to capture content from a person's Facebook page and send it through indico's API using JavaScript and jQuery. The data points are plotted on a popup window as an interactive graph.\nChallenges we ran into\nIntegrating indico's facial recognition api into our extension.\nUnexpected issues with internet connectivity strength.\nAccomplishments that we're proud of\nSeeing social patterns by combining text and image recognition sentiments from Facebook statuses and photos\nWhat we learned\nMaking a chrome extension is quite tough but approachable. Each of us is at least somewhat confident in our extension development abilities for the future.\nWhat's next for JYF\nKeeping a viewable archive of sentiments over time, and launching it on the chrome web store so everyone can use it.\n",
        "hackathon_id": "hackdartmouth2",
        "winner": false
    },
    {
        "description": "\nBuilt With\nazureindiciomicrosoftmicrosoft-bandbiometrics\n",
        "hackathon_id": "hackdartmouth2",
        "winner": false
    },
    {
        "description": "\nBuilt With\nc#unitykinectunimoljavascript\n",
        "hackathon_id": "hackdartmouth2",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe've been discussing the idea of suspending a ping-pong ball for a while. After finding a nice impeller in the last few days, we decided to do something with it, eventually settling on a game.\nWhat it does\nThis is an interactive game that uses a LeapMotion to track a user's hand and rotate a gimballed impeller fan to suspend a ball. The object of the game is to navigate the ball though metal wire hoops in the air while keeping it levitated. The fan can suspend the ball around 40 degrees from the vertical axis, so the user has lots of space to move around in.\nHow I built it\nWe used a 3D printer to create most of the hardware in the game. The models we used were all created during the hackathon using SOLIDWORKS. We also used balsa wood for simple surfaces like the box that the game is housed in. The fan is rotated by two servos, each on a horizontal axis perpendicular to the other. Using a dual gimbal system, we can rotate the fan to point in any direction. \nChallenges I ran into\nWe encountered a few setbacks during this project, most of them being unforeseen consequences. For instance, we had a few 3D prints that we needed to modify and remake later due to a problem we did not anticipate like a collision between two parts in the complex gimbal. Also, it took some time to perfectly coordinate the LeapMotion with the servos. \nAccomplishments that I'm proud of\nWe're very proud of being able to finish a project like this within a 12-hour timespan. We all learned things today that we didn't know beforehand, as well as some lessons we can apply to our future projects.\nWhat I learned\n\nThink about all the possible positions for a part to take before you model it. Be sure it doesn't interfere with anything else, or vice versa.\nBe careful with electronics. You can accidentally destroy parts if you're not sure of the circuitry beforehand.\n## What's next for Mystic Wind of the East\nCollege mostly!\n\n",
        "hackathon_id": "lexhack-2k15",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascriptjquerygooglebootstrapnode.jssocket.io\n",
        "hackathon_id": "lexhack-2k15",
        "winner": true
    },
    {
        "description": "\nWhat it does\nThe primary goal of this application is to access applications and do various tasks on your computer through voice commands from your phone. Relaying through a server, one can click, type, and run programs while also being able to control a mouse trackpad from your phone. \nHow we built it\nWe divided up various tasks between the three of us. One member worked on the server use, one member worked on the android application, and one member worked on the computer client. \nChallenges we ran into\nTime was a constraint for us. Relaying through the server between the phone and PC client was a challenge as well\nAccomplishments that I'm proud of\nDeveloping a Socket API.\nTeam 19\n",
        "hackathon_id": "lexhack-2k15",
        "winner": true
    },
    {
        "description": "\nWe thought it would be funny to make a Chinese food delivery service game called Panda Express \nSpam click to make food, upgrade cooks, and make lots of money!\nIt was made in Unity (game engine)\nWe couldn't figure out how to make some UI close when an X was clicked...\nJustin drew a lot, and Ben squashed some incredibly obscure bugs...\nHow to draw noodles and how to debug.\nMake it better next year?\n",
        "hackathon_id": "lexhack-2k15",
        "winner": true
    },
    {
        "description": "\nInspiration\nThe quadrupeds at Boston Dynamics were our inspiration in designing this robot.\nWhat it does\nIt has two different walking gaits as well as exact coordinate movement for singular legs\nHow I built it\nI did the hardware over the summer. It was built from scratch in my basement and we wired and programmed it today.\nChallenges I ran into\nWe spent hours troubleshooting the wiring. In the end it turns out the problem was a bad breadboard. We also ran into numerous programming challenges, most of which were syntax errors.\nAccomplishments that I'm proud of\nHonestly the accomplishment I am most proud of was figuring out the breadboard issue.\nWhat I learned\nOur whole team learned a lot about Arduino, programming robots, and electronics.\nWhat's next for Robot Spider\nI definitely plan to add some sensors as well as refining the hardware. After that I plan to optimize the walking programs and eventually get it to climb stairs.\n",
        "hackathon_id": "lexhack-2k15",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe took our inspiration from retro space shooters such as asteroids.\nWhat it does\nSpaceMania randomly generates enemies for you to fight for a high score.\nHow I built it\nWe used an open source IDE called Processing.\nChallenges I ran into\nCollision detection required a lot of difficult math which was difficult to understand and even more difficult to program.\nAccomplishments that I'm proud of\nOur game features an open world that lets you move around with a greater sense of freedom than a side scroller.\nWhat I learned\nWe learned how to use processing effectively and how to make games with it. We also learned how to use sound and music.\nWhat's next for SpaceMania\nSome things we might add in the future are more enemies, items, bosses, and overall more game elements which will make the game more interesting and more fun to play.\n",
        "hackathon_id": "lexhack-2k15",
        "winner": false
    },
    {
        "description": "\nby Team 13\nInspiration\nWe wanted to create a game, but couldn't settle on what exactly we wanted. Since we had 12 hours, we decided on a fairly basic classic RPG -- a genre now mostly forgotten, but which is our foundation of our gaming careers.\nWhat it does\nIt's an RPG... mostly. The combat is more reminiscent of an arcade shooter, but the overworld and encounters are classic RPG-style. Unfortunately, 12 hours wasn't enough to make more than the core mechanics and a single map.\nHow I built it\nWe build the project in Processing, a Java environment that includes a fairly extensive graphic library, making it easier to use for programs like graphic-based applets and the such than a typical Java compiler such as Eclipse.\nChallenges I ran into\nTime constraints were real. The core game mechanics took most of our time, so we didn't really get to add much other than one map and one scaling encounter. \nAccomplishments that I'm proud of\nMaking this game at all -- some of the mechanics weren't so easy to code, especially the various screen transitions and the combat portion. Collision also posed a couple of problems, as did figuring out how to import music and loop it.\nWhat I learned\nThis project helped us with consistency in coding, specifically not making as many mistakes before compiling the program. In addition, we learned how to code tougher graphical interactions such as collisions. This project also helped us learn to enjoy ourselves when programming, something others should aspire towards. \nWhat's next for RPG ~ the RPG\nWe're considering adding more content in the future -- more maps, more enemies, equipment, etc; make it more than just a grinding shooter, but rather something more reminiscent of a classic RPG -- with some shooting elements in there, though. Since, y'know, our limits with the turn-based combat we can code is pretty boring.\n",
        "hackathon_id": "lexhack-2k15",
        "winner": false
    },
    {
        "description": "\nBuilt With\nprocessing\n",
        "hackathon_id": "lexhack-2k15",
        "winner": false
    },
    {
        "description": "\nInspiration\nInstagram\nWhat it does\nit allows small caf\u00e9 owners to post about their caf\u00e9s when they have live music and it will allow users to find abut their caf\u00e9\nHow I built it\nI built it using android studio and some java\nChallenges I ran into\nWe ran into a bunch of bugs that would prevent our app from launching and it would break it.\nAccomplishments that I'm proud of\nWe made a working app without any knowledge of how it worked\nWhat I learned\nWe learned java and how to code on android\nWhat's next for 8thCoffee\nApi's for google maps, distribution to the public to bring people together, more server space, premium accounts and monetization.\n",
        "hackathon_id": "lexhack-2k15",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaface++\n",
        "hackathon_id": "lexhack-2k15",
        "winner": false
    },
    {
        "description": "\nInspiration- our love for zebras\nWhat it does - nothing but displays zebras\nHow I built it - with html5 and css\nChallenges I ran into - that darn zebra video that was being rude and not moving\nAccomplishments that I'm proud of animating the zebra text\nWhat I learned - i learned a lot more about css\nWhat's next for Zebras are better than you - more zebra videos and images and greatness!!!!11!\n",
        "hackathon_id": "lexhack-2k15",
        "winner": false
    },
    {
        "description": "\nWhat it does\nHow I built it\nChallenges I ran into\nAccomplishments that I'm proud of\nWhat I learned\nWhat's next for TeamTrivia\n",
        "hackathon_id": "lexhack-2k15",
        "winner": false
    },
    {
        "description": "\nInspiration\nOur teams inspiration came from one of our group members, Danya Baron, who was complaining about all the SAT vocabulary she had to learn in order to take the take the SAT test in October. While brainstorming about project ideas, the idea of helping other kids going through the same thing Danya was currently experiencing, and thats when the idea was born.\nWhat it does\nOur SAT vocabulary preparation web application is meant to help students taking the SAT test memorize more vocabulary words in clever ways. When tested, Danya said she remembered words more, including abhor, which means hate or extreme dislike, and bigot, which means an extremely close minded person. \nHow I built it\nWe built this program using HTML, Javascript, CSS, jQuery, and JSON.   \nChallenges I ran into\nWe needed to get sentences for every single word of all 5001 SAT vocabulary words we had, so we had to learn the different processes needed to scrape the sentences and add them in proper format in our line of code. \nAccomplishments that I'm proud of\nWe are proud of how much we were able to accomplish in the limited time we were given. We all learned a lot about coding and programming, and the capabilities we have. \nWhat I learned\nWe learned how to program and code a website application, and added lots of SAT words for people to learn. We learned new languages and new tips and techniques for coding. \nWhat's next for SAT Vocab Prep\nWe want to expand our amount of words, and make mini quizzes for the students to test their knowledge. If we had more time, we could develop our web application further and include more features that would differentiate our creation from others. \n",
        "hackathon_id": "lexhack-2k15",
        "winner": false
    },
    {
        "description": "\nMusical Island\nOur project acts as a piano tutorial where the player learns through mimicking presented tunes. There are three songs, each progressively more complex. In this way we aim to grow the skillset of the user. In addition, this piano is presented through the medium of an interactive story in which Elton John, our dashing protagonist, finds his way off of a dangerous, secluded island by summoning the powers of animals through music. Collectively, we improved our ability to understand and implement HTML and Java syntax, store variables across different HTML files,  integrate audio files into javascript, and generally make simple text-based adventures more complex and more intriguing. During the brainstorming process, we decided to make a text-based adventure. This medium allowed game formatting as well as an educational component which would allow the user to grow their knowledge alongside a beloved character. \n",
        "hackathon_id": "lexhack-2k15",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe inspiration was because one of the kids on the team really wanted it for his D&D club at school, since dry-erase boards designed for purpose can be quite expensive.\nWhat it does\nIt generates a grid based map with various terrain objects. It is designed such that additional features can be added at a latter date. (Such as the die roller which has already been implemented)\nHow I built it\nIt was built in java over the course of a 12 hour hackathon. (Though we did loose an hour trying to get git hub better)\nChallenges I ran into\nI accidentally set everything to the same object one time which caused the project not to work correctly among many other things\nAccomplishments that I'm proud of\nI wrote part of a program along with a great team and we worked together really well. Also this is good group development project since we are all on our high school robotics.\nWhat I learned\nHow to use swing for Java as I was not familiar with it before this project.\nWhat's next for D&D Map Maker\nWe are going to implement more and more features such as drag-able character location markers and other things of the same sort. There is also room for better graphic design and more graphic options.\nFor team 17, we coded a Dungeons and Dragons game board generator with custom textures. The project was coded in Java and used swing graphics. The generator uses a grid system of the user\u2019s desired size and allows them to place a custom texture in any of those spaces with special features such as elevation change, blockers and doorways. The program also has some designer friendly features such as tile duplication.  \n\n",
        "hackathon_id": "lexhack-2k15",
        "winner": false
    },
    {
        "description": "\nHannah likes zebras\n_ We like Hannah and having fun _\n",
        "hackathon_id": "lexhack-2k15",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroid-studio\n",
        "hackathon_id": "hackpr2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nOur inspiration was to improve maths skills on people who desire to have fun and learn math at the same time\nWhat it does\nA game in which you battle against another person with mathematics operations.\nHow I built it\nWe use java and a library called libgdx.\nChallenges I ran into\nChallenges we went through were; working with images, and audio.\nAccomplishments that I'm proud of\nVery neat and fun to play\nWhat I learned\nI learned that making educational games are very fun and interesting to make and at the same time im helping the people who desire to learn more with applications like we have done\nWhat's next for Mathematica Duels\nMaking more mini games and better images.\n",
        "hackathon_id": "hackpr2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nnode.jshapiangular.jspurealchemyapitwitter\n",
        "hackathon_id": "hackpr2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nATH Movil is an amazing app that allows users from a specific bank to make money transfers easily by linking their ATHs with their phones. The app exists for iOS and Android devices, but not for windows devices. This app is too good for it to not be on Windows devices.\nWhat it does\nATH Movil allows Windows 10 users to use ATH Movil on their devices. In this app users can register, login, view transfer history, make a \"friend\" list, and make transfers to any person or from someone in their \"friend\" list.\nHow we built it\nIt was build was made as a Windows 10 Universal App and the code for it was written in C#. \nChallenges we ran into\nThe device was relatively easily to build. The only problem we encountered was reading the JSON for the \"Transfer History\" method. It took us several hours to find a work around for ignoring the escape characters in the list.\n",
        "hackathon_id": "hackpr2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavaarduinonerfcswift\n",
        "hackathon_id": "hackpr2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascript\n",
        "hackathon_id": "hackpr2015",
        "winner": true
    },
    {
        "description": "\nIdea\nWe wanted to make an app that people could send payment requests to their clients with ATHMovil and their clients could evaluate the invoice and pay it.\n",
        "hackathon_id": "hackpr2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroiddjangotesseract\n",
        "hackathon_id": "hackpr2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nswiftios\n",
        "hackathon_id": "hackpr2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtml5css3\n",
        "hackathon_id": "hackpr2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nc#unity\n",
        "hackathon_id": "hackpr2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaphpandroidhtml5\n",
        "hackathon_id": "hackpr2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nI always wanted to be a pokemon master and part of that is knowing all the pokemon names out there\nWhat it does\nit has an authentication system build with Parse that logs you into the app and you can start playing the guessing game\nHow I built it\nI built it on a web stack of the basic front end technologies and using Parse as a cloud solution.\nChallenges I ran into\nGetting all the pokemon images\nAccomplishments that I'm proud of\nbuilding the app in less than 2 hours because I ran out of ideas in the hackathon, as my other ideas were not coming thought\nWhat I learned\nHow to use the parse api and use the oauth system in ruby on rails for the other hack I was building\nWhat's next for Pook-\u00e9-m\u00f6n\nPook-\u00e9-m\u00f6n can be a cool side project where I can keep improving skills and start storing scores, data from users, create leaderboards and a more robust and sexy design.\n",
        "hackathon_id": "hackpr2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtml5css3\n",
        "hackathon_id": "hackpr2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nmyoiosxcodesdktwitterair-server\n",
        "hackathon_id": "hackpr2015",
        "winner": false
    },
    {
        "description": "\nATH_MOVIL_TO-PEBBLE\nApplying the the ATH-Movil beta API to the Pebble Smartwatch.\n",
        "hackathon_id": "hackpr2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nunityphotoshop\n",
        "hackathon_id": "hackpr2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaandroid-studiotwitter\n",
        "hackathon_id": "hackpr2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaslick2dtwitter\n",
        "hackathon_id": "hackpr2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nmvcasp.netrepository-patterssandbox-architecture\n",
        "hackathon_id": "hackpr2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nIt was inspired by command line interfaces.\nWhat it does\nIt integrates different services and functionalities into a single cohesive interface.\nHow I built it\nI developed a web server with Node.js and integrated it with a front-end using Electron (desktop framework that uses Web technologies) and made real-time communication possible using Socket.IO\nChallenges I ran into\nA lot! Sleepiness, Heroku's awful free service, my lack of knowledge with OAuth and Twitter APIs.\nAccomplishments that I'm proud of\nI finished it. Sort of. :) At least it covers basic functionality and features.\nWhat I learned\nThat it takes time to OAuch (I mean, OAuth). And it is very hard to be ambitious and practical at the same time.\nWhat's next for Shelldone\nI'm not sure. Maybe a better (more structured) code and a new (better designed) system architecture (with persistent storage).\n",
        "hackathon_id": "hackpr2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptcssbootstraphtml5phptwitterapihostingjquerymysql\n",
        "hackathon_id": "hackpr2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe team was inspired by the matter that many people see mathematics as a very hard concept.\nWhat it does\nIt puts the users into continuous challenges regarding mathematics problems to make them improve their skills;\nHow I built it\nThe game was build using the libgdx game development framework and the java programming language.\nChallenges I ran into\nThe most challenging part was the graphical side of the game;\nAccomplishments that I'm proud of\nThe final result of the effort.  A functional game.\nWhat I learned\nI learned how to work under pressure and how to build something from scratch in a short period of time.\nWhat's next for Mathematic Duels\nWe plan to continue the development of Mathematic Duels to add more functionality and more complex math topics. \n",
        "hackathon_id": "hackpr2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtml5css\n",
        "hackathon_id": "hackpr2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nrubyhtmljavascriptcoffeescriptcss\n",
        "hackathon_id": "hacktrain",
        "winner": false
    },
    {
        "description": "\nHome Page - Journey\nhttps://richard140.typeform.com/to/OtqNeS\nInspiration\nOver 80% of customers search for Train Tickets and EXIT on the search results and also to  attract 87% of customers buying tickets at Train stations. \nWhat it does\nPutting the human touch back to ticket purchasing experience.   \nHow I built it\nHTML5, Single page Web application, Responsive Web Design, Intelligent back end with personalised recommendation \nChallenges I ran into\nJavaScript issues & slow API connectivity. \nAccomplishments that I'm proud of\nWe built the solution by addressing the problem.  \nWhat I learned\nRail Travel can be Simplified and there is a lot more room for Improvement. And Let's Do IT.  \nWhat's next for JOURNEY\nDisplay useful information about overcrowded trains from statistics on Tickets results page, even before user actually Buy their Train Tickets. \nAttract new customers with Cheapest/Flexible Tickets by up-selling Rail-cards on Search Results and encouraging  customers to Buy Rail-cards  and get discounted tickets where applicable.\n",
        "hackathon_id": "hacktrain",
        "winner": false
    },
    {
        "description": "\nBuilt With\nruby-on-railsandroidflir-thermal-camera\n",
        "hackathon_id": "hacktrain",
        "winner": false
    },
    {
        "description": "\nInspiration\nMomi Apps Smart Project 9-1-1\nWhat it does\nHow I built it\nChallenges I ran into\nAccomplishments that I'm proud of\nWhat I learned\nWhat's next for Frist Time Air 9-1-1\n",
        "hackathon_id": "hacktrain",
        "winner": false
    },
    {
        "description": "\nWe're making the ticket purchasing experience quicker, more intuitive, and more accessible. Using voice analysis we are able to provide travelers with exactly what they want and in a matter of seconds, rather than wasting their time with clunky interfaces that create stress and long queues. \nTrain of Thought is built by integrating advanced speech recognition API's, IBM's Watson Artificial Intelligence services including the Natural Language classifier and the SilverRail API to pull up to date information about train routes and schedules in the United Kingdom. As a voiced based application, we focussed on an ultra-high accuracy of speech-to-text transcription using Google's new web speech API. The accuracy is above 90% for most accents and use cases, and we achieved 100% accuracy for most tests and common queries. IBM's Natural Language classifier service, a part of the Bluemix basket of Watson service, then run the transcribed speech through a classifier that we trained to recognize common customer queries at kiosks such as route finding, ticket purchasing and ticket printing based on a pre-booked purchase and reference number. The confidence index for most results returns by the classifier is over 98% due to the extraordinarily well trained, machine learning service that we built and integrated.  Once queries are classified, the Dialog AI service from Watson is used to provide a fast and accessible interaction with the customer to buy tickets, see route information or print pre-booked tickets. For ticket purchasing and routing, the SilverRail API is called to get the up to date routes between two locations which are extracted from the transcribed text.\nA seamless, fast and accessible user experience. Buy a ticket in less than 10 seconds.\n",
        "hackathon_id": "hacktrain",
        "winner": false
    },
    {
        "description": "\nTraining\nThis project is made as part of the Hacktrain 2.0 Hackathon\nVision\nThe average commuter working in London spends about two times one hour a day on the train. The perfect length of time to absorb new information is 50 minutes.  Our application makes use of this through bringing teachers and learners together.\nUsers connect through their social network login. They then state if they would like to learn or teach and what their interests are. After this they enter what time they will travel between which locations. The app then matches the learner with possible teachers and shows what they teach.\nThe learner can message a teacher to see if they would like to attend a lesson of theirs. If so the learner books the teacher and pays it's lecture fee. The learner and teacher then get seats assigned in the train and they meet up and exchange knowledge!\nFinal Product\nDue to the project being build in a Hackathon we have hacked together a prototype to show the workings of the application. Because the most important thing was the back-end the front-end has been designed to match the resolution of the demo machine (half the screen of a 1920x1080 monitor). The eventual application would be focussed on the mobile platform, thus the resolution choice.\n",
        "hackathon_id": "hacktrain",
        "winner": false
    },
    {
        "description": "\nBuilt With\nnode.jsopencvpythonandroidbluemixherokupostgresql\n",
        "hackathon_id": "hacktrain",
        "winner": false
    },
    {
        "description": "\nSteve regularly commutes home from London to his local station, he normally arrives home in time for the last bus to his village but tonight his meeting overran and he needs a taxi. Arriving at his station, Steve joins a queue of 8 people also waiting for a ride home, in the cold and wet British weather.\nWhat Steve doesn't know is that Sally was on the same train visiting her Aunt  who lives just 3/4 mile from Steve and she too is in the queue waiting for a taxi.\nWouldn't it be great if there was some way that Steve and Sally could identify their common destination and share a single taxi there.\nTraxi brings people together to share taxi rides to their final destination, reducing costs to passengers and giving them a more integrated stress free travel experience\nJust by visiting the Traxi webapp Steve and Sally can enter a few basic details and they will then get notified of passengers who could potentially share a ride. All that is left to do is meet up and share that ride to their final destination\nThe technology behind traxi is a spatial aware Geofire database, cloud hosted for scalabiliy both up and out. Utilising APIs from google and Uber, Traxi uses its search algorithm to match people to their taxi needs.\n...\nChallenges we ran into\nReliance on connectivity during trials\nUber API different across platforms\n.Net support for Geofire\nLearning new apis, development platforms\nIdentifying our business model\n...\nAccomplishments that we are proud of\nManaging to focus on a specific problem and producing a tangible solution\nFeedback from customers trialed on train from Kings Cross to York \nWhat We learned\nData connectivity is sketchy at best on the rail network.\nThere are so many \"what-ifs\" to consider\nWhat's next for traxi\nThe initial proof of concept is targeting rail journeys and bringing passengers together on the same train, in the future, our matching technology can be extended to pre-booking and make the vision of door to door booking a reality. Beyond that, the other markets that this technology can reach are huge, airports based on flight arrivals to hotels, major events, ferry terminals, just about anywhere where you have a volume of people looking to move to similar locations by a taxi.\n",
        "hackathon_id": "hacktrain",
        "winner": false
    },
    {
        "description": "\nBuilt With\nmeteor.js\n",
        "hackathon_id": "hacktrain",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonjavascriptd3.jsbootstraphtml5node.js\n",
        "hackathon_id": "hacktrain",
        "winner": false
    },
    {
        "description": "\nBuilt With\ngolangobjective-cswiftmysqlredissilverraildockeribeacon\n",
        "hackathon_id": "hacktrain",
        "winner": false
    },
    {
        "description": "\nMaps are difficult to navigate around, and for tourists; it can be, aggravating to do so. Even Londoners may find it troubling, we can all agree that London can be confusing, and we\u2019ve finally found the solution to the problem. We\u2019ve created an idea of using and coding QR codes which can be scanned by any Smartphone and can redirect you to a vast information database that will give you directions, opening times and any additional information about any place. Now, why don\u2019t people just Google it? With QR codes it makes things faster and simple, we can cut out the middle man and save you a lot of time. With billboards in key areas of London, QR codes will provide a fast alternative for looking at a map for 10 minutes.\n",
        "hackathon_id": "hacktrain",
        "winner": false
    },
    {
        "description": "\nBuilt With\njsonkibanaelasticsearchlogstashflaskswiftibeaconssilverrail-technologiesgoogle-mapszookeeperkafkajavascripthtmlcssjquerypython\n",
        "hackathon_id": "hacktrain",
        "winner": false
    },
    {
        "description": "\nugo\nugo is a digital information kiosk that is designed to be placed in train stations in order to inform travellers about disruptions & delays as well as provide them with personalised information about their own journey at the right time in the right place.\nHow we built it\n\nA first interface paper prototype was drafted in order to be validated by users.\nWe asked travellers in Newcastle train station to use the paper prototype and give us feedback in regards to the current features.\nA new hi-fi interface was designed based on their needs and requests.\nA tablet and mobile phone are mounted in a box.\nAn app on the phone uses the camera to scan a ticket.\nIt then makes a request to a web server sending the ticket data.\nThe tablet has a browser open connected to the same web sever.\nWhen the app has scanned, the web server hits the rail APIs for info.\nWebSockets are used to automatically update the info on the tablet.\n\nChallenges we ran into\n\nReading the ticket - we did not have magnetic scanner and could not decipher the 2D barcode\nLack of hardware in the actual Hackthon. Thanks to Nick from Wave Roll, we had a tablet which can be used as a mock-up LCD screen \n\nWhat we learned\n\nMost travellers feel safer knowing the reasons for their delays.\nMany travellers prefer interacting with a digital artefact than asking the information desk .\nInformation announcements are many times ignored or very hard to hear due to the noise in the station. \nTravellers loved the idea of having personalised information about their journey available in the context of the station, by scanning their ticket.\nHaving a personalised map to navigate large and unfamiliar train stations is a feature well received by the public.\nIt would be better to shoot a video than a live demo. Because of the limitations described above, at current stage, a live demo is quite risky.\n\nWhat's next for ugo\n\nugo is getting a new box and will be polished for the next pitch event in December.\nA second round of user validation with the new prototype and a demo video will be filmed.\nWe hope to launch a pilot in one of UK's major rail stations to test ugo's effectiveness and we'll gather data about the pilot study that will later be presented to potential business partners.\n\n",
        "hackathon_id": "hacktrain",
        "winner": false
    },
    {
        "description": "\nInspiration\nMany common-service in Ambari require a metastore database  such as Hive, Oozie or Ranger. Default configurations set up independent databases for these services which can be tedious to administrate. \nWhat it does\nOur idea is to create a new centralized database common-service in Ambari to provide a single database instance for other services in the stack. \nThis new catalog service can be added to Ambari common-services directory, so others stacks can extend it.\nHow I built it\nCatalog service definition has been packaged in a zip file. Unzip it on common-services directory and make your stack extend it in services/CATALOG/metainfo.xml. \nChallenges I ran into\nAccomplishments that I'm proud of\nWhat I learned\nWhat's next for Catalog: centralized database for Ambari services\n",
        "hackathon_id": "hackfestforambari",
        "winner": true
    },
    {
        "description": "\nBuilt With\niphone-sdkpythonhadoopambari\n",
        "hackathon_id": "hackfestforambari",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptjavaember.jsbootstrapprototyping\n",
        "hackathon_id": "hackfestforambari",
        "winner": false
    },
    {
        "description": "\nInspiration\nCarpal Tunnel Syndrome affects 5 percent of the working population, about 8,000,000 people, in the United States and results in the most days lost in the American workplace. Accordingly, one of the most frequent surgical treatments is carpal tunnel release (260,000 surgeries per year). And although symptoms may be relieved, most patients are told to partake in physical therapy to recover full wrist function. Unfortunately, therapy can be inconvenient and expensive. Patients may begin to skip sessions regardless of the importance therapy has to full muscle recovery.\nWhat it does\nLeapMed was created to solve this problem in a fun and innovative way! Imagine yourself as an outpatient, who has been prescribed with weeks of therapy. Instead of visiting a medical professional for rehab, do it yourself in the comfort of your own home using LeapMed! We will coach you towards a healthier hand! Attach the Leap Motion sensor to your home computer. Download the LeapMed app. Relax, and play the minigames to the best of your ability...that\u2019s it!\nHow we built it\nUsing the functionalities of the Leap Motion sensor and some clever vector physics, we were able to register each and every stretch as a very specific type of gesture that is recognized by our program. Then we made a game out of it to keep the stretches random and interesting.\nAccomplishments that we're proud of\nOur program has a lot of features one would expect from a professional physical therapy session. For instance, each orientation command given during game-play will not repeat twice - thereby eliminated muscle overuse. Furthermore, we know that the heart of therapy lies in multiple sessions so we have imputed functionality that increases the constraints to our stretches as the weeks go by, essentially making the exercises more strenuous as you are regaining mobility. Post rehab, clinicians can analyze collected statistics that show the number of days taken to reach full muscle ability (i.e. max score). Here they can ensure that the patient's recovery proceeded on the correct time scale by comparing to the mean recovery time.\nImplications of LeapMed\nConsidering the time saved from outpatient clinic visits, both for the patient and the medical professional, not to mention the insurance cost savings, hospitals can adopt this solution and rent it out to patients undergoing light physical therapy or use it as a method to keep patients exercising at home. This decreases co-pay costs for patients and opens up the schedules of physicians.\n",
        "hackathon_id": "medhacks2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nOne of our team members works with an organization called Health Leads. Health Leads is a student volunteer based organization that helps low income populations find community resources that can improve health outcomes.\nWhat it does\nLow income populations tend to be less educated when it comes to nutrition. Advertisements are misleading and precious income is commonly spent inefficiently on food that provides neither adequate macronutrients or micronutrients to the consumer. Our app takes user inputs regarding income and food preferences and generates a grocery list suggesting foods for healthy eating. These suggestions could be talked over with a physician or Health Leads advocate and modified accordingly.\nHow we built it\n\nWe constructed a database of common foods with their associated unit price using FDA API and Python to automatically extract the data.\nWe used simplex method in R to optimize the list of foods given the constraints of the user (food preferences, income, family size). This outputs a list of food items (and their quantities) that would satisfy a family's daily nutrition needs\nWe used Shiny (a web application framework in R) to build a prototype of our application. \n\nChallenges we ran into\n\nNormalizing food/cost data\nLearning basic syntax of Shiny and R in the limited time frame of a hackathon\n\nWhat's next for What's for Dinner?\n\nUpgrade the optimization algorithm to be more sensitive to micronutrient profiles of foods\nUtilize Walmart API (get price per pound) to link Food ID from USDA to create a giant self-updating database\nImprove the UI to be more intuitive and visually appealing\nCreate an interface with USDA\u2019s Interactive DRI for Healthcare Professionals \n\n",
        "hackathon_id": "medhacks2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nruby-on-railsswiftjavacss3html5jquerynode.jssocket.ioiphone-sdkbootstrap\n",
        "hackathon_id": "medhacks2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nRefugees in war stricken zones have minimal access to diagnostic labs and are ravaged by diseases that can be easily prevented by timely detection. Moreover, the time taken for a disease to become widespread and the arrival of medication takes time and causes further harm. Our software and hardware aims a bridging that gap.\nWhat it does\nIt's an attempt to provide lab facilities in war stricken zones like Syria and provide diagnosis and study disease spread patterns in these areas with the data collected and hosted on cloud.\nHow I built it\nWe designed a prototype of the lab using AutoCad and the code for interfacing it to cloud using python and the ManaHealth API. \nChallenges I ran into\nOur project was a little difficult to replicate in hardware and none of us had never coded in python before. We learnt to code in python overnight and developed the code overnight too. Moreover, to overcome the replication of software, we designed and simulated it as closely as possible.\nAccomplishments that I'm proud of\nWe learnt a new language! And came up with a brilliant idea on how to make a lab distribution system more effective!\nWhat I learned\nWhat's next for Nomad Labs\nWe hope to prototype and test it real time.\n",
        "hackathon_id": "medhacks2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\ncommcarematlab\n",
        "hackathon_id": "medhacks2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\niosandroid\n",
        "hackathon_id": "medhacks2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe way people research articles is broken. PaperGraph changes the way people interact with research.  \nWhat it does\nIt visualize, personalize, and contribute to the article map. \nHow I built it\nWe used python, javascript, sigma.js and NCBI-entrez. \nChallenges I ran into\nGenerally front end coding. \nAccomplishments that I'm proud of\nBuilding the project and solving the problem. \nWhat I learned\nHow to build out the project from conception. \nWhat's next for PaperGraph\nImproving visualization and functionality to add to the graph. \n",
        "hackathon_id": "medhacks2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nAlthough this project can serve all displaced populations across the world, the inspiration for this project came from the Syrian Refugee Crisis. One of our team member\u2019s work with very sick refugees in poor camps in Lebanon made us think about the future that faces these people as they get relocated to a new country, without access to their medication or health records. According to UNHCR, the war in Syria has resulted in 1.8 million displaced refugees who came across the open-Lebanese borders. Recently, these refugees have been resettled in big masses with Europe allowing to take more than 200,000 refugees over the next year. These vulnerable displaced groups, whose suffering has had a big impact on their health, will need access to their medical records in order to ease the process of linking them to proper treatment. \nThe second part of the project, consisting of access to services around relocated refugees, was inspired by an email that this same team-member got through this week from a Lesbian Refugee in Germany seeking help to reach out to LGBT organizations in Germany. This woman, who has longed for the sense of belonging to a new community, couldn\u2019t have easy access to services and organizations around her who would be welcoming to her and ease her suffering. \nHow it works\niRefugee is a website that will allow refugees to access their medical records across borders. The portal will have three branches to it: \n1) Health Care Workers (HCW) access: HCWs will apply to become part of the portal and enter basic information about themselves (names, specialty, nationality, position, clinic where they work, registry number in order of physicians). After background check and approval, they will be granted access to the portal through their fingerprint. This will allow them to: \na) Access and Edit patient's medical records if the patient gives their own fingerprint as well. \nb) Upload information onto Name and reference number for patient (without having access to full medical records). This will be used to upload diagnostic test results that have been used and that can be uploaded as a pdf. or a photo. \n2) Refugee/Patient Access: Any refugee will be able to access (and not edit) their own medical records through their fingerprint. They will also be able to approve the upload of diagnostic tests (when they attend the clinic), to avoid false uploads into a patient\u2019s system. \n3) General Visitor Access: This portal will allow any refugee (or any other visitors) to localize services, clinics and NGOs that particularly serve refugees around the place of resettlement. \nThe portal is authenticated through a fingerprint reader and allows access accordingly. Fingerprint reader devices can be plugged to computers, phones or tablets and are not hard to purchase. Simprints has already begun a pilot study using such devices for access of medical records in Bangladesh. \nHow did we do it\nThe website doesn\u2019t use any pre-built framework and is made from scratch. The front end uses HTML, CSS, Javascript, and JS Libraries. The backend uses PHP and MySQL as well as AES Encrypting system. All patient\u2019s data is encrypted based on their passwords as of right now, but will later be encrypted based on their fingerprint. We used Google Maps API, for enabling visitors look and find nearby clinics. \nFinances\nRefer to attached Budget image\nChallenges\nImplementation of this device at every point through the journey of a refugee and through different transition countries will be a challenge. That is why we decided to pilot the study at two sets of clinics in Lebanon (starting point) and Germany (end point), with the plan to expand this project to different countries at a later stage. \nAnother important challenge is wide adoption of this program by health care workers. We will have a basic training video available to learn how to use the portal. We will also have in-person training available, if needed. Seeing how refugee health services are concentrated in few free clinics, with many of those bound to big agencies like the UNHCR other local NGOs, the link between the two parts is there. \nWe are committed to protecting patient privacy at all levels. There is limited access to patient data without patient authorization through their fingerprints. Contact on the same device through fingerprints could be a challenge for hygiene and infection control between patients; insisting on using sterilizer after the patient gives their fingerprint in clinics is a necessity. \nRegarding database size, since the Syrian refugee population is estimated at about 2-3 million displaced individuals worldwide, the storage space that is needed initially does not have to be very big, which reduces costs significantly. \nWhat\u2019s next?\nWe are looking to apply for government or private donor funding for piloting the project and then taking iRefugee to the next level. Once funding is obtained, we will apply trainings to 13 clinics in Lebanon on one side and in Berlin and its surrounding areas(Germany is the European country that hosts the biggest number of refugees). We will then purchase the devices and implement them in different clinics. \nSince the refugee population is condensed in one place, we will implement these devices, at a later stage, within the refugee camps (1 or 2 per site of relocation) with the presence of 5 smartphones per camp site. This will allow refugees to access, through a lending system, these phones opening the door to look for services around them and knowing how to access them. \niRefugee has a promising future, not only in its application to medical records and facilitation of access to services, but also potentially with research regarding refugee health. (i.e. a pop-up message could come on each patient\u2019s portal asking them for consent of giving out their anonymous data to researchers who want to improve healthcare dedicated to these patients).\nFinally, this could be a very useful tool for health care workers themselves, who could have, next to each disease they enter into the patient\u2019s medical record, a link directing them to the current guidelines of treatment (in case they feel the need to refer to that). \n",
        "hackathon_id": "medhacks2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nCurrently it's hard to detect stroke without going to hospital.  We want to develop a new method which enables people to detect stroke simply using a mobile app. \nWhat it does\nThis app detects whether you have stroke by analyzing your smile and the fact that stroke patient ususally has his/her mouth droop to one side. It essentially draws two lines, one between your eyes and the another between the left and right edges of your mouth. If the slopes of the two lines differ more than a threshold, it concludes that your mouth droops to one side and you are under risk of having a stroke.\nHow I built it\nXcode 7+ iOS 9 + Swift 2\nChallenges I ran into\nFace detection and mouth drooping angle. \nAccomplishments that I'm proud of\nA fully working app within two days\nWhat I learned\nTeam spirit!!!\nWhat's next for Smile\nMore precise detection, more alert signs better user interfaces etc\n",
        "hackathon_id": "medhacks2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaphpmysqlpythonjavascript\n",
        "hackathon_id": "medhacks2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavanot-telling\n",
        "hackathon_id": "medhacks2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtmlcssphotoshopjavascriptmanahealth-api\n",
        "hackathon_id": "medhacks2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythontwilioamazon-web-services\n",
        "hackathon_id": "medhacks2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroid-studio\n",
        "hackathon_id": "medhacks2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nCerebral Palsy is the most common motor disorder disease in children. Current children with cerebral palsy undergo continuous physical therapy, which is a tedious, tiresome and painful process. \nWhat it does\nWe sought to solve this problem by creating a game that incentivizes CP children to extend their Achilles tendon by stepping on a pedal in order to play a racing game.\nHow we built it\nFoot Pedal --> Arduino Output --> Python Server --> iOS Client Application\nChallenges we ran into\nConnecting arduino to iPhone\nTrying to use bluetooth to connect arduino to iPhone\nUsing Swift's brand new features\n3D Printing a pedal\nAccomplishments that we're proud of\nRemodeling a bass drum pedal\nThe game is not bad\nWhat we learned\nSwift\nMore than hackers are needed to create a health solution\nWhat's next for CP Racer\nIntegration with Apple Healthkit and Researchkit.\nMultiplayer w/Bluetooth (peer to peer online matchmaking).\nMouth noises, accurate speedometer readings, gas exhaust fumes, accurate weather using GPS location.\n",
        "hackathon_id": "medhacks2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtmlcssjavascriptjquerysqlpythongithubbootstrapapimachine-learningclouddatabases\n",
        "hackathon_id": "medhacks2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtmlcss\n",
        "hackathon_id": "medhacks2015",
        "winner": false
    },
    {
        "description": "\nInspiration\n\u201cThe most terrible poverty is loneliness and the feeling of being unloved.\u201d \nWe\u2019ve all had grandparents that we don\u2019t see as often as we should, but we would never want them to feel unloved. We are able to visit them occasionally, see them face-to-face, hear their stories, and simply hold their hands. Something so basic that 11.3 million seniors are not able to do, becoming lonely in old age and suffering from social isolation.  All too often this leads to a host of mental as well as physical debilitations such as depression, anxiety, and even an increased risk of dementia. \nWhat it does\nThe root of the problem stems from a lack of intimate and consistent interactions amongst the elderly and their surrounding communities. and that\u2019s where we come in. Our project, Common Roots, is a simple website application that will automatically matches enthusiastic volunteers with our senior citizens in need of social and fulfilling interactions. \nVolunteers fill out some basic information about what times they are available and where they are located. With that, they are placed in a local affiliate group headed by a \u201cleader\u201d from whom they communicate with. They can then reach out and visit assigned residents with a simple calendar schedule.\nHealthcare providers thus have access to dozens of volunteer groups throughout the community willing to participate with their residents. They will be the ones submitting the information for their residents and uploading vital health concerns. Even though the process is automated, they also have the ability to match volunteer-resident pairs based on similar interests or hobbies.\nFinally as the end user here, the senior citizens have access to a number of volunteers in the community to meet and accept visitors. To ensure quality of care, the residents have the option of providing feedback on volunteers\u2019 visit through a 5-star rating system. \nHow I built it\nWe built it using javascript, php, html5, jquery, and json.\nChallenges I ran into\nWe were unsure how to effectively integrate the the APIs given to us from Mana Health and athenahealth. Nor did we know how to program using php to access it. But with some heavy googling we were able to figure it out.  \nAccomplishments that I'm proud of\nWe figured out how to utilize APIs and stay up for 24 hours\nWhat I learned\nI learned a lot about social isolation and its effects on the elderly community. We also learned how to code using a new language.\nWhat's next for Common Roots\nCommon Roots found this project to be interesting and fulfilling. Helping to mitigate the effects of this issue and have a profound impact on this community made us consider continuing on with this project and see it through till the end.\n",
        "hackathon_id": "medhacks2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptcsshtmlpython\n",
        "hackathon_id": "medhacks2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nMedHacks all the time!\nWhat it does\nPlatform for connecting medical problems to solutions.\nHow I built it\nWeb development.\nChallenges I ran into\nTime constraints.\nAccomplishments that I'm proud of\nBuilding the site.\nWhat I learned\nHTML and CSS.\nWhat's next for MedHackers\nLaunching site.\n",
        "hackathon_id": "medhacks2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe just wanted to do something for Hackagong. We've never done anything like this before, but the more we planned it, the more feasible it became, and the more we saw the potential usefulness of our drunken idea.\nNow it's something we take seriously, and plan to build a real business out of.\nWhat it does\nThe Locationiser is a device designed to scan a room from a single point, and gain precise measurements, to display in as 3D blueprints. The final device and application will be useful to engineers and architects working in existing spaces, and in many other situations.\nIt will also be capable of re-detecting its location, having moved within a mapped environment, to measure distances between delicate scientific apparatus that may require such precision, and will have a wide array of measurement calculation tools within the application.\nHow I built it\nWe built the Locationiser using an Arduino, breadboard, Servo Motor, and a LIDAR. We modelled the parts in Autodesk Maya, and printed them on a 3D printer, before assembling.\nChallenges I ran into\n3D Printed models do not always come out to the precise measurements of the models printed. There is often overlap, and countering it requires a lot of trial and error.\nAdditionally, testing the product was impossible until we had completed the modelling and construction of the parts, meaning that the coding was blind, \nAccomplishments that I'm proud of\nGetting the parts together, and making this project a reality.\nWhat I learned\nThat 30 hours is not enough, and prototyping is a lot of work!\nWhat's next for The Locationiser\nFinalisation of the project, before refinement of a commercial version.\n",
        "hackathon_id": "hackagong2015",
        "winner": true
    },
    {
        "description": "\nWhat it does\nIt's an app that relays to the user relevant information about whatever they point their phones at. It determines what they are pointed at by small, cheap, 3d printed Arduino AR tokens that can be placed around the world, or integrated into other objects (we built one into a coat hanger). That information can be anything, from web pages, to native content (like Braintree integration!).\nIn the future, this technology could be mixed with Google glasses to provide anything from directions on a path, to controlling home appliances (stare at your heater to have it's control appear in front of you virtually), to overlaying information around the world. Imagine going to the F1 and watching name tags and stats follow the cars around the field so you are never wondering who just rushed past you.\nHow I built it\nBlood, sweat and tears. It's an iOS app (designed for iPad, but easily ported to iPhone in the future). Standard Xcode for an IDE, UIKit, Braintree, OpenCV being the only two libraries. I experimented with some graph libraries for debugging (measuring pixel channels in real time), but none offered the performance I needed so I chucked my own together in raw Quartz. It was a solo project, so everything was done by me.\nThe 3D printing was all designed in OpenSCAD and printed on a ME3D, which was a first time pickup for me. I had some help from Cameron on the actual execution once I had gotten my designs down.\nFor the electronics I used an Arduino Gemma. I've had a little experience with arduinos in the past, but this was the first time I've used the Gemma, which is considerably weaker, but also smaller and has an amazing battery life.\nChallenges I ran into\nLearning how to 3D print at 2am was a particular highlight, but was surprisingly easy with OpenSCAD. The code style design that it uses was pretty easy to pick up.\nThe main challenge was just getting the detection into a working site. The tracking of an LED that is:\nA)Flashing different colours\nB)Moving\nC)Has an imperfect mapping of RGB to the mapping on the iPads camera.\nwas not an easy task. \nAccomplishments that I'm proud of\nWorking a full week, then getting on a plane, getting to my hostel at 12:30, then getting through a complete weekend and getting the project to a good state. When the LED tracker nailed it's first code, that was the moment I was most proud of. Getting the Arduino and the iPad in sync took a few hours, but getting over that first step was amazing.\nWhat I learned\nWith handwork, patience, and enough Coke Zero to put down a small cow, anything is possible.\nSeriously, I found that my focus has improved since I began full time work. I was much more productive at this Hackagon than I was at last years.\nWhat's next for The Beaconing\nI think the project has a ton of potential. In the future with Google glasses every where, Augmented Reality is going to be incredibly useful. I think the service has the potential to evolve into a sort of \"DNS\" for everything. \nI'll be continuing with the project, because it has a ton of opportunities for learning inside. Next step I think will be to replace the tracking code with some sort of neural network system, but that might take a while.\n",
        "hackathon_id": "hackagong2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nThere's a online service where one can send an envelope of glitter to someone anonymously, I thought the best way to improve that would be to make it much more personal and send someone an item they desire and then have but can't touch. We started this project at Hack3D earlier this year and now have refined the design to be more streamlined and less bulky.\nWhat it does\nUsing 3D printed parts designed in Solidworks we've produced a flat-packed puzzle box solution that has a modular puzzle solution allowing up to three independent or interweaving puzzles to be solved to unlock the box. We've also generated some code allowing us to programatically generate extra puzzles at a whim to cater to user demand. We've also designed this version to be producible in a medium better suited for high quantity production of regular flat objects in preparation for a successful launch as a business.\nHow I built it\nBuilding this puzzle box has been a challenge in trying to get something as small and complex as this to assemble with the correct tolerances and without overlapping parts. To help with this it was designed in a 3D CAD package and then assembled to see how all the parts would assemble and how much clearance or movement would be needed by particular parts. Then once the CAD models have been designed it has then been 3D printed and assembled.\nChallenges I ran into\nThere have been many challenges in this particular project, primarily this comes down to two main aspects which is turning the puzzle from a drawing into a operational CAD model that can be used for printing. Additionally assembly has been problematic with a mixture of tolerances leading to large amounts of post processing.\nAccomplishments that I'm proud of\nThis puzzle is complicated to design and then even more so when the sketch is turned into a 3D model and then it creates a second puzzle layer that is harder to visualise in trying to get all of the toggles on the box without them jamming or catching on each other. It has been great that we have been able to do different puzzle designs of varying hardness.\nWhat I learned\nA huge problem with this puzzle box has been that not all the printers used have had the same tolerances for the printed parts. This practically means that for many parts it may then lead to excessive post processing labour for the components to fit and operate as intended, this time needs to be gauged against the time to wait or reprint on a printer with known tolerances. This could make the difference between an assembly time of half an hour or 4 hours.\nWhat's next for Post-Modern Puzzle Box\nAn Ultimate goal would be to try to auto generate the puzzles in some fashion as this can be changed or customised for different aspects and currently is one of the most time consuming parts to design. If this could be automated it would reduce the human input into the design and make it would allow for a more economical and wider scoped business structure.\n",
        "hackathon_id": "hackagong2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nChlamydia and gonorrhoea are the two most commonly reported STIs in Australia, with incidences rising over the last few years (The Kirby Institute, 2013). UTIs are highly common in the community and in hospitals, particularly amongst young, sexually active women. All three of these infections share common symptoms - itching, burning, discomfort. What if you could test for all three at once? \nWhat it does\nLAMP Diagnostics (formerly The Pussy Protector) is a prototype microfluidic qPCR device for rapid, at-home detection of infectious diseases. The current prototype focuses on detection of E. coli (the cause of 80% of UTIs in otherwise healthy women aged 18-29 [Schmiemann, 2010]), chlamydia, and gonorrhoea. Raw sample (in this case a small quantity of urine) is inserted into the cartridge, where capillary action pulls it through into a series microfluidic tubes that contains all the necessary reagents. Loop-mediated isothermal amplification (LAMP) assays are carried out in quadruplicate for each sample to amplify DNA based on the primer sets used. Amplified DNA from the target organism(s) will fluoresce when excited - the more of that organism is present, the greater the fluorescence. This is captured by an array of phototransistors, the fluorescence level is compared to that of a standard curve, and the amount of infectious bacteria calculated from this. \nA crowd-funding campaign for LAMP Diagnostics has been launched, and funds will go to further product development, expansion, and certification with the relevant government bodies. \nWe believe that greater access to STI screening can help prevent these diseases. As so many chlamydia and gonorrhoea infections are asymptomatic and can go undetected, frequent screening can lead to early detection, preventing the spread of these STIs.\nHow we built it\nOur prototype uses a 3D-printed, resin-moulded microfluidic cartridge that takes in up to four samples. Reagents are entered via syringe at two entry points, and flow through the capillary tubes to combine with the samples in equal volumes in each reaction well. The array of 16 wells in total is heated from underneath by a sheet of ITO glass, activating the amplification reaction for target DNA. LEDs are used to excite a fluorescent dye in the reaction, and this fluorescence is detected by an array of phototransistors. After comparison to a standard curve, a microprocessor evaluates whether this is beyond the detection threshold, which would then indicate a positive or negative result to the user.  \nData is also anonymously transmitted to the Biofoundry server for collection of public health records using an ESP8266 chip. This data is visualised online as a representative array of the reaction wells.\nInspiration for the device came from an open-source qPCR device published by Myers et al in 2013. \nChallenges we ran into\nMaking STI testing a sexy, marketable product. We also made the decision to change the focus of our device  a few hours in, meaning a whole lot of new research had to be done regarding the public health needs and microbiology. \nAccomplishments that we're proud of\nBuilding a qPCR machine completely from scratch in a weekend. These devices are typically around 100x bigger, made with printed circuit boards, and cost in the range of $35,000. Our device is handheld, all circuit boards were hand-crafted, and it only cost around $100. Plus, our system uses LAMP rather than tradition PCR to amplify the DNA - a protocol that has been demonstrated to be more accurate and more robust! (Francois et al 2011, Myers et al 2013)\nWhat's next for LAMP Diagnostics\nThis device is readily scaleable, to contain as many or as few sample lanes as required. This means we can easily provide single STI tests with just three lanes (sample, and positive/negative controls), or cartridges with more sample lanes for testing for multiple infections simultaneously. \nEven better than this, the LAMP technology used in our device means we can theoretically test for any organism, provided we design the right primers to screen for it. This means there are uses for this device in further healthcare models, in the home, and in the environment. \nReferences\nFrancois, P., Tangomo, M., Hibbs, J., Bonetti, E. J., Boehme, C. C., Notomi, T., Perkins, M. D., and Schrenzel, J. (2011) Robustness of a loop-mediated isothermal amplification reaction for diagnostic applications. FEMS Immunol. Med. Microbiol. 62, 41\u201348\nThe Kirby Institute. HIV, viral hepatitis and sexually transmissible infections in Australia \u2013 Annual Surveillance Report 2013. The Kirby Institute, The University of New South Wales, Sydney NSW 2052 (2013).\nMyers, F. B., Henrikson, R. H., Bone, J., and Lee, L. P. (2013) A Handheld Point-of-Care Genomic Diagnostic System. PLoS One 8\nSchmiemann, G., Kniehl, E., Gebhardt, K., Matejczyk, M. M. & Hummers-Pradier, E. The diagnosis of urinary tract infection: a systematic review. Dtsch Arztebl. Int. 107, 361\u2013367 (2010).\n",
        "hackathon_id": "hackagong2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe're sick of receiving lot's of small crappy gifts on our birthdays. We're going to change the game and help people come together and buy a really big, nice gift for that special occasion.\nWhat it does\nLet's people group together easily online and buy a present for a person. We take the pain out of gift buying.\nWhy use this service\nWe utilise Braintree to securely receive escrow promised payments for gift pooling to make it absolutely easy and safe for users to buy great gifts for their friends, loved ones or creators of the site\n",
        "hackathon_id": "hackagong2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nLove of Aerial combat and competitive multiplayer games.\nWhat it does\nYou and friends battle it out in the air to destroy each other and their carrier. It also provides the ability to up the anti on your matches by playing for tokens purchasable via Braintree which can then be redeemed for purchases through an in game store.\nHow we built it\nIn 30 hours using Unity.\nChallenges we ran into\nSleep deprivation.\nAccomplishments that we're proud of\nThe amount of polish that we were able to achieve.\nCaliber of game play and how we were able to bring the different ideas we had for the game together to create a great product. \nWhat we learned\nHow to effectively explain what our product is about and how it is better than similar products currently in the market.\nAspects of the UnityEngine and how it works with under the hood in regards to Mono and .Net.\nIns and outs of Braintree / Paypal payment systems.\nWhat's next for Blue Skies\nXbox, PS4 and Steam Greenlight. \nAdditional game play elements, more AI, networked multiplayer.\nExpanding on the competitive game play and ways that tokens can be used by a player in a way that provides value to them.\n",
        "hackathon_id": "hackagong2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWelcome to Australia, where the politicians change and the votes don't matter!\nAs Australian's we all want the best for our future, however it's hard to know which politicians stand for our beliefs and values. EasyPol aims to solve this problem by providing an engaging visual representation of Australia's political landscape.\nWhat it does\nOur mission is to provide political news in a visually entertaining format, leading to a more politically engaged and informed population. \nEasyPol empowers Australian's citizens to consume political information in a clean, visual and intuitive manner. Learn about the actions and decisions of our politicians. Decide for yourself if they deserve your vote!\nFeatures\n\nIndividual Politician Profiles: Each politician has an individual profile giving a brief overview of their policy, ideals and how they vote on issues.\nTimeline: Follow the political action at a glance using our chronological timeline.\nSort and Filter: Sort through Australian politics with our quick and easy visual filters.\nResponsive Website: View EasyPol from any laptop, tablet or mobile device.\n\nHow we built it\n\nIsotope filtering plugin: http://isotope.metafizzy.co/filtering.html\nMagnific popup: http://dimsemenov.com/plugins/magnific-popup/\nAttempting to integrate a public dataset: https://theyvoteforyou.org.au/help/data\n\nChallenges we ran into\n\nConnecting an API to our website\nGetting the API to work with the cross origins access policy\nUnderstanding politics \nFinding a good Nicholas Cage photo\n\nAccomplishments that we're proud of\n\nTrying out new javascript plugins\nLearning about politics\nFinding relevant open source APIs to access\nGetting a skeletal prototype up and running\nUsing Nicholas Cage's face as a placeholder image\n\nWhat we learned\n\nAPI integration\nMegabots is a thing\nTeamwork is fun!\n\nWhat's next for EasyPol\n\nFind new and interesting datasets to incorporate into the site\nDevelop new ways to convert political information into visual data\nPolish the website further\nGo live!\nSEO\nAdvertising revenue\n\n",
        "hackathon_id": "hackagong2015",
        "winner": true
    },
    {
        "description": "\nIt started when I (Matt Sanderson) had an idea for an algorithm that could be used to compare elements next to each other efficiently using numpy and matrix manipulations. This led to the idea of creating a game where the terrain updates and interacts with itself and the character dynamically, leading to a world that is constantly changing and updating.\nMost of the team has programmed in python for a number of years, so we thought it would be good to code the project in the language we are most familiar with.\n",
        "hackathon_id": "hackagong2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascriptunityblender\n",
        "hackathon_id": "hackagong2015",
        "winner": true
    },
    {
        "description": "\nProfanity Pig is your sidekick in ending bad swearing habits. \nWe want to help people monitor their bad language, one swear at a time. Profanity Pig squeals back against your profanity and makes sure any punishments are ultimately for a good cause - for you and your chosen charity. \nUse the built-in coin slot for self-imposed penalties or link Profanity Pig to a credit card or PayPal and automatically fine yourself for every naughty word you say. Payments will be totalled weekly and sent to your chosen charity. \nCustomise your curses to match your filthy mouth and tolerance levels by adjusting the profanity list and the amount you penalise yourself for particular ones.\nFeatures:\nBrain tree integration\nCreate your own list of naughty words.\nAll processing is done on the device, so there is no need to worry about the NSA listening in.\nMonitor your progress via the integrated web backend - both your total penalties and what swears you\u2019ve been spewing. This way, you can focus on avoiding saying the swear words you say.\nInspiration\nMy foul mouth, a regular swear jar and a piggy bank.\nWhat it does\nProfanity Pig squeals back against your profanity and makes sure any punishments are ultimately for a good cause - for you and your chosen charity. \nHow I built it\nRuns on android, detects all speech patterns and internally processes against an internal list of naught words. When a match is found it reports the the back end server where brain tree integration and mySQL database exists.\nChallenges I ran into\nUsing the android/google voice recognition. Building a valid 3d model. Setting up the web server. \nAccomplishments that I'm proud of\nIt's cute, it was fun to build and constantly test the \"functionality\".\nWhat I learned\nGetting speech recognition to work well can be fiddly at times. How to build basic models and whats required to make compatible with 3d printing. \nWhat's next for Profanity Pig\nLoad the software onto a Arduino  or RaspberryPI to fit inside the pig model. Test and polish.\n",
        "hackathon_id": "hackagong2015",
        "winner": true
    },
    {
        "description": "\nWhat it does\nWe combined a GoPro, Oculus Rift, laptop and Twitch.tv to allow users and the Internet at large to play a human in 3rd person. The wearer sees their world from the 3rd perspective, while the Internet sends them commands which display as overlays in the Rift. Kind of like playing yourself like a GTA character, while the Internet controls you via commands. Trippy af.\nHow I built it\nGoPro, Oculus Rift, Twitch.tv, Node.js, TMI.js\nChallenges I ran into\nStreaming on the Internet in 2015 is still a major hurdle. 20sec delays were common.\nAccomplishments that I'm proud of\nWe got it working! And everyone that tried it out seemed to have a lot of fun seeing themselves in 3rd person.\nWhat I learned\nVR is a wild west of innovation. New frontiers for crazy new uses of the technology.\nWhat's next for Hackagong Plays Human\nPossibly a helmet-mounted camera to prevent nausea, and also integrating voice commands.\n",
        "hackathon_id": "hackagong2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe are .NET developers and work at WiseTech Global. We have decided to attend Hackagong as our company's team, and build something that is totally different from what we are doing in \"real life\".\nWe chose Unity 3D as a main development tool since it supports C# and easily integrates with VR and AR SDKs. \nThis is our first attempt with this tool, so we chose to make something simple but funny.\nWhat it does\nThis is a small game, where you end up trapped in a valley, surrounded by mountains. When you start the game, a bunch of balls fall on you from the sky. You are immersed into virtual reality by using your smartphone and Google Cardboard VR \"device\". Your goal is to destroy 10 balls within 30 seconds by pointing the dot in the center of the screen onto the bouncing ball and keeping the focus on it for 1.1 second. Once you destroy 10 balls - you win.\nHow I built it\nOur first decision was to make an Augmented Reality app, which turns the familiar items into something fancy. But we didn't want to make sophisticated software for recognition, and decided to use the Vuforia API. However, it turned out that it requires much preparation - you need to prepare the marks for the API to be recognized and augmented. Therefore, we thought that it will be better to make a 3D virtual reality game, which will be controlled solely by acellerometer built into the smartphone.\nThe app is based on the Google CardBoard SDK and Vuforia SDK, and we used a few samples from them as a basis.\nChallenges I ran into\nI have never worked with Unity 3D before, as well as with building mobile apps. So it was all new.\nAccomplishments that I'm proud of\nI'm proud that within this short time the game is quite playable, and all design and gameplay was written by ourselves. \nWhat I learned\nI had a good impression on Unity 3D as a tool to make VR and AR apps. With the use of powerful APIs you can quickly achieve quite good results. Also I learned, that you have to think on your idea before you go to hackathon and have a good plan.\nWhat's next for VR Game for Google Cardboard\nI'd possibly extend it with some abilities to walk around and interact with objects, and make a good toy for my son, who is too much into Minecraft.\n",
        "hackathon_id": "hackagong2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nSo I was talking to my friend Jack, a musician about loop pedals, the night before this Hackathon. We spoke about the concept of one man bands, which led to myself thinking about...\nThis video.\nhttps://www.youtube.com/watch?v=W1AZilKWeP0\nEVERYONE should have the ability to do this!\nWhat it does\nAllows you to create covers for songs, with small recorded segments looped back .\nOur application will even assist you how to cover these small segments, based on pitch and timing. \nThe fun part is to cover any song, with strange instruments or better yet no instruments, and\nlisten to the end result!\nHow I built it\n\nAngularJS + ionic : for Application Development\nNodeJS : for Hosting shared files and intercommunication with client app.\nlowDB : For quick and easy noSQL database.\n\nBackend:\n\ncreated an audio recorder, mixer and player using java, techniques involved:\nadding audio signals byte by byte to create combined audio signal\nnoise reduction by using a noise gate\nNormalization of signals to reduce the averaging-effect of combing audio signals\n\nChallenges I ran into\nBackend:\n\n3/4 team members not highly experienced with sound engineering\nCombining multiple audio signals and white noise reduction\nBackground noise cancellation techniques\nDigital Filtering\nBreaking down songs and turning them into separate sequences\n\nAccomplishments that I'm proud of\nFront Design! I am happy with the way the application looks and feels.\nWhat I learned\n\nDigital audio data representation as bytes\nFFT / IFFT techniques to translate audio signals between time and frequency domains\nNoise reduction and cancellation techniques (noise-gate)\n\nWhat's next for Cover\nFinalise First Revision, and Release!\n",
        "hackathon_id": "hackagong2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nDad has a garden in the middle of nowhere that needs to be capable of running on its own and reporting watering statistics. There is no mains power or water there so the system needs to be low power and water conservative.\nWhat it does\nIt waters plants, but has a heart. Waterer is a system designed to be easy to configure, configured by using your smart phone. Waterer will keep track of water statistics and allow for dynamic configuration, e.g.:\nwater bay 1 if ground moisture levels are low and the time is between X and Y\n\nHow I built it\nI used a Sparkfun Microview, which is an ATmega328P SoC with an OLED screen. A NodeJS server runs that communicates and pushes commands with the Microview in real time. The Microview activates a relay that opens a water solenoid, watering plants. The webpage that the user interacts with is also realtime, so that feedback of the system is instant.\nChallenges I ran into\nI originally wanted to use a Raspberry Pi however the NodeJS libraries are out of date on Raspbian and wouldn't work, even when compiling the latest version. I also came slightly unprepared on the first day, but that was easily rectified.\nAccomplishments that I'm proud of\nThe solenoid and relay system is a new experience for me. The use of websockets on the webpage is another thing I'm also proud of as it enables real time feedback to and from the Microview.\nWhat I learned\n\nWeb sockets\nUsing Relays\nPlan in advance\n\nWhat's next for Waterer\nThe system currently is configured statically, that is the system only knows about 1 solenoid and 1 LED. I want to be able to have the system detect new peripherals automatically and configure the UI to show these changes.\nAfter that I want to prototype a purpose built enclosure and deploy a working prototype to dads property.\nSoon would include chasing start up support such as investment to finalise a prototype and distribution channels etc.\n",
        "hackathon_id": "hackagong2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\n123design\n",
        "hackathon_id": "hackagong2015",
        "winner": false
    },
    {
        "description": "\nTo use qivot, all it takes is simply copy-pasting which links you have selected into the appropriate box and hitting Generate.\nThis then gives you a unique and shareable link, opening all the links at once in new tabs.\nHere at qivot, we have spent a lot of time thinking about how much digital information we interact with every day and how we access this content. \nWe are forever opening link, after link, after link \u2013 whether it be readings for university, news articles, work briefings, cat gifs (while at work) or simply keeping up to date with popular Twitter, Facebook or YouTube accounts. \nThis is a very tedious process. \nWhat if we could just click on a link given to us by a professor and have open all the week\u2019s readings for university? \nOr click on another link from Pewdiepie, and open a range of social media accounts across multiple platforms, keeping us up to date with his life. \nOr better yet, what if parents or siblings were travelling overseas and we lost contact with them during the Nepal earthquake in April. we would need an immediate stream of information surrounding this event that would continually be updated. \nWith a qivot link we would have access to every news organisation covering the disaster, so no information would be missed. \nThis is qivot, something that will revolutionise the way we share and access content around the world.\n",
        "hackathon_id": "hackagong2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nc#mvc.netfacebook-graphpaypal\n",
        "hackathon_id": "hackagong2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWhen writing specifications for work, many of them have the same patterns over and over again.\nWhen training people to write specifications for the first time, it can be helpful to provide templates that they can rely on so they do not make mistakes.\nWhat it does\nDynamically template designs.\nHow I built it\nI used full stack Clojure + Clojurescript.\nChallenges I ran into\n\nI get tired sometimes. \nClojurescript has tricky error sometimes and one must be careful not to explode everything\nI had to make a framework managing many text boxes because I didn't want to do too much string parsing, which meant that I had to remake several functions you take for granted in text editors.\n\nAccomplishments that I'm proud of\nHonestly, pride is a bit of a vice, so I'd rather not have too much of it.\nWhat I learned\nI got to play with clojurescript for the first time on a larger scale.\nWhat's next for ShoutSpec\nBetter looking output files. I want the output to be a subset of markdown.\nAt the momement there is only one type of point/label. It will be fairly trivial later to have different types of point, like:\n\nImmutable headings\nName-value headings\nCode snippets. And because it's running on clojurescript I ought to be able to immediately evaluate these. :)\n\nAnother thing to do is create a way of importing templates externally.\n",
        "hackathon_id": "hackagong2015",
        "winner": false
    },
    {
        "description": "\nMeet SwipeShop\nWith SwipeShop, the perfect products are at your fingertips. Users can browse through items from popular shopping websites (Amazon, Etsy etcetera) quickly with a simple swipe. \nRight = Yes.\nLeft = No. \nUp = Related products. \nDown = More from this seller. \nTap = more info on this product)\nThe SwipeShop team aims to centralise, simplify and personalise your shopping experience. Shopping with us will be a simple 3 step process: \n\n Users will input categories or search parameters. \n Approve products with a simple swipe. \n Review and confirm your purchase in Shopping Cart.\n\nWho is SwipeShop for?\nThe SwipeShop is perfect for everyone!\nDo you have no idea what gift to get your mate? \nSwipeShop is ideal for gift-givers looking for the perfect gift idea. \nWanting to online shop while bored in class? \nFlip through items quickly and subtly with the SwipeShop. \nOur Team\nThe SwipeShop team is dedicated to developing a high quality, user-friendly app to let you shop with ease.\nBen Brazier \nJames Ferguson \nMai Nguyen \nShani de Leeuw\nWhy We Need You\nWe are a group of university students in need of funding to help our idea become a reality.\nVideo proof of concept limitations + challenges \nThere are 2 working prototypes that showcase different aspects that will be incorporated into the final design:\nAndroid app prototype - does not work with a database yet, shows that it works as an app\nWeb app prototype - works with a database, shows that it can interact with external shopping websites such as Amazon. \nThe SwipeShop team aims to deliver a functional, high quality application as soon as possible.\nFAQs\nWhat if I accidentally swipe the wrong way?\nUsers can view a log of all items generated for their searches and change their choice.\nWhen will I receive the items that I have bought? \nUnfortunately, SwipeShop does not control how soon an item will arrive at your doorstep; the delivery of items are at the discretion of the seller.\nIs SwipeShop secure? \nThe SwipeShop team is dedicated to providing you with a reliable place to shop. We will never expose your personal information to anyone without your permission. All charges (credit and debit) are processed through a secure payment server (Paypal) to ensure your data is safeguarded.\n",
        "hackathon_id": "hackagong2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nAerial combat games like LUFTRAUSERS and twin stick shooters like ASSAULT ANDROID CACTUS\nWhat it does\nIt's a mobile game for iOS and Android where you use a minigun to fly, dodge, and shoot hordes of procedurally generated alien ships. Save the earth!\nHow I built it\nConstruct 2 game engine\nChallenges I ran into\nThe algorithm for generating the aliens almost dipped into terrible complexity. However I managed to get it done in a reasonably elegant way.\nAccomplishments that I'm proud of\nThe procedural algorithm, which is capable of generating alien ships from small drones to massive ships that are bigger than the screen!\nWhat I learned\nGet an artist!\nWhat's next for FLYGUNNERS\nI'll continue development and possibly release it on the App Store/ Play Store.\n",
        "hackathon_id": "hackagong2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaamazon-web-servicesangular.jsamazon-ec2ecsdockerdocker-composeprotractorjavascript\n",
        "hackathon_id": "finracdhacks",
        "winner": true
    },
    {
        "description": "\nBuilt With\namazon-web-servicesdockergithubdocker-hubaws-elastic-container-servicejenkinsjenkins-pluginsphpnode.jsbash\n",
        "hackathon_id": "finracdhacks",
        "winner": true
    },
    {
        "description": "\nProblem:\nWe identified an area where it needs manual effort to update AMIs which are published by PET team periodically. At time, teams may forget and get a notifiers to do so.\nSolution:\nWhen a FINRA approved AMI is available(currently COOL-SHADES polling in S3 location) and published by PET team for teams to upgrade, the Lambda notification will be sent to team members via Mobile app. In response, users can type in text or speak what they want to do. AMI will be updated by POST in the background by API Gateway call directly to Launch configs. Same thing applied to any code deploys of a specific environment.\nWe have built everything in AWS cloud using few technologies - CloudFormation, Lambda, API Gateway, EC2\nChallenges:\n1) Integrating with Puppet for code deploy and bootstrap\n2) Having AMIs available.\n3) Implementing NLP processor.\nAccomplishments:\n1) We are able to turn around everything with integration with a webapp, mobile app and chrome plugin in quick time.\n2) Team work and consensus on solution and architecture.\n3) Implemented AWS CloudFormation, Lambda, API Gateway, SES (Simple Email Service), Google Cloud Messaging, very quickly.\n4) Implemented Grassroots implementation of NLP engine for pattern matching the text entered/spoke by the user.\nNext steps:\n1) Install puppet master and slaves in AWS for COOL-SHADES application to push code deployments automatically with a simple text or voice.\n2) Integrate with Jenkins for better tracing - REST API support.\n3) Enhance app with new features - iSSO integration etc.\n",
        "hackathon_id": "finracdhacks",
        "winner": true
    },
    {
        "description": "\nBuilt With\njsonproject-bamboojirajavabitbucketgoogle-spreadsheetsbeanstalk\n",
        "hackathon_id": "finracdhacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\nnode.jsamazon-web-services\n",
        "hackathon_id": "finracdhacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavarestjira\n",
        "hackathon_id": "finracdhacks",
        "winner": false
    },
    {
        "description": "\nContinuous Quality\nChenren Shao, Brandon Pang, Paul Flynn\nInspiration\nAt FINRA, a lot of our tests are done with the JTAF tool. Most of these utilize a failsafe plugin that automatically generates .xml reports of the test run, listing which test cases passed and which ones failed. However, the .xml is not convenient to find or easy to read. At the same time, Jenkins can track JTAF run performance, but only in the form of a +x / -x metric, letting you know how many test cases failed compared to the last run.\nWe wanted an easier way to view these test results. We also wanted more thoughtful analysis. And, when we first started drafting our ideas, we realized we didn't want to limit our tool to JTAF. Our goal was to create a universal analysis tool for unit and integration tests, provided they give their results in a junit/failsafe style report.\nWhat it does\nContinuous Quality trawls test reports and saves test performance to a database. The GUI aspect allows users to access sets of the data in different views; you can choose to see a test suite's success rate over time or the success  rate of a specific feature's test steps.\nHow We built it\nWe used a Java xml parser to strip the junit style test reports and jdbc to save the info to a database. The client gathers information from the user which is sent back to the database through REST calls. After the information is passed to the database, the REST service gathers the data requested by the user in JSON format. To make the graphing widget easier to work with, we created a custom parser in python to turn the JSON responses into arrays. The graphs are powered by chart.js, an open source javascript library. \nChallenges We ran into\nOnly one of us is experienced with UI development, which made balancing the workload for designing the client difficult. Another challenge was that we did a full stack service, designing both the front and back end. Given the time constraints, this made it hard to implement all the ideas we had. Also, despite the fact that we finished all the moving parts, it ended up being very extremely difficult to put the machine together; waiting until the end to integrate gave us a pretty bad headache. The irony was not lost on us.\nAccomplishments that We're proud of\nIt works and is a complete solution. While it isn't pretty, we're very excited to have implemented it any form at all in the time we were given. It is also a universal solution; while the inspiration came from FINRA's JTAF, it can pull data from any junit style .xml reports. In fact, by switching out the initial parser, it can be extended to work with any type of test report as the input.\nWhat We learned\nIt's tough to use the principles of continuous delivery on a 12 hour project, especially one with a hard deadline. We also learned that we're not as comfortable with javascript as we would like to be.\nWhat's next for Continuous Quality\nWith less than 12 hours of dev time, we didn't get to accomplish everything we wanted to, and the site is not as pretty as it could be. We were only able to implement data collection from .xml failsafe reports, but we want to extend our coverage to all types of test reports. Some of the other planned features include being able to pull up run specific data from a graph view by clicking the corresponding point on the graph. If we had unlimited time, we also would have explored what other data views are useful and tried to implement more than the two graphs we included.\n",
        "hackathon_id": "finracdhacks",
        "winner": false
    },
    {
        "description": "\nWho We Are\nWe are Let Me Google That For You, a collection of astoundingly brilliant developers who live in a broom closet in the Key West building. (Kyle is not an astoundingly brilliant developer who lives in a broom closet, though. He sort of showed up out of nowhere and we brought him along. He does testing on the 3rd floor. Or something.)\nMotivation\nETL testing is an essential and often time-consuming task when validating analytical applications. Developing ETL tests is currently a very opaque process with very little immediate feedback. DAVE aims to make this process easier by providing a tool to both visually debug data differences and fit into the automatic validation chain. It is also designed to be much easier to use than other tools, which often require cumbersome setup procedures. This approach provides an inherent utility by enabling more rapid ETL test development, freeing up developers and testers for other tasks.\nFeatures\n\nVisualizes differences between two different data sets, retrievable from many different sources\nProvides fine-grained display of differences\nAlso runnable from command line, useful for automation\nCompares data from multiple sources (csv, xlsx, Oracle, MySQL, Postgres, Netezza)\n\n",
        "hackathon_id": "finracdhacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\ndc.jsratpackgradle\n",
        "hackathon_id": "finracdhacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\njava\n",
        "hackathon_id": "finracdhacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\nflaskpythonjenkinsredisjquery\n",
        "hackathon_id": "finracdhacks",
        "winner": false
    },
    {
        "description": "\nTeam\nRAD-Raiders: Anju Koshy, Zheng Zhong, Walter Einhorn, Mike Linford\nProblems\n\nContinuous Delivery often involves a large number of tools. \nInformation (such as test results) can be spread across a large number of different places and hard to analyze.\n\nSolution\n\nA centralized REST-based web service with easy-to-read dashboard.\nThe RESTful service is tool-independent and can be called from any service or application that can make HTTP calls.\n\nBenefit\n\nStreamlined deployment process\nProvides DevOps with deployment results from many different services.\n\n",
        "hackathon_id": "finracdhacks",
        "winner": false
    },
    {
        "description": "\nTeam name: Duck\nMembers:\nHanning Wu,\nShang-ling Huang,\nXiejingwei(Jack) Fei\nPublished version is single user version.\nlogin credentials is admin/XXXXX(I bet you know).\nGit: https://github.com/slhuang2015/finracd\nInspiration\n(1) Ease new Gatling users into using the stress tool\n(2) Saving many different configurations for future use\n(3) No way to gain experience from previous user / project\n(4) No real time graphical feedback when running\nWhat it does\nProvide visualization for editing configuration. Version control. Real time monitoring.  \nHow I built it\nJava Web application with single user and multi user version.  Spring MVC+tomcat+gatling.\nChallenges I ran into\n(1) Integration within UI logic, backend and Gatling.\n(2) Integration between Application and Graphite\nAccomplishments that I'm proud of\n(1) Most goals reached.\n(2) Successful Integration Between Multiple Components (Web, Java, Server, Graphite)\n(3) Ability to Access Application from AWS.\nWhat I learned\n(1) Automating the packaging and deployment of applications with docker.\n(2) the latest Spring MVC and Spring security.\n(3) Visualize gatling output with Graphite.\n(4) Building GUI with HTML and JQuery\nWhat's next for Gatling Visualization & Real Time Monitoring\n(1) Integration with Gatling HAR Recorder\n(2) Beautify User Interface\n(3) Implement All Functionalities of User Interface\n(4) Provide Multi-User Access\n(5) Automated Installation with Docker\n",
        "hackathon_id": "finracdhacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\njava\n",
        "hackathon_id": "breakpovertyhackathon",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe Story of Godfrey\nGodfrey always has time for his students, even when his salary was being withheld, he never lost sight of his top priority - the incubation of the young who are the future of Kenya. \nAs recently as 2 months ago, tens of thousands of primary and secondary school teachers were forced to strike and fight for what they deserve against an ill-budgeted government. Unfortunately, teachers were not the only ones harmed. Twelve million students in publics schools were home as schools shut down. \nIf Godfrey had one wish during this time, it would have been to continue to support his students, some of whom were preparing for the all important nationally standardized test. He couldn\u2019t, because he had to take up 2 part-time jobs to pay for his basic necessities. \nGodfrey is the rule, not the exception. \nBut even as students\u2019 academic prospects suffered, parents struggled to find a way to get involved. They needed a scalable and accessible way to directly support capable and passionate teachers in the community like Godfrey, strike or otherwise. Asante Mwalimu is our solution. It is a crowdfunding/tipping platform, designed for parents and other interested parties to directly support local teachers on a job well down (similar to the concept of tipping in restaurants but done Anonymously)\nWhat it does\nThe platform has 3 aspects, the SMS/USSD aspect for parents and guardians, the Smart Phone aspect for teachers to enter data and the Web Portal (http://asantemwalimu.com/admin username: demo, password: demo).\n\nUSSD/SMS -  Parents will get up to date information about their children's performance, they will then be able to send positive comments to teachers and send them a tip through the M-pesa platform.\nSmartphone Aspect - Due to the higher mobile penetration rate in Kenya as compared to computers, the mobile app will allow teachers to enter student data and then to send the grades to parents. Teachers are also able to view any additional income and comments through the platform as well as their rating.\nWeb portal - This will provide access to Admins such as NGOs, Economic Groups and Government Officials access to the teacher data. This will be a unique data source as will act as a rating system (based on income, number of comments and class size) for teachers by parents themselves and can provide information to influence policies and to target training programs.\n\nHow We Built It\n\nWeb portal was build with django and is hosted on digital ocean.\nSMS (mocks USSD functionality) was built using twilio based on the rapidsms module.\nSmart phone aspect was built with the Ionic Framework.\nThe main repository was in github.\nProject management was done with Asana.\nThe Database diagrams and flow charts was done with https://www.lucidchart.com/.\n\nChallenges We Ran To\n\nLack of USSD support in North America.\nSetting up the Twilio account to mimic USSD was a bit complicated.\nLittle sleep\n\nAccomplishments that we are proud of\n\nHaving an SMS application that is working.\nHaving a mobile app that works.\nHaving a web portal where Officials can view the data.\nGetting to work with each other as our team was made up of 2 business developers and 3 software developers.\n\nWhat's Next\n\nAdd the required USSD functionality.\nFinish the smart phone app.\nAdd api endpoints for data analysis.\nAdd charting capability for data analysis.\nIntegrate with M-pesa.\nPursue and attempt to implement the solution in Kenya.\n\n",
        "hackathon_id": "breakpovertyhackathon",
        "winner": false
    },
    {
        "description": "\nNumama provides better access to maternity care in Darok!\nInspiration\nAll the members on our team are passionate about the intersection of women's health issues and development work. Our backgrounds include international development work in Kenya, Rwanda, Benin, Guinea, Guatemala, and Chile on such issues as HIV/AIDS prevention, access to education, female empowerment, social entrepreneurship opportunities, extractive industries' social and environmental impacts, and resettlement compensation planning.\nWe're really excited about the increasing use of mobile technology in developing countries to further social justice and health initiatives. \nWhat it does\nNumama offers a SMS technology, an android app and an ambassador program. \nWith the SMS technology, illiterate women can easily enter a numerical code to receive immediate health assistance from a midwife or health representative, and ask for a mobile clinic to come bring her to the nearest health centre or maternity wing. \nOur partners will train these women in how to use these codes with simple infographics that are designed for illiteracy.\nThe SMS technology is also connected with the Numama database that records all expectant mothers' information (with the mothers' consent) for future visits and more informed follow-ups. \nThe android app allows healthcare professionals to register the patients' information in the app and send the data to the Numama database. \nOur go-to market strategy will include an ambassador program in which pregnant women in Narok region will be trained to become health care practitioners and educators as a sustainable empowerment strategy.\nThe data collected will be shared within the Numama system to inform other mothers. The data will also be used to generate analytics for provider networks and humanitarian agencies to improve their health care services and development projects. \nHow I built it\nWe identified illiterate pregnant women in the Narok county (in which the Baraka Health Centre operates) as our target market segment. \nWe first conducted a market analysis to identify if there was a gap in the market. According to the United Nations, 1 in 38 women die during childbirth. In the Narok county, only 1 in 5 women have assistance during childbirh. These deaths could be avoided with an SMS technology that provides them better access to health resources and services during their pregnancy. \nWe also conducted a market validation using the case study of Liga Inan program in Timor-Leste and the successful implementation of the TOTOHEALTH system around Nairobi. \nOur developers used Twilio to design the SMS technology (compatible with USSD) and ready for deployment with  mobile communications APIs (i.e. Africas Talking). \nChallenges I ran into\nOur biggest challenge was to plan and coordinate our implementation strategy on the ground while working remotely in Toronto. \nAnd maybe lack of time/sleep ;)\nAccomplishments that I'm proud of\nOur mobile technology and database will lower hospital congestions, increase accessibility to health resources grow provider network's available support system, encourage women to be agents of health promotion (i.e. ambassador program\nOur costing scheme was also already approved by Graham Ingokho.\nWhat I learned\n\nDesigning mobile technologies in places with less developed infrastructures. \nThinking of technological obstacles (i.e. weak internet connection on the ground, SMS vs. MMS, old browsers)\nMarket of cell phone providers in Kenya \nHow to use Twilio and Firebase\n\nWhat's next for Numama\n\nOnboarding 68 000 women from the Narok county by 2017\nFinalizing partnerships with health providers, foundations, NGOs. \n\n",
        "hackathon_id": "breakpovertyhackathon",
        "winner": false
    },
    {
        "description": "\nInspiration\nPassion for an accessible future.\nWhat it does\nDiagnoses viral illnesses over SMS.\nHow I built it\nUsing CodeIgniter framework, Twilio for SMS, and Cloudant to store user symptoms and information.\nChallenges I ran into\nServer issues, memory management, message latency\nAccomplishments that I'm proud of\nUtilizing big data like never before.\nWhat I learned\nI learned PHP\nWhat's next for TXT MD\nKenya.\n",
        "hackathon_id": "breakpovertyhackathon",
        "winner": false
    },
    {
        "description": "\nTry it out\nCommunity Voice Portal Access: 855-907-3323\nCommunity Message Recording: 855-907-3352 (PIN 1234)\nInspiration\nLocal, time-sensitive communication is big issue in Rural Kenya.  One of the stories that was shared with us was that sometimes a Chief would have to go door to door in the village to make an important announcement.  Chief and vast majority of the people (80+% of population) have mobile devices that are capable of placing and receiving phones calls and sms.  \nOur solution would make a big impact in rural areas in Kenya and other countries where Village Chief and/or other officials distribute information to the general population via a phone tree or worse yet in-person.  Such time-consuming process has many downsides including people missing an important message or not getting it in time.\nCompared to SMS, voice messages can be localized for the 68 languages spoken in Kenya. It is highly customizable. In addition according to UNESCO 2015 report, ~27% of Kenyan's are illiterate and likely even higher percentages of illiteracy can be observed in rural areas.  This means that SMS solutions might not work for rural areas of Kenya as well as Voice solutions.\nWhat it does\nWe have chosen to tackle all 3 challenge sets (Education, Health, Agriculture) as well as Community Announcements for this hackathon. The solution we implemented enables personable, easier, faster and more streamlined way to share important, time-sensitive and possibly life-changing information via something as simple as a phone call.  \nFor villages where lots of mass information communication for Health, Education and Agriculture is done manually or not at all, this solution will be a life changer!!\n\nImagine delivering a weekly phone message to farmers with agricultural advice from experts, \nor good health and hygiene message to folks that subscribed to weekly updates, \nor female students that had to stay home and take care of the household because their mom was not feeling well that now would be able to get access to coursework notes, homework assignments, etc., \nor Village Chief who needs to broadcast an important message to the whole community about some upcoming event or even doctor/dentist coming to visit.\n\nHow to use it\nCommunity Message Recording: 855-907-3352\n\nCall the number above, as you are the Chief or Health Official, Agriculture Expert or a School Teacher (different TOLL-FREE numbers will be provided for different roles).\nChoose if you want an interaction to be in \"1\" English or \"2\" Kiswahili.\nProvide your secure (this can be updated via an API) PIN (\"1234\") which will allow you to record a message to share with people.\nRecord your message. Please remember, you are limited to 60 seconds (CONFIGURABLE via API).\nProvide an expiration date for your message so that we do not play this after the expiration date, Format is MMDDYYYY, type in \"12 10 2015\" for December 10th, 2015.\nChoose \"1\" if you want the message to be broadcasted to all subscribers or \"2\" if this is just what people can listen to as they call in as the nature of the message is not very urgent.\n\nCommunity Voice Portal Access 855-907-3323\n\nCall the number above, as you are a community member in need of receiving urgent communications and messages from Chief, Health Officials, Agriculture Experts or a School Teachers. This can be called anytime or you could opt-in to receive phone calls with recorded message.\nChoose if you want an interaction to be in \"1\" English or \"2\" Kiswahili.\nPress \"1\" for community, \"2\" for medicine, \"3\" for education and \"4\" for agriculture messages.\nOnce you are listening to messages, you can press any key to skip to next message.\nWhen you've finished listening to the last message, press \"1\" to OPT-IN to receive calls with messages instead of calling in every time or hangup or press \"2\" to end the call.\n\nHow we built it\nWe used Genesys Premier Edition APIs and Toll-Free Numbers from http://www.genesys.com/angel for Interactive Voice Response (IVR), Text-to-Speech (TTS) and Outbound Calling.  Integration scripts were written and hosted on Digital Ocean with MEAN stack (Mongo, Express, Angular, Node).  \nChallenges we ran into\nInitially we used Voice as a mean of control over a phone conversation, but we soon realized that there might be lots of noise for where people call from or where the chief calls from, and so we opted to use only DTMF and simplify the voice application.  We wanted to make the app be as friendly to locals as possible and so we recorded all the audio prompts in Kiswahili as an option for callers to choose their calling experience in either English or Kiswahili.\nAccomplishments that we're proud of\nWe believe that improving mass communication with a tool like ours will have a very long term utility until internet is fully mainstream and everyone has access to it.  After all, our solution only uses your telephone and delivers messages to you via voice.  There is no learning curve to use this solution, your phone rings - you pick it up, or, if you missed the call, you dial a number, select an option and listen to a message from Chef, experts, etc.  We decided that phone was a perfect medium for this and culturally when the Community Chief speaks to you, even if via a message, you pay attention and act accordingly.\nWe're extremely proud of the fact that we built a fully deployable and scalable solution in just 2 days. This could be deployed and used almost right away.\nWhat we learned\n\nTeammate selection is key and we were lucky to have formed our group ahead of time\nIt is important to lay your scope out from the very beginning\nNot all documentation for services that you use is always 100% accurate or updated\nLeaving time to tinker with things is key.\n\nWhat's next for Community Voice Portal\n\nHopefully, polishing off and deployment in Rural Kenya as a Pilot and then in other countries and local communities where internet is sparse and communication of time-sensitive data is important or even life-changing.\nIntegrate our hotline for doctors and a dashboard to monitor people that call in sick to monitor outbreaks and graph hot-zones of where the outbreaks are at and what kind of outbreaks are. \n\n",
        "hackathon_id": "breakpovertyhackathon",
        "winner": false
    },
    {
        "description": "\nInspiration\nIn Northern Kenya, a pregnant mother is 100 times more likely to die of untreated complications than if she was here in Canada. She has access to at most 4 visits to a doctor before delivering her baby, as compared to 29 visits if she was in Canada. Further, she is more likely to give birth at home than in the hospital, increasing the risks of birth complications such as haemorrhage, hypertension, or sepsis.\nWe wanted to build a system that would bridge the gap in number of visits available to expectant and new mothers, by providing them with a web platform that effectively monitors their health via SMS. It is a proactive system, that probes users with questions to monitor their health, instead of waiting on patients (that already face barriers in regularly visiting the clinic) to seek medical help/advise in person. \nWhat it does\nThis SMS/web app provides a monitoring and diagnostic tool available to patients remotely. Through consistent probing, the system monitors health of patient via their response to questions. The answers are parsed into 3 categories: no-risk, low-medium risk, and high-risk conditions. \nFor no-risk response, an automated response is generated confirming the absence of risk, and informing them of a customized reminder/tip based on their condition.\nFor low-medium response, the condition is monitored for a few days via appropriate follow-up questions to determine whether condition is improving or deteriorating. In the latter case, an \"urgent alert\" is triggered and a doctor is notified to take appropriate action.\nFor high-risk condition, an \"urgent alert\" is triggered and doctor is notified to take necessary action. An appropriate text message is generated informing user of further instructions. \nAdditionally, the system provides powerful reporting and data logging tools. The doctor is able to see communication history between patient and system, providing him/her with data to make more effective and efficient diagnosis and treatment, as necessary. \nHow I built it\nBuilt on node.js, using Twilio API for SMS communication. MongoDB is used for database, and jade for the front-end. \nChallenges I ran into\nKeeping track of who ate the caffeinated chocolates. \nOn a more serious note, some of use were challenged with learning curve of learning node, jade and mongo. Twilio gave us issues here and there, and a bit of getting used to the mongoDB.   \nAccomplishments that I'm proud of\nIt works! Proud to see it come together in its various components, with the team collaborating with their expertise to provide different functionalities. \nMy team members are proud of themselves for being great teachers (for teaching me a lot, that is!). \nAnd we had fun along the way after all, while accomplishing our vision. \nWhat I learned\nHow to structure databases, how to build a web app that provides significantly more functionalities than I have ever worked on. (It was personally my first time working in node and jade, so that was a steep learning curve).  We were able to dive deeper into jade, node and mongoDB, broadening our skill set along the way. \nWhat's next for Mommy Monitor\nIncorporating this app with the IBM Watson Developer tools,  such as Watson for Oncology, will provide this system with more powerful diagnostic and treatment capabilities. We will also be able to expand to other types of patients with various types of conditions/situations, and not pregnant/new mothers. \nWe also hope to provide access to our database and diagnostic tools to non-registered patients without access to a clinic. This is possible by a registration system via sms. \n",
        "hackathon_id": "breakpovertyhackathon",
        "winner": false
    },
    {
        "description": "\nInspiration\nWhat it does\nHow I built it\nChallenges I ran into\nAccomplishments that I'm proud of\nWhat I learned\nWhat's next for Zote\ninformation  sharing platform\n",
        "hackathon_id": "breakpovertyhackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\nphptwiliofirebasesms\n",
        "hackathon_id": "breakpovertyhackathon",
        "winner": false
    },
    {
        "description": "\nInspiration\nPoverty Alleviation Cuts across Health, Agriculture and Education but these are disparately addressed by existing solutions hence no holistic approach to solving real problems faced by community members. We stand on the brink of history that will for the first time provide a viable ans sustainable solution to positively impact the lives of over 2.5 million livelihoods in our phase 1 pilot rollout to three rural counties in Kenya.\nWhat it does\nx-Credit is an alternative credit access system that consolidates the provision of access to credit in a triangle that supports both agriculture, Education and Health of the Community members in a holistic approach using a single portal.  It adds a unique concept of online micro guarantee that utilizes non traditional security appraisal process for determining credit worthiness. Additionally it augments the micro insurance to complement emergency and normal loan applications. It is user friendly and tailored to unique ethnic languages of the rural population hence offering the solution in a language the communities are comfortable with.\nHow I built it\nAndroid for mobile app\nphp for USSD\nChallenges I ran into\nAccomplishments that I'm proud of\nIncorporation of online Micro Guarantee as a novel way to assist rural communities in the alternative credit access process.  This supports both normal and emergency loan application process cutting across the triangle of medical health, agriculture and education.\nWhat I learned\nWhat's next for x-Credit\nAdvanced Market Research and pilot rollout in one rural county of Kenya\n",
        "hackathon_id": "breakpovertyhackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtmlcssangular.jsbootstrapjavascript\n",
        "hackathon_id": "breakpovertyhackathon",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe game development industry is bursting with potential in Kenya's tech sector. We wanted to create an educational tool that could be used to introduce youth to the concepts of game development and design in a fun way.\nWhat it does\nUsing the popular game \"Mancala\" as an interactive example, users will be able to go through the process of customizing sound, graphics, and changing game variables to see how their choices impact the final product. \nHow we built it\nWe created a web app with AngularJs and Google's Material Design using various open source packages and tools. By leveraging technologies such as Ionic we are able to deliver the project as a native app, allowing a one time download for users that will not always have internet access.\nChallenges we ran into\nThe initial ideation phase was quite difficult as we struggled to find a good basis to use as a coding example for our app that was simple and ubiquitous enough so as to be easily understood yet fun and interesting enough to be engaging for potential users. Once we found the game of Mancala we knew that it was the right fit.\nThere were some challenges with how to present the different stages of game design in digestible chunks of information that weren't overly complicated. Due to time constraints we knew we had to be selective about what customizations could be made to the game.\nAccomplishments that we're proud of\nWe think the app is very engaging and hope to \nWhat we learned\n\nWe learned about a new fun game to play with nothing but dirt and rocks/seeds\nWe learned a lot can be accomplished with copious amounts of red bull and sugar snacks.\nWe also learned a lot about the gaming industry and tech sector in Kenya during our research phase\n\nWhat's next for Hack Mancala\nWe hope to refine the app to the point where we can actually release it into the app store. The Ionic component was not completed in time for the submission deadline for the hackathon but it will be the next step to get the app on mobile devices.\n",
        "hackathon_id": "breakpovertyhackathon",
        "winner": false
    },
    {
        "description": "\nInspiration\nCommunity mobilizers that are employed by FTC usually work in the communities and communicate with the members about upcoming initiatives and events that FTC is hosting. \nWhat it does\nJamii makes this process much easier and faster as opposed to just doing to door-to-door and word-of mouth outreach. The platform equips the community mobilizers and community members with an accessible tool to communicate in an easy, efficient and cost-effective way through the web and an SMS interface. \nHow I built it\nIt is built with Node.js and Twilio to community quickly between members of different communities and channels. It is built to be scalable in-terms of number of people and number of communities that can be using the platform.\nWe used MongoDb as the database to allow for future extensibility and addition of reporting metrics.\nChallenges I ran into\nLearning a new technology stack that was shared between the developers. We had challenges working and communicating with a team member who is located on the other side of the world (different sleep/eat schedule). It was hard to focus and concentrate in a work environment that was loud (shared space). \nAccomplishments that I'm proud of\nWe were able to complete all the features we wanted to and created a beautiful and easy-to-use platform in 24 hours.\nWhat I learned\nWe learned to work together with a team of diverse backgrounds and figuring out how to implement a scalable solution for developing countries.\nWhat's next for Jamii - Community Mobilization\nWe would like to have it deployed to rural areas and see how FTC and its community members use it to improve their communication methods.\n",
        "hackathon_id": "breakpovertyhackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\nc++/arduino-apijavascriptphp\n",
        "hackathon_id": "breakpovertyhackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\ncsshtmljavascript\n",
        "hackathon_id": "breakpovertyhackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\nruby-on-railstwilio\n",
        "hackathon_id": "breakpovertyhackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\nnode.jspython\n",
        "hackathon_id": "breakpovertyhackathon",
        "winner": false
    },
    {
        "description": "\nMedMS\nMedMS is a service to match people to local medical professionals when they need them the most.\nOur vision is to provide easy access to medical help in a single easy step.  Simply send an SMS to our MedMS number when you are in need of medical assistance.  We will then parse your message and send it to local doctors (volunteers) that have marked themselves as available and connect them with you.  \nText the number: 647-693-8595\nWebsite\n",
        "hackathon_id": "breakpovertyhackathon",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe Kenyan goverment through the leadership of first lady launched the beyond Zero campaign,to reduce the rate of maternal deaths in kenya.These clinics have been deployed in most remote rurals in kenya.\nWhat it does\nwe map data and give to beyond Zero campang to help them optimize their operations and logistics\nHow I built it\nusing USSD short code,route sms-java with node js and used html,css and angular to developed database\nChallenges I ran into\ngeting the information sms code and testing we dint have more information  and we had to ask alot of people\nAccomplishments that I'm proud of\nthe system is up and running within 20 hrs and tested with several team members\nWhat I learned\nteam work collaboration and also our team learnt to horn skills in Heroku and USSD\nWhat's next for Afya Mama Application\nReach out to foundations and NGOS to raise grants to roll out the application in the whole of EAST AFRICA \n",
        "hackathon_id": "breakpovertyhackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\ntwilio\n",
        "hackathon_id": "breakpovertyhackathon",
        "winner": false
    },
    {
        "description": "\nElevator pitch:\nTherapeuo connects rural Kenyans with medical professionals nearby, and across the globe to promote health.  Therapeuo alleviates this accessibility problem by tackling  bridging the technological gap between professionals with smart devices and those with limited mobile technology.\nInspiration\nIn rural Kenya, access to a doctor can be scarce and intermittent.  The nearest medical facility is often a day's walk away.  This poses challenges for those who have dependants, or are suffering from severe symptoms. \nWe realized from the beginning that we wanted to stay in the Health pillar, and we were lucky enough to meet a medical student who gave us background on how doctor-patient consultations are done.  From what we learned, a fairly thorough a session can be as little as 20 minutes and around 60 questions asked by the physician.  This gave us the idea that this interaction could easily be facilitated without an in-person meeting; especially when it was geographically difficult for both parties.  \nWhat it does\nTherapeuo tackles the accessibility problem on two fronts.  The former is a technology solution that bridges cross-generation mobile technologies.  The latter utilizes the former to expand the pool of human resources.\nUser Personas\n\nKenyan seeking medical advice or assistance\nLocal medical professional capable of direct engagement\nGlobal medical professional capable of remote consulting\n\nPatient Narrative\n\nJane is a Kenyan woman with 5 children, one of whom has had a high fever for the last two days.  She lives 1 day away from the nearest medical facility.\nJane sends a request for advice and assistance via SMS to Therapeuo\nDr. Shepherd from Canada (a professional expertise to triage and diagnose patients) is available and is assigned Jane\u2019s case via her smart-phone.\nAfter some diagnosis (via SMS/smart-phone), Dr. Shepherd decides that Jane\u2019s child may require on-site treatment.\nDr. Shepherd is then able to collaborate with Dr. Grey from Nairobi on Jane\u2019s case to provide assistance.\n\nDoctor Narrative - Remote\n\nDr. Shepherd is a doctor from Canada and she is able to log into the Therapeuo iOS app to see a list of her cases\nShe is able to click on any of her cases to review notes or send the patient an SMS asking for more information or gathering more requirements\nAfter she closes her phone, she received push notifications when her patients reply to her message or if she is assigned a new patient\n\nDoctor Narrative - Local\n\nDr. Grey is a doctor who travels to different villages around Kenya on a weekly basis.\nDr. Grey gets a notification from Dr. Shepherd regarding a patient close by who may need medical attention\nDr. Grey now has more information about what is needed where, and can make more informed decisions on where to travel\nWhen she does visit, Dr. Grey can spend less time triaging patients because the information is at his fingertips\n\nTechnology stack\nURLs\nhttps://github.com/sksw/therapeuo-ios\nhttps://github.com/andrewapperley/therapeuo-server/\nSMS Endpoint\nAny user with access to SMS can access Therapeuo services.\nThey can talk to doctors across the globe, as well as receive automated messages in response to certain trigger words (i.e. /options lists all)\niPhone Application\n\nDoctors are able to manage multiple cases at the same time.\nShows conversation history and case notes.\nAdditional doctors can be added to a case (especially if on-the-ground assistance needs to be co-ordinated).\nLocation based data is shown to help doctors identify what on-the-ground assistance may be available\nDoctors are able to manage their availability, as well as provide more information about themselves (e.g. location, etc) for better patient matching.\n\nServer Application\n\nProviding a near real-time experience with international health professional through a primitive technology, such as SMS, is a key part of what we strived to offer with Therapeuo.\nTwilio API provides the transform between the smart-phone user and the SMS device user.\nAbility to parse \u2018trigger\u2019 words which automate certain types of messages.  An example is the \u2018/options\u2019 message. Upon receipt the server sends out a message to the Patient indicating all the trigger words and \u2018/location LOCATION\u2019 updates the Patient\u2019s current location which could be used to better help them with their medical needs.\n\nHow we built it\nThe team consisted of 2 backend developers and 3 frontend developers.  The entire process took place across 1 evening, followed by a 24 hour period.  The first evening composed mainly of trying to understand the problem space, idea generation, team alignment, and preliminary exploration of dependencies & limitations.  Backend work was started first as it would be the longest and most depended upon piece.  During this time, further discussion took place regarding what the \u201cMVP\u201d might look like.  Ideas and component interactions were prioritized in tracker.  Henceforth, a dedicated member worked on providing the data communication layer between the server and the native iOS client.  Stub methods were created to allow the frontend team members to build around the general structure of the data without having any real communication with the backend.  Features began to fall into place and were integrated in on a just-in-time basis.\nChallenges we ran into\n\nUnderstanding the problem space; seeking to understand how technology could best serve those in the rural regions of Kenya.\nNumerous areas of concern surrounding security of medical data, user acquisition, monetization/sustainability, and existing solutions in a similar space.\nApple throttling the number of pushes we can receive after sending too many in succession; preventing us from testing for a period of time.\n\nAccomplishments that we're proud of\nA fully operational system in place that demonstrates the core functionality that we envisioned during our initial whiteboarding session. As we progressed through the event we slowly realized what that full potential of this product was and that we had something tangible to go forward with. \nWhat we learned\n\nAbout challenges faced by Kenyans\nThe value of sleep\nWe learned about the core values of working within a team environment progressing toward a common goal, which was to solve a real world problem in a foreign, rural area with a synergy of basic and modern phones. \n\nWhat's next for Therapeuo\n\nTherapeuo\u2019s technology stack is agnostic to geographic location and professional field.  As such, we envision expansion into different countries.  We also expect the core technology stack to be abstracted to other professional service.\nAddress a number of issues from during development.  This includes, privacy, abuse, safety, sustainability, etc.\nThe current work is a proof-of-concept.  Much more work is required to provide the richest experience.  Some future work may include improved tag triggers, better patient history tracking, epidemiology, more precise geofencing, big data, etc.\n\n",
        "hackathon_id": "breakpovertyhackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonphp5firebase\n",
        "hackathon_id": "breakpovertyhackathon",
        "winner": false
    },
    {
        "description": "\nInspiration\nDesire to have more children acquire basic education by being informed early when possibilities of discontinuing education occur and mitigating them.\nWhat it does\nContains database of all children, teachers, parents and other education managers. The database is constantly updated by class teachers daily attendance register, Heads of schools on discipline and education manager on critical issues. These parties can also share and talk to each other in appropriate levels.\nHow I built it\nUsing Angular, mongodb, jquery, html5, JavaScript and css.\nChallenges I ran into\nGetting education statistics to understand the problem better, computer unresponsiveness, mongodb failure to work properly initially and server issues.\nAccomplishments that I'm proud of\nCommitment from members, assistance and learning from the team members, support from the mentors to learning new skills in coding.\nWhat I learned\nHow to link angular to mongodb, use of postman, use of forms to post in various coding environments platforms\nWhat's next for Mkombozi\nTesting to ascertain the functionality, and possible adjustments where necessary. Seek funding for implementation of this critical nut the tightening of the education pillars.\n",
        "hackathon_id": "breakpovertyhackathon",
        "winner": false
    },
    {
        "description": "\nWhat is ImmuniSave\nImmuniSave is a vaccination reminder and tracker system with analytics built on top to empower people in rural Kenya to be knowledgeable about their children's vaccination schedule and for healthcare workers to quickly record immunization progress and make proactive decisions to reform their immunization strategy.\nREMIND\nWith one simple SMS, a parent can register his or her child into the system and start receiving vaccination reminders automatically. Parents can register as many children as they'd like on the same phone.\nThey do not need a smart phone or internet access.\nOne SMS is all it takes.\nThe reminders are based on the national immunization schedule of Kenya.\nA parent will receive a reminder one week before a vaccination is coming up, on the day of the vaccination, and when it's overdue.\nRECORD\nWith each reminder, parents are given a code. This is a unique id that is specific to the child, the vaccination, and the iteration of that vaccination.\nParticipating and registered health care providers can be given this code at the time of the vaccination to send an SMS using their phone to mark the vaccination as administered.\nWe now have a record. We know which child received which iteration of which vaccination on what date by which healthcare provider.\nThis can become the official immunization record for rural Kenya.\nREFORM\nThe benefits of reminding and recording can be further supplemented by taking action on what the data represents.\nThe ELK stack we used to analyze the data collected can be used in many helpful ways such as to:\n\nFind out underperforming vaccinations, broken down into regions or other categories\nHave a realtime picture of immunization needs\nRate the success of the overall program\nShift resources between regions to proactively meet demand\nOpen a line of communication to patients\n** Targeted warning messages\n** Warn of potential of outbreaks in their area, especially if they are not vaccinated against the disease\n** Reach people you were never able to reach before\n** Word of mouth can take the message to the community beyond the subscriber\n\nImagine if telecom companies were on board. The advertising for this campaign can be as simple as everyone receiving an SMS message letting them know they can text a free number to track their children's vaccination schedules.\nWhat's next for ImmuniSave\nGeomapping, better reporting, more involvement from health pros\nWhat We Learned\nWe learned to work within the constraints presented to us - lack of internet access, access to smart phones, and economic limitations - voice calls and even SMS messages can be costly to the people of rural Kenya. So we had to think very hard on how to make this as cost effective as possible.\nWe learned Elasticsearch! The ELK stack helped us visualize the data (whatever little test data we had) and saw the power it can bring to governments and the healthcare community.\nWe also learned about QuickTime's 9:41 quirk.\nI took screenshots of my iPhone on my MacBook using the QuickTime movie recorder. And Apple doesn't want you to send screenshots of your iPhone with your underperforming wifi connection, your poor battery status, or... your... actual... phone time...\nYeah...\n",
        "hackathon_id": "breakpovertyhackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptnode.jsreactjstwilio\n",
        "hackathon_id": "breakpovertyhackathon",
        "winner": false
    },
    {
        "description": "\nOnyx\nby Charley Chen, Matthew Li, Tyler Thompson, and Austin Liu\nOverview\n2014 was the year of the smartwatch. Within the couse of a single year, we saw a variety of smartwatches, all produced from different companies with different capabilities. As expected, each new watch attempted to outdo the last, with a host of new features and specifications trying to make the most of the smart-wearables field. Yet, out of the myriad of watches released and the countless applications produced, none of them allowed for simple navigation. Not a single app could tell us what direction we should proceed in in order to get to our final destination. That is where Onyx comes in.\nOnyx is our attempt at bringing simple and intuitive navigation to the smartwatch market. Instead of displaying complex text directions, our app displays a single arrow that points in the direction of your target, much like that in any video game minimap. With its companion app for the iPhone, you can tap a point nearby you, and the arrow will begin to point in that direction. No matter how you turn or move, the arrow will always guide your way. In case you don't know where you're going, our app can also suggest popular locations (famous Cornell locations), nearby hotels (thanks to Priceline's API), and even hospitals (thanks to Google Maps API). If that doesn't fit your needs, just type into the search bar what you are looking for. We hope that Onyx will guide you on your next adventure!\nRelated Repositories:\n\nOnyx-Backend\nOnyx-Frontend\n\nTechnologies Used\n\nPriceline API\nPebble C\nObjective-C\nNode.js\n\nFor BigRed\\Hacks 2015!\n",
        "hackathon_id": "bigredhacks2015",
        "winner": true
    },
    {
        "description": "\nDynamap\nhttp://dynamap.co\nInspiration\nAfter seeing an innovative map of the world scaled by population rather than land area (see \n), we became interested in representing other kinds of data using similar techniques. However, these maps were all generated by hand. We then came up with the idea of constructing a tool that lets users generate maps real-time based on a variety of statistics.\nWhat it does\nDynaMap lets users choose from a host of country statistics, scraping the web and dynamically scaling the land area of different landmasses according to those statistics while preserving basic shape and relative location.\nHow we built it\nUsing Node.js built on a MySQL database, we developed DynaMap using HTML5 canvas elements by hand, constructing algorithms to adjust the location, scale, and shape of each country according to the statistics scraped from the CIA World Factbook.\nChallenges I ran into\nDuring development, we struggled between scaling countries purely based on data and losing relative positioning or retaining shape and relative size at the risk of locking ourselves into one map orientation. At the end, we settled on a hybrid approach that gave us the unique ability to visualize differences between countries without losing the borders between them.\nAccomplishments that we're proud of\nWe're proud that our web service provides something unique and that we generalized a solution for representing a map of arbitrary shape with arbitrary data. Starting from scratch, we built the Tug-O-War\u00ae algorithm that allows countries to interact and negotiate borders and land masses while preserving their recognizable form.\nWhat we've learned\nHaving no prior experience with HTML5 canvas elements, we quickly adapted it as the crux of our application. For many of us, it was our first time using JavaScript and MySQL. Using no front-end frameworks, we created an intuitive and interesting user experience. \nWhat's next for DynaMap\nWe'd like to refine our algorithm further to allow more flexibility with country manipulation and to allow user-submitted data within the web application. Given more time, we'd like to see DynaMap grow into an interesting open-source project where everybody can contribute to a unique data visualization model.\n",
        "hackathon_id": "bigredhacks2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nA few of us were sharing an Uber at another hackathon, and our ride was very boring.  We figured it'd be fun to have some sort of friendly competition to keep us entertained during the ride, and thus UberQ was born!\nWhat it does\nUberQ allows friends to make their rides home way more interesting.  Instead of just splitting fare equally between everyone, we allow groups to compete against each other for the piece of the pie.  Users will compete in a trivia-style game, and the final fare split is determined by the correct number of questions answered.\nHow we built it\nWe have a Node.js (the only real dev language) backend generating an API, which is then grabbed by the Android app.  Users interact with the app only, and all the authentication and logic is passed back and forth between the server and the phone(s).  All of our question data and user data is stored through DynoDB on Amazon Web Services.\nChallenges we ran into\nAndroid setup was causing us a whole slew of problems initially, but we managed to power through.  And toward the end of the submission deadline, AWS DynoDB failed (for everyone using the service), and therefore made it impossible for us to continue working until they resolved their issue.\nAccomplishments that we're proud of\nCreating and implementing a unique idea that we (and other hackathoners!) would actually enjoy using is in itself something we're proud of.  We came in with no experience using the Uber API and only very basic Android development experience, but we managed to connect it all together into a fully-featured product.  The thing looks great, and works even better!\nWhat we learned\nThere's a multitude of ways to accomplish the same goal, and some ways are way more straightforward than others.  Experiment around and find what works best.  \nWhat's next for UberQ\nWe'd like to expand the idea of \"Uber gamification\" to include a wider variety of games.  A common complaint of any travel medium is boredom, and we've helped push toward fixing that problem.  Additionally, we'd like to possibly allow for phone-to-phone communication and an iOS app down the road.\n",
        "hackathon_id": "bigredhacks2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe were inspired by our lack of money and our frequent need for emergency cash to get things done like pay a bill, buy a cheap car, go to a family reunion.\nWhat it does\nIOUme allows CapitalOne customers to transfer money from their accounts to other accounts of friends that they know.  When someone needs a loan, they now have the option of sending a request for a specific amount to friends and contacts of theirs that are part of the platform.  The lender can lend securely and safe to their friend and track the repayment of the loan on the IOUme platform.  The borrower defines the amount and the length of the loan.  The lender defines the interest rate and if the borrower accepts, money is automatically transferred.  CapitalOne has the opportunity to earn 1% from each loan.\nHow I built it\nWe used iOS and the CapitalOne API.  We used software such as XCode and Photoshop.\nChallenges I ran into\nWe are not particularly strong in coding since we are newbies but we were able to consult with the CapitalOne mentors to apply the API.\nAccomplishments that I'm proud of\nWe are proud of the user interface that we constructed since we kept in mind the ease of use and perspective of the user.\nWhat I learned\nWe need to map out deliverables and keep track of progress throughout the process\nWhat's next for IOUme: A peer-to-peer small loan lending platform.\nWe would like to talk with CapitalOne about the potential for this product especially since no big banks have yet jumped into this market.\n",
        "hackathon_id": "bigredhacks2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe have many opportunities to use bonuses like cashback and miles, but very few actually pay attention to it. Banking Simpatico aims to ease people into feeling comfortable with exploring these chances to travel and shop.\nWhat it does\nBanking Simpatico is a user-friendly dashboard that allows you to oversee your family's finances and explore reward opportunities such as cashback and free miles.\nHow I built it\nBanking Simpatico was built with Python using Flask. It uses the Capital One Nessie API to simulate finances and the Priceline API to find hotels that can take advantage of miles and cashback.\nWhat's next for Banking Simpatico\nWe can get the user's position by their coordinates by switching to the Google Maps API as opposed to a general area like a city or state. I'd also like to add new features such as a recommendation engine for shopping to encourage users to use their cashback for buying the items they like.\n",
        "hackathon_id": "bigredhacks2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nEver wanted to play around with something new, but don't want to install anything on your computer? Meet Gru.\nWhat it does\nGru is a tool that allows anyone to simply visit a website, or use a CLI tool, to instantly create an isolated virtual devbox in the cloud. Gru enables rapid prototyping and development by removing the initial setup time needed to get a development environment up and running. \nHow we built it\nWe used Amazon's Elastic Container Service to dynamically provision containers on demand. We then proxy information between the individual containers and clients via websockets. We built both a web and command-line interface that allow easy access to your container.\nChallenges we ran into\nAmazon's API did not provide enough flexibility, which forced us to hack around it. We also ended up writing our own Python terminal emulator.\nAccomplishments that we're proud of\nGru works! We were also able to provide dynamic port mapping to allow users to expose specific ports to the world for testing of any kind of TCP service.\nWhat we learned\nWe learned to trust no one. \nWhat's next for Gru\nWorld domination. \n",
        "hackathon_id": "bigredhacks2015",
        "winner": true
    },
    {
        "description": "\ngeographi.co \nOur team was inspired to find an innovative way to visualize data. With the world becoming more interconnected, we envisioned a platform that facilitates information sharing around the globe. This was the seed of our idea to visualize data on a 3-D model of our world. After looking through the Bloomberg API, we quickly found data that spanned different countries and continents. We also noticed that while Bloomberg functions have implemented sophisticated visualizations, there was an opportunity to introduce another dimension. \n    We looked through search engines to find data displayed in a similar manner and the closest web page we found was Google Earth. We think there is an undiscovered niche for combining geographic information with other forms of data.\n    In order to implement a 3-D model of Earth on a webpage, we used webgl, a JavaScript API for rendering 3-D computer graphics. Once we implemented the globe, we had the task of mapping data onto it. We found it natural to split data by country since many of the Bloomberg cusips had Country abbreviations. Our largest challenge involved connected the back end data to the front end. We were required to learn node.js, amazon web services, dynamodb, three.js, and integrate those technologies with HTML, JavaScript, and CSS.\n    We believe there is a lot of potential for this web app. We would like to create a platform for Internet users across the globe, to obtain objective information about the globe. Looking forward, we plan to integrate more data, including data from Bloomberg. Our data visualization can also support historical data to show how the world has changed over time. We would also like to import data from Wikipedia, to make a visual encyclopedia. The directions of the projects are vast, and we believe we could change the way people obtain news and information.\n",
        "hackathon_id": "bigredhacks2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nswiftpythonflask\n",
        "hackathon_id": "bigredhacks2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nruby-on-railsjavascriptjqueryhtml5google-mapsuber\n",
        "hackathon_id": "bigredhacks2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\niosswift\n",
        "hackathon_id": "bigredhacks2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\njadejavascriptnode.jsjsonpriceline-apijqueryphotoshopamazon-web-servicesvisual-studiogitgithubgoogle-placesbootstrap\n",
        "hackathon_id": "bigredhacks2015",
        "winner": true
    },
    {
        "description": "\nMany companies that have mobile web apps resort to building native iOS apps just to do push notifications. We're here to change that. With an easy UI for customers, and simple integration for businesses, PushYoWebsite gives mobile apps the freedom and flexibility to send push notifications without having to build their evil twin brother. \nhttp://pushyoweb.site\n",
        "hackathon_id": "bigredhacks2015",
        "winner": true
    },
    {
        "description": "\nCodeHermes\nA new way for professors to show code to their students!\nPull out the comments and make it simpler and easier to read the code without distractions.\nAdd anonymous questions that the professor can respond to in real time.\n",
        "hackathon_id": "bigredhacks2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nOur diverse backgrounds played a significant role in the ideation process. The designers were interested in designing an experience for the users, the electrical engineers were interested in exploring computer vision and building hardware, the computer scientist was interested in building a software interface, and together we created an integration of hardware, software, and physical experience. \nWhat it does\nTRACEME is an educational web app that allows children to learn varies topics such as how to write the alphabet, numbers, and how to draw basic shapes. The parents would set up the environment with just a click of a button, and children will be able to use the webcam and the gloveme (a glove with LED's located on the tip of the index finger) to start drawing letters or numbers out of thin air. The webcam tracks the LED light on the tip of the index finger and the child will attempt to trace the dashed outlines that appears on the webcam feedback. Red LED is for writing, and the green LED is for erasing. There are multiple lessons that the users can choose from. \nHow I built it\nWe used open source code from trackingjs.com as a template, and we modified the functions to be able to track our desired colors with greater accuracy and robustness as well as modified the aesthetics of the interface. \nThe website was built in HTML, CSS, PHP, and Javascript. \nThe graphics were all created using illustrator and photoshop. \nThe glove was built with LED lights, basic circuitry, and a garden glove. \nChallenges I ran into\nColor tracking was difficult in the presence of noise, mainly changing illumination and accommodating for the presence of objects with similar color in the background.\nOn top of the technical issues, working cohesively as a group and planning out individual work was also challenging for us. We constantly challenged our ideas and made changes to it, therefore it was hard for everyone to be on the same page as we all had different ideas for improvement. When we were breaking off into individual work, some people were confused about what exactly we are making. This miscommunication resulted in a lot of wasted effort and time. However, we were able to converge our ideas the second day and really solidify a plan and schedule to keep us on track. \nAccomplishments that I'm proud of\nWe were able to finish the project in 17 hours. Also, we were also able to incorporate every members expertise into this project, the process of putting our individual parts were difficult but also very rewarding. \nWhat I learned\nIn terms of computer vision: we learned how to process images with javascript that tracks color in real time. \nIn terms of group dynamics: we learned how to collaborate with all sorts of different people. We also learned that self motivation is very important for a project that is our own (not for grade). \nWhat's next for TRACEME\nTRACEME can be expanded to have lessons for a wider age range of users. It can also have custom traces that the users can create and share. TRACEME can also incorporate healthy competitions to further encourage participation. \n",
        "hackathon_id": "bigredhacks2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nTerra Nova is a simple social welfare app that has the potential to save your life someday. \nWhat it does\nIn the case of a natural calamity like an earthquake, the app detects whether the user is within the affected region and stores the users current location on a server. Information from all such devices in the affected regions is provided to search and rescue team to aid them to find the worst affected regions and take the appropriate actions. The app also allows users to inform the authorities about their well being in case they are safe.\nHow I built it\nWe get the information about earthquakes from USGS API and use cellular data or wifi to get users location. Webpage displays the natural calamity and the population.\nAccomplishments that I'm proud of\nWe plot the locations of all users in the vicinity of an earthquake that has a magnitude of 5 or higher on the Richter scale. The map is dynamic and can be updated in real-time. It serves the purpose of giving the authorities a visual summary of the affected population. Another features is to inform the emergency contacts of the victims via SMS.\nWhat's next for Terra Nova\nIn the future we hope to make the experience of setting up and using the app more user friendly. We plan to support more calamities like tsunamis and warnings about such calamities. If the app gains popularity we could allow special provisions for it to contact the authorities even without network availability (like 911 calls).  \n",
        "hackathon_id": "bigredhacks2015",
        "winner": true
    },
    {
        "description": "\nThis provides a more intuitive usage of WolframAlpha such as providing pictorial representation of the formulas. We aim to create a user friendly interface to WolframAlpha aimed at Cornell students taking intro Math Courses. \n",
        "hackathon_id": "bigredhacks2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nmeteor.jshtml5javascriptbootstrapnode.jscss3codi\n",
        "hackathon_id": "bigredhacks2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nHuman tends to understand, perceive, and retain knowledge better when the information is represented in visual form. \nWhat it does\nVisualizing and presenting the world's economics trends based on various parameters to analyze, perceive and understand in easy way.\nHow we built it\nUsing Bloomberg data service hosted on Amazon DynamoDB, we created REST API to interact with from user search query. The given search results are all in the form of visualizations built in Highcharts and D3.js. The front-end is written in Angular.js to bind the visualized data easily and dynamically, back-end is Flask app framework written in Python. \nChallenges we ran into\nWe had a hard time to find good idea for this hackathon. Interacting with DynamoDB is pretty challenging since our team is not familiar. We found difficulties in reading the documentation as well, but luckily we made it! After struggling with pulling data pretty slowly from DynamoDB (>10 seconds for big query), we optimized the process and improved the searching time to less than 1 sec.\nAccomplishments that we're proud of\nThis is our very first hackathon! Lots of fun and code! We learned lots of lots of things and slept less than 4 hours to build our cool stuff in 30 hours. We are able to successfully complete our project in this short time.\nWhat we learned\nOur team learned lots of new tech. Our team used DynamoDB, Flask and Highcharts for the first time. We had too many features to build, but due to limited time (< 36 hours + sleep) we short listed down to the core features. Learning points: start small, iterate more.\nWhat's next for Bloomgraphs\nCollections of other world's knowledge and statistics, other than economics. Also predict the future (e.g. the next financial crisis) with various machine learning techniques.\n",
        "hackathon_id": "bigredhacks2015",
        "winner": true
    },
    {
        "description": "\nInspiration\n\nSince many gambling website is focusing on making profit for their own, we found that it is a great opportunity for these websites to build up connection with philanthropy events. \n\nWhat it does\n\nThroughout our website, user can bet any sports event on our site and make a bet. Clients will get paid back if they win, but if they lose, we will donate 30% of bet amount to American Cancer Society. \n\nHow I built it\n\nFirst, we use django to build up our data frame and database. Then, we separate our work into front end and back end. For front end, we used css, javascript and html to implement. For back end, we web-scrapped live sports data from ESPN.go.com and put them into our database. At the same time, we adopted Capital One API to achieve payment transaction between users, bet4charity, and American Cancer Society. \n\nChallenges I ran into\n\nInitially, we were thinking about adopting blockchain API to encrypt users' data and bitcoin payment transaction. Unfortunately, since the API of this technique is only associate with bitcoin storage and security, it's infeasible for us to create a new API involving in blockchain technique regard to other data from users. \n\nAccomplishments that I'm proud of\n\nWe are able to utilize the economic advantage of a gambling website to do something beneficial to society.\nWe are proud of using Capital One API to facilitate us to achieve this goal.\nWe have lots of good understanding on blockchain technique.   \n\nWhat I learned\n\nWe learned to use Capital One API to POST, PUT and GET accounts, purchases, transfers, and deposits data. \nWe also learned to use django to build up our data frame and database in a clean, efficient way. \nIn addition, we figured out how to get the live sport data we need from the HTML source in a economic way. \n\nWhat's next for bet4charity\n\nWe will also let the gambling losers to choose the organizations by themselves, including charity organizations, schools and other non-profit organizations.\n\n",
        "hackathon_id": "bigredhacks2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\ncsspythonjavascripthtml\n",
        "hackathon_id": "bigredhacks2015",
        "winner": false
    },
    {
        "description": "\nPlease check our github's QuickPay-README.pdf for the complete story.\nInspiration\nLack of a service that allows secure, instant transfer of funds between any two bank\naccounts, for free.\nWhat it does\nQuickPay is an Android app that allows secure, instant transfer of funds between any two bank\naccounts, for free.\nHow I built it\nAndroid app on the front end; Java and Jersey framework application server deployed on AWS at the back end.\nChallenges I ran into\nAndroid deprecated functions, not documented well enough; AWS setup hurdles; Jersey framework setup hurdle.\nAccomplishments that I'm proud of\nMade a Minimum viable product in a record time of 24 hours.\nWhat I learned\n\nAlways assume you'll spend 2x time working on your initial estimated time to complete.\nUse technologies that the team in comfortable with.\n\nWhat's next for QuickPay\n\nAttempt to add more security features like SSL and deploy this app as a complete fund transfer client.\nPlease check the complete \"README\" on github to know more about QuickPay.\n\nbigred // hacks\nSeptember 20, 2015\nQuickPay\nProject Description\nQuickPay is an Android app that allows secure, instant transfer of funds between any two bank\naccounts, for free.\nProblem statement\n-\nMost banks take 3 business days to transfer funds to a beneficiary of a different bank and they\ndon\u2019t offer an instant payment service.\nSome third party applications allow instant transfer of funds between 2 different bank accounts\nbut, impose transfer limits and charge a transaction fee.\nThis system of banking makes it cumbersome for a person to transfer funds in the event of an\nemergency.\nOur solution\n-\nThough banks take a longer time to transfer money to a different bank\u2019s account, most banks\nhave an instant transfer mechanism for 2 accounts within the same bank.\nUse this feature to facilitate instant transfers between any 2 accounts, for free!\nHow do we do it?\n-\nInstall the app. Register a username, credit/debit card details and a \u201cShareable amount\u201d.\nOnce registered, the user can do instant transfers of up-to 5 times his configured Shareable\namount.\nUnder the hood...\nUsername2 has no money\nHTTP POST\nQuickPay debits amount\ninstantly\nQuickPay pays\nusername3 using regular\ninter-bank transfer\nQuickPay intiates transfer instantly\nFind username2\u2019s bank;\nServer finds that username3\nhas an account at same bank\nUsername3 has set\nSharable amount = $500\nThis is the max. amount that can be temporarily borrowed\nQuickPay will transfer it to Username3 in 2 days.\nUsername3 and Username2 have\naccounts in same bank\nSame bank transfers occur instantly\nThis facilitates instant transfer\nUsername2 receives\ninstant creditbigred // hacks\n-\nSeptember 20, 2015\nThe amount can be CrowdSourced from multiple intermediate accounts, if the transaction size\nis too large.\nSince a person can do instant transfers upto 5x times his configured \u201cShareable balance\u201d, this\nencourages users to configure higher limits and hence, more \u201cbuffer\u201d money becomes available\nto QuickPay for instant transfers.\nAPIs and Technologies used\n-\n-\nAmazon ElasticBeanstalk to deploy the application server on the cloud\nAndroid to develop the mobile app\nCapital One APIs to get customer debit card information, balance, account details, etc. and to\nfind probable intermediate account holders.\nJava and Jersey framework to develop the server side application.\nURL\nhttp://dataserver-env.elasticbeanstalk.com\nThe application server has been configured to handle JSON requests and send JSON responses.\nThere is no server UI hosted at this URL.\nPOST can be simulated with Postman as:\nhttp://dataserver-env.elasticbeanstalk.com/rest/transaction/transfer\n{\n\"senderId\" : \"55e94a6af8d8770528e60e45\",\n\"receiverId\" : \"55e94a6af8d8770528e60e46\",\n\"bankName\" : \"Savings\",\n\"amount\" : 1000\n}\nTeam members\nSaurabh Netravalkar - sn575@cornell.edu\nVishal Kumkar - vkk22@cornell.edu\nDevi Snigdha - dm754@cornell.edu\nHarish Sethumadhavan \u2013 hs643@cornell.edu\n",
        "hackathon_id": "bigredhacks2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtmlcss\n",
        "hackathon_id": "bigredhacks2015",
        "winner": false
    },
    {
        "description": "\nInspiration : The community of Uber riders is growing exponentially across the world. At any given time, there are many people across the world taking an Uber ride. So we came up with the idea to connect people within this large global community based on some common interests they share (besides Uber). It can be a great way to get to know new people with shared interests and make the commute more fun.\nWhat it does : It asks users to login using their Uber credentials and share some of their interests on the app. While they're en route in their Uber rides, they can choose to start a chat with a fellow Uber rider. Based on their listed interests, riders will be randomly connected via chat to other people also in an Uber ride at the time. Chats with new people can only be initiated while riding an Uber. However, once a user has connected with a fellow Uber rider, they can choose to continue chatting with them later (or not) once their commute is over.\nHow I built it : We used Parse for the server and database, and Javascript to build the back-end. We developed the app using Android Studio and the Uber API. Users login via Uber and once they've given the necessary permissions, they can start chatting with other Uber riders as soon as they go on their next Uber ride. On signing up, users are asked for some of their interests. Using the Uber API, we check for the current request status of the riders. If it is \"in_progress\", then they will be able to start a new chat with another unknown Uber rider, which will be randomly selected by the app from the pool of other riders also in an Uber and with some common interests.\nChallenges I ran into: One of the main challenges we faced was getting familiar with using the Uber API for Android development. To access the \"in_progress\" and \"requested\" statuses of Uber ride requests, we required  the request_id for the users' requests which meant that they had to order an Uber from our app rather than the Uber app. Being unfamiliar with advanced Android development and the Uber API meant there was a learning curve to overcome before we could get started with development, which led to less time for building some features and making the app as beautiful as we had hoped to.\nAccomplishments that I'm proud of : Despite our shortcomings in technical know-how of the Uber API and Android app development intricacies, we divided the tasks between the team members according to our strengths and covered substantial ground towards building the app we had in mind.\nWhat's next for UberHoot : We plan to continue development and incorporate more features and options in the app like providing more incentives for people who connect through our app to physically meet up, blacklist or report people that users would rather avoid chatting with and so on.\n",
        "hackathon_id": "bigredhacks2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonhtmljavascriptcsssql\n",
        "hackathon_id": "bigredhacks2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nunitysymphony\n",
        "hackathon_id": "hackjam",
        "winner": false
    },
    {
        "description": "\nInspiration\nInspiracj\u0105 by\u0142y korki na ulicach miast, zastanawiali\u015bmy si\u0119 co mo\u017ce motywowa\u0107 nas do pozostawienia auta w domu i woboru innych form transportu\nWhat it does\nAplikacja, k\u00f3tra motywuje Ci\u0119 do pozostawienia auta w domu dzi\u0119ki temu , \u017ce przelicza kilometry przebyte innymi \u015brodkami transportu na zaoszcz\u0119dzone pieni\u0105dze\nHow I built it\nDzi\u0119ki pracy zespo\u0142owej i super sesji servicejam uda\u0142o nam si\u0119 przej\u015b\u0107 od ideii do prototypu \nChallenges I ran into\nJak przedstawi\u0107 warto\u015b\u0107 dla uzytkownia, jak przekona\u0107 go do korzystania z aplikacji \nAccomplishments that I'm proud of\nJeste\u015bmy dumni z interfejsu uzytkownika i prostoty dzia\u0142ania aplikacji\nWhat I learned\n\u017be, mo\u017cna stworzy\u0107 produkt w tak kr\u00f3tkim czasie\nWhat's next for Fru\nPraca nad rozwojem aplikacji, jej wdro\u017ceniem do sklepu.\n",
        "hackathon_id": "hackjam",
        "winner": false
    },
    {
        "description": "\nZdj\u0119cia za\u0142\u0105czone\n",
        "hackathon_id": "hackjam",
        "winner": false
    },
    {
        "description": "\nInspiration\nInspiracj\u0105 by\u0142y korki na ulicach miast, zastanawiali\u015bmy si\u0119 co mo\u017ce motywowa\u0107 nas do pozostawienia auta w domu i wyboru innych form transportu.\nWhat it does\nAplikacja, kt\u00f3ra motywuje Ci\u0119 do pozostawienia auta w domu dzi\u0119ki temu, \u017ce przelicza kilometry przebyte innymi \u015brodkami transportu na zaoszcz\u0119dzone pieni\u0105dze.\nHow I built it\nDzi\u0119ki pracy zespo\u0142owej i super sesji ServiceJam uda\u0142o nam si\u0119 przej\u015b\u0107 od idei do prototypu aplikacji. \nChallenges I ran into\nWyzwaniem by\u0142o dla nas takie zaprojektowanie aplikacji, aby przedstawi\u0107 jak najwi\u0119ksz\u0105 warto\u015b\u0107 dodatni\u0105 dla u\u017cytkownika.\nAccomplishments that I'm proud of\nJeste\u015bmy dumni z interfejsu u\u017cytkownika i prostoty dzia\u0142ania aplikacji.\nWhat I learned\nNauczyli\u015bmy si\u0119 tego, \u017ce mo\u017cna stworzy\u0107 pi\u0119kny produkt w tak kr\u00f3tkim czasie.\nWhat's next for Fru\nPraca nad rozwojem aplikacji i jej wdro\u017ceniem do sklep\u00f3w.\n",
        "hackathon_id": "sjhackjam",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaandroidiosobjective-c\n",
        "hackathon_id": "sjhackjam",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe were inspierd by the experts\nWhat it does\nGenerates random tracks for runners\nHow I built it\nIn Zurb Foundation for Apps framework and Angular JS\nChallenges I ran into\nWe had problems identifying the exact needs of a potential customer\nAccomplishments that I'm proud of\nThat was a very nice experience and quite of a challenge to go throgh all the steps on the jam - expecially for backend developers\nWhat I learned\nHow to think more about potential customers needs. \nWhat's next for Moove\nGo to market with the app. Possilby start gathering the community around the app.\n",
        "hackathon_id": "sjhackjam",
        "winner": false
    },
    {
        "description": "\nZdj\u0119cia do\u0142\u0105czone \n",
        "hackathon_id": "sjhackjam",
        "winner": false
    },
    {
        "description": "\nInspiration\nEase life of users who have some sport activities\nWhat it does\nAssist user with his sport activities\nHow I built it\nNot built yet\nChallenges I ran into\nToo many to mention...\nAccomplishments that I'm proud of\nFirst hackjam night survived!\nWhat I learned\nProject analysis, brainstorming, defining...\nWhat's next for Hero Gym\nWaiting for coding start\n",
        "hackathon_id": "sjhackjam",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe hate insane medical bills! We wanted to solve this problem with a simple to use app to help us find doctors who specialize in our problems and support our insurance!\nWhat it does\nHelps you find doctors who specialize in what you're looking for who are also carried by your insurance plan.\nHow we built it\nCarefully!\nChallenges we ran into\nSleep deprivation, and getting doctor data - also getting diabetes from all the candy and RedBull.\nAccomplishments that we're proud of\nWe made an app!\nWhat we learned\nThere's a lot of insurance providers.\nWhat's next for DoctorPedia\nExpanding doctor data to cover more doctors and polices.\n",
        "hackathon_id": "ramhacks",
        "winner": true
    },
    {
        "description": "\nWhat is Squirrel?\nSquirrel was designed to be an investing consultant capable of providing stock picks to users. But there's even more. The user can ask Squirrel for ways they can invest their money. Squirrel then immediately links into their Capital One bank account to see their balances, assesses a proper portfolio allocation for stocks, and then gives them a basket of diversified stocks to invest in. Squirrel also provides connections into every single one of Capital One's API endpoints that include ATM and merchant search, along with bill, purchases, transfers, and withdrawal discovery.\nWhy create Squirrel?\nWith paychecks being deposited all the time, there's a lot of money that just sits around idly in people's bank accounts. This money could be much better leveraged if people understood how to invest, but that's often times difficult. This app makes it simple by interfacing with Capital One bank accounts and providing investing insights based on the bank account profiles. \nHow does Squirrel work?\nQuery for stock help: type \"I need help managing my money\" or \"Give me investing insights\" \nQuery for single stock quote: type \"Look up AAPL\" or \"Find AAPL symbol\"\nQuery for ATM location search: type \"Find ATMs near Washington D.C.\" or \"Find ATMs near me\"\nQuery for merchants nearby: type \"Find merchants near Richmond\" or \"Find merchants near me\"\nQuery for billing info: type \"Find my bills\"\nQuery for deposits info: type \"Find my deposits\"\nQuery for purchases info: type \"Look up my purchases\"\nQuery for withdrawals info: type \"Look up my withdrawals\"\nQuery for transfers info: type \"Discover my transfers\"\nWhat makes Squirrel stand out?\nSquirrel's amazing. Not only is it easy to use but it's intuitive. This is because we incorporated natural language processing into his language by training him with sets of possible queries. This allows us to ascertain the intentions of the user querying the text interface. Additionally, we styled an iOS simulator directly into the website, which took a ton of CSS and Javascript, so that users could test out the interface from the site.\nWhat's next for Squirrel?\nIdeally, we would add a notification system where users can subscribe to investing insights and the app can detect whenever the user deposits money into their account. We tried to implement this but ran into issues when settings a recurring timer to constantly query the user's list of deposits. It was simply too costly to do so and so we will have to figure out how to keep a database or localstore for this information.\n",
        "hackathon_id": "ramhacks",
        "winner": true
    },
    {
        "description": "\nConcepts and Formation\nThis app is centered around three main challenges provided by sponsors of Ramhacks. With the idea to incorporate Capital One's banking system (Nessie) with the interactive nature of a human health issue (challenge provided by Websmith Group), our team designed an Android app used to map flu prevalence density over Google Maps' heat map feature. Density is measured by the purchase of Tamiflu over a national scale, in which a dummy data set of approximately 15,000 data points were used to populated the maps. \nIn addition, we constructed a model for age verification and authentication as a side project during our experience.\n",
        "hackathon_id": "ramhacks",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavaandroidjenkins\n",
        "hackathon_id": "ramhacks",
        "winner": true
    },
    {
        "description": "\nWhat it does\nMoneyWatch is an Android application that uses the Capital One Nessie test API to detect when your bank balance is low, with notification support for the Pebble smartwatch.\nWhat I learned\n\nHTTP requests\nPebble watchapp/notification development\n\nWhat's next for MoneyWatch\n\nUI/UX refinement \nFleshing out Google Maps API integration\n\n",
        "hackathon_id": "ramhacks",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavaandroidcpebblejsonvimarch-linux.notepad++android-wearandroid-studiored-bulljenkinssleep-deprivation.umm.code.\n",
        "hackathon_id": "ramhacks",
        "winner": true
    },
    {
        "description": "\nInspiration Talking to potential VCU students and new comers to RVA.\nWhat it does\nThis app shows people what it is that VCU students like to do, see, and where they like to eat. All of these locations are within walking distance of Monroe Park Campus. \nHow I built it\nThis app was build in xcode using swift.\nChallenges I ran into\nCutting back features\nAccomplishments that I'm proud of\nThe user interface \nWhat I learned\nHow to do awesome animations. \nWhat's next for Rams Take RVA\nPutting in more features and adding map integration. \n",
        "hackathon_id": "ramhacks",
        "winner": true
    },
    {
        "description": "\nBuilt With\njenkinsherokunode.jsjavascripthtml5css3gitwebhooks\n",
        "hackathon_id": "ramhacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe, at VCU, frequently receive emails about safety incidents late at night. I realized I could use public data to analyze where VCU stands in terms of crime compared to other public universities.\nWhat it does\nIt analyzes on-campus crimes at public universities (>4-yr curriculum) with a student population of 25,000 and above. It presents analysis on 6-7 different crimes (robbery, forcible sex offense, non-forcible sex offense, aggravated assault, motor vehicle theft, burglary and arson) in each state for a period of time (2001-2013).\nUse the tabs in the embedded visualization to see different views of the analysis.\nHow I built it\nI built it using Python, pandas, Bootstrap, iPython, Google Places API, JavaScript, and Tableau\nChallenges I ran into\nThe official data available at http://ope.ed.gov/Security/ does not provide location information of universities. I used Google Places API to retrieve physical address, latitude and longitude information for information visualization purposes. \nAccomplishments that I'm proud of\n\nCreated this project within 10 hours at great speed\nTo our relief, this project helped me understand that VCU is safer than many other places although there are specific crimes (aggravated assault and motor vehicle theft) that occur that higher than national average incidence rate.\n\nWhat I learned\n\nRe-using Google APIs\nComplex information visualization\nPrototyping using Python, pandas, matplotlib\n\nWhat's next for Crimes@VCU\nI will expand it to other types of institutions and crimes. I will eventually create an API for this data making it easier for other developers to access the data.\n",
        "hackathon_id": "ramhacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\nc-and-c++qt-creator-ide\n",
        "hackathon_id": "ramhacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptjavahtmlapacheconfcss\n",
        "hackathon_id": "ramhacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nInspired by Capital One and Cap Tech's challenges, the team focused on making a user friendly app that will help college students make immediate and smart buying decisions.\nWhat it does\nThis android application takes customer data provided by the Capital One API such as current balance and recent purchases. This data is used to help decide whether or not the purchase of an item is a financially sound decision.   \nHow I built it\nThe application gets the customers data from the Nessie API. This data is used to instantiate a customer object. The user inputs data about the item they are considering buying and this is used to create an item object such as its price and its level of necessity. The item's necessity level is used to calculate a spending cap based on the amount in the customers balance.\nChallenges I ran into\nThe main challenge that the group faced is getting all of the class files and the API to work together and share the data. Another challenge we face was getting the GUI set up to work and coincide with what goes on behind the curtains. \nAccomplishments that I'm proud of\nAccomplishments that I am proud of bring using software design fundamentals such as UML's to design the core features and requirements for our app. As well staying openminded and flexible to pivot our original relativily common\napp to a creative niche tailored app. Working with developers of varying talents and skill sets from designers to java developers.\nWhat I learned\nWhat I learned how to work with other developers sharing code, ideas, and bugs.\nWhat's next for OneCheck\nWhats next for OneCheck? Build an advice algorithm factoring balance, recent and future expenses, item value, and item type. Build own API to rate a wide range of products, scan barcodes.\n",
        "hackathon_id": "ramhacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavajavascriptcsshtmlparseandroid\n",
        "hackathon_id": "ramhacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nTraveling together to different hackathons throughout Virginia we realized that we needed something to help us all stay together and arrive at the same place along with letting each other know what we were doing on the road.\nWhat it does\nConvoy is the next generation of travel companion apps. Convoy will allow you to create a \"Convoy\" with whomever has the app and send locations to each other for easy navigation. You will also be able to send notifications such as rest stops needed and also food needed on long trips and have it re route you to the destination and notify all of your \"Convoy\".\nHow I built it\nWe used android studio, Parse, Google Services API and the Google Maps API.\nChallenges I ran into\nJava, Android, Parse, Google Cloud Messaging.\nAccomplishments that I'm proud of\nBeing able to create a companion travel app that we will be able to use for future road trips together.\nWhat I learned\nGoogle API's, Parse, Android Stuidio\nWhat's next for Convoy\nBetter routing, making improvements using waypoints and tracking live GPS movement of friends during travel. \n",
        "hackathon_id": "ramhacks",
        "winner": false
    },
    {
        "description": "\nBuilt With\nmachine-learning\n",
        "hackathon_id": "ramhacks",
        "winner": false
    },
    {
        "description": "\nInspiration\nFirst we realized that election polling is archaic. Then we realized that mass polling in general, such as in a college campus, is also weak and inconsistent. Finally, we decided to build a product to make polling smooth, non-intrusive, and potentially significantly more accurate and insightful. \nWhat it does\nUsers can join polling channels by scanning QR codes. For example, Wash U students can scan the Wash U QR code to gain entry into the Wash U polling channel. When a question is posed to the community, all recipients within the respective channel will get the question via SMS. If inclined to do so, the citizens can reply not only with their answers, but also with their explanations and opinions. Our backend parses through all the text messages, and returns a succinct summary of the citizens' average general attitude towards the topic, in addition to popular keywords and phrases. For example, if the question \"Should we bring back Motz Sticks?\" was asked to Wash U's channel, the summary of all the responses would read something like \"The attitude towards Motz Sticks is ecstatic.\" Not only does our product provide the most convenient way of polling citizens at any scale, but it also provides extremely powerful data analysis that converts the results in succinct summaries. \nHow we built it\niOS, Twilio, IBM Alchemy\nChallenges I ran into\nHooking up all the multiple backend modules was a pain. Documentation and online support for Alchemy was not the strongest. The backend of the project is huge, so naturally it was the sources of most of our challenges. \nAccomplishments that we're proud of\nGetting data analysis to work and summary creation to work. Also the \"joining communities via QR code\" was pretty cool. \nWhat we learned\nBackend is hard. Twilio is hard. \nWhat's next for Poll.io\nTest out Poll.io in a residential college to help us find what events and activities people want. \n",
        "hackathon_id": "wuhack2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\niphone-sdkphpapacheswiftcocoaadobe-illustratortripadvisorguzzlecomposer\n",
        "hackathon_id": "wuhack2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nDo you have a favorite band? Wish you could go to all of their concerts? That's a lot of planning. We built something to make it simple and fun.\nWhat it does\nTell us who you're a fan of and we'll tell you all their upcoming events and how much it would cost to get there. You can then choose which ones you want to go to in a streamlined way. It would also work equally as well for sports teams' away games.\nHow I built it\nWe used meteor to build the app. When you enter who you're interested in, we query the StubHub API to see what events are coming up. \nChallenges I ran into\nWe had difficulties interacting with TripAdvisor's API to get the information about hotels and transportation. It also took us some time to set up and get used to how meteor works for those of us that hadn't used it before. \nAccomplishments that I'm proud of\nOur landing page is pretty sweet. We love the idea of creating streamlined portals for things that already exist so we were proud of combining stubhub and tripadvisor for a seamless experience in planning a trip to a concert. \nWhat I learned\nMost of us had never used meteor so that we learned how it works over the first night.\nWhat's next for Trip Groupie\nIf we had more time we would have loved to add in the functionality to add the events you want to attend to a shopping cart and allow you to purchase the event ticket, plane ticket, and hotel room from one screen.\nIf we were to host it we would also want to create a second version of the sight branded for sports. \n",
        "hackathon_id": "wuhack2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWhether it's an entirely different country or a town right next door, travelling according to well-known \"popular\"destinations isn't often indicitive of the culture and the rich history behind that location. I've been to Niagara Falls no less than 7 times so far; however, the only experience that I remember from those 7 is the time when I went with a mutual friend who is a native of Niagara Falls. He offered me different vantage points that truly made this 7th trip to Niagara Falls the most memorable. Why not make your first trip just as memorable?\nWhat it does\nTourUs is a crowdsourcing platform that matches the interests and potential locations of tourists to various tourguides who are knowledgeable about a particular location. We have a custom matching algorithm that creates a \"score\" based on the number of mutual interests between a tourist and tourguide and returns these results back to the tourist. The tourist can then view the profile of a tourguide to judge whether or not he/she would be a good fit for them. Even if the tourist doesn't wish to contact the tourguide, they can even view the list of reccommended events, places, or experiences to adventure at a certain location. They can then decide when/where they want to meet up, if they decide to do so, and the tourguide can be tipped by the tourist.\nHow We built it\nOur entire tech stack revolves around meteor.js which combines client and server side code into a single easy to deploy system. Meteor uses MongoDB for the database, and a templating language of HTML5 for the frontend. Much of the dynamic client interfacing and backend interfacing is written in javascript.\nChallenges We ran into\nBefore this hackathon 36 hours ago, none of us had ever touched Meteor.js or had extensive experience with javascript. As a result, writing much of the client and server side turned out to be a larger learning curve than we had imagined. In addition, MongoDB which was very different from the SQL databases we were accustomed to using was hard to understand due to its dynamic schema. We also had to understand the concept of reactivity with respect to Meteor.js. We were also about 6 hours late to the hackathon, which was a bit crippling in terms of time management; we found ourselves a bit rushed at the end, but managed to pull it together!\nAccomplishments that we're proud of\nWe're really proud that we were able to put our idea to fruition in whatever capacity. In addition, we're proud that the matching algorithm worked as we had imagined, and that the entire website was much more polished than we originally envisioned.\nWhat We learned\nWe learned a lot of Meteor.js this weekend.\nWhat's next for TourUs\nTechDisrupt 2016\n",
        "hackathon_id": "wuhack2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nMusic is supposed to bring to people together, not drive them apart. In that spirit, we created a working app called UniSound that lets users easily send songs to the group speaker system,where they are ranked them in real time to generate a playlist that flows well and satisfies more people.\nWhat it does\nHosts can create a party playlist at unisound.tk by clicking host and generating a special code. Others can click join and enter the code, letting them browse the Spotify music library and send selections to the host. UniSound uses a weighting ranking system, which the host can customize, to create a more harmonious playlist.\nHow we built it\nWe created UniSound with the new Spotify Web API, which is a little over a year old, in order to query Spotify's vast music library. The app converts the Spotify models into client-side objects (object-oriented javascript, indeed!) that carry out operations and calculations. Firebase provides the server-side, tracking the songs, participants, and mood of musical hangouts through objects we affectionately call, \"jukeboxes.\"\nChallenges we ran into\nSpotify takes full advantage of its dual nature as a desktop application and web browser application, and using its API at first made our app unfriendly to non-Spotify users (the vile Pandora worshipers) and mobile devices. Since we don't want those groups to be left out of a fun party, we used the API to call 30-second song samples as MP3 files that can be played in more browsers and devices. Thankfully, for the browsers and devices that don't support audio players, all a group needs is one device/speaker pair in order to start rocking their beats!\nAccomplishments that I'm proud of\nChloe, for designing the gorgeous graphics that make up UniSound's unique brand.\nMatt and Yongzheng for learning how to serve databases with Firebase literally overnight in order to bring the app to life.\nMatt for an admirable performance in the WUHacks cornhole tournament.\nVinesh for connivingly devising a scheme to replace Spotify's song players with nicer, custom UIs.\nAnd everyone for struggling with OAuth tokens that conspired to expire at precisely the most inconvenient times.\nWhat I learned\nFirebase is beautiful.\nJavaScript does not care about your agenda.\nWhen you need the answer to a question so troubling that it didn't even make it onto StackOverflow, you will find it in the depths of the internet where some other kind soul has posted precisely the question you were wondering about... only to discover that that person forgot to respond when a respondent asked for more details.\nWhat's next for UniSound\nComing soon...\n",
        "hackathon_id": "wuhack2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe are working on a social app for you to organize and join group events with users nearby.\nWhat it does\nYou can post a event, add the location, starts/ends time, people limits, descriptions etc., and our users nearby can see your event via our app.\nThen they can apply to join your group. You can\nHow I built it\nWe use Objective-C to build a native iOS app. For backend, we use PHP+MySQL.\nChallenges I ran into\nLink to TripAdvisor API, interactions in iOS.\nSome issues with iOS9.\nAccomplishments that I'm proud of\nOur App has a beautiful interface, and use lots of TripAdvisor's APIs.\nWhat I learned\nWhat's next for Day Out\nSome of the features has not been completed yet, we'll keep working on it.\n",
        "hackathon_id": "wuhack2015",
        "winner": false
    },
    {
        "description": "\nLateNightwithAmazon-\nTexting people amazon link late at night when they would be most into a impulse buy!\n",
        "hackathon_id": "wuhack2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nHow many times you feel hard to make decision when you plan the trip because of too much information at first? Our app provides a way for users to quickly select and view attractions they think they might be interested in.\nWhat it does\nOwl provides users with very simple looking swipe cards, with the name and only one photo of each attraction on them. User swipes right if they think they might be interested in the attraction, and swipe left if they think they wouldn't be interested at all (yes, it's like Tinder). All the attractions the user swiped right for will be stored in a list for user to review later. Clicking attractions on the interested attractions list brings user to the attraction's page on TripAdvisor.\n",
        "hackathon_id": "wuhack2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nAs high school students, we hated making works-cited text for our Language Arts projects. This app allows easy access to the Google Books database, and cites MLA in a very light-weight UI.\nWhat it does\nCreates MLA citations based on books.\nHow I built it\nThe app was built with Android, Java, and the Google Books API.\nChallenges I ran into\nTime was a major factor; this app was built in around 12 hours. Coordination within the team was tough too; it was tough to delegate different roles to other people.\nAccomplishments that I'm proud of\nWithin these 12 hours, we learned the basic Android UI, how to use the Google Books API, and how to cite with MLA.\nWhat I learned\nWe learned how to create a basic UI, and use HTTP requests and JSON to grab data from Google Books.\nWhat's next for Librocite\nA huge cleanup, and more features - including things besides books.\nWhere are we?\nTable 16\n",
        "hackathon_id": "wuhack2015",
        "winner": false
    },
    {
        "description": "\nThe problem with modern music discovery is that it is fragmented. There are just too many resources to find new music, Spotify, Pandora, Hype Machine, Youtube, etc. Fuse is the ultimate music discovery tool, replacing all other discovery sites. Fuse provides cultivated channels from all over the web right in the palm of your hand. We pull in playlist information from Hype Machine to Spotify. Fuse also provides a \"Around You\" playlist with songs that others are listening to in your area. Fuse allows you to search for new Spotify and Soundcloud songs right from the app. You can save songs from your searches and from the cultivated playlists to listen to later. Fuse is build native for both Android and iOS, it also has Android Wear functionality.\n",
        "hackathon_id": "wuhack2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe are looking for something that can facilitate our travel experience, especially small group travel: everyone enjoys traveling with friends! \n  We want something that can help us record our trips without us writing the journals ourselves, which could be an annoying task for most travelers. We want to share our photos with our travel buddies and get access to the fancy photos taken by others. And we want to manage out expense, especially those sharing amount group members, more easily so that we can focus on the fun during our trips instead of how to split the money. Furthermore, we always want to get some instant suggestions on where to go around - there are always people that starts looking at the last moment - like us.\nWhat it does\nIt allows users to post photos or feelings or both in a specific event during a trip to the website. They are shared by all the travel group members and are shown as a photo wall.\n  It allows users to \"post a bill\", meaning to record a share payment during the trip, with the information of who pays it and how many people should share it in which way. Later, for example, at the end of the day or even after the whole trip finishes, there will records of all the expenses. It will automatically generate on their accounts the information of how much they owe each other and how much others owe them, so that they can later clear the expense happening among them. Users will be able to see both the current balance and the payment history through the website.\n  It provides the searching function through TripAdvisor's API, and users can easily drag the attraction/hotel/restaurant from the searching results to a drop box to add it to as their future event in this trip. This gives advice to those people who plan their next destination at the last moment on where to go/stay/eat.\nHow we built it\nWe use languages listed above and also got help from some sources online.\nChallenges we ran into\nBecause of the time limit we have not finished on some features yet and we still have some ideas that are not included in our product. \nAccomplishments that we are proud of\nIt is the first Hackathon for all four of us!\nWhat we learned\nWe learned a lot.\nWhat's next for TripWiz\nA lot of possibilities for TirpWiz. We will improve our current product in details and also want to include more helpful and fancy functions.\n",
        "hackathon_id": "wuhack2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nHow many times you feel hard to make decision when you plan the trip because of too much information at first? Our app provides a way for users to quickly select and view attractions they think they might be interested in.\nWhat it does\nOwl provides users with very simple looking swipe cards, with the name and only one photo of each attraction on them. User swipes right if they think they might be interested in the attraction, and swipe left if they think they wouldn't be interested at all (yes, it's like Tinder). All the attractions the user swiped right for will be stored in a list for user to review later. Clicking attractions on the interested attractions list brings user to the attraction's page on TripAdvisor.\n",
        "hackathon_id": "wuhack2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nruby-on-rails\n",
        "hackathon_id": "wuhack2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtmlcssnode.jsd3.jssquareamazon-web-services\n",
        "hackathon_id": "wuhack2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nMagic2015 on steam has annoying connectivity issues. Plus it sucks that you have to install steam and/or install magic natively to play with friends. Why not play on the browser which is operational on a lot of platform? Plus fix those connectivity issues. That would be fun.\nWhat it does\nConnects people to play Magic in the Browser together\nHow I built it\nThree.js is the 3D library, websockets is the network protocol, golang serverside code. I have the multiplayer networking code for a generic multiplayer browsergame on github here: https://github.com/PiusNyakoojo/golang_multiplayer_template and had to modify it to make this game. Everything else I did from scratch from the beginning of the competition, and without pre-thought/pre-planning.. Thus a lot of optimizing could be done\nChallenges I ran into\nDeploying on heroku, ugh i've done it before and wrote the process but for some reason something's not going through. Anyway, that really sucks that I can't just give you a link now... [Edit: If you go to status.heroku.com you'll see that they're out of maintenance right now (20/9/2015).. i.e. it's probably not my fault.. Even my other herokuapps are offline]\nI didn't have enough time to do the logic the gameplay.. Rather, just a simple setup. You can play cards but it doesn't matter how many land cards you have.\nAccomplishments that I'm proud of\nSetting up a lobbying system for the first time. Making animations\nWhat I learned\nHow to set up a lobby system. How to make a card game. \nWhat's next for Magic In The Browser\nI don't know. I came here knowing what i wanted to make, and i've made it. The company responsible for Magic, i.e. the card images etc.. They may not like if I developed this further and got a large fan base.. it may reduce their fanbase on the native application game. I think it was fun to build considering it's my first real game for the browser. But in all honesty, I know I could make this an awesome experience, i.e. great functionality for the user. So I think whatever i'll do next will be more challenging.. I'm looking forward to 3D browser based games that are comparable in performance and awesomeness as native applications\n",
        "hackathon_id": "wuhack2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nOur app is inspired by the widely-accepted idea that college students don't get enough sleep but with the hope of shedding more light onto the idea. \nWhat it does\nOur app lets you monitor your own sleep patterns easily right from your web browser and compare these to other students at your college and colleges around the country. For the first time, we'll have data visualizations of how students sleep around the country and have the ability to compare these across campuses and examine how sleep schedules may vary over the course of the academic year. \nHow I built it\nMy three team members and I built SleepEasy during the WUHack hackathon event in September, 2015. It is a full stack web app with a functioning Google Chrome extension which relays data to our server which in turn provides data for our website which displays all of our charts and other data visualizations. \nChallenges I ran into\nWe first attempted to develop using D3 for our visualizations. This proved much more difficult than we originally anticipated but we hope to return to it when we have more time. \nAccomplishments that I'm proud of\nOur extensive backend required substantial work from our team and hit many bumps along the way but now runs as smoothly as we always needed it to. We also developed our first ever Google Chrome extension. \nWhat I learned\nWe learned how to interface with C3 to make our graphs as well as Google's APIs for their Chrome extensions. \nWhat's next for SleepEasy\nWe don't plan to stop developing after the hackathon. The obvious next step will be to develop an Add-on for Mozilla Firefox to accompany our Chrome extension. We also want to expand upon our knowledge of graphing capabilities and create a greater number of more eloquent visualizations. Another clear step forward is the development of a mobile app so that users can update their sleep data from their phones as well as from their web browsers. \n",
        "hackathon_id": "wuhack2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe wanted to learn new languages and technologies, but it can sometimes be difficult to find good reference projects.\nWhat it does\nIt bounces you across GitHub repositories according to your preferences.\nHow I built it\nWe used Dart to write a web scraper to quickly build up a Mongo database hosted on MongoLab. We then built an API with a ranking algorithm to give the user a good assortment of interesting links to follow.\nChallenges I ran into\nThe MongoLab free tier couldn't handle the speed that the crawler was submitting data, Dart debugging.\nAccomplishments that I'm proud of\nRanking algorithm, UI, GitHub web crawler, and a formidable for loop from our master technician.\nWhat I learned\nChrome extension environments are restrictive.\nWhat's next for gitr.\nMigrate to a faster MongoDB host, better ranking algorithm, MOAR DATA.\n",
        "hackathon_id": "wuhack2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nMaking something cool that would change the way our friends and family use chrome everyday.\nWhat it does\nIt takes your new tabs in chrome and shows you possible new adventures you could take.\nHow I built it\nWe built it using html, css, js, jquery, and some APIs. As well as our blood, sweat and tears.\nChallenges I ran into\nIt was hard trying to learn to build something we have never tried before.\nAccomplishments that I'm proud of\nI'm glad we were to build a chrome extension, with no prior knowledge.\nWhat I learned\nHow to build a chrome extension.\nWhat's next for Spur\nUpdates, speed, and making it overall cooler and awesome.\n",
        "hackathon_id": "wuhack2015",
        "winner": false
    },
    {
        "description": "\nNearly everyone agrees about the importance of privacy, but email doesn't seem to have gotten the memo. More than 99% of all emails are sent unencrypted, meaning that anyone can intercept and read them. The technology exists for us to encrypt every single email, but we don't do it. Why? Because it's a pain. Nobody has time to read through 20,000 words of documentation about public keys and initialization vectors every time they want to send an email to someone new, and security just doesn't work if no one uses it.\nThat's where we come in. Solus is encrypted email for everyone. It takes care of all the details of sending secure mail for you (using S/MIME or OpenPGP), which means that a process that could take hours now requires just a single click. Solus integrates with your favorite email clients, so you don't have to change a thing - just click the little lock icon, and it'll handle the rest.\nWe think email security should work like web security - easy, strong, and free. That's why Solus is based on rock-solid encryption protocols, and why it doesn't implement any cryptography from scratch. Instead, Solus focuses on making sure it's as easy as possible to do the boring parts of encryption, like key generation and exchange, so you can spend less time thinking about PKCS and Cryptographic Message Syntax, and more time communicating with the people you care about, safely and securely.\n",
        "hackathon_id": "wuhack2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascript\n",
        "hackathon_id": "wuhack2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe wanted to make a fun app which also helps people find places they want to travel.\nWhat it does\nTrippy shows the user a random comment from TripAdvisor and the user has to guess where its from. After the user guesses, they are shown where in the world the correct place is and can see the review on TripAdvisors website if they want. \nHow We built it\nTrippy uses TripAdvisor api to pull reviews from attractions and hotels across the world. Then the user must select the correct answer from a choice of 3 random cities and a correct city. After a user selects the answer they are shown the correct answer and where that place is in the world using google maps. If they chose they can be linked to the review page with a URL provided by the TripAdvisor api. Trippy is built using web technologies like JavaScript, HTML5, and PHP. Trippy also uses PhoneGap and the power of hybrid app technologies to enable it to be an app on Android and iOS. \nChallenges We ran into\nDealing with all the new iOS and OS X was a pain in getting the app to run on iOS. Also working with a new API like the TripAdvisor can cause any team to run into some slight unexpected challenges. \nAccomplishments that I'm proud of\nDoing it, and being original.\nWhat I learned\nHow to use the TripAdvisor API and Google Maps API and dealing with PHP servers.\nWhats the future of Trippy?\nI don't know man.\n",
        "hackathon_id": "wuhack2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe were wanting a program that was outside of the browser to save information.\nWhat it does\nStores usernames and passwords and allows you to click to open a page with a stored password with the fields already filled in.\nHow I built it\nBuilt with c# we coded the drop down box to selected a site and for you to enter user information into.  The drop down menu passes information to a url selection class that finds the correct id's and websites to auto fill the information into the site.\nChallenges I ran into\nWe were challenged with trying to submit the information through a post request and changed our approach to auto-filling the fields.\nAccomplishments that I'm proud of\nWe are proud to have a working program that we can update and can improve.  The program is the biggest project that we have worked on so far.  It has been an amazing experience.\nWhat I learned\nI learned how to auto fill forms, and to create a systray icon and how to use flowcontrol.\nWhat's next for Password Manager\nWe are going to make it bigger and better.  We plan on adding support for more sites, adding a menu to the systray icon to select a site for one click login.\n",
        "hackathon_id": "wuhack2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascriptpythonhtmlcssshell\n",
        "hackathon_id": "hack-isu-2015",
        "winner": true
    },
    {
        "description": "\nB.O.T.\nBasic Operations Teacher\nNick Montelibano, Alex Lende, Ben Williams, Chris Hildreth\n\nRobot that teaches basics of programming to kids through a Raspberry Pi robot\nFeatures\n14 instructions cards, featuring:\n\nMove Forward\nMove Backward\nTurn Right\nTurn Left\nOpen/Close Right Bumper Interrupt\nOpen/Close Left Bumper Interrupt\nBeep\nWait\nDone\nRestart\nDance!\n\nRecord and Play modes, as well as a save program button\nWebsite featuring awesome gifs of actions stored on the device\n",
        "hackathon_id": "hack-isu-2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nBookBuddy actually comes out of asking college students what they wish existed. When we were preparing to come to this competition, we asked several people in our department to tell us if there was anything they wished there was an app for. One of those ideas was an app to buy and sell used textbooks, which really resonated with us. Everyone's felt the sting of being forced to overpay for a book at the campus bookstore, and we thought we'd try to do something about it.\nWhat it does\nBookBuddy allows university students to find peers nearby to buy books from and sell books to. It saves everyone money by cutting out the middleman of resellers, and allows students to communicate anonymously until they are ready to pay. \nHow we built it\nWe built an Android app that interacts with a Python server which is running on a Raspberry Pi. The app is interactive with the user, allowing them to search, post, and chat, while the server keeps track of everyone's data. \nChallenges I ran into\nThe backend provided us with a number of challenges. None of us had previously done much back-end development, the most experience anyone had was setting up a LAMP server. Given this, the initial plan had been to aim for something user-friendly, building our backend as a REST API written in Python by using Django. However, as soon as the server was set up, it became apparent that the versions of Python that were installed on the Raspberry Pi were incompatible with the REST API frameworks available for Django. After fighting this for a while, we decided it was better just to pivot, and switch over to Flask. This still involved a considerable amount of Python wrangling, but in the end we got it up and running.\nAccomplishments that I'm proud of\nHonestly, we're proud that all the functionality is there and that it looks as nice as it does. Going in, we were doubtful we'd be able to pull together a fully functional app by the end of the time period, especially given the scope of this design and the relative lack of experience we had in these areas. From the start, we split up the responsibilities, delegating tasks to whoever we felt would be most efficient, and one of our priorities was getting a BitBucket repository set up so that we could collaborate as efficiently as possible. Somehow, we managed to get everything done. To be honest, we're still kinda surprised by how well delegation and collaboration worked. There is no way that any of us could have built anything this intricate on our own.\nWhat I learned\nWe learned a lot about databases and Android notifications. We also learned a good deal about UI design, through simple trial and error, as well as learning how to work with one another more efficiently. This is our second time working together on a project, and none of us have experience with designing systems that have both a front and back end up and running. Obviously it'd be a little silly for us to list every single facet of Android or Python that we learned about this weekend, so to sum up what we took away I'd say that what we really learned the most about was simply learning how to work together, whether that's in terms of people, software, or networking.\nWhat's next for BookBuddy\nWe don't know! We'll probably do an interest survey once we get back to our school, and if enough people like the idea we might try to host it somewhere public. It's not an app that's likely to make a lot of money, but that wasn't what we were going for anyway. If we do continue on with it, there are still some features we'd like to add, and some functionality that could be streamlined in preparation for scaling. Overall, BookBuddy's future is uncertain, but it might well be available to college students one day, if they want it.\n",
        "hackathon_id": "hack-isu-2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nIn order to help keep pedestrians, cars and longboarders' safe, we can add turning signals onto the longboard to help others know where the rider is headed to next. Also, who doesn't want to light up the night in style with LEDs?\nWhat it does\nOur longboard connects wirelessly to a pebble and an android app. It is able to change different colors based off of the commands. We also integrated safety functions to make longboard safer.\nHow I built it\nWe built this at Hack ISU with a great deal of 3d printing for the gears that connected to the truck of the board. As a group we had 2 Software Engineer and 2 Electrical Engineering students. We put LEDs on the side of the board and used a small 5V battery to power the project. In order to get a high enough voltage from the gear, we had to in cooperate an OP amp. This allowed us to get cleaner analog read voltages. \nChallenges I ran into\nWe had major issues in the issue with 3d printing and we had a very small knowledge base. We had issues with the lightrail() function that related voltage to speed. This involved alot of math.... we got it though. \nAccomplishments that I'm proud of\nWe have a finished project that incorporates an app, and lots of hardware such as motors, op amps, arduino and digital leds. \nWhat I learned\nWe learned what a great deal of energy drinks, lack of sleep and intense amounts of concentration can do to a human being.\nWhat's next for The Boarding Firefly\nWe are going to be lighting up JOHHHNNNN CEENNNNNNAAAA!!!!!!!!!!!!!!!!!!!!!!!! Blaring Horn\nnotaclock\nhttps://www.youtube.com/watch?v=OBkv514JX_w\n",
        "hackathon_id": "hack-isu-2015",
        "winner": true
    },
    {
        "description": "\nMimeSound\nInspiration\nAfter seeing people utilize depth sensing technologies like the Kinect in innovative ways, we felt we could integrate this with the Oculus Rift to create a truly immersive experience. We, as many people do, wanted to integrate new technology with our passions. Our passion: music. We wanted to give people the fun, creative experience of playing a musical instrument without requiring a physical instrument. \nWhat it does\nMimeSound pairs virtual reality with motion sensing technology to give the user a truly immersive experience. MimeSound comes with an array of different instruments, easy to play, and fun to play with. The program contains a string-synth, bells, a lazer-harp, a drum kit, and a dubstep -thingy. Controls are simple and intuitive. Touch things with your hands.\nHow We built it\nFor hardware, we used a Microsoft Kinect for Xbox 360 paired with the Oculus Rift Development Kit 2. For real-time-rendering we used Unity 5. We connected Unity, through nerds.de's LoopBe1 internal midi port to Reaper, a digital audio workstation, using Keijiro Takahashi's Unity midi bridge asset. When a user triggers a sound, a midi signal is sent to Reaper which implements the sounds using a variety of VST's. We did all of our Unity scripting in Visual Studio 2015, and all of our modeling in Autodesk Maya 2014 and Blender 3d.  In order to link the Kinect with Unity 5, we used RF Solution's Kinect with MS-SDK Unity asset.\nChallenges We ran into\nWe had to manage many pieces of software in order to implement our project fully. We originally had the idea to build a theremin. We ran into issues with the virtual midi port, and decided, in the interest of time, to scrap it, and to implement the bells in its place. Another challenge that we faced during development was motion sickness. A lot of tweaks and settings were hard to get just right, so that not many people would get sick from feeling like they were moving without actually moving.\nAccomplishments that We're proud of\nWe are proud of the way that everyone in the group contributed their own, unique talents to the project. Paul Biermann, used his musical knowledge in order to choose the scales and to build the sounds in the game using Reaper and VST's. Robert Young contributed his practiced knowledge of the C# language, coding most of the program. Nick Benge contributed to the group by leading and by navigating the interfaces of Unity, as well as some coding and modeling. Nick Pecka contributed to the group by modeling all of the objects in the program. We are also proud of creating a polished product within the time constraints. We had a functional prototype for one instrument by the end of the first night.\nWhat We learned\nFor most of us, this was our first hackathon. We learned what hackathons are like. Among other things, we all learned how to connect 2 applications with MIDI, how to use Reaper and VSTs to customize sounds, Unity doesn't actually have support for mesh colliders, among other things.\nSleep is good. Sleep is love; Sleep is life. \nSleep is for the weak.\nWhat's next for MimeSound\nOptimally, we would not need Reaper in the background in order to run our program. If we had more time, we would find a more succinct way to implement the VST's. Hopefully, the program would be its own downloadable package and usable out-of-the-box. We would spend more time honing the graphics, adding textures, light, background, particle effects, and an avatar. We would add more instruments, sounds, and options into the game. Eventually, we may have several people playing at once. The possibilities are endless.\nTagline - A virtual orchestra at your fingertips\n",
        "hackathon_id": "hack-isu-2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe had no idea what to make ahead of time and randomly decided to make a self balancing robot.\nWhat it does\nIt calculates the angle that it is at and corrects it.\nHow I built it\nArduino, Motors, batteries, self-designed circuit board.\nChallenges I ran into\nBuilding H-Bridge, Finding the correct motors, calibrating PID.\nAccomplishments that I'm proud of\nMade it for $12, It works pretty well, Popsicle sticks and hot glue.\nWhat I learned\nA lot about circuits, arduino, PID, self-balancing robots.\nWhat's next for BalanceBot\nBuying correct motors so it works 100%, adding MYO armband control, adding ps3 control.\n",
        "hackathon_id": "hack-isu-2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nMy inspiration for this project came from a very disturbing and unsettling nightmare I once had. I was lost and stuck wandering a hallway lined with doors that continued for eternity, and unspeakable horrors were hidden behind each one.\nWhat it does\nIt is an entertaining game demo, and will be sure to spook everyone who gives it a try.\nHow I built it\nI utilized the Unity3D 5 game engine. I constructed and textured all of the 3D models, wrote all of the code, anddesigned the game and its interface all by myself. I used some royalty free music from the internet labeled as fair use content.\nChallenges I ran into\nLack of workforce was my biggest obstacle as I took on this project alone. I still learned a lot throughout this Hackathon, and would love to assemble a team beforehand for another project next year.\nAccomplishments that I'm proud of\nThe game demo runs, and I was able to do it without any outside help\nWhat I learned\nI learned a lot of beginner Java and C++\nWhat's next for The Darkest Door\nI wish to complete this project in the future.\n",
        "hackathon_id": "hack-isu-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nI really just wanted to improve my java skills, and I had been a huge fan of the game Minecraft in the past.\nWhat it does\nThe mod adds features to Minecraft, including a naturally generating ore, Super Solid Ore, that when smelted, creates Super Solid Ingot. Super Solid Ingot then gets crafted into a Super Solid Block, which is used in the recipe for a Mystery Box. When the Mystery Box is placed and then mined, it drops a Super Hammer. The Super Hammer is an all purpose tool which acts as a diamond pickaxe, axe, and shovel all in one. Additionally, it has more attack damage than a diamond sword, and 4 times the durability of a diamond pick.\nHow I built it\nFrom me and my teammates knowing nothing about Minecraft modding, and myself only some java (from COMS227), we followed many outdated and updated tutorials online. We used eclipse and a modloader called forge to code our mod in Java and then link it to the Minecraft classes.\nChallenges I ran into\nOutdated tutorials, mapping a texture to a block, setting ore generation, setting a block to drop a different item than itself. Because me and my team knew nothing about mod creation, we actually spent the first 15 hours gaining enough familiarity with the project setup just to figure out how to create a new block and map a texture to it.\nAccomplishments that I'm proud of\nThe whole mod working perfectly!\nWhat I learned\nBasics and familiarity with minecraft modding and using the Forge modloader. More Java familiarity.\nWhat's next for MobBlocksMoProblems\nExpand on the mod to more items, that add more fun things to the game.\n",
        "hackathon_id": "hack-isu-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtmlcss3javascriptjsonchromejquery\n",
        "hackathon_id": "hack-isu-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nrpg-maker-vx-ace\n",
        "hackathon_id": "hack-isu-2015",
        "winner": false
    },
    {
        "description": "\nKnock Knock is an IoT device that is able to detect a door knock, take a video of the knocker and send a mobile notification to the room tenant letting them know of their existence.\nKnock Knock consists three parts; the Arduino part, the PCDuino relay and the phone. The Arduino portion consists of a camera with a servo mechanism (that will move the camera) as well as a piezo element that will detect a door knock with the help of a signal amplifier, both of which are attached to an Arduino Mega. \nThe PCDuino portion is responsible for pushing the notification and video stream to the Android phone once a knock is detected. Finally, the mobile phone is responsible for listening for the packet from the PCDuino.\nAs for what went wrong, basically everything did. Getting Knock Knock up and running was rather challenging. Initially, we had looked into making a black bean turret that will be steered by an Occulus DK2 and fired at the flick of a Pebble Watch. Sadly, the person who was able to run the DK2 on their PC vanished, leaving us to find another idea Once we settled on Knock Knock, even more issues emerged. Firstly, the piezo element that would pick up a knock were difficult to work with due to its high sensitivity. Secondly, setting up the PCDuino took some time despite turning it on and off numerous times. Thirdly, finding a way to send a signal from the Arduino to the phone was far beyond the scope of what any one of us had worked with. And fourthly (not finally), even though there was a way to send data packets from the PCDuino, Android Studio didn't feel like receiving them.\nGiven how stressful it was to set up Knock Knock was, we consider the fact that the computers and windows around our workspace remained intact as our greatest accomplishment. Asides from that, being able to come from absolutely nothing to a tolerable of something in the space of 36 hours in spite of the novel challenge as something to brag about.\nWe learned that 1) Android is nasty 2) The Power of Collaboration as well as a lot of stuff relating to hardware as well as the Android Developer Environment, which is terrible.\nNext in line for Knock Knock is putting it on our doors! One of us was bad at answering the door and instead of turning down the volume, he saw it as appropriate to make an entire three piece set-up loaded on caffine in under 36 hours.\n",
        "hackathon_id": "hack-isu-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythoncsshtmljinjajsonjavascriptgoogle-app-engine\n",
        "hackathon_id": "hack-isu-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptcsshtml\n",
        "hackathon_id": "hack-isu-2015",
        "winner": false
    },
    {
        "description": "\nA little over a year ago I was admiring the redbox and its lovely collection of movies, which it displays so beautifuly on a screen in any sort order you would like.  As an avid collector of blu rays I thought to myself, \"This would be cool to have for my 120 movie collection.  I was pretty new to programming and did know anything about arduinos or machinery so I never thought this would become a reality.  Over the past year I purchased several types of arduinos, rfid reader/writers/ and a buttload of solder.  I learned the basics one step at a time until I finally could talk like a true \"beginner\" arduino nerd.  The main goal was to build this machine.  I put together several SQL databases to practice how they would be collected, tested the working of stepper motors and servos, and figured out that you aren't supposed to touch the red and the black side of the wire at the same time.  Today is actually one of the more exciting days of my life, because almost all of my spare time at home has gone into trying to figure out exactly how to build this gosh for saken movie machine!  \nUpon purchasing a movie you push a button to find the movie and check it into the system.  Once you use the rfid to place it into a certain spot in the array of movies it will guide itself to the closest open location.  When you wan't to watch a movie you can either use the quick check out method where you simply press a button and scan the rfid in the moviebox.  Or you can use the integrated app to sort by movie title, genre, actor or any other prefered type.  Upon selection you will then press watch this and the movie will be dispenced checking it out for you.  \nI constructed a box I saw in my mind which would fit a good prototype.  Then I complied a list of all materials I may need.  WE used eprom to store data on the arduino so it would always have the locations of movies stored, even upon updating of software.  I used a 200 step stepper motor to move the gears and a whole lot of mistakes I will take as learning experiences for the real deal.\nThe biggest challenge I ran into was cutting circles by hand.  Apparently human error is a thing, which ended up hurting the rotation in the end.  Also we had to create the movie holders by hand, instead of a nice machine that would do that work for us.  I hadn't done wood work for about 10 years and was concerned about using a hand saw for the cutting, but that worked out nicely.  Also I am insanely tired... but happy :)\nI did not think that this idea was a reality.  My brain kept telling me that it would be too hard and that it was too much for me to handle.  I am not lying when I say I failed about 50 times preparing for today.  It was a frustrating struggle to learn all of the thing nessesary but holy crap I made it work.  I was going to do a simple personal website because I didn't think I was ready to commit to making it.  However I changed my mind and could not be more excited.  This machine that half works and is not fully put together is one of the coolest things I have EVER done personally.  When I do go on and create the real thing with all the nuts and bolts and shiny lights and plexi glass covering the front with double or even triple spinning wheels, and my buddys come over to hang out.  They will see the grandeur that started as a simple box I made for a hackathon and be in awe when i tell them \"It was easy!\" :)\nI learned that wood is a pain.  You cant put back what you took away, and what you take away should probably stay taken away.  I learned that my brain unfortunatly is always telling you that some things are out of reach when really \"A lot of small steps, will eventually take you far!\".  I learned that builders and creators and inventors are the most suportive people, and they really do help drive the fire to be innovative and create and learn more and more.  This was really fun.\nMy Cybox (\"Twohy's Movie Machine\") is a plan I will continue to create with.  This simple box with a few gears will be a beautiful piece of art in my home.  I will make the application work directly with the machine and continue to improve it.  I could not be happier with the result that WE came out with today, and am so excited to make machines do my cutting for me!!!!\n",
        "hackathon_id": "hack-isu-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\ncmakefile\n",
        "hackathon_id": "hack-isu-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nA game where physics are determined by other arbitrary values.\nWhat it does\nA simple 2d platform race game for 2 players\nHow I built it\nlibgdx, java and Box2d\nChallenges I ran into\nProjectiles physiscs, and camera controls were all challenging\nAccomplishments that I'm proud of\nA lot of hard work was put into the game by the whole team and we all had fun doing it. We came in not knowing anything about libgdx but now we are much more seasoned and used to it.\nWhat I learned\nI learned a lot about game engines and game dev in general(My first game) I also had afun time trying to code as a team. Overall I learned a ton and had a lot of fun.\nWhat's next for Pizza Trip\nMaybe a full rebuild implimenting better physics art and overall design, mixed with a better combat system and online multiplayer support. E3 2016 here we come.\n",
        "hackathon_id": "hack-isu-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nQWOP, Surgeon Simulator, Goat Simulator, I Am Bread, Ancient Frog, and things that are fun to do at the gym.\nWhat it does\nIt's a fun game! You have to touch or click the character's arms and feet and move them to the higher holds in the wall. The wall keeps moving down so you have to keep up with it.\nIt's best on iPad, but it works on iPhone and Android.\nHow we built it\nUnity, C#, Xcode, \nChallenges I ran into\nThe Perlin noise was tricky\nAccomplishments that I'm proud of\nSet up and used source control all by ourselves :) \nWhat's next for Climbing Simulator\nMore features & polish. I think it's fun.\n",
        "hackathon_id": "hack-isu-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nphase-locked-loopbilateral-switchhex-schmitt-trigger-inverterspotentiometerspsu\n",
        "hackathon_id": "hack-isu-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nOne day, my friends and I decided to do the ISU hackathon. After brainstorming, Kevin landed on the idea of creating a dashboard that displays time, speed, and distance traveled on a bike ride.\nWhat it does\nOur project displays distance, speed, and time of the bike on an LCD display.\nHow we built it\nIn order to count the spokes on the bike, we used an IR LED and an IR photoreceptor to detect an interruption. These sensors are located on the back wheel. We then connected this to the arduino by way of a breadboard housed under the bike seat. Using the spoke count, our program then computed distance by multiplying a spoke to circumference ratio. To calculate time, we used the arduino's built in timer.\nChallenges we ran into\nWe were going to implement a pebble display for our dashboard, but it turned out that without a bluetooth shield for the arduino we could not transmit our data to the pebble. Therefore, we removed the pebble from our project. We also ran into a problem where our lcd display would randomly stop working. After spending multiple hours troubleshooting, we discovered that we had soldered a bad connection onto the LCD panel. We eventually replaced it with a new one.\nAccomplishments that we're proud of\nAfter discovering that our IR receiver and transmitter system was too sensitive (It was oscillating interrupts on the edge of the beam) we added a new condition to our code. This condition stated that if there was multiple interrupts between a certain time period, then it would only count one of those interrupts. This length of time was based off a hypothetical max speed of a bike being 30 mph. Also, we are pretty proud of our project considering none of us had ever worked with hardware before.\nWhat we learned\nWe learned soldering skills, circuitry, arduino programming, and lots and lots of troubleshooting.\nWhat's next for Bike Dashboard\nWe hope to integrate the bike dashboard with a smart watch in the future. This way the user would not need to mount the dashboard to the bike, and instead open the app on their watch and keep track of their stats that way.\n",
        "hackathon_id": "hack-isu-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtmlasp.net\n",
        "hackathon_id": "hack-isu-2015",
        "winner": false
    },
    {
        "description": "\nYE OLDE HACKATHONNE SCRIPTURE\nGenesis\nThe nights..... they seem so long... why has our God [game master] forsaken us? There's been one hundred hours of night, I'm beginning to forget the warm touch of the golden elixir of the sun. And those are just the nights, I am still haunted by when my lover was taken by those monsters and I didn't even know to kill myself in grief\ncheck it out on github\n",
        "hackathon_id": "hack-isu-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaslick2dlwjgl\n",
        "hackathon_id": "hack-isu-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroidretrofitokhtttp\n",
        "hackathon_id": "hack-isu-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroid-studio\n",
        "hackathon_id": "hack-isu-2015",
        "winner": false
    },
    {
        "description": "\nYou use Outlook at work, Gmail at home and Hotmail from the good old high school days. But that's just your email accounts, what about Facebook, Twitter, LinkedIn, Instagram and Tumblr? They're all different permutations of ^[A-Za-z0-9-'.,&@:?!()$#/\\]+$ with at least 10 characters, right? Yeah, we feel you.\nWith Relay, you have quick, secure access to your accounts with the scan of a fingerprint.\nTo use Relay, simply install the Chrome extension and the iOS app. Once the two are paired via QR, you can login to any account, anywhere, using fingerprint recognition.\nWith credentials stored on your phone, they go wherever you go. Never forget your passwords again.\n",
        "hackathon_id": "mhacks6",
        "winner": true
    },
    {
        "description": "\nInspiration\nOver 70% of the global population still will not have owned a smartphone by the end of 2015.\nSmartify brings internet-connected smartphone apps to any \"dumb phones\" purely with Call/SMS/MMS capabilities.\nThe following are its potential applications:\n\nIn third-world countries to extend the reach of the Internet\nNew business market in those countries that had not been reachable before\nEmpower 70% of the global population, who have not had privilege to own smartphones\nProvide access to the Internet everywhere for everyone\n\nWhat it does\nWe have built an \"App Store\" for any SMS-capable feature phones. Over this weekend, two of us have built our own real-time web-based IDE, Python-based Core framework and development template that allow developers to easily develop Smartify applications (Python-based) and instantly publish to the app store for anyone to use. These applications all run on the cloud (Microsoft Azure), and communicate with users through SMS, powered by Twilio.\nIDE features a real-time phone emulator that developers can test their app. All of the applications on App Store are updated real-time and are securely stored/synced with Firebase.\nOur hack consists of 3 main components:\n\nApp Store (public app sharing space)\nIDE + Phone Emulator (full-featured development platform with a phone emulator, realtime-sync, auto-save, syntax highlighting functionalities, and a development template)\nSmartify Core Framework (controls worker machines in the cloud, provides an abstraction layer for complex network web traffics/SMS communication for developers and users, and serves as a mid-way between the cloud and the users)\n\nTech Stack\n\nIDE and App Store were built with Node.js, Express.js, Firebase, Microsoft Azure, Jade, Sass\nSmartify Core was built with Node.js, Express.js, Python, Twilio, Firebase, MongoDB (MongoLab), Microsoft Azure\n\nChallenges we ran into\n\nMultithreaded Python programming\nBuilding a phone emulator\nDeveloping our own network protocol\nEnhancing reliability and data consistency\nDesigning with UI with high degree of usability\n\nWhat I learned\nBuilding large scalable systems is hard. Design is hard.\nWhat's next for Smartify\nSecurity, Traffic encryption, Horizontal scalability through automated server provisioning, Redesign to further enhance UI/UX, Full-integration of MMS.\n",
        "hackathon_id": "mhacks6",
        "winner": true
    },
    {
        "description": "\nInspiration\nSmartShower was inspired by a problem we, as college students, experience every day \u2013 deciding when each person gets to shower in the morning. Imagine six individuals living in a house, with only one shower. Who wants to wake up early, with the intention of showering, only to find out that the shower is already occupied? Time is limited in the morning, and there is nothing more annoying than cramming in a short shower before running to class, or even worse, missing the shower completely. \nWe created SmartShower to make scheduling hassle-free and mornings a little more enjoyable. In doing so, we can ensure people are mindful of the length of their showers and apply an internet-of-things solution to an everyday problem.\nWhat it Does\nSmartShower generates an optimal shower schedule based on the Google Calendars of people who live together. Users access the web application to\u2026\n\nauthorize SmartShower to access their Google Calendar (via Google Calendar API)\nconfigure preferences such as preferred shower time and length\nset a desired shower start time prior to the first event of the day\nview a shared calendar for all users\n\nUsing a raspberry pi microcontroller, we made SmartShower not just a web application but also and an internet-of-things device. With the SmartShower device users are\u2026\n\ninformed about current shower status\ngiven warning indicators regarding amount of time remaining in the shower (LED lights, buzzer sounds)\ncharged money for every minute past the scheduled shower end time \n\nLED flashes and buzzer sounds serve as warning indicators for when a user has only one minute remaining. This use of behavioral cues encourages more efficient water usage. The Capital One Nessie API allows us to integrate monetary incentives into the project. Pressuring users to finish their showers within their scheduled time is a valuable feature, proven to be especially useful in water scarce areas.\nHow it was Built\nThe backend web application is written using a MySQL database. The website is run with flask framework and various python scripts. The scheduling algorithm is a greedy algorithm that handles collisions by equally reducing times of preferred shower times. The algorithm is able to handle multiple collisions during one time period and can calculate an optimal solution every time.\nThe raspberry-pi microcontroller runs on a Linux framework. The SmartShower IoT device leverages a python application, which interfaces with multiple LEDs and a sound buzzer. The raspberry-pi encompasses the Capital One Nessie API data, sources a timeline from the shared Google Calendar, and efficiently informs the user about real-time schedules.\nAccomplishments\nWe were able to create SmartShower as a solution to organizing an efficient shower schedule for college students. Our original expectations for SmartShower have been surpassed by utilizing an loT device, monetary incentives, and efficient calendar generation \u2013 allowing SmartShower to truly be effective when used for different purposes as well (ie. to conserve water).\nLearning Experiences\n\nusing a Flash framework to build a website from scratch\nworking with the Google Calendar API\nimplementing the Capital One Nessie API\nworking with the MySQL database\nprogramming raspberry-pi to serve as an loT device\n\n",
        "hackathon_id": "mhacks6",
        "winner": true
    },
    {
        "description": "\nAutiBot is a health hack, aimed at lowering diagnosing cost of autism, capable of reading and analyzing user brain wave activity along with response times to integrated stimuli. While children play simple, interactive educational games, the hack detects the user\u2019s risk for developing autism. Moreover, it records a child improvement and recognizes data trends in concentration and brain development over time so parents do not need to regularly visit the clinics.\nInspiration\nAutism spectrum disorder (ASD) refers to a range of neurological development disorders including Asperger\u2019s Syndrome and autism that affect approximately 1 in 50 American children. Although the onset of these disorders typically occurs before children are three years old, current methods to diagnose ASD at very early ages are often ineffective, depending on the observation of certain distinctive mannerisms (such as inability to make eye contact) that may not be detected or associated with ASD. Recent research studies, however, have indicated that EEGs can offer a better, more scientific diagnosis of ASD. When children are faced with the task of integrating several different visual and audial stimuli, autistic children experience significantly reduced brain activity because of their inability to quickly process these stimuli. \nWe were inspired by the massive potential of this new technology to make the cheapest possible EEG-based ASD-detection hack. Our goal was to create a multi-sensory game integrating many different types of stimuli, such as color, shape, and sound, to determine children\u2019s chances of developing ASD.\nWhat it does\nOur hack, AutiBot, is a simple, accessible game that tests the response of young children to several different visual and auditory stimuli at once by asking them to tap certain dots on the screen. While teaching children about color, shape, number, and more, it also records the time taken by the user to respond to the stimuli and values for the EEG brain activity of the user using the Muse headband technology. Then, by running an Anomaly Prediction machine learning model based on pre-existing datasets of non-autistic , the app calculates the probability of the user developing a mental disease like Autism. The app also has features to store and display the user\u2019s results over time in the form of graphs and recommend actions to the child\u2019s family, like contacting a local doctor, based on the results of the autism-prediction machine learning model.\nHow I built it\nWe built the game in iOS using Swift. We used Microsoft Azure to create the predictive machine learning model which analyzes the cumulative data (EEG and reaction times, stored in a Parse backend) from each user and predicts the probability of developing ASD. For reading data on brain activity, we used the Muse headband technology and the LibMuse SDK. \nChallenges I ran into\nGetting the Muse headband to work was the biggest challenge we ran into. The LibMuse SDK had no support for Swift, so we had to create bridging headers to integrate our Objective-C Muse code with the rest of the app, written in Swift, which ended up being far more difficult than we initially thought. Moreover, pairing the Muse headband to our laptops through Bluetooth was extremely challenging, which also negatively affected our ability to obtain the datasets for the Azure machine learning model.\nAccomplishments that I'm proud of\nActually finishing the hack despite the hurdles with Muse. Also, we were very happy with the UI design and the overall concept/social application of the hack.\nWhat I learned\nWe learned how machine learning can be utilized to detect anomalies in data sets. Moreover, two of the members were attending a hackathon for the first time, so the whole experience from product design to product deployment was very exciting and educational for them.\n",
        "hackathon_id": "mhacks6",
        "winner": true
    },
    {
        "description": "\nBuilt With\nparseandroidsyncgoogle-maps\n",
        "hackathon_id": "mhacks6",
        "winner": true
    },
    {
        "description": "\nVidulyNoted\nOverview\nVidulyNoted is a better way for team members to collaborate together during remote or large meetings.\n\nStack\nFront-End: \n\nHTML\nCSS\nJavaScript/jQuery\nMaterial Framework\n\nBack-End:\n\nFirebase\nAzure Hosting\nAWS Static Hosting\n\n\nTeam Members\n\nGavin Ching:\n\n4th Year Electrical and Computer Engineering Student\nUniversity of Toronto, Canada\n\nMatt Pua:\n\n4th Year Electrical and Computer Engineering Student\nUniversity of Toronto, Canada\n\nAmy Xiao:\n\n3rd Year Computer Science and Mathematics\nUniversity of Toronto, Canada\n\nJimmy Wang:\n\n3rd Year Computer Science\nMcMaster University, Canada\n\n\n",
        "hackathon_id": "mhacks6",
        "winner": true
    },
    {
        "description": "\nBuilt With\ngoogle-cardboardoculus-gear-vrunityios\n",
        "hackathon_id": "mhacks6",
        "winner": true
    },
    {
        "description": "\nInspiration\nLasers are awesome and internet is slow. \nWhat it does\nLaserComm is a demonstration of free-space optical communication which has been shown by NASA to be able to transmit information at a much faster rate than previous methods using microwaves(Wi-Fi and bluetooth). \nLaserComm offers three main benefits:\n1) LaserComm is more secure than traditional microwave or radio-wave transmissions. Anyone with an antenna can pick up on those singles. With LaserComm however, a direct line of sight with the laser must be established to intercept signals. If an intruder intercepts the line of communication, it can be detected immediately and the system can respond accordingly. Second, people wishing to intercept data must be synced perfectly with our transmitter, otherwise they would read in bits out of order and information read would be virtually useless. If one were to encrypt their data before sending it over LaserComm, any information sent over it would be extremely hard to break.  \n2) LaserComm offers a very cheap form of communication. Sometimes laying down fiber optic cables is prohibitively expensive and in some cases it may even be impossible to lay down such wires in remote and poorer regions of the world. Sometimes natural disasters may wipe out a regions infrastructure and communication network. LaserComm would make restoration of critical communication very cheap and very easy. Furthermore, LaserComm is cheaper to repair and maintain than fiber optic cables because it does not require the digging up of such cables. \n3) LaserComm offers very fast data transfer. The speed of data transmission for LaserComm is limited by the clock rate of the hardware it is run on and not the frequency of waves that limits wave based data transmission. Research done by NASA has claimed that speeds of 20x faster than any previous speed record were reached using free-space optical communication and Facebook has put out claims that free-space optical communication would allow for data transmission speeds measured in gigabytes per second. \nHow we built it\nLaserComm was built using two arduinos. One for broadcasting and one for receiving information. Text is read into the broadcasting arduino where each char is converted into its 8-bit binary representation. The laser then modulates this information to the receiving photo-resistor. A 0 bit is represented by the laser being turned off while a 1 bit is represented by the laser being turned on. The receiving arduino then reads in the string of 1s and 0s and then converts the information back into a string.  \nWhat's next for LaserComm\nWhile at this hackathon we only transmitted text files, in the future we can grow the project to encode, transmit, and decode audio, image, and video files. LaserComm can also be optimized with more lasers and photo-resistors to allow for multiple streams of data being transmitted. This would allow for a file to be transferred even faster. LaserComm would also need to be upgraded for use in harsher environments. From a software perspective, LaserComm would be upgraded to include more opp-codes and to handle lost bits to allow for more versatile use. \n",
        "hackathon_id": "mhacks6",
        "winner": true
    },
    {
        "description": "\nBuilt With\npythonpybrainmusic21\n",
        "hackathon_id": "mhacks6",
        "winner": true
    },
    {
        "description": "\nInspiration\nIt is oftentimes quite hard to determine what things need to be gotten from the store, and especially in the case of things like milk, it is good to have some preemptive warning before things expire. Digital Pantry is designed to automatically notify you about things like expiration dates, and it will even create a shopping list of items to get from the store that are running low.\nWhat it does\nThe application is designed to be a dynamic inventory and grocery list generator for home use.  Users can choose to scan in items with a smartphone/tablet and manually enter information such as quantity or expiration date.  The application will then generate a grocery list, use the Walmart API to find the prices of items on the list to anticipate the shopping list cost, and notify the user when an item has been used up or is expired.\n\nOnline Storage of Pantry Items: Keep track of everything that comes in and out of your pantry, all at the click of a button!  Can\u2019t remember how many eggs are left?  Not sure if you have powdered sugar for the new recipe you want to try?  This will ensure that you always know what you have on hand, whether you are at home or on the go.\nBarcode Scanner: Rather than typing out all the tedious information about every product you bring into the house, just quickly scan the barcode and let us do the work for you!  If you are like us and have a spare barcode scanner lying around, you can use that, or the app can use the camera on your phone to do your barcode scanning.  Digital Pantry interfaces with the Walmart Product API to gather data on product name, size, price, and images to save you time and effort.\nShopping List Generator: One of the most dreaded tasks of grocery shopping is making the grocery list, with every family member liking different things and never knowing whether there is a secret stash of flour hidden in the basement.  Say goodbye to that nudging feeling that you are always forgetting something with the Digital Pantry!  It will automatically generate a shopping list for you that will update as items are added/removed from your inventory, so you will know to get more milk as soon as it is gone.\nShopping Budget: You can quickly find out exactly how much your shopping trip will cost before you even leave your house.  The Digital Pantry will gather the latest data on item prices and calculate the cost of your shopping list.  This way you will know how much money to bring, what to expect at the checkout line, and whether you have enough to buy a chocolate bar to reward you for your efforts.\nExpiration Notifications: Never drink sour milk again!   Digital Pantry will alert you the day before your items expire so that you will know to get a replacement.  It will even automatically add the item to your shopping list after the expiration date.   Adding expiration dates to your items in your digital pantry is completely optional, so feel free to skip this step if you don\u2019t mind sour milk.\n\nHow we built it\nWe built Digital Pantry using a mixture of the Corona Framworks for mobile applications and using PHP, HTML, and MySQL. The Corona Framework is a good platform for prototyping mobile application ideas, and as a result was a good platform to build upon for the mobile application. The server and web interface was built using PHP, HTML, and CSS. This ensured that the application could be migrated to nearly any server and still be able to function as expected.\nChallenges we ran into\nOne of the biggest challenges was simply getting products to scan properly. The hardware barcode scanner we were using took some time to figure out how to set up to start entering the UPC codes. Furthermore, the mobile application gave us quite a bit of trouble for scanning the UPC codes, too.\nFuture Updates\nIn the future, we will be updating Digital Pantry to include features such:\n\nThe best time to shop based on coupons or price drops\nA better, more intuitive user interface\nA user login service so that multiple people can have shopping lists on one server\n\n",
        "hackathon_id": "mhacks6",
        "winner": true
    },
    {
        "description": "\nBioAuth - Biometric 2-Factor Security with MongoDB - Dead Simple\n\nQUICK OVERVIEW\nBioAuth uses a combination of facial and vocal recognition to authenticate users quickly and seamlessly on all the web apps that they love. \nOur goal is to focus on utilizing biometrics to not only make user authentication technically more secure, but also faster and seamless from a social and psychological perspective. A lot of malicious hacking is done through social flaws, and we want to address that by making a product that makes the client's experience as easy as possible without letting go of security. Users of BioAuth can login without touching a keypad, and without having to memorize a password. \nEver need to use your mom or dad's credit card?\nWe allow super-friendly sharing of links that utilizes long-polling techniques to fill out forms across networks. \n\nGenerate a BioAuth link.\nSend it to your friend or parent!\nWatch as you get auth'd into your service. (All securely)\n\nDemo : Sharing\n\nDemo : Failing\n\nUX\nOn entering a non-signed in website, we immediately draw up a small pop up window that utilizes the webcam. Immediately afterwards, we use the mic to validate users with this two factor authentication method under 5 seconds. This process is superbly fast and very comparable to the time it takes to type in one's password.\nTwo ways to use BioAuth\nUse Case One\nAlice logs into many accounts through her browser everyday, and has ended up using password managers such as LastPass and OnePass because she can no longer memorize all her passwords. She starts using BioAuth, and after a quick initial registration process, she now glances at her webcam and says a short phrase that appears on her screen to sign into all her accounts. No more having to worry about how many capitalized vs. numbers vs. special characters she had in a specific password.\nUse Case Two\nAlice's father, Bob, needs to take care of some bills but can't get to his credit card account as he is currently in a foreign country where many websites are blocked (actually happened to me - Kevin). Alice has the BioAuth extension on her browser and goes to log onto Bob's credit card account to help him pay the bills. She can't log in directly but can send Bob a link which will authenticate Bob through facial and voice recognition. Alice calls Bob and tells him she sent him an authentication link and after Bob is authenticated, she gains access to his account. Bob seamlessly managed to get his bills paid without having to change his password or disclose a password he uses for many of his other accounts.\n\nMONGODB - DATABASE IMPLEMENTATION\nWith BioAuth, we had two main goals with respect to MongoDB:\n\nMake sure I/O operations were as fast as possible\nKeep footprint of app super small.\n\nThus we used the following MongoDB strategies to achieve super fast reads and writes:\n\nFirst, we opted for MongoDB's WiredTiger storage engine over the default MMAP engine. This is because writes are 7x-10x faster on WiredTiger and WiredTiger stays small.\nWe then utilized the zlib block compressing algorithm in order to keep our footprint as small as possible. Zlib can keep 600MB of MMAPv1 data under 150MB with its compresion, thus achieving our goal of keeping the app small.\nWe indexed on collections that had frequent reads and writes from in order to maximize read/write speeds.\nWe utilized a range-based sharding approach on our collection for passwords on the central server in order to keep the process as fast as possible and scalable across many users.\n\n\nSECURITY CONSIDERATIONS & ELABORATIONS\nIn order to gain a highly-secure platform we followed a couple main rules:\n\nUnencrypted passwords shall never leave local computer.\nAll encryption occurs on the client's computer.\nSalted & Hashed \nMulti-factor Authentication!\n\nTECHNICAL STACK  & TECHNIQUES\nChrome Extension\n\nWebSockets & Longpolling\nExpressJS\nNodeJS (Packaged)\nWebGL & THREE.js\nWebRTC\n\nSERVER SIDE\n\nMicrosoft Azure VM\nMicrosoft Azure Blob Storage\nCentOS\nCloudFlare\nPop.CO\n\nAPIs\n\nMongoDB for Database\nMicrosoft's Project Oxford for Facial Recognition\nVoiceIt for Voice Recognition\nMicrosoft Azure - Hosting\nMicrosoft Azure Containers & Blobs \n\nHACKS & CHALLENGES\nWe had to utilize a ton of hacks to make this possible:\n\nChrome Extensions don't have access to local file system but we have to have a .wav file written in order to process for voice recognition.\nChrome Extensions cannot utilize a server -- we had to find a workaround that packaged the Node.JS features that we needed into one extension.\nAs a team we struggled with different skillsets and varying levels of fluency with Javascript. We worked through it together by implementing a Trello Board and evaluating strengths and weaknesses 10 hours into the hackathon. After that point, things started to really take off.\n\n",
        "hackathon_id": "mhacks6",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe really wanted to help an everyday Joe be able to be able to simply take an image of something they wanted and figure out what it was and if it was available at our favourite store: Walmart! We also have a roommate who does not know much English and it's hard for him to go out and purchase goods without knowing what they are (and it's incredibly hard to describe it as well). We made the app to also help individuals who aren't fluent in english to be able to discover goods they need. \nWhat it does\nAn android application which lets users take an image of anything they want to buy, in which we take that image and using image recognition software along with our algorithm to discover what that item is. Then the user is also shown the item (or similar items) available at Walmart. \nHow I built it\nUsing android studio with the help of the Walmart Api we were able to create snap. We also had help with an image recognition software available on mashape which let us have such an amazing app to help some amazing people. \nChallenges I ran into\nIf there were two objects in the image, it would get confused, which is where we had to create an algorithm to only choose the item that took up more space in the image. We finally did it and it works amazingly :D\nAccomplishments that I'm proud of\nWe were so glad of the confidence levels. Majority of the time the application picked up what the object was and was able to relate it to Walmart's inventory.\nWhat I learned\nUser Interface is key, we wanted to make it as simple as possible though keeping it fast and accurate. \nWhat's next for Snap\nEither make it amazing and give it over to Walmart or expand and acquire other APIs from other stores to create a larger variety of stores to buy the object. We also want to make it faster! \n",
        "hackathon_id": "mhacks6",
        "winner": true
    },
    {
        "description": "\nInspiration\nAll the time we see inflexible uses of water resources: water sprinklers that run at full blast no matter the weather, a pet feeder that gives the same amount of water regardless of how hot your pet is, misters that spray even when it gets darker and cooler, leaving you colder than you planned on being. \nWhat it does\nWaterNet pulls local weather forecast data as well as current temperature and humidity data to amend user-designed water output schedules, skipping entire watering cycles or merely tweaking water output depending on the situation at hand. If a rainy day is coming up, a water planting schedule may skip a day of watering in order to avoid over watering. A pet water feeder schedule may adapt to dispense an extra 10% water to a pet suffering in a hot and humid climate. \nThe user interacts with a web app that allows for the creation and selection of various schedules, allowing for customization in nearly every aspect of the water scheduling process. It also allows the user to view real-time temperature and humidity data to get an accurate sense of the conditions of the environment around the water dispenser. \n",
        "hackathon_id": "mhacks6",
        "winner": true
    },
    {
        "description": "\nWe wanted to revolutionize the iOS texting scene and integrate it into daily life. We choose some of the sponsor APIs to integrate into a texting and speech system to have ease of access to your accounts and online resources. You can search Expedia, Delta Airlines, and Capital One's APIs into a group and private text room scenario. \nWe used Swift to handle the iOS portion of the app and used Parse+Facebook to allow users to connect with their facebook friends and phone contacts. We were completely new to to iOS and Parse so it was an extremely difficult challenge to overcome.\nEach time we reached a new milestone, we were extremely proud of ourselves. We accomplished something we never though we could and it impressed us even more every time.\nGateway has limitless possibilities to improve and expand. Gateway can be used by any corporation, company, organization or group of people whom love to connect. It really have open new gateways for us!\n",
        "hackathon_id": "mhacks6",
        "winner": true
    },
    {
        "description": "\nInspiration\nSometimes I have a few hours to go on a joyride, but most of the time I never know where to go! I would start driving and I would have to pull over to estimate how far I can drive before I need to be back home. My friends, however, always know where to drive and how long it will take them to travel each route. This is the inspiration for joyride.\nWhat it does\nJoyride allows you to do 2 things. First, you can create your own custom route by dragging pins on the map. You can view the travel time for the route as well. If you do not want to make your own, Joyride will calculate a route that is less than 1 hour long for you. You can also view and use routes that people have posted.\nHow I built it\nWe built Joyride using Xcode, the iOS SDK, and Apple's CloudKit service.\nChallenges I ran into\nWe ran into many challenges such as making custom images for the pins on the map and navigation\nAccomplishments that I'm proud of\nWe are proud of learning CloudKit specifically for MHacks. We were able to implement it, as well as design our own data schema in the allotted time.\nWhat I learned\nWe learned a lot about CloudKit and MapKit. We learned that it is very difficult to work with CloudKit on two development machines, and that MapKit doesn't offer a way to create directions with waypoints.\nWhat's next for Joyride\nNext, we plan on implementing turn by turn directions and profile images for users. There are still some bugs we need to squash as well.\n",
        "hackathon_id": "mhacks6",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe are computer science students and we, like many others, had to search for internships/co ops. It was a stressful time for us and our friends working out what jobs are good to apply to, and which offers are good to accept. It's difficult to know whether a San Fransisco, California job with high pay and very high living expenses is a better opportunity than a Hamilton, Ontario job with lower pay and much lower living costs. This results in students needing to spend many hours with Google and Excel trying to map out if jobs are good fits for them.\nWhat it does\nIt does all the hard work of deciding which job is the best! A student merely needs to enter the addresses of the companies they wish to compare, along with an hourly wage for each. \nOur system will fetch all the relevant information (ie rent costs, transportation costs, food costs etc), and will present them to the user, along with additional fields like \"12 Month Income Projection\". All normalized to the local currency.\nFrom here the user will have an interactive widget to drag sliders for the different variables to filter out which jobs are better. (For example, the user can slide it to show the max they want to pay for rent, and drag a slider to the amount they want to make over the term).\nHow I built it\nThe website is built using JQuery, Jade and HTML/CSS. The backend is a NodeJS server that uses Import.IO to scrape the web for the information used to compare jobs, and Mongolabs to store data. IBM Watson Analytics is used to provide detailed analysis at the end, and to help the user find a solution.\nChallenges I ran into\nThere weren't many examples of how to use the Watson Tradeoff Analytics tool outside of the official documentation. It took some time figuring out how to incorporate it with our project. Another problem was dealing with asynchronous Javascript issues with the load times to fetch data.\nAccomplishments that I'm proud of\nWe managed to learn multiple technologies we had no experience with (Watson, Jade, web scraping), and we still finished on time with our team of two.\nWhat's next for Job Choice\nWe want to add optional additional fields to the initial prompt, like \"City crime rate\", and \"Distance willing to travel to work\". We just focused on financial reasons to go to a location since we had limited time this hackathon, but there are many more aspects that would be great to compare.\n",
        "hackathon_id": "mhacks6",
        "winner": true
    },
    {
        "description": "\nBuilt With\npythonc++opencvtesseractcapital-one\n",
        "hackathon_id": "mhacks6",
        "winner": true
    },
    {
        "description": "\nThe Breakdown\nInspiration:\nIn honor of the new Delta Share The Love Co-branding campaign in New York that just launched we created a spinoff version used to help airlines gain relevant information about their consumers while currently on board  \nWhat it does:\nThe website brings users to an interactive survey about their future travel plans and the consumers satisfaction report with the airlines; this information will then be used by the airlines company to strategize new promotions and plans to increase sales in the future seasons. Consumers will take the survey while they are on board their flight, directing towards the consumer incentive at then end allowing one person on the flight to be refunded their total ticket price upon arrival to their destination.\nHow we built it:\nUsing HTML5/CSS3 as the primary foundation; we also integrated the use of Javascript for the background video and JQuery to display a sense of simplicity yet being able to have an interactive appeal admiring to Delta's color way & overall branding. For data purposes we included in depth research and poll system through qualtrics which had great representation of data retrieval and results\nAccomplishments that we're proud of:\nBeing able to come together and successfully build a web application, on an idea based on first hand travel experience and seeing what we're able to create from those moments \nWhat's next for Share The Love\nThe next goal for Share The Love is to make the data retrieval process as comfortable for the users as it is for the company while one benefits the other. Data is retrieved - incentives are given\n",
        "hackathon_id": "mhacks6",
        "winner": true
    },
    {
        "description": "\nInspiration\nCan people meet their loved ones for less money and airlines fill up their underutilized routes? In our fast and increasingly globalized age, family members, colleagues and friends are spread all around the country and the world. Rendezvous with friends or business partners who live far away is a complex logistical problem and a financial burden.\nDue to market forces in airline industry, a flight to one of the person's city of origin often isn't the most affordable way for two people to meet and this effect increases when three, four or hundred people are involved. \nWhat we do?\nHalfway gives travellers the opportunity to think about their plans together and save money by finding more affordable fares for them as a group. You can call it Going Dutch or an interesting optimization problem -- Halfway helps travellers make more informed decisions. The travellers input their airports of origin and the travel dates and Halfway suggests the best place for a meeting.\nImplementation\nHalfway runs front-end on our NameCheap server and a back-end on our Linode, using data from Sabre API. It is written in JavaScript and Node.js with Firebase where a database is needed. NameCheap generously provided a free domain. In addition, within the team we embarked on an interesting challenge to implement an alternative version running on Microsoft Azure, using Expedia API to find best holiday packages based on the same principle.\nChallenges\nAlthough we initially came in as hardware hackers, we felt passionate that Halfway would provide a valuable service, so we pushed ourselves to explore technologies we were not familiar with in the beginning of the weekend. Thus, we essentially learned firebase and node.js in one night.\nAccomplishments!\nFrom zero to hero with node.js. \nWhat's next for Halfway.me?\nCurrently Halfway runs for airports in North America and it will be expanded beyond.\n",
        "hackathon_id": "mhacks6",
        "winner": true
    },
    {
        "description": "\nInspiration\nIn a trip to South Korea this summer, our team learned suicide is one of the main causes of death in the country. But more surprisingly, that people over 65 old are the majority of affected. Lack of family support and solitude are to blame. \nLoneliness in the elder population is a growing problem, with rates as high as 52% people over 75 living alone in the UK. And with the global population pyramid inverting in first world countries, this problem is becoming universal. But how do we solve it?\nlivesaber is an Android and DIRECTV app that makes elders less lonely and families much happier, doing the following:\n\nConnects smartphones with the TV for easy live streaming \n\n\nOne tap call to those you care about\n\nSends push notifications to remind calling your loved ones\n\n\nDetects odd patterns (not on TV for the past week) and warns you about it\nKnows when you haven't called in a while\n\nAllows short video snaps for when people are away \n\n\nA short video can brighten anybody's day\n\n\nHow we built it\nFirebase backend connecting an Android app with the DIRECTV set. Video is streamed through Wowza, converting from RTSP to RTMP to HLS on the fly with ffmpeg. \n",
        "hackathon_id": "mhacks6",
        "winner": true
    },
    {
        "description": "\nInspiration\nPeople like talking about TV shows on social media as much as they do actually watching them. It engages us in discussion and has even been proven to boost a show's ratings. But for us, it's somewhat of an annoyance to shift our glance back and forth from our TV to our smartphones or laptops.\nWhat it does\nTVTalk is a DirecTV app that displays an IRC-esque chat room for the TV channel you're currently watching right on your screen and updates in real time. The app itself takes up a narrow amount of space on the left side of the TV, and its transparent background doesn't block the picture.  Using a web browser on your computer or smartphone, you can instantly join the discussion. Even if you don't want to engage in it, you can still just watch the feed.\nHow we built it\nOur app was built with HTML5 and Javascript, using several extensions provided by the DirecTV platform. Node.js served as the back end. All testing was done on the set top box.\nChallenges we ran into\nThe set top box was unresponsive at times,  forcing us to reset it which took up to 5 minutes.  We estimate that we've lost at least 50 minutes of hacking time just by waiting for it to reboot. \nA lot of web development features were disabled on the set top box. It couldn't display certain images and colors, and there was a very small collection of supported fonts; as a result, our app lacks polish, but it allowed us to focus more on functionality. The box also doesn't support https connections, which proved to be problematic when we attempted to deploy our app to Firebase.\nAccomplishments that we're proud of\nWe were able to build our own chat system from the ground up as well as understand most of DirecTV's API. We believe that what we've made can become part of the future of television.\nWhat we learned\nWe learned a lot about The DirecTV platform and that it has a lot of potential to become something big. The DirecTV team was always willing to help us out with any troubles that we had. They gave great answers to our questions, offered useful advice, and came over to us to check on our progress. We'd like to give a big thanks to them for all their support this weekend.\nWhat's next for TVTalk\nIf we were to turn this into a real product, ideally we would want the TV networks to moderate their chat rooms. Not only would they be able to filter out inappropriate content, but they can also produce content unique to the program currently on the channel.\n",
        "hackathon_id": "mhacks6",
        "winner": true
    },
    {
        "description": "\nControl your players using your mobile as joystick and score touchdown.\nI used Unity Game engine and EA API to connect user's mobile to connect to game server. \nUnity Engine Physics was the real challenge along with time constrains\nI finished what I started\nPerseverance. Finisher.\nImplement it in 3-d for Occulus rift\n",
        "hackathon_id": "mhacks6",
        "winner": true
    },
    {
        "description": "\nInspiration\nPotter League first started out as a simple game to knock balls off a platform. Earlier, we had the idea to integrate node.js with socket in order to stream accelerometer data from a phone to the web. Using this idea, we could control a game with our phones. \nWhat it does\nPotter League is a combination of Harry Potter-style Quidditch with the popular game, Rocket League. Players control characters from the Harry Potter universe and have to land their ball in their team's goal. By connecting through a server with their mobile phones, they can control character's individually.\nHow I built it\nThe backbone of Potter League is built with EA's Pathfinder API. Through this API, we are able to stream JSON data from a webpage to Unity. In our case, we stream accelerometer data from our phone to control characters in Unity.\n",
        "hackathon_id": "mhacks6",
        "winner": true
    },
    {
        "description": "\nInspiration\nTo create an app that lets you go on cheap vacations with your friends.\nWhat it does\nDo you have a friend that lives far away? Well our app solves that problem! We find the cheapest and best place for you and your friends to go on vacation.\nHow I built it\nIt was built using Expedia's API and ASP.net.\nChallenges I ran into\nLow amount of tutorials for ASP.net.\nAccomplishments that I'm proud of\nMost of the project is done, but it has a few minor glitches.\nWhat I learned\nWrapping API's in C#, using ASP.net, Debugging apps in Google Chrome, using Azure, and Visual Studio.\nWhat's next for FlightBook\nFinishing the application for the real-world.\n",
        "hackathon_id": "mhacks6",
        "winner": true
    },
    {
        "description": "\nInspiration\nMaps of income often only portray average or median income, providing only a partial view on the distribution of income in a particular geographic area.  Additional insight can be gained by considering the entire distribution of incomes.\nThis project was inspired by the need to better identify the range of incomes earned by households in different parts of the country.\nAdditionally, I wanted to automate map creation as much as possible.  From gathering and processing data to generating the map, I wanted everything to be done in code where possible.\nThere are a number of use cases possible for this data, but I had two specific cases in mind:\n1. Identifying low-income areas where many people are likely to be eligible for tax credits.\nThis use case is in support of an earlier project of mine: The Baltimore Tax Credit Map\n2. Finding areas where housing might be found that matches a family's income\nThis use was inspired by the challenge of trying to understand suitable places to live for a given income level, especially when moving to a new city.\nVisual styling and implementation was influenced by a recent WaPo visualization by Christopher Ingraham and Lazaro Gamio and this choropleth by Mike Bostock.\nWhat it does\nThe project is a series of interactive maps that allow users to view the relationship between income and location.  Users can choose an income range and see where in the a given city, county, state or larger region that people with annual household incomes in that range live.  Exploration is encouraged and quickly reveals high income, low income, and middle class areas.  Maps will be included for several major urban areas, though more can be generated on demand.\nHow I built it\nThe project consists of two primary components:\n1. Data gathering and cleaning\nPython scripts were written to gather income data from the US Census.  This effort was assisted by use of the Sunlight Foundation Census API.  Additionally, collection of necessary TIGER shape files was automated with Python.\nData from the census was cleaned and organized using pandas.  TIGER shapefiles were processed and filtered using geopandas.  The end of this stage results in a census data file in csv format and a separate shapefile formatted as geojson.\n2. Map visualization\nMap visualization was done using d3.js.\nChallenges I ran into\nTIGER shapefiles for tracts and block groups are packaged for each state as a whole.  Often, we are interested in only mapping one or two counties and thus it is necessary to filter out only the regions of interest.  I managed to accomplish this using the Python module geopandas and filtering the shape data to only include regions that were specified by the user.\nd3 is often counter-intuitive and difficult to work with.  The number of challenges I ran into with d3 are too many to list.\nAccomplishments that I'm proud of\nOn acquiring data:\nAt this point, I'm very proud of wrangling the US Census and TIGER shape data into submission.  There is a wide variety of information available from the US Census website, but understanding exactly what's available and how to get it is challenging.\nEven using an API, it can be difficult to figure out exactly what information is available.  The American FactFinder site was very helpful in this regard.  Once the desired data has been identified, the proper FIPS codes and Variable codes have to be found in order to automate data acquisition. Just managing to figure out how to automate this process was an accomplishment.\nOn visualization:\nI'm proud of the entire visualization.  Admittedly, a lot of it was only made possible by scouring and modeling off of similar projects, but just getting all the parts working together was a challenge.  This is one of my few projects with any real amount of interactivity or significant UI elements.  Getting maps to render properly is challenging.  Styling the shape fills based on data is challenging.  Having everything update properly when sliders and selections change is also challenging.\nHonestly, I'm still amazed the visualization works at all.\nWhat I learned\nThis is perhaps the most modular and reproducible mapping effort I have made to date.  Other than looking up county codes and census attribute codes, map generation is fully automated without any reliance on manual tools.  I have tested the code and found that it readily extends to multiple scales.  I also learned to manage my time pretty well given the ground that had to be covered for this project in less than 48 hours.\nWhat's next for Income Explorer\nFor data gathering, I intend to polish up my existing python code to make it more readily extensible to acquiring data from many metropolitan areas as well as attributes beyond household income.\nOn the visualization side, I plan to add additional interactive elements such as shape highlighting on mouseover as well as detailed tooltips.  Site design and styling can use improvement as well.\n",
        "hackathon_id": "baltimore-hackathon",
        "winner": false
    },
    {
        "description": "\nInspiration\nA friend and I were discussing what I should do for the Hackathon. He jokingly said \"you should control LEDs with your mind! I accepted the challenge and wanted to see if I could. \nI also wanted to start getting into Wearable Hardware, so I figured it would be cool to make them wearable LEDs.\nWhat it does\nYou wear the Mind Wave headset and an unconnected T-Shirt with Flora LEDs sewn into it. The color of the LEDs will vary from Green to Red depending on Relaxed (Green) or Focused (Red) your mind is.\nHow I built it\nThe headset  came with a USB RF Dongle for interfacing with a PC.  I made some hardware modifications to the RF Dongle to redirect the communications to an Adafruit Flora (Wearable Arduino). I wrote an Arduino Sketch to control the RF Dongle based on Neurosky's documented protocol [3] and a guide on their Developer Wiki [2]. The Sketch receives periodical updates from the Dongle as to the wearer's meditative and focus levels, and varies the colors of the Flora LEDs based on them. I also added a chain of 4 Adafruit Flora NeoPixels to add to the effect. All of this was sewn onto the Hackathon 2015 shirt!\nI did do research related hacks that some other people had done with the Mindwave headset beforehand to get an idea what I was in for. Special thanks for a wealth of information that helped make this possible. I referred to the following resources:\n[1] http://www.instructables.com/id/Build-an-EEG-hat-that-turns-your-brainwaves-into-l/\n[2] http://developer.neurosky.com/docs/doku.php?id=arduino_tutorial\n[3] Neurosky Developer ThinkGear Serial Protocol Guide\nChallenges I ran into\nNumber 1 challenge was sewing!  Sewing is hard! \nI ran into a lot of power related issues--because I am not using the USB on the RF Dongle, it needs to be powered from the Flora system. This plus the Flora plus 4 NeoPixels apparently was too much for the standard Flora power system.I had to to cut out 2 of the NeoPixels to get it to function again, and it is still a little flaky. Given more time, I would be looking to set up a beefier battery-based power system that could sufficiently support everything.\nElectrical signals emitted from the brain are very subtle and can be difficult to reliably read in noisy environments. I had to leave the DHF and do some of my work at home because there was too much activity in the air. \nAccomplishments that I'm proud of\nLearning to sew!  Doing a hardware hack without [completely] destroying a $80 piece of hardware. Getting to play with wearables. Having the coolest shirt at the Hackathon! Met a bunch of cool knowledgeable people.\nWhat I learned\nI learned to sew [kind of]. Learned a bit about brain control interfaces and wearables.\nWhat's next for Controlling Wearable LEDs with Your Mind!\n1 I'd like to fix the power issues and see what else I can control with my mind, and also try to adapt what I did to more practical scenarios. There is a lot of potential for helping people with disabilities with brain control interfaces.\n2 I love embedded stuff and I definitely came up with some ideas I will want to try soon in the wearables arena.\n",
        "hackathon_id": "baltimore-hackathon",
        "winner": false
    },
    {
        "description": "\nhttp://obycode.com/screenshot.png\nInspiration\nWe were inspired by a desire to make use of the large screens in everyone\u2019s homes to view the day and control their smart homes. The goal is to make life easier and more comfortable for anyone with an Apple TV.\nWhat it does\nHomeLife is a beautiful home dashboard for your Apple TV where people can get a quick overview of their day, and easily control their homes. It gives users a quick glance at their day, showing items such as upcoming weather or calendar events in a timeline view. These timeline views pull historical and future events from various data sources, and then display it intuitively. Users can also get quick access to their smart home via mood buttons. The mood widget interacts with SmartThings to quickly set the right mood in your home. It can adjust lights, music, locks and more to just the right settings. Switch into away mode when you\u2019re on the way out, and it can turn off all lights. Switch into romance mood to dim the lights and play some Marvin Gaye. All of this works already in our prototype. Eventually, users would be able to add, delete, and rearrange their widgets to make it feel just right in their home.\nHow I built it\nTo build HomeLife, we started off with a top level design split into two sections. One for time based information, like weather, calendar events and security cameras, and the other for quick access to the things that we like to do often, such as controlling our music and setting the mood in our smart homes. Both of these sections would eventually have a large selection of potential \u201cwidgets\u201d, so that every HomeLife is perfectly customized for it\u2019s users. In the timeline, we have so far implemented weather, which pulls real data from the web and draws a nice line chart, and a camera module which shows a live feed as well as snapshots for the past. In the quick access section, we\u2019ve integrated with SmartThings to enable setting modes in the smart home, allowing users to control lights, music, locks, and more.\nChallenges I ran into\nWe ran into several challenges during this work. Anthony had not used Swift in a project before this work, but decided to take this chance to learn and become more comfortable with it. Both of us are new to developing on the Apple TV, so we had to learn about the new user interface elements and some differences from other iOS development. Integrating with SmartThings added another level of complexity. This required writing SmartApps to run in the SmartThings cloud to which HomeLife sends commands and requests. It took some extra effort to make sure all communication happened as expected. The other major issue that we have run into this morning is that the API we were depending on for weather data is now failing when we request the historical temperatures. We tried to work around this last minute, but were unable to come up with a solution in time.\nAccomplishments that I'm proud of\nWe are proud of the high-level design that we built. This design will allow us to easily add new widgets in the future with minimal changes to the existing programming. Creating a strong infrastructure will allow us to concentrate more on making additional widgets and on making them beautiful.\nWhat I learned\nBoth of us gained experience in developing on the Apple TV. Brice learned good practices in design and implementation from Anthony\u2019s professional experience. Anthony gained a lot of experience in Swift and is looking forward to using it more in the future.\nWhat's next for TV Dashboard\nGoing forward, we will continue to work on HomeLife. First, we will have to do some clean up on the last-minute rushed parts of the existing code. After that, we have several ideas for additional useful widgets to expand on this initial idea. When it\u2019s ready, we may pursue sale of HomeLife on the App Store.\nHomeLife was built with Swift in Xcode. The interface for SmartThings was built in Groovy.\n",
        "hackathon_id": "baltimore-hackathon",
        "winner": false
    },
    {
        "description": "\nInspiration\nAbout a year ago, I first saw the commercials for Amazon Echo. My immediate thought was, \"Oh man, that would be so cool if it had an app for doing recipes where it could speak the recipe to you. I love to cook, and I use my computer to find recipes. AllRecipes.com is my favorite website to get recipes from. However, it's always really frustrating when you're hands are messy and you're about to drop in the sriracha, but you can't remember if it was 1 tablespoon or 1 teaspoon. Now I need to wash my hands, dry them off, enter my password in (since my screen has locked again, find my place in the recipe again, and then go back to getting my cooking. Then it's rinse and repeat for the next step :)\nSince then, I've looked for apps that would solve this problem. Finally, I realized I could build it myself and found the Hackathon to be the perfect opportunity.\nWhat it does\nSous Chef solves this problem by allowing you to have a dialog with the web app. Sous Chef understands simple voice commands like, \"Next Step.\" or \"How many _____?\" and can talk back to you with the proper response. Now when you're standing in front of your bowl trying to remember how much sriracha to put in, just ask Sous Chef, \"How much Sriracha?\" Sous Chef will vocally respond with the amount you are looking for.\nSous Chef makes the process as simple as possible by also having an optional chrome extension. Found the perfect recipe on AllRecipes? Click the Sous Chef extension app and click, \"Let's Cook\". You're automatically redirected to the Sous Chef site and you're recipe is automatically loaded. You are immediately ready to start interacting with Sous Chef and start going through the list of ingredients!\nHow I built it\nSous Chef is built with a combination of HTML, Javascript, CSS, and PHP. Sous Chef downloads the DOM of a given URL with PHP. We then use javascript to parse through the DOM to give us a list of ingredients and steps. Finally, we use the Google Web Speech API and a wrapper called Annyang to give us voice command inputs and voice response outputs to the user. Finally, a chrome extension is built using a combination of HTML and javascript to make the web app incredibly simplistic to use.\nChallenges I ran into\nOur biggest problems were actually pretty silly. Javascript doesn't let you to get the DOM of a cross domain, even though there are a 100 other ways you can get it. This took up a few hours. We also ran into an issue where our app was working on our \"test\" server but not our \"production\" server. A few hours of painful debugging, turns out no one ever installed php on the \"production\" server. Ugh...\nBesides that though, we actually had a really smooth process and were able to finish extremely early. I credit this to having a good plan from the outset and constant communication between the two of us to make sure we both knew who was doing what and what we expected from the other person's code.\nAccomplishments that I'm proud of\nI was really proud that after a year of wanting to create this app I was finally able to do it. It actually was amazing how quickly we were able to do it and makes me want to go to more of these in the future to work on the other ideas that I have.\nI'm most proud that I decided last minute to tackle an entire area that I've basically never touched before and was able to learn it extremely fast. This really made me feel like I can take on anything!\nWhat I learned\nUp until Thursday night I had envisioned this as an Android app. However, I realized the day before the Hackathon that it would be much more useful for myself, and would be more universally usable by others if it was a web app.\nSo with that being said, I was really learning web development on the fly as I really never did much of it before. I hadn't done javascript probably since high school. Luckily, my partner Mike was well-versed so I was able to ask him a ton of questions. I love learning new languages and APIs so it was really exciting to take on a challenge that was completely new to me and I learned a lot.\nI think we learned most from the road blocks we ran into. We realized that (for some reason that makes absolutely no sense to me) you can't grab the DOM of a remote domain via Javascript due to security issues, even though there are a 100 other ways you can do it. Every issue we ran into we were able to overcome though which is a very satisfying feeling.\nWhat's next for Sous Chef\nIt really needs some field testing, which I'm excited to start! I would like to make using Sous Chef feel as natural as possible. That means, users can speak to it like they would if they were talking to an actual person. This is not a complicated task, I just need to figure out what someone would like to say to Sous Chef. Once I know how people would like to speak to it, it is trivial to match input commands to functions of the web app. \nI'd also like to experiment with voice modulation to see if I can find a more natural sounding voice. The standard voices sound a bit robot-y and I would like to make the experience more personable.\nWe could also work to include other popular recipe sites to parse. \nFinally, we would just be cleaning up some of the UI. The simplification of the recipe in the web app was actually an unintended side-effect, but when discussing with my girlfriend, that was actually one of her favorite features. We also feel like it adds a nice touch and it would be nice to dress it up just a bit so that the user feels like they're still getting a 1st class experience using our web app.\nWith these additions, I feel like we would actually have a MVP that we could setup on a real environment and actually host the web app. The chrome extension can also be included to make Sous Chef incredibly easy to use.\n",
        "hackathon_id": "baltimore-hackathon",
        "winner": false
    },
    {
        "description": "\nInspiration\nAccurate 3d imaging of objects where using current inexpensive scanning systems is impractical. \nWhat it does\nWe used inexpensive parts to 3d image/scan an area with very accurate pixel locations in 3d space. The LiDAR only provides a range measurement. To image, the laser range finder needs to scan. Using a servo would add too much noise for accurate imaging, especially at a distance.  The worm geared gimbal we designed and built provides very accurate elevation and azimuth angles (in theory, based on gear ratios, an accuracy of 0.00013 degrees). In conjunction with the accurate range reading (to ~1 cm) and further processing algorithms such as superresoltion, a very accurate 3D image can be generated.\nHow I built it\nOn Friday night, we designed and 3D printed most of the gimbal parts (8 hours of printing). On Saturday we assembled the worm geared gimbal (printed parts + two stepper motors) and experimented with the LiDAR for the first time. We used an Arduino Uno for gimbal control and lidar data acquisition. We wrote a processing scetch to receive the data and display raw results. We also imported the data in Python for possible superresolution processing algorithms for subpixel resolution enhancement. \nChallenges I ran into\nDetection of position of Gimbal. Registration of one line to next. People walking in front of the scanner. Speed of worm drive (it is slow) due to very low cost stepper motors. \nAccomplishments that I'm proud of\nOur goal was to 3d image an area or object with cheap parts, which we accomplished. The worm geared gimbal worked just as expected (though the $1 stepper motor was limiting factor). With additional detection of position, a better motor, and image processing, accurate 3d images/scans are practical. \nWhat I learned\nImaging with a laser is difficult. \nWhat's next for Worm LiDAR\nKeep working on it. Speed up be collecting by running lidar and gimbal at same time (limitation of Ardunio model) rather than start/stopping the drive (currently running at 100 hz). Could speedup  5-7x easily. That will also help with pixel registration. Additionally, a lot of room for sub-pixel resolution using image processing algorithms. \n",
        "hackathon_id": "baltimore-hackathon",
        "winner": false
    },
    {
        "description": "\nAbout\nThe armchair project introduces a wireless interface to control a motorized wheelchair.  Custom computer software interprets hand gestures from a Myo Gesture Control Armband, sends the wireless commands to a Raspberry Pi mounted on the wheelchair, which in turn sends commands to an Arduino to operate one of two servos mounted next to the wheelchair's controller.  \nOur inspiration for this project came from a desire to do a hack that would have a humanitarian element. One of our members had a contact at The Delrey School who was able to lend us an electric wheelchair. Josh Z. and Luke met on the Hack-A-Thon\u2019s \u201cFind a group\u201d channel. Josh S. joined to offer his experience with hardware hacking and electronics.\nArmchair removes the requirement that the driver of an electric wheelchair be able to manipulate the control stick (or even be sitting in the chair at all). Using Armchair, a disabled person who has limited limb movement, shortened arms, or even one who is missing a hand entirely can still control their wheelchair with simple arm motions and muscle contractions.\nPeople\n\nJoshua Ziggas - Software Engineer, Anthem Engineering\nLuke Samuels - Sr. SysAdmin, ZOS\nJoshua Skillman - Electrical Engineer, BGE\n\nShoutouts\n\nThe Delrey School\nFelipe Albertao\n\nDependencies\n\nNodeJS, a JavaScript runtime built on Chrome's V8 JavaScript engine.\nMyoJS, Thalmic Labs Myo JavaScript Framework.\nWebSocket-Node, A WebSocket Implementation for NodeJS.\nQ, A tool for creating and composing asynchronous promises in JavaScript.\njohnny-five, JavaScript Robotics and IoT programming framework.\n\nWork Performed Prior to Contest\n-Planning discussions only\nInstallation\nMyo Server\n\nnpm install -g q\nnpm install -g websocket\n./install_server_dependencies.sh\n\nRaspberry Pi Client\n\nnpm install -g websocket\nnpm install -g johnny-five\n\nUsage\nMyo Server\n\nnode myojs/examples/armchair.js\n\nRaspberry Pi Client\n\nnode armchair_client.js\n\n",
        "hackathon_id": "baltimore-hackathon",
        "winner": false
    },
    {
        "description": "\nInspiration\nKathleen:\nWithin the field of education, there has been an increased interest in developing students' 'emotional intelligence'. \nMy experiences in teaching both self-contained and inclusion classrooms led me to develop an app focused on group, rather than individual behavioral reflections.  Conversations during conflict can produce unique and meaningful relationships and creations. \nFraming conflict resolution as a conversation can help break down barriers between 'bully' and 'victim.'\nStudents answer questions regarding mood and can view their partners responses to build understanding.\nAfter each question is completed, students can add a piece to their chimera until the creature is fully formed. \nBella:\nWhen I walked into DHF on Friday night, I didn't have a team or any idea of what the Hackathon would be like. It wasn't like I was in a completely new environment. I have been a member at DHF since 2013 and I know a lot of the people that work there. After talking with Kathleen, whom I had first met a few months before, I knew I wanted to work with her to make her idea come to life. The idea of both students contributing to reach a common goal was a very versatile concept that I knew could be interpreted and designed any number of ways. \nWhat it does\nTwo students take turns answering questions where they:\n-identify their emotions (sad, mad confused, etc...)\n-choose a solution to their conflict\n-encourages them to work together to build something fun and overcome their differences\nHow I built it\nKathleen:\nI presented the negotiation app idea to Bella, whom I've worked with during Makerettes meetings at DHF.\nShe has experience coding her own app Monkey's Endless Mayhem and I have a background in digital illustration.\nMy initial thought involved each student letting something go, like stones in a stream.  Bella suggested casting spells to make a chimera, as it make the experience more engaging to the target audience.\nI created all of the buttons and individual graphics for the chimera's parts in Adobe Illustrator, without any prior sketches. \nBella: \nI have always enjoyed programming and I wanted to be able to contribute my skills in a meaningful way, no matter the project I was working on. To make createAchimera I used Corona SDK and lua. I completely coded the application from scratch. \nChallenges I ran into:\nKathleen:\nInitially, I hadn't factored how much time designing the buttons would take (i.e. clicked, unclicked, dimmed, home screen button versus buttons in play).\nI will plan to include time for button design and more nuanced planning with UX design.\nMaintaining consistency in dimensions with each chimera puzzle piece was also a challenge that became easier over time.\nBella: \nI didn't have time or lua experience to make multiple scenes and move between them effectively, so I implemented everything on the same screen. That meant that I had to show and hide objects as needed, as well as make sure I closed all my functions, or else the application wouldn't run.\nAccomplishments that I'm proud of\nKathleen:\nDesigning every piece of the app from scratch in a weekend was satisfying.  \nBella:\n\nCompletely programming a working application in the time allotted.\nWorking on a deadline without getting too overwhelmed.\nCollaborating as a team and combining both of our ideas into a finished project.\n\nWhat I learned\nKathleen:\nCreating placeholder images to provide to the programmer allowed for more time to create more detailed pieces.\nBella:\nI got a refresher course in lua. I also practiced managing files, programming docs, Google Drive, online help forums, and a simulator at the same time. \nWhat's next for createAchimera\nKathleen:\nI would be interested in building more options for question customization and expansion packs for chimera parts.\nAdditionally, I would be interested in developing the app into a format for grades 3-5.\nBella: \nI want to finish it. I would have to completely rewrite it because it's definitely not as efficient or compact as it could be. It will be a lot easier to work on and add things to after that.\n",
        "hackathon_id": "baltimore-hackathon",
        "winner": false
    },
    {
        "description": "\n An operation game is a silly skill game, Operation game is a battery-operated game of physical skill that tests players' hand-eye coordination and fine motor skills. Originally made by Milton Bradley, and currently made by Hasbro,[1] it has been in production since 1965, the year in which the game was invented by John Spinello.\n\nThe game is a variant on the old-fashioned electrified wire loop game popular at funfairs and flammer stores around the United States. It consists of an \"operating table\", lithographed with a comic likeness of a patient (nicknamed \"Cavity Sam\") with a large red lightbulb for his nose. In the surface are a number of openings, which reveal cavities filled with fictional and humorously named ailments made of plastic. The general gameplay requires players to remove these plastic ailments with a pair of tweezers without touching the edge of the cavity opening.\nHOW DOES THE OPERATION GAME WORKS?\n Basically, the game works by creating a simple circuit. The battery, light, buzzer, metal edges on the body and metal tweezers are connected by wires yet the wires do not go in a full circle. ie. imagine that each part is like on a chain yet it wont work unless the chain is done up and goes in a full circle. This is called a complete circuit. To complete the circuit the metal of the tweezers must touch the metal edge of the body. This connection works the same as a switch would in a simple circuit such as turning on a light. When the circuit is complete the light and buzzer turn on from the power in the battery. However, if the circuit is not complete this can't happen.\n\n",
        "hackathon_id": "baltimore-hackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtmlcssnode.js\n",
        "hackathon_id": "baltimore-hackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\ncoronaluagimp\n",
        "hackathon_id": "baltimore-hackathon",
        "winner": false
    },
    {
        "description": "\nInspiration\nMy sister convinced me to run a half marathon with her later this year. She lives in Washington DC, so we can never run against one another. I wanted a better way to compete with her other than texting our times back and forth. Brian and I built Run With Me to do just that. Run With Me provides real time information during the race, and can drive us to run harder as if we were next to each other.\nWhat it does\nNothing inspires a person more than a competition, and until now the only competition in running applications was data vs data.  You look up a run.  You do the run.  You check your standings.  No live feedback.  No real motivation to run faster.  You never run harder than when someone is there next to you.  Pushing you to the limit.  But what if your running partner isn\u2019t in the same City or timezone?  Perhaps this distance keeps you running solo?  Run With Me makes sure that there is always someone right next to you.  With Run With Me you choose a time and a distance, and then challenge someone to a virtual race.  A GPS enabled running band synchronizes you and your partners distance as you both run.  In race audio notifications let you know if you are ahead, behind or finished.  Don\u2019t always have a running partner?  Our ghost runner feature allows you to challenge a previous run performed by you or anyone in the Run With Me community.  Run like you should\u2026Run With Me.\nHow I built it\nThe system consists of: a UI written with React JS framework and Mongo DB for storage, an arduino platform with GPS and zigbee modules and python/django applications.  The ardunio platform is hardware that I had constructed for a previous project.  This includes all of the soldering and positions of the sensors on the board.  To use the application the user would run with the ardunio platform and the gps readings will be read every 4 seconds and then sent to a computer via zigbee.  Once received by the computer a python application hits a django rest service to load the readings into the database.  The React application maintains the user presentation of the race.  Positions will be periodically polled from the javascript application via the rest service to determine the progress of the race.  During the race audio updates will indicate to a user when passing or falling behind.  At the completion of the race the application resets and a new race can begin.\nChallenges I ran into\nThe first challenge was working with a bluetooth module.  The original plan for communication with the armband platform was to have it communicate over bluetooth to a background cell phone application that would load values into the database via the django rest service.  Despite my best efforts the bluetooth module would not work with the arduino uno platform due to a missing output pin on the bluetooth module.  Without the output pin debugging was not going to be possible while the bluetooth device was attached to the arduino, so we decided it would be best to reevaluate the approach.  I had some basic python code for Zigbee Digimesh, so instead of bluetooth to phone the armband platform sends data over zigbee to a computer.  This vastly reduced the portability of the proof of concept system.\nChallenges with the javascript program were mostly related to quantity of work required to get the framework and race program running.  Most of the work itself was straight forward, but it was difficult to work long hours on little sleep to complete the project. We made design decisions early on in the project that left most of the major lifting to the javascript application. A more balanced devision of the functionality between the two applications would have made it easier to isolate issues.\nWhat I learned\nSome of the design decisions that we made early on in the process led to an imbalance in the work.  By relying heavily on the javascript program to store information and execute the race itself Dan was saddled with a disproportionate amount of the work.  In the future it would be good to do a more thorough breakdown of the expected work to ensure that work can be split more easily. \nIt is important to schedule deliberate moments to evaluate progress, and rearrange development resources.    \nWhat's next for Run With Me\nWe would like to create our own arm band that allows us to add other sensors to provide runners with additional data (heart rate, breathing rate. sweat rate, etc), but we have to acknowledge that there are already many fitness bands out there.  Run With Me would benefit greatly if it could work at least in some capacity with popular fitness bands and trackers.\nA future iteration of the arm band running platform that we design would have to be bluetooth enabled to allow the user to pair with a phone to upload the live data into the database.  Additional sensors would be modular so they can be added to the platform with minimal effort by the user.\nThe UI that we have created is merely the tip of the iceberg of functionality that can be provided given the data collected.  Beyond live in race statistics Run with Me would provide historical race data analysis, custom sound recording, and both android and IOS support.  The potential for custom race views, charts and statistics leaves the design of the final application decidedly open ended.\n",
        "hackathon_id": "baltimore-hackathon",
        "winner": false
    },
    {
        "description": "\nWill be programmed to get live updates from fabhive and showcase them at the printer station.\nInspiration\nWhat it does\nHow I built it\nChallenges I ran into\nAccomplishments that I'm proud of\nWhat I learned\nWhat's next for Digifab\n",
        "hackathon_id": "baltimore-hackathon",
        "winner": false
    },
    {
        "description": "\nInspiration\nI just wanted to create a cute and fun toy for simple entertainment. Animated gifs are a popular type of content to share and are found all over the internet. Many gifs share a short video clip of a hilarious or interesting moment.\nWhat it does\nSimply copy your favorite gifs to the SD card, and turn it on! The Pi TV will play each animated gif in an endless slideshow fashion for hours of entertainment!\nHow I built it\nA Raspberry Pi drives a small touch LCD screen via the SPI interface. The Raspberry Pi reads gif files found on the SD card, and plays them in full screen mode in an endless slideshow. Mplayer was used for displaying the gif files. A custom 3D enclosure was printed to protect the device. It resembles an old fashioned TV with antenna, and the bright colors make it fun to look at.   \nChallenges I ran into\nDesigning my first 3D model for printing. I had to learn how to use Tinkercad for my 2-piece enclosure. Multiple print attempts had to be done to get it right. Also displaying the gifs in a clean way was difficult. I had to find the right video player that could display an animated gif, full screen, scale images, and could perform well even on the Raspberry Pi's limited performance.  \nAccomplishments that I'm proud of\nIt works! I learned how to use 3D modeling software and use a 3D printer.\nWhat I learned\nI learned how to use 3D modeling software and how challenging it is. I also learned how to use a 3D printer and the limitations that come with it. I learned how to use an LCD screen with my Raspberry pi.\nWhat's next for Pi Tv\nMake use of the \"touch\" part of my LCD touch-screen. It could be used to skip the current image or apply an interesting filter to the current image. \nI could also use the wifi module to download new images in the background. Images would be downloaded and cached on the SD card for better performance.\n",
        "hackathon_id": "baltimore-hackathon",
        "winner": false
    },
    {
        "description": "\nInspiration\nResearch shows (TL;DR;) that most patients do not stick to their ordered medication regiment. This causes drug treatments to have to be longer and therefore more costly in order to ensure that the patient gets the correct outcome. In some cases, research shows that over a long drug treatments only 32% of patients properly adheared to their regiment, this causes drugs to be less affective and therefore longer treatments are needed costing more money. \nWe get it. Remembering the right pills at the right time can be confusion and difficult to remember. We want to make it easier to take your medication on time.\nWhat it does\nPillTron3000 is a hardware device which knows which medications you have and when you should be taking them. It will alert you and send you reminders to let you know it's time to take your medications. Once you are ready PillTron3000 will dispense your pills to you. \nWe also have a web interface from which you and/or your doctor can manage your prescription and view your adherence track record.\nChallenges I ran into\n\ndesigning a complex housing for the pilltron3000 to be laser cut in inkscape\ninterfacing with low-level components from a Raspberry Pi\ndesigning something that reliably dispenses exactly one pill\n\nWhat I learned\n\nLots about the RPi GPIO libraries and how much they suck in comparison to arduino libs (maze)\nNoSQL/MongoDB and python (phil)\n\n",
        "hackathon_id": "baltimore-hackathon",
        "winner": false
    },
    {
        "description": "\nBaltFut, Baltimore in the Future Tense\nFor several years now \u201cThe Big Moon Dig\u201d has been working on reviving human space exploration using 21st century processes, but \u2013 when you can hear the gun fire from your computer terminal it is time to do something --.\nSince the unrest last spring, we have been working on applying the latest science to the problems of Baltimore and to the world.  Fortunately there are now a lot of breath taking insights available from new science that we can apply to our problems.  Of course these arguments start out technical and rather complex.\nOur task at the Hackathon 2015 is to condense some of the material we have developed into a TED style talk that is accessible to the general public.  This requires a few really good graphics supported by a heartfelt and concise talk running 10 or 18 minutes.\nOur specialty is the big-picture, which we find mysteriously missing at the moment.  You can find endless stories of zombies or machines run amuck, but just try to find stories of real people facing the real problems of the 21st century with both heart and mind.\nOur efforts to date are available at:\nBig Moon Dig / Essay\nhttp://bigmoondig.com/Essays/BMDWhyWhat.html\nThese efforts include a video we made for a contest this fall on solutions for the California drought.  In the big-picture, California and Baltimore are on the same planet.\nThis fall our task is to develop materials for the University of Baltimore course \u201cDivided Baltimore\u201d ( http://blogs.ubalt.edu/dividedbaltimore/ ) and the MIT Course \u201cULab: Transforming Business, Society, & Self\u201d ( https://courses.edx.org/courses/course-v1:MITx+15.671x+3T2015/info ).  Our most important activities this weekend are to practice explaining our insights clearly and developing contacts.\nThis work is in the category of \u201cThe Big Picture\u201d, but the closest you have listed is \u201cSeafarer\u2019s Choice\u201d. \nTom Riley\nTomRiley@WoodwareDesigns.com\nThe Big Moon Dig\nUpdate Sunday morning:\nI am now rewriting the material into the form of a series of short TED talks.  Each will have a few good graphics and a straight forward exploration.  The first will setup up the idea and the last will give the specific proposals to address the problem.  I now have a first draft for the first TED talk.\n",
        "hackathon_id": "baltimore-hackathon",
        "winner": false
    },
    {
        "description": "\nPlease visit out website to read about our project:\nhttps://gardensentry-gkbsoftware1.c9.io/\nInspiration\nI love to garden, in fact a good portion of the food I eat comes from the yield of the vegetable garden in my front yard. But it can be quite awful to wake up, walk out to your eden of fruits and vegetables that you have passionately cared for month after month, only to find it has been pillaged by the horned, hoofed demons that lurk in the woods nearby. I know this feeling all too well. Plants I had sown as a seed, my children, they had been mercilessly wiped out and the only thing left was a set of hoof prints. What was suppose to be food for me and my family fed the local deer population instead. Not cool. How could I protect my garden without using chemicals or other expensive and ineffective solutions on the market (some of which include literally spraying your produce with coyote urine and/or rotten egg water)?\nWhat it does\nThat is why I came up with Garden Sentry. It is a wireless enabled device that watches one's garden all day and night, sounds an incredibly obnoxious alarm that deer will absolutely hate, the second they try and sneak off with the fruits of your labor. \nThe device is powered by 3 solar panels (taken from dollar store lights) mounted on top, charging a battery backup. It uses infrared detection (3 sensors) to determine if someone's sticking their NOT CUTE little noses where they shouldn't be. If this is the case, it will activate it's scare tactics ( a buzzer hijacked from a dollar store alarm system ). The inputs are taken into an atMega and broadcased via rf transceivers to a RaspberryPi-powered web server.\nHow I built it\nHijacking parts and inspiration from dollar store treasures...\n3 solar panels\nbuzzer / alarm\nbody from lawn lamp\nCAD + 3D printing for housing our hardware\natMega for managing IOs\nRaspberryPi for running a ruby-powered web server\nChallenges I ran into\nMaking sure the device could be built affordability so people all around the world, especially in countries that depend on the food they grow locally can use it and replicate the build, but the design has to be durable to weather outdoor conditions.\nAccomplishments that I'm proud of\nDrawing inspiration and hardware from existing and affordable devices\nRapid prototyping\nWhat I learned\nJust how incredible DHF and Baltimore's sponsors can be. The tech scene here is exploding and its very exciting to be involved.\nWhat's next for Deer Destroyer\nMaking variations that can collect and send other data such as weather, soil conditions, etc. Infiltrating the deer's social constructs, befriending key members, and bringing them down from the inside. \n",
        "hackathon_id": "baltimore-hackathon",
        "winner": false
    },
    {
        "description": "\nInspired by the muscle memory required for technical sports like whitewater kayaking or golf, this device aims to optimize the wearer's performance.  \nIt measures upper body motion of user, sends signal out using low energy Bluetooth to software on a computer analyze output. In our prototype, we show the position of the sensor in 3D space, but many other visualization and analysis techniques could be used. For example, celebrity endorsement allowing users to compare their own motion to pro athletes.\nIf developed into a product, we'd sell a kit containing the sensor, and the larger unit containing the battery, Bluetooth, and CPU. This would be a one-time investment and include a a sensor of higher quality than the one we used. Then we'd sell shirts containing a a slot for the sensor, and conductive thread down to the belt for the larger unit. Compared to sewing the sensor into the shirt, his allows the shirts to be less expensive, washable, water- and sweat-proof, and available in many sizes and colors.\n",
        "hackathon_id": "baltimore-hackathon",
        "winner": false
    },
    {
        "description": "\nInspiration\nOur team liked the idea of \u201cHack for Good.\u201d There was a discussion on how we can\nhelp the community.Many ideas were tossed around until one team member mentioned\nbicycles.\nDonQuiSoft was founded by Greg Winton and Steve Lafferty. The App our team will\ncreate for this Hackathon is in memory of Steve. Steve passed away after a\nterrible bike accident.\nThe Problem We'd Like to Solve\nHelp bike riders broken down and in need of assistance. This is a peer-to-peer,\npay-it-forward initiative for the bike rider community.\n\u00a0\nWhat it Does\nThe version we are about to build will be the main feature of the \u201cLaffer App.\u201d\nA bike rider will be able to send out a \u201cBike Signal\u201d to call for assistance.\nHelpers in the area will be alerted and may accept the call. The rider will will\nget periodical updates upon estimated arrival for help. All profiles in this\nversion are hidden for security reasons. The Helper arrives at the bikers\nlocation and provides assistance.\nHow We Build it\nNo code was written prior!\nThere are 2 versions for the App\nThe thinking behind 2 platforms is: More people/helpers to reach out too.\n\nA iPhone version developed by Greg\nAn Android version developed by Tony\n\n\u00a0\nIt is supported by a NodeJS backend developed by Roger\nChallenges I ran into\nThere are so many features we like to add to \u201cLaffer\u201d. The Hackerthon is to\nshort! We ideal like to do a demo for everyone. The specifics are not determined\nas of now.\nWorking without a designer is not something we are used too.\nAccomplishments\nWe see our biggest accomplishment in our strength working together as a team.\nComing on your day off, to work on what we love to do, proves DonQuiSoft has the\nbest developer team out there.\nHaving met so many great, talented and inspirational people.\n\u00a0\nWhat I learned\nEven with the best efforts there is always something unexpected.\nCommunication has to be #1 in working together.\n\u00a0\n\u00a0\nWhat\u2019s next for \u201cLaffer\u201d\n\nHave the designer create art .\nBuilding \u201cLaffer\u201d for an official release.\nThere is a list of features, everything from login to gamification.\nWe have 2 more business models for \u201cLaffer\u201d\n\n-   Bike Clubs\n\n-   Bicycle Retailers.\n\n",
        "hackathon_id": "baltimore-hackathon",
        "winner": false
    },
    {
        "description": "\nWhat it does\nMaze 2: Electric Boogaloo is a game that randomly generates mazes that must be solved using the mouse without touching walls. \nHow I built it\nThis project can essentially be split into two parts: the maze generator and the graphics/game engine. The most complicated component of this was implementing the maze generation. We chose to generate a braid maze so that there would be very few dead ends. Our algorithm started by adding walls around the border of the maze. Then, we added walls at random within the maze without causing an dead ends. This created a maze-like structure of walls that did not necessarily have a solution and could have certain sections completely cut off from the rest of the maze. To connect these sections, we first identified each section with a unique id. Then, we went through every wall in the maze and checked if it separated two cells of different labels. If it did, we deleted the wall and changed all of the connected cells to a single id. Once all the cells had the same label, the maze was entirely connected and was finished. In order to punish the user for crashing into walls, we took advantage of the fact that the background was black. In order to check if the mouse had collided with a wall, we simply checked if the color at the mouse position was not black.\nChallenges I ran into\nIt was difficult to get the maze generation algorithm working because we went into it without fully understanding how we would approach implementation, so we had to rewrite our program structure multiple times. We originally stored the maze as a simple array of all the wall segments. Because it was completely unorganized, we had to search the array every time we wanted to manipulate a certain wall piece. We then stored the maze as a grid of cells, with 4 values each to show where the cell had walls, but this was inconvenient because there was no way of directly referencing walls. Also, one cell's top wall was another one's bottom, and so handling these duplicate walls was confusing and inefficient. We finally settled on the structure in place now: two arrays containing all the possible walls. This was the best way because we could refer to specific walls, and then find the walls around with a function of the index, which was much better than searching an array and did not have to handle duplicate walls.\nFor the graphics, we used an html5 canvas. This allowed us to draw directly to the screen and manage the ui at a relatively low level. The only downside to using a canvas over just html elements such as divs or spans was that a canvas's pixel size is fixed. This meant that if the window were ever resized, it would not be as simple as automatically adjusting relative positions for html elements. We had to recalculate the coordinates of everything we wanted to draw based on the new dimensions. Once this was completed, however, it did not interfere with any of the other components and was very reliable.\nAccomplishments that I'm proud of\nI am proud of getting the maze generation algorithm and the graphics to work without any outside code or libraries. Everything was done by us 100% from scratch during the weekend.\nWhat's next for Maze 2: Electric Boogaloo\nIf we had had more time we would have made a better ui, added enemies and items, and implemented a scoring system.\n",
        "hackathon_id": "baltimore-hackathon",
        "winner": false
    },
    {
        "description": "\nWhen I finished the Girls Who Code summer immersion program in DC I got really inspired to have coding come into the natural world we live in, so I created NatureCoders. NatureCoders are little 3D printed \"robots\" that teach kids in elementary and middle school how to code with C++ and the Arduino by following along with a story. After the complete the project from the story they can take it outside and interact with the nature that's around them.\nThere is a website that will have the lessons on how to program your NatureCoder. The prototype of the bug was the hardest thing to make. The 3D printer did not want to print my template I had so the design had to change. \nNatureCoders is continuing to grow by adding other bugs that will teach kids how to code in a fun atmosphere. \n",
        "hackathon_id": "baltimore-hackathon",
        "winner": false
    },
    {
        "description": "\nWe had trouble with the images on DevPost - for images of our project please view here: https://www.dropbox.com/sh/afynhtvu4j7q3uj/AABGfOo1zk_qlzqi4L9-UJSja?dl=0\nInspiration\nDriving to works a few weeks ago,  I (Amanda) saw a dog running wildly down Lombard St. towards Patterson Park. The dog looked well-fed and cared for, but seemed to be very scared. While I was not in a position to make a u-turn and follow the dog, I wanted to find a way to contact the owner with the whereabouts of their dog. It took three days for me to find the Craigslist posting, and unfortunately at the time the information was unhelpful to the owner. If someone were able to see sightings of animals with similar descriptions to their pets, they could narrow their search considerably!\nWhat it does\nPaw Patrol is the Waze for pets- it posts lost pets, found pets, and pet sightings to an interactive map that updates in real time. \nIf Kim's pet runs out the door one morning on her way to work, she can post her lost pet with the location where it went missing, a description, and a photo. Paul's on his way to work and he sees a terrier running wildly at the corner of Baltimore and Caroline on the east side. He posts a description of the pet, the location, and a photo, enabling tracking of a pet. Paul's update creates a general location of the lost pet's whereabouts so Kim can start looking for her lost pet in an intuitive manner. The site also aggregates data from found pet sites so Paw Patrol will be a one-stop shop for finding pets. \nHow we built it\nThe site is built using Mapbox, an open-source JavaScript library that allows you to store and query a set of items based on their geographic location. We initially used a FireBase boilerplate and incorporated GeoFire to pull coordinate data from the FireBase database, but pivoted after learning (in a few hours) how intuitive and interactive Mapbox's API was in relation to our project. The database was populated by aggregated JSON data from various pet lost and found sites. The front-end was built with HTML, CSS, jQuery, and more. \nChallenges we ran into\nDealing with the HTML5 canvas was problematic on every level. The map was housed in the canvas and any attempt to style the map, even wrapping it in a div, resulted in doom. On the back-end, a large pain point was pulling in the coordinate data from the database and incorporating the real-time components. The data aggregation through node presented a challenge in formatting the database as well, but with a lot of elbow grease, ingenuity, and quick-thinking, we were able to come to a finished product that we're quite excited about! \nAccomplishments that we're proud of\nWe all come from varied backgrounds (designers, developers, and game designers), and was able to not only come together and work in functions outside of our job titles and comfort levels, but learn completely new languages, libraries, frameworks, and platforms in a few hours. We worked together, laughed together, and figured out how to make Google Maps conform to our bidding. We tested, broke, retested, and pivoted. We laughed, we almost cried, and we went from strangers to buddies in a matter of days. This was an amazing experience and we're all very proud to have gotten this far. \nWhat we learned\nWe learned various tricks and conventions in Firebase, Mapbox, JSON, node.js, jQuery, GeoFire, and more. We strengthened our knowledge of database structure, and learned new ways of accomplishing queries and data calls. We also got really good at version control and working collaboratively in Git/Github. \nDid you start on the project before the weekend?\nAmanda did some basic planning on Trello. \nWhat existed before you started?\nWe used MapBox and FireBase open source code. \nWhere are you sitting?\nBy the kitchen in the main room. \nWhat's next for Paw Patrol\nWe are all committed to creating a production-ready, polished product that pet owners love, and have a laundry list of features that we'd love to accomplish for the future, including: \n\nGeolocation as a starting point for the map \nAn added searchable database for lost/found animals\nAn accompanying mobile app\n\nThank you!\nThanks so much for considering our project. We'd like to publicly thank and show appreciation to the Baltimore Hackathon 2015 organizers for pulling together such an amazing event, Angelique Weger for introducing us via the DevGrrls Slack group, and to coffee, Red Bull, and soda which fueled our development marathon. And bacon, because Mira really likes bacon. \n",
        "hackathon_id": "baltimore-hackathon",
        "winner": false
    },
    {
        "description": "\nInspiration\nMy friend once got so drunk in the club that he was apparently kicked out and ended up lying outside on the curb for a good hour! His friends happened to stumble upon him and got him home safe. While his story had a funny but happy ending, sometimes we encounter the ugly side of reality. The infamous case of Hannah Graham, the University of Virginia student who left the party only to never reach home or the numerous cases of campus sexual assaults where people are sometimes too intoxicated to realize where they are, let alone call for help! Technology has penetrated every aspect our lives and made it easier. As tech enthusiasts, we felt this was an area where technology can make our lives safer. We are not the first to tackle this problem and there have been great efforts to address this, but we are driven by our vision to create an open community of volunteer techies to create and build technology that makes all our lives safer.\nWhat it does\nWhen people go out, there is always someone who is either the designated driver or the caretaker! Our goal is to use technology to virtualize this by creating an app where a user can select their best friends to have their back in case they don't make it at the place they're supposed to be at the intended time. A user simply selects the expected location and time before going out and the app will notify their selected best friends if they aren't at that location at that time.\nAnother goal is to create a forum where victims are comfortable sharing their traumatic experiences. We create a way to report experiences completely anonymously as against many existing systems that require sign in. We believe the entry point to sharing such an experience should be as easy as possible!\nHow I built it\nGiven the mobile world, we built an android app that is powered by a Django server to enable sharing incidents.\nChallenges I ran into\nOne of the biggest challenges was to ensure anonymity. Also, as with any implementation, there were issues with translating the design into code!\nAccomplishments that I'm proud of\nAbility for people to have a fall back before they go out while assuring minimum intrusion\nA forum page that lets you search and share experiences anonymously\nWhat I learned\nThis is a first step towards trying to solve a big big problem!\nWhat's next for SafePod\nCreate a strong and open community of volunteer developers to propel the project forward\nProject specific improvements:\nIntegrate contacts from the phonebook, currently the user has to manually enter the friend's contact number for the app to send a text to the friend\nAllow users to comment to shared post\nPopulate a map from Baltimore data set to identify area with a high crime rate\n",
        "hackathon_id": "baltimore-hackathon",
        "winner": false
    },
    {
        "description": "\nMy own rain water harvesting system has been great, however it can easily run dry after a few weeks without rain - I think it can consume and use water smarter.\nControls the out flow to the garden of caught rain water in the catch tanks in a smart way, based on many factors, such as how much water is left in the tanks, when the next rain will be and how much moisture is in the ground.\nUsing an Arduino to read from moisture sensors, a sonar for water level and a rain sensor we control when to pump water into the garden.\nReading sensors, building apps.\nWe were able to complete a final package for the sensor and pump.\nSoftware is hard.\n",
        "hackathon_id": "baltimore-hackathon",
        "winner": false
    },
    {
        "description": "\nInspiration\nLocal artist Kristin McWharter's work, often in the form of immersive sculptural installations, videos, and viewer- inclusive performances, is an exploration of how groups socially choose to connect or created distance and how the personal experience of awkwardness manifests from within those groups. The boundaries of social intimacy and personal narrative physically and visually manifest themselves in her work as she uses performative objects and environments as a means to invoke viewer\u2019s individual relationships towards proximity, competition, sincerity and comfort. t. This idea for piece has been on the back-burner for a long time and we are excited to see it come togather\nWhat it does\nThis is a prototype for a series of costumes meant for future performances. A heart rate monitor tracks the performers heartbeat and generates a tone that plays through a speaker embedded in the collar. Each suit has its of frequency and when two or more performers have heartbeats that come into and out of sync with each other the different frequencies create chords and harmonics.\nHow I built it\nI used an Arduino uno and an Arduino pro in conjunction with pulse sensors to output tones through 8ohm speakers. I adapted code from pulse sensor tutorials to add new frequencies. \nThe suits were adapted from patterns created before this weekend and the code was found online and modified.\nChallenges I ran into\nLearning about Arduinos and Electronics!\nAccomplishments that I'm proud of\nLearning about Arduinos and Electronics!\nWhat I learned\nBasic Arduino code structure, basic circuitry\nWhat's next for BeatSuit\nMultiples! and a scheduled performance.\n",
        "hackathon_id": "baltimore-hackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonoculusmyodronedronestreamparrotar.droneopencvpygamepython-package-index\n",
        "hackathon_id": "hackthenorth2015",
        "winner": true
    },
    {
        "description": "\nPropagate\nis a beautiful underwater seascape that can be both a calming solitary experience, or an engaging social one.\nWatch as diverse species of virtual flora flourish and fade in turn, in a persistent environment, synchronized to users anywhere in the world.\nEach species is defined by yourself or others, using the Lua scripting language and our simple API + integrated editor and testing stage. When you've designed a species you're proud of, push it live and see it interact with the ecosystem. \nA trivial example:\nwhile 1 do\n     grow(\"up\")\nend\n\nHow it runs\nHTML5 Canvas running on the client, communicating via web socket with the server.\nServer is running Go and spinning off 100's of Lua VM's to sandbox user-generated code and control plants.\nThe server and VM's communicate concurrently using channels and go routines.\nChallenges\nPropagate has a complex (probably over-engineered) architecture, consisting of three major parts.\nThe Client, the Server, and the Lua VM's running sand-boxed flora code. These components all needed to communicate in a thread-safe concurrent manner, and these channels+websockets were the primary challenge and presented lots of iterations and interesting debugging. We had some bizarre stuff happening in the terrarium!  \nBuilding a concurrent system meant that we needed to clean up all the concurrent processes our program created. This was challenging because it is hard to design a system that cleans up after itself when moving so quickly to improve features. \nGo is not an ecosystem that our entire team had used prior to this event, but we decided to use it as our server side for it's excellent concurrency story. This meant that half our team was getting mentored on Go best practices as we laid down the framework for Propagate, but by Saturday night we were all able to be productive and confident in the code-base.  \nFinally, tweaking mechanics to achieve a satisfactory ecological balance was an important challenge as Propagate came together. We wanted the ecosystem to be alive and dynamic, meaning that old plants gradually withered away to make room for young. An interesting mechanic that emerged is the way that plant's tendencies to drop spores in close proximity to themselves lead to \"forests\" of one species\nGoing forward\nWe would like to explore algorithmic iteration of Propagate programs, including generational mechanics and fitness values. We also want to expand the ecosystem simulation to include an entire food chain of procedural critters \n",
        "hackathon_id": "hackthenorth2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nI've been struggling with receiving phone notifications and navigation data riding my motorcycle. Oftentimes, I miss my turns due to my lack of navigational skills without a GPS\nWhat it does\nWe created a Hybrid application which sends navigational information (maneuvers), as well as other notification data (sms, phone call) to the Arduino. The Arduino takes this data and manipulates the array of 8 LEDs to display information to the user in an intuitive way. The lights rely strictly on peripheral vision, allowing the user to be notified of events without taking his/her eyes of the road.\nHow I built it\nStuck things together. Essentially and over glorified \"Blink\" program. \nChallenges I ran into\n\nLots of issues sending data from the app to the string.\n\nAccomplishments that I'm proud of\nIt works exactly as it's intended to. Lights are fully visible during daytime, and not blinding at night. \nWhat I learned\nWhat's next for Jarvis\n\nCreate a custom PCB board for to reduce size (or use an Arduino Nano instead of an uno).\nMake a 3D printed case that can be mounted universally any motorcycle helmet\nUse a multicoloured LED strip for more indicators (ex: tells user that they are over the speed limit)\nEnable custom blinking patterns and configurations\nRechargeable battery\n\n",
        "hackathon_id": "hackthenorth2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe want to use the power of automation and Artificial Intelligence to affect any field possible. Job Interviews should not be an exception.\nWhat it does\nWe have an interviewer and a candidate for a technical job. We can translate speech to text, and then analyze the quality of answers by using Machine Learning algorithms and mark them based on their performance. In addition, we analyze their facial expressions in general to determine their personalities and whether they're fit for company's culture.\nHow we built it\n\nThe app is built with RoR. \nWe have used firebase to create a collaboration tool for the interviewer - and the candidate. \nWe have used WebRtc with Peerjs to create a real time video - conference. \nWe have used Google's Web Speech API to translate audio to text and keep - the interview process as records and have access to analyzing each - candidate's answers.\n\nChallenges we ran into\nWebRtc not working well.\nAccomplishments that we're proud of\nDisabling one browser extension, and this solving most of our problems.\nWhat we learned\nHow to use several APIs to meet our app's specification.\nWhat's next for TalentScale\nWhat's next for htn2015\n",
        "hackathon_id": "hackthenorth2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nPopular methods of navigation assistance for bicyclists involves either using headphones or a monitor/display to determine directions. This inspired a desire to create a safer method. This was our primary motivation to develop Wayst. Our secondary motivation was driven by the need to improve the quality of life for the visually impaired. \nWhat it does\nA headless and soundless piece of wearable technology that enables the user to safely travel and explore new areas using haptic feedback. It also detects nearby objects (within 1 meter) and informs the user.\nHow I built it\n\n3D printed 4 enclosures\nConnected 3 motors and ultrasonic sensors for front, left and back part of the belt\nDesigned a circuit to drive motors\nProgrammed companion Android App and Firmware on the Particle Core\n\nChallenges I ran into\nHardware debugging and sensor characterization were definitely the most challenging. We had to spend extra time to develop filters to handle the sensor noise.\n",
        "hackathon_id": "hackthenorth2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nEvidence can help strengthen and clarify a case, but obtaining video proof isn't very simple. This is especially true for violent incidents, which can happen in a matter of moments and result in long lasting consequences. We believe people should have a way of recording incidents of their own, promoting accountability against unlawful acts without the threat of being identified. \nWhat it does\nOpening the AnonymEyes app allows users to instantly stream low resolution video anonymously from their mobile phone to the AnonymEyes website. There is no local copy of the video, only a remote one. The videos are also location tagged and placed on a map. This data can act as a way of rapidly and discreetly alerting emergency responders while recording valuable information to them at the same time, rather than dialing EMS. \nHow we built it\nThe two main interfaces to AnonymEyes are an Android app that allows the user to instantaneously record and upload a video stream, and a web application for the public to view uploaded videos. \nThe default Android video recorder only returns a video file after the 'Stop Record' button is pressed. To achieve near-continuous live video stream, we needed to hack a way around the default API. Frames of the camera preview were taken at a fixed rate and sent via UDP packets to our Java processing server. On the Java server, the frames were compiled into a H.264 mp4 file for cross-compatibility across all web browsers. The video file is then uploaded to a shared file system between the Java server and a Ruby on Rails web server, both running on the same VM on Google Cloud Platform.\nTwo requests are made from the Java server to the Rails server to indicate a new stream. An initial request indicates the location of the anonymous user and plots a Google maps marker. A final request is made once the video file is encoded to notify the client to load the HTML5 video. \nThe front end built using Angular.js is dynamically updated by listening to a Firebase database.\nChallenges we ran into\nHacking a live video stream was a whole challenge in and of itself. It was imperative that the video was uploaded as soon as possible to the remote server due to the nature of our problem. We initially thought of transmitting whole frames of the video via UDP to our Java server. We realized that most network routers do not deal well with packets of size 1000+ bytes, therefore we had to create an algorithm to manually splice the frames into smaller vertical strips of data. \nThe second major challenge we ran into was trying to get a Rails websockets configuration working on Google's Cloud Platform (GCP). Since Rails does not natively support websockets (yet), the gem we used creates a standalone Thin server to route websocket activity. After much frustration, we came to the conclusion that GCP was routing websocket traffic to the HTTP server (we were getting an \"unexpected response code: 200 OK\" error, which is quite counterintuitive to begin with). Ultimately, we had to leverage Firebase to simulate websockets/server-side events. We can send regular HTTP requests via Firebase API and listen to changes in the Firebase database on the client side. \nAccomplishments that we're proud of\nWe built an entire live video stream protocol (everything but the actual nitty-gritty encoding). We were also able to interface a Java server, a Rails server and mobile events without much difficulty in a short span of 36 hours.\nWhat's next for AnonymEyes\nWe would like to make this service available for free to the general public. \n",
        "hackathon_id": "hackthenorth2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe feel that transferring money these days is a very tedious task. Thus, we thought why not simplify this process to making secure payments on the fly by just scanning the items we want to pay.\nWhat it does\nThe app is quite simple, users just do the following steps to make a quick payment:\n\nLogin/Register to the PayMyFace app.\nTap the 'Pay' button on the main screen\nWhen the camera shows up, take a picture of either the person or the logo of the company you want to send money to.\nWhen a desired image is taken, our app will determine which person/company you want to send money to.\nWhen it has found a match, it will ask you to confirm that the person/company is the desired recipient. \nNow just enter the amount you would like to pay that person/company and press send.\nWhen the payment is successful, both the sender and the recipient will receive a text of confirmation on the time and amount transferred.\n\n",
        "hackathon_id": "hackthenorth2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nIt's amazing how hard it is to remember to do something every day. One of these things is clocking in and out from work. It's incredibly important (assuming you want to get paid), but if you forget it can be almost impossible to recover your appropriate hours. We realized that clocking in and out from work should not be something prone to so much human error.\nWhat it does\nElapsed is a timesheet solution built around convenience for both the employee and the employer. Instead of having to manually clock in and out Elapsed detects when the employee arrives at his/her desk using iBeacon technology and automatically clocks them in. When this employee leaves work to go to the break room or leave for the day the iBeacon also notices and properly clocks the employee out. The employee can then see all of their clock in and clock out times right from the app and easily graph the number of hours worked each day. Again, all of this is done automatically without the employee or employer needing to do anything.\nAll of this data integrated directly with the employers Intuit Quickbooks account so payroll is done automatically for the employer maximizing convenience. However, we understand that something so precious such as money should have a human touch if the computer appears to make a mistake. For that reason we implemented SupportKit. If some of the data appears wrong to the employee when they look at the times listed or the graph with one click they can chat their boss. Their boss is instantly emailed with the complaint so the employee and employer can resolve the issue together.\nHow I built it\nThe main app was written in Objective C for iPhone. All of the data is stored in Realm locally and then sent to the Intuit system for payroll. To manage the intuit data and deal with login, Microsoft Azure is used. The main logic is handled by utilizing iBeacon bluetooth beacons. The app just senses the bluetooth beacon corresponding to an employees desk or the iBeacon corresponding to the break room or some other location and properly clocks employees in and out based off of these locations.\nChallenges I ran into\niBeacons initially were a little unreliable, but we found that using our own methods over Apple's suggested implementation of iBeacon reduced irregularities tremendously.\nWhat's next for Elapsed\nThe idea of this would be for corporations to release their own distribution of this app so we would need to add easy ways for the employee to customize the app without us needing to manually edit all of this code.\n",
        "hackathon_id": "hackthenorth2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWhile doing everyday things in the household, one of us noticed the amount of water that accidently gets used due to the high water pressure coming out of faucets. We then came up with an idea to help a user control the amount of water that flows in their households, to save water, energy, and money.\nWhat it does\nOur device tracks the water consumption of a user using their water meter. It also send the information to a database which is built to pull the data to make analytics graphs showing the user their water consumption.\nHow I built it\nA Hall sensor circuit on the Arduino detects a magnetic field brought about by a spinning magnet underneath a water pressure guage, which is what is used to drive the dial and increment each time a litre of water is used. This signal is amplified and serially sent to a raspberry pi, which uploads the information onto a database, all this using Node.js. Our website then pulls the data and performs simple analytics such as monthly, weekly, daily, hourly water usage, and extrapolation of usage by the end of the month. The user then has a front end method of setting a value for the amount of water consumption they would like to aim for by the end of the month (or what they wants their water bill to be). The arduino can also tighten or loosen a water faucet, which can be used in controlling the amount of water flow in a household.\nChallenges I ran into\nCommunicating the arduino and rpi through Node was extremely difficult, especially when interfacing it with Node.js, as well as the difficulties extracting information from FIrebase as our online database. It was also very difficult to troubleshoot the amplifier and conditioning circuit. \nAccomplishments that I'm proud of\nI gained heightened ability for circuit design, and learned how to interface the rpi, arduino, and web applications together with Node.js. I also 3D printed my first object, a model of the water guage. \nWhat I learned\nI learned how to use Node.js, the effects of magnetic fields due to spinning solid magnets, and how to interface multiple platforms.\nWhat's next for Every Drop Counts\nWe would like to perfect our extrapolation method by using machine learning algorithms to increase the accuracy of future value predictions. We would also like to be able to allow the user to set their target water usage or water bill, and our device would ensure the target is met through controlling the main water valve.\n",
        "hackathon_id": "hackthenorth2015",
        "winner": true
    },
    {
        "description": "\nInspiration\n\"UNSUPPORTED PLATFORM\"\nUs here at stokr have encountered that line many times when trying to find a game in our Steam library to play on the go. When using a Macbook, we think you shouldn't have to be locked out from your own content. That's why we made stokr.\nWhat it does\nCreate a stokr account on the site and let us link your Steam account. Then download our Mac OSX app and log in. Then, simply start up your Steam account, you'll get a notice regarding in-home streaming, select the PC that pops up, and you're good to go! You're free to install and play any game you want, and play it remotely with your OSX machine.\nHow we built it\n\nPool of AWS GPU instances\nGolang and Python servers to coordinate instance pool\nOS X app in Swift to connect to GPU instances using OpenVPN\nReact app to register for the service\n\nChallenges we ran into\n\nAddressing edge cases with Autohotkey\nIssues with web dev build tools\nAutomating VPN setup + low-level network debugging\nComplications with having so many languages, frameworks, and three OSes as necessary components\n\nAccomplishments that we're proud of\n\nA fairly polished final product with pretty low latency\nFast game startup time\nTying all our components together for a smooth experience\n\nWhat we learned\n\nSleep is important\nLatency is king\nThe true meaning of an MVP\nThe American learned about Canada\n\nWhat's next for Stokr\n\nLawsuits\nPersonal use by the team for gaming\nFind out what demand is like\n\n",
        "hackathon_id": "hackthenorth2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nA member of our team uses a yubikey during his co-op for authenticating work accounts. This was seemed to be a super convenient and secure way to store passwords and access them with just one touch. Another factor was having one secure place where we can store all our passwords without having to bother about remembering too much. We looked to our iPhone to explore what we could do with touch ID and so we began the development process.\nWhat it does\nHash is an iPhone application that connects to your desktop device and web extensions in order to successfully authenticate several user accounts seamlessly using your fingerprint via touch ID. It is simple to use, secure and convenient when ever you need to access any of your accounts.\nHow I built it\nWe looked towards what would make this work and we realized that we needed to ensure that the communication between devices have to be as accurate and secure as possible. With low powered bluetooth we were able to pair the iPhone and desktop application in order to send information back and forth from the web extensions. The web extensions are anchorage of detecting what site is currently being used and what credentials need to be stored and all the vital pieces of information is synced with dropbox in order to have a secure means to transfer information. The iPhone application was needed to be able to process the information coming in and act accordingly in order to provide precise and accurate results that fulfilled the users needs.\nChallenges I ran into\nOne of the biggest challenges was with the bluetooth connection. This was due to the out of date documentation that was available for bluetoothle connection process. This took a fair bit of time to figure out along with the learning curve of adjusting to the new programming language (Swift). On the web side we struggled through insufficient documentation and had to learn how extensions worked and built from the limited knowledge we had. This included how to retrieve the right pieces of information needed from the sites and communication with the desktop applications.\nAccomplishments that I'm proud of\nThe ability for the application to communicate fast with the desktop and web extensions is defiantly something that posed a challenge and it added greatly to the core functionality of hash. We are also proud that we can give people the convenience to use such a tool with such ease and flexibility.\nWhat I learned\nAll that we have learned today was completely new material and we were proud of the ability to easily pick it up at that speed and then use that knowledge to create something cool. We were all new to web extensions and how they worked so that was cool getting into. Bluetooth was also something we had never worked with and it posed a challenge for us and we are more than happy we overcame that challenge.\nWhat's next for Hash\nwe want to push the limits as to what we can do with touch ID and security. forms of payment, identification processes and several other uses cases. we want to try out as many things as possible to ensure that it is used and appreciated by many\n",
        "hackathon_id": "hackthenorth2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe wanted built robots that fight. Without lots of money, we couldn't build those really cool battle robots equipped with flame throwers and chain saws. Feeling bummed out, we came up with the idea that, perhaps, we can get that experience in the virtual world. We wanted a game that can deliver both the rock-solid realism from the physical world and the mind-blowing effects from the virtual world. We strongly believe that this project will create some gaming experience that we have yet seen in the market. \nWhat it does\nThe user will be driving around the robot and shoot virtual zombies using an Android phone. One wins if one kills all the zombies before they get to him or her. To other people, the user will just look like a maniac who is poking his or her phone rapidly and screaming at a seemingly empty space. Through the user's phone though, he or she can see many zombies roaming around and every second can be the difference between life and death (virtually). \nHow we built it\nWe developed the game using Unity and compiled it for Android phone. The augmented reality and marker tracking was done using Qualcomm's Vuforia. The robot was built using simple electronics components and a Teensy 3.1 microcontroller. Communication between the robot and the Android phone conducted via Bluetooth. \nChallenges we ran into\nFor one, neither of us has used Unity nor Vuforia before. It took us a while to figure out how they work. In addition, neither of us has an Android phone (Tawfiq uses iPhone and Matthew uses Blackberry; we both use PC). So we had to borrow an old Android phone from a friend for testing purposes. In addition, finding good marker was harder than we thought. We tried out a bunch of abstract patterns, then Ghandi, Da Vinci, Issac Newton, and many other famous figures... we figured out that none of them is as good as our trusty Albert Einstein. We now have many of his picture all over the place. \nAccomplishments that we are proud of\nWe got a real, fully functional robot built from scratch and we got the core of our project idea done. We learned and developed a game using Unity from absolute beginner within these 36 hours. \nWhat we learned\nWe learned a lot about the technologies that we used of course. In addition to that we learned the way of developing products when there is a severe time constraint and lots of uncertainty. we also met a lot of like-minded and smart people. \nWhat's next for BattleBot\nWe are considering to take it the next level. We want to make this into a game that is addictive and engaging. We also want this game will introduce robotics to more children and people in general. We hope to develop it into complete product and take it to the market over the next year.\n",
        "hackathon_id": "hackthenorth2015",
        "winner": true
    },
    {
        "description": "\nTripio, is the AirBnB to find a local travel guide. It\u2019s a web platform where travelers can meet local people, based on common interests, and have a personalized tour depending on their own flexible budget.\n",
        "hackathon_id": "hackthenorth2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nNo matter how much you make or where you live in the world, you're entitled to a safe pregnancy. But many mothers don't have access to this right. We're making pregnancy vitals tracking accessible, affordable and more human with our smartwatch sensor watch band. Zen Sync aims to provide piece of mind for expecting mothers. \nWhat it does\nOur smartwatch accessory makes your watch band smart by lining it with sensors that help expecting mothers track their stress, vitals and health in real time and affordably. Our watch band communicates to the Pebble smartwatch, streaming real time data to the device. We then transfer that data to our firebase setup and displays the information in our web app.\nHow I built it\nWe built it with the expecting mothers in mind. We used the best technology available on the market with affordable sensors. We \nChallenges I ran into\nWe built custom hardware and sensors that took several hours to develop for. Building both hardware and software offered many challenges and slow downs individually, even before the integration in between.\nAccomplishments that I'm proud of\nWe built a smartstrap w/ custom hardware, facebook login and firebase. \nWhat I learned\nUsing technology to solve a social and health problem for expecting mothers in emerging and impoverished areas. \nWhat's next for Zen Sync\nProposing to work with Internet.org to help expecting mothers in emerging and impoverished areas with technology to track their health. \nContact For More\nzensync@neutun.com\nFor Code\nhttps://github.com/Eisforinnovate/zenSyncHackTheNorth2015\n",
        "hackathon_id": "hackthenorth2015",
        "winner": true
    },
    {
        "description": "\nWhat is it?\nHack The Hunt is a Social Engineering game where individuals are rewarded for expanding the player base, collaborating with teammates, and deceiving opposing team members.\nInspiration:\n\nThe idea of creating something with viral potential\nThe seemingly unused QR system which the Hack The North team had given us on our lanyards\nCreating a game for a specific event and situation\n\nWhat we're proud of\n\nReverse engineering the HTN API for login and user information\nHaving complex interactions while keeping the UI simple and beautiful\nCreating an awesome, collaborative game where people are driven to make new friends\n3/4 of us learnt meteor on the job. That was pretty intense.\nFinishing 8 hours early so that we could run around doing sales\n\nChallenges we ran into\n\nWorking with CORS\nFinding a good QR reader library which worked on iOS and Android web browsers\nManaging the DB\nExplaining the concept\n\n",
        "hackathon_id": "hackthenorth2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nEthan and I happened upon this idea independently through completely different means. Coming to Hack the North, I had just uninstalled a sketchy bitcoin mining virus on my computer, and I was contemplating making my own bot-net. Ethan was inspired by Stanford's Folding@Home project, which sparked ideas in him about crowdsourced computing for a good cause. When we came together as a team, we knew we wanted to apply Bitcoin technology, and this idea for a distributed computing project for charitable causes came about.\nWhat it does\nCryptocause uses WebWorkers to mine bitcoins inside of the browser without any miner install. This allows for both a more accessible way for individuals and charities to experiment with Bitcoin, but also for a larger potential pool of users contributing to the mining effort. These funds are funneled and held in Cryptocause's wallet through Coinbase, which we monitor with a Node backend to distribute a threshold of Bitcoin using Coinbase's API's to a charity selected from a database of charities with known Bitcoin addresses. Because Coinbase allows for users to receive Bitcoin without having created an address on the Bitcoin network, charities can also receive the funds by email notification, through which they can get paid directly to their bank account.\nHow we built it\nThe mining script uses HTTP long-polling and RPC on the server to connect to a decentralized, peer-to-peer mining pool that pays out to our Coinbase address. The script itself takes advantage of WebWorkers and multithreading to maximize the computing power we can derive from the browser. We then provided real-time analytics with Epoch, D3.js, and WebSockets connected to our Node backend to give neat insights into the hash rates of the client, the total clients connected, and the pool itself over time. Our stack is hosted on Linode, which also runs bitcoind and P2Pool to manage payouts and statistics. The Node itself is currently using Coinbase's sandbox development environment, but could easily be changed to production should our project attract enough visitors to generate a significant amount of Bitcoin.\nChallenges we faced\nOne of our primary challenges was forking Hamiyoca, which provided a starting place for being able to mine Bitcoin from the browser. Being an unmaintained repository, we had to go through the repo and fix bugs in the backend that were related to now-deprecated browser technologies (we plan on submitting a good amount of pull requests in the near future). Another challenge we faced was finding an initial mining pool that supported an older mining protocol called getblocktemplate, as we did not have the time to implement Stratum-based browser mining during the 36 hours.\nWhat's next for Cryptocause\nFor the future, we're planning on maximizing the efficiency of a browser-based Bitcoin miner with Chrome's Native Client in order to be able to tap into lower-level technologies like GPU shaders. We also want to find a better way to integrate charity payments so that we can reach both charities with and without bitcoin wallets.\n",
        "hackathon_id": "hackthenorth2015",
        "winner": true
    },
    {
        "description": "\nDonating to worthy causes is not inherently social... right now no matter how you contribute (private donation, kickstarter, indiegogo), payment is a HASSLE for the user and letting your friends know you donated is an afterthought. The idea behind iContrib is that contribution to worthy causes should be frictionless as possible (what's easier than writing a tweet?) and everyone should know you donated be default.\nWith iContrib, you donate to a cause by simply writing a tweet: \"@IWillContribute $5 to #buildASchool\" or just pressing the retweet button.\nInspiration\nCurrently, donating money to charities online is a pain. We wanted to make this experience as frictionless as possible. For both the person who creates the campaign, and the person who wants to contribute to it.\nHow it works\n\nGo to http://icontrib.co and set up your campaign in less than 60 seconds... simply enter the hashtag you want to use to raise money for and how much you want to raise, e.g $100 for #buildASchool.\nFrom there, you can tweet out to your followers, asking for donations.\nAll someone has to do to contribute is retweet your original tweet or just use your hashtag #buildASchool\nIf they aren't signed up, we'll send them a secure link to save credit card info\nFrom then on, any retweet or share of an @icontrib hashtag automatically makes a donation!\nCampaign progress, contributions and contributors are all posted on twitter by us, so there is a live feed of the funding process -- all in twitter!\n\nHow we built it\nWe used braintree as our choice of payment api.\nDjango app to support twitter authentication, hosted on heroku.\nPostgres db \nWe have a separate server to support the twitter streaming api, and created a twitter bot to send out tweets to the person who wants to contribute to the campaign.\nFeatures\n\ntwitter bot @IWillContribute\nfluid flow between twitter platform and signing up\n\nWhat's next for iContrib\nMoar users!\nhttps://github.com/TristanH/icontrib\n",
        "hackathon_id": "hackthenorth2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nOur team is passionate about using technology in the financial industry. Most of us trade on a regular basis and we have long awaited the chance to work on a technological application to solve different financial problems and make a positive impact on the financial community. Hack the North presented the perfect opportunity for us to build such an application.\n\nWhat it does do\nPriceAlert is a web application that enables investors to be automatically notified when trading prices of different indexes fall or rise beyond certain criteria, making investing both easy and convenient.\n\nHow I built it\nThe application was built using the Flask framework. The frontend consisted of HTML/CSS and JavaScript while the backend primarily consisted of Python. Ajax calls transferred data between the two mediums. The Bloomberg API was intergraded within the codebase to receive and process financial data regarding indexes and the Twilio API was used to send automated notification messages to investors. Finally the Highcharts API was used to create beautiful interactive graphs for data visualizations. \n\nChallenges I ran into\nThe biggest challenge revolved around integrating the Bloomberg API as the API was not capable of providing real-time data. As a result, extra work was required to first retrieve past data and then model it for users to perceive it as future data.  Furthermore, development was slowed down due to large volumes of data that took long times to be retrieved and processed due to slow internet speeds. \nAccomplishments that im proud of\nWorking with flask was a new technology that we have not used before. Coming up with creative ways to use bloombers data was also interesting, as there was a smaller volume of data than we had planned for - our project scope kept on changing.\nWhat I learned\nHow to use flask, bloombergs API, how to use Twilio. Various new features and functions in highcharts were explored as well.\nWhat's next for price alert\nDistrupting the financial alert market.\n",
        "hackathon_id": "hackthenorth2015",
        "winner": true
    },
    {
        "description": "\nThe Problem\nIt's crazy that in the 21st century law enforcement/legal system still rely heavily on foggy testimony and paper police reports.\nNot only is there a lack of forensic audio, gps, and timestamped information, but what little there may be is closely guarded by the police.\nSo we made a way for users to directly document, review and share evidence without having to go through anyone else. \nWhat We're Doing About It\nBoth Android and Pebble apps record audio while sending it along with timestamped geolocation during police interaction. Users have the option of pinging emergency contacts when they are detained. \nThe files are uploaded to dropox. Users, witnesses, and attorneys can view these folders on our webapp. \nWhat's next for FedUp\nIn the future, we want to make this app fully supportive with witnesses bystanders. This means witnesses can submit audio and video recordings to our case folders as well as writing in their own accounts. \nSecondly, we'd love to talk to some more attorneys, public defenders to really get an idea how we can make their jobs easier.\n\n\n",
        "hackathon_id": "hackthenorth2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nEveryone spends hours on Facebook Messenger from chatting, to collaborating on work, to sending links, and to sharing photos. What if there was a way to super-charge your Facebook Messenger and make these tasks even easier and more integrated into the Facebook Messenger experience. \nWhat it does\nWe implemented a bunch of new features into Facebook Messenger that will take your Facebook usage to the next level. For better collaboration we created an interactive canvas inside a chat. Users will be able to whiteboard their ideas with their friends without ever having to leave Facebook.\nWe can stream local videos from one user to the other through Facebook allowing for instant sharing without the manual tasks of uploading it to Youtube or Drive before hand.\nUsing the Chrome WebAudio API we have integrated voice commands into Facebook Messenger. At the tap of a button, users can speak to Facebook and have their text displayed on the screen. \nFor those users that love the sharing aspect of Facebook, we created tools that allow you to share content much faster. Using the commands /giphy and /youtube, users can search through Giphy and Youtube for content that represents what they are feeling when words can't.\nHow We built it\nWe attached an event listener to every element in the html hierarchy and used the react-id to get message text. From here we just associated specific message commands delimited by \" / \" to get the commands.\nWe inserted custom css by injecting it with content scripts by reverse engineering the hierarchical and reactive structure of Facebook's Messenger page. This includes the canvas, the extra button functionalities, as well as anything we pushed directly into the chat.\nFor our canvas, we used Socket.IO to create unique rooms using the Facebook IDs of users that we received from the self-referencing profile account: facebook.com/profile.php?=73322363. From here we had access to our own vanity, our user-id, as well as all of our recent chat history which we could scrape for information about other users. We went through the page to find the ids and used them to add elements to the messenger-thread.\nChallenges We ran into\nAs we were modifying elements on Facebook's Messenger.com, it was difficult to see past the obfuscation created by ReactJS - it required a lot of trial-and-error testing and reverse-engineering. Sending http and websocket data within Facebook also proved difficult, as we were required to use SSL and TLS-enabled sockets, and had to deal with CORS and other cross-origin-related headers. \nDeploying on Azure also proved difficult originally: we experienced problem with a compiler dependency of a concurrency library for Python/Flask. We ultimately switched to an Ubuntu Box and successfully configured NGINX to handle both SSL and TLS sockets.\nWe had an additional RESTful server deployed to Heroku. Early Sunday morning, however, several Heroku data centers experienced significant problems, preventing us from deploying: we ultimately transitioned to a VM on the Google Cloud Platform, which solved our problems.\nAccomplishments that I'm proud of\nWe are very proud of how much we finished because of the huge amount of obfuscation that Facebook has on their messenger page. We were still able to integrate a lot of APIs including Youtube, Giphy, Google Microphone, and Instagram, without the need for external authentication or inconvenience to the user.\n",
        "hackathon_id": "hackthenorth2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascriptfirebasehtmlbootstraparduinopython\n",
        "hackathon_id": "hackthenorth2015",
        "winner": true
    },
    {
        "description": "\nMotivation\nDo you have best friends and potential life-partners that you've been talking to for a long time? Are you interested in seeing how your platonic and not-so-platonic relationships have developed over the years? ForenShips is here for you! ForenShips uses advanced machine learning techniques to characterize the interest levels of you and your friend in your text message conversations, obtained through Facebook with your permission. Interface with this product through an easy-to-use Chrome extension. Find out if mutual interest exists with potential life-partners. Don't lose touch with your friends. Use ForenShips to debug your relationships today.\nPrivacy\nYour privacy is our highest priority. We do not store passwords or login credentials or conversation data. By using the extension, you are granting us access to the data of one specific conversation for one login session. You can permanently rescind access anytime by logging out of Facebook.\nBackground\nIndico.io is a machine learning API designed to determine positivity of product reviews. We saw the potential in using this API beyond its intended use cases and applied this innovative technology to characterizing text conversations. Feeding the positivity results from Indico into our custom built conversation model graphs the relationship health over time. We integrate these results to return the current health of the relationship.\nOur backend is hosted on Google Compute Engine on forenships.co, which takes care of running our modelling algorithm and Indico API calls.\nSummary (tl;dr)\nCommunication is key to relationships. Let us help you do it right.\nLook up ForenShips on the chrome extension store!\n",
        "hackathon_id": "hackthenorth2015",
        "winner": true
    },
    {
        "description": "\nPulse\nDetect biases. See the truth. Stay ahead.\nToday's modern writer needs more than just markup to make their mark. In the name of free speech, how many times have we seen extreme opinions break even the best of authors? We understand the pain of predicting how a piece of writing comes across, and make it easy to get insights about your writing's virality, political bias and even highlight top keywords using NLP. \nPulse is a Chrome extension that analyzes text from articles using the Indico API and gives you a concise overview of views and biases.\nWith Pulse, you finally have a plugin to your peace of mind. \nFunctionalities \n\nKeyword Highlighting\nSentiment Analysis\nTopic Categorization\nLanguage Detection\nPolitical View Detection\n\n\n\nWorks best with Medium.com articles in edit or view mode.\n",
        "hackathon_id": "hackthenorth2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nToo much of a morning is spent waiting in line to get a quick coffee. We wanted to create something that would allow users to place orders ahead of time, make payment as seamless as possible, and find out exactly what to order from a menu.\nWhat it does\nWhen we started creating this project, we quickly realized the vast potential it could have for businesses. With identifiers to customer transactions, businesses would be able to measure their retention rates and this would open up a whole new aspect to analytics. Jumpp is quick to set up, so small businesses don't need to jump through hoops to get themselves out there to their customers.\nCustomer\nCustomers have a single application that provides them suggestions of places they can go eat, and specific menu items they can order. These orders can be placed ahead of time, so that it will be ready as soon as customers step in the door.\nBusiness\nBy going through the Jumpp application, turnaround time is significantly decreased, leading to higher revenues and freeing up efforts towards better customer care. As the customers have accounts associated with their purchases, businesses can use that to better cater to their targeted demographic. Finally, since businesses can connect Intuit and Jumpp, it seamlessly integrates with Quickbooks and creates transactional entries automatically. \nHow I built it\nBackEnd: FireBase\nFrontEnd: ReApp (React based mobile wrapper)\nAPIS: BrainTree, Intuit\nWe created two applications(customer and business) that maintained real time updates through the use of FireBase and ReApp. On top of this, a listener application using NodeJS/Express was able to respond to changes in FireBase and then push these changes straight into the business owner's Intuit account. \nChallenges I ran into\nDespite prior experience in web development, Reapp was difficult to work with initially as it had a lot of quirks from having to translate it to the iOS and Android platforms. Due to the nature of the application, we wanted it to be on as many platforms as possible, and Reapp was able to give us the web, iOS and Android.\nIntuit is a very large ecosystem of products, and a fair amount of additional work had to be done to add in a transaction to allow for the report generation and other various tools that Intuit provides.\nAccomplishments that I'm proud of\nThis was the first time anyone in the team had used BrainTree, FireBase, Intuit or Reapp. While it was certainly a challenge to learn and hack at the same time, we managed to complete two applications that could be run on 3 distribution platforms(web,ios,android)!\nWhat I learned\nThere's always new things to do things that achieve advantages and conveniences otherwise thought to be impossible. Without FireBase as our data store, it would have been a much more difficult project to set up the Flux architecture that would allow for clean/easy data access. Furthermore, FireBase was exceptionally useful in setting up with Intuit as they both supported OAuth and easily allowed for certain parts to be background services. \nThere is a ton of cool technologies out there, it is a great challenge to figure out which ones are most in line with what you want to achieve.\nWhat's next for Jumpp\nWe want to improve the experience of users for our application. For clients, we originally planned to use NLP techniques in order to improve search result quality. As for businesses, we both want to integrate it further with any existing business software they have, and provide valuable business analyticss that small businesses would not easily have any access to.\n",
        "hackathon_id": "hackthenorth2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nBaltimore City has the highest property tax rate in Maryland.  Property tax credits are provided by the state but homeowners are often unaware of them or the requirements for eligibility.  Furthermore, the website describing this program is densely written and difficult to understand.\nThe purpose of this project is to make the homeowner's tax credit and the data behind it more accessible.  We hope this will encourage more homeowners to learn about and apply for the tax credit.  Additionally we hope this will help community activists identify, inform, and assist other individuals who may qualify but have not yet applied.\nWhat it does\nThe project is primarily a web map intended to identify both owner occupied properties in the city as well and illustrate which homes were receiving a tax credit.\nAdditionally, we constructed a RESTful API for live access to official property tax records for each property included in the map.\nTo increase the usability and exposure of these elements, we built a website to provide awareness about the program as well as to highlight the map and provide information about how people can apply for the credit.\nHow we built it\nProperty data was gathered from the Baltimore City Open GIS portal.  This property data was processed in Python using the pandas and geopandas modules.  It was converted to raster tiles and styled in Tilemill.  Tiles were uploaded to Mapbox for hosting.  \nThe property tax API was generated by building a Flask app to generate the appropriate POST requests to cause the server to send back the HTML-formatted records for the requested property.\nThe website was built using Jekyll beginning with a pre-existing template and the site was hosted as a static page on github.\nLinks to github repos\n\nMap work in Python\nFlask API for tax data\nWebsite Repo\n\nChallenges we ran into\nNot all of Maryland's data is \"open\".  Current records on property and tax information are not easily linkable or accessible via any API.\n",
        "hackathon_id": "hophacksfall2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavamyo\n",
        "hackathon_id": "hophacksfall2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nA developing concern for business and government agencies is that of the sophisticated insider threat. Systems and network administrators often have extraordinary access to sensitive information, far beyond that of any other individual in a large organization. They also tend to be the ones trusted to audit and secure their networks, monitor for data breaches and report employee misconduct, raising the classic conundrum - who watches the watchers? Traditional methods of monitoring the network activities of users suspected of violating their employment agreements or stealing sensitive data are difficult to deploy against a well-established network administrator who would likely notice third party tampering be it through software, traditional network taps or software modifications on network switches.\nA parallel concern to all interested in cybersecurity is the fact that, at the end of the day, the cyber world is still a physical one in many respects. This hack demonstrates the importance of physical security for all networked devices in large corporations. A lapse in physical security, such as an unlocked office door or a broken CCTV system, can translate into a nearly undetectable launching point for malicious activity and data breaches. We hope to encourage consideration of the ways in which a sophisticated intrusion could take place without the installation of a single byte of software or the commandeering of a single account on the target IT infrastructure.\nWhat it does\nPiSpy is a passive network tap disguised as a standard NIC card. It can be installed in minutes, configured as its own wireless access point for easy out of band exfiltration of packet capture data that leaves no trace on the target network, and it is made entirely from readily available consumer hardware (well over half of the hardware components used in our implementation came from our University's e-waste processing facilities!). \nThe only outward indications of PiSpy's existence are it's out of band traffic (which could be disguised or converted to GSM fairly easily) and one new port on the back of the target computer. The PiSpy tap is 100% passive meaning that, even in the case of software or hardware failure, network traffic to the target computer will continue as normal. PiSpy's unique positioning physically inside the target machines means that it can draw directly from the target's PSU and is always on when the target's machine is on. There is also no risk of accidentally transmitting information across the target network as the PiSpy is physically restricted from transmitting information at the Link layer of the TCP/IP model.\nHow we built it\nThere are four essential components of PiSpy. Each of which needs to operate with extremely high levels of reliability for the device to be useful.\n1) \"The NIC Trick\"\nThe core of PiSpy's success lies in its ability to blend in. Ideally, a target might use a PiSpy bugged computers for months or years (if the investigation so warranted) without learning of its presence. In order to tap a user's signal in the final milliseconds before it enters or leaves their device, a separate NIC had to be 'floated' inside the desktop tower using a PCIe riser cable - thus rendering it both physically invisible and inaccessible to the outside but the key link between the PiSpy hardware and the target machine. To further decrease the footprint of the PiSpy, an NIC was selected which did not require the installation of any new windows software or drivers. A guiding principle of the PiSpy is that one need not even turn the target machine on in order to complete installation.\n2) Physical Tap\nPiSpy leverages a physical, passive CAT5 tap based on the splitting of the transit and receive pairs through punch down RJ45 jacks. These split cables are kept tightly wound and were tampered with minimally in the construction of the tap in order to limit signal degradation. \n3) Power\nPiSpy is powered entirely off the PSU of its host. This was achieved by soldering spliced micro USB and Molex cables together in the appropriate configuration. One key benefit of this decision is that, any time the target PC is only, the PiSpy is available to sniff its traffic.\n4) Control\nThe brains of PiSpy are a raspberry pi designed to be operated resiliently in a headless configuration for long periods of time with sustained remote context. In the demonstration iteration we built, the PiSpy communicates to a controller via an out of band wifi network in order to eliminate the need to send potentially noticeable packets across the target network\nDue to the large size a full .img of the PiSpy installation SD and configuration is available on request\nChallenges we ran into\nThis project was littered with a smattering of surprises and challenges. From somehow forgetting to bring wire strippers (we resorted to scissors and luck), to spending more than three hours trying to get a faulty ethernet cable to work in our tap before we realized the cause of our woes - we faced a large number of the sort of terrifyingly unexpected challenges that plague hardware hacks. Luckily, we did our best to bring every piece of our computer related equipment with us to Hophacks in addition to the parts we purchased to incorporate in our hacks. We learned the value of planning 3 or 4 different routes to the objective and expecting to be plagued with a few seemingly insurmountable failures.\nThe most frightening bump in the road for the project came with the discovery of a short in our multimeter which came within seconds of burning out our raspberry pi and maybe our host computer as well. Luckily, years of conditioned fight or flight responses to the triggering smell of burning rubber was sufficient to get us to react quickly and assess and safely resolve the situation. \nAccomplishments that we're proud of\nWe came here with almost no expectation of being able to finish this project but just the hope of being able to make a good start on the road to a functioning device. The moment when our first real packet captures came in from the host device was one of the most exhilarating hacking moments either of us has ever had.\nWhat we learned\nOne of the biggest takeaways from the PiSpy experience for us was a deeper appreciation for just how complicated and rewarding hardware can be. This was our first 'pure' hardware hack at a Hackathon and it was a bit of a shock how a few inches of copper can be every bit as finicky as a mysterious compiler error on the development side. We also both got a much more nuanced understanding of how the magic of the internet actually works at a level much deeper than code generally reaches. \nWhat's next for PiSpy\nFuture development possibilities include similarly hidden network devices which manipulate and interact with user data on the fly through a more active mode configuration, guis and selective packet monitoring and condensing of the hardware required to build and deploy in order to reduce the overall size of the device .\n",
        "hackathon_id": "hophacksfall2015",
        "winner": true
    },
    {
        "description": "\nTBD\n",
        "hackathon_id": "hophacksfall2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavamatlabjavascript\n",
        "hackathon_id": "hophacksfall2015",
        "winner": true
    },
    {
        "description": "\n1) Introduction:\nResearchers often work with large data sets containing potentially high-dimensional data. The first step when processing these data sets is always the same: visualize the data and perform some basic exploratory analysis (e.g. visualize the distribution, check for normality, and see if it clusters). This is a time-intensive process which is repeated for each new data set that is received. Furthermore, many researchers are unfamiliar with the necessary statistics and are forced to hire outside help to do this relatively simple process for them. \nWe have automated the visualization process via an interactive web application. The user first imports his or her dataset, and then the application renders a multitude of interactive plots which the user can explore. In this way, the user saves countless hours which can now be used in a more productive way.\n2) Acceptable Data Types\nUploaded data must have patients/trials/samples in rows and categories/dimensions in columns.\n3) Data Processing:\nI) Data\nVisualizes imported data in the form of a data table. User can sort each column in ascending and descending order. User can also search by row name.\nII) Marginal Distributions\nVisualizes the marginal distributions of the columns in the data set. User can choose between a histogram, kernel density estimate, or a combinaiton of both.\nIII) Outlier Analysis\nComputes mahalanobis distances between data points in the uploaded data. The square of the distances are chi-squared distributed with degrees of freedom equal to the number of dimensions in the data set. Data points sufficiently far from the mean are rejected as outliers. The user can choose the set p-value between (0 and 0.1). Rejected samples are dynamically displayed.\nIV) Correlation Analysis\nComputes the Pearson correlation coefficient between different columns in the data set. This is the first step in searching for relationships between variables. The coefficients are visualized via a lower triangular heatmap.\nV) Mean Vector\nComputes the mean of the dat ain each column and displays as a either  ascatter plot, a scatter plot with error bars given as plus or minus one standard error, a box and whisker plot with outliers shown as points, or a violin plot.\nVI) Clustering\nPerform hierarchical clustering. The user can visualize the results of clustering in the included plot. To allow for visualization of high-dimensional data, principle component analysis is first conducted to project the data onto two dimensions. This reduced data is then plotted and colour coded by which cluster it belongs to. The user can choose how many clusters he or she wants to visualize.\n",
        "hackathon_id": "hophacksfall2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nAs members of a relatively small community of \"computer people\" at the GW campus, many of us are frequently called upon by friends, families, neighbors and random people to inspect a file they suspect may be malicious. Unfortunately, there is no obvious and easy way to do this, especially for a non-power user. Thus, we thought it would be a good idea to spend the 36 hours of HopHacks to develop a tool that allows for even the simplest of computer users to check a suspect file in the same manner as we would.\nIn this way we are protecting the innocent dwellers who frequent the interwebs from the denizens of its exploitative dark side. \nWhat it does\nProvides advanced security for the general user - checks the file against 21 million hashes of malicious virus database and looks for and identifies executables by their headers within the file. As one of the most common methods of disguising an executable is injecting it into a MP3 song file, we also added the capacity for the application to examine and identify legitimate MP3 files as such \nHow I built it\nWe used Java to build an easy to use, portable applet that compares the file and its signatures and headers to public APIs and databases. A plan to serve either the applet or an interactive CGI page over the web was also almost implemented but roadblocked by compatibility issues that can be overcome in the future.\nChallenges I ran into\nPerl and Java do not \"play nice\", and it is very hard to make their executables start or access eachother, or share data between them. The database was also very large and took a long time to process. Finally, the Echoprint API was very complex to implement correctly.\nAccomplishments that I'm proud of\nThe database of 21 million signatures runs efficiently and searches rapidly.\nWhat I learned\nOpen source API's can be very complex to implement. Some of our team members learned a small amount of PHP, Python, and tactics for \"gluing code\"\nWhat's next for Project Identity\nFinishing the web based CGI page to allow for the scanning of files without the installation of an app\nIntegrate in database, including c code for grabbing file headers\nOffering recommendations for apps to properly open files\n",
        "hackathon_id": "hophacksfall2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nswift\n",
        "hackathon_id": "hophacksfall2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nhtmlpythoncss\n",
        "hackathon_id": "hophacksfall2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nflaskpythonhtml5sqlitejinjajavascriptjqueryajaxgoogle-maps\n",
        "hackathon_id": "hophacksfall2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nA while ago I read a paper about a team of researchers in Germany who used machine learning to automatically paint a scene in the style of a famous artist. It immediately got me thinking if it was possible to do the same thing with music.\nWhat it does\nGlissando trains a Bayesian n-gram model by listening to music and remembering important features such as rhythmic patterns and chord progressions. It then generates a new song in that style. First it samples a chord for each measure from the n-gram distribution based on frequently observed chord progressions in its training set. Once it has done that it samples a melody for that measure. The melody is first given a rhythm, again using an n-gram model trained on the dataset. Once the rhythm is set, it samples the pitches for the melody from the notes that constitute the chord for that measure, weighting them by proximity to the previous note, but excluding the previous note and the one that came before it.\nHow I built it\nI built Glissando in Python using a library from MIT called Music21. Music21 allows me to parse musical scores stored in either mxml format or midi. The n-gram learner was implemented by hand. I used PyPy to get faster performance as training can be slow. Our training dataset currently includes ~400 chorales by Bach, but can be extended much further.\nChallenges I ran into\nThere were some issues with getting the music to sound natural due to the sparsity of the dataset. A certain chord will only appear a few times, so it was important that we figure out how to properly share parameters. Also, every song is written in a different key, so we needed a way to normalize the notes and chords. Finally while we were working on the melody module we ran into some issues with making the progression sound natural. When you deconstruct a melody, it's usually a sequence of notes that appear often in a connected string that move from one chord to the next. Simulating this process was especially difficult since if you use any notes outside of the current chord, it will clash.\nAccomplishments that I'm proud of\nI'm very proud of the way that we were able to parameterize the model. We found a way to normalize the chords to key signature, and also share parameters for two chords with the same root note that may appear in different octaves or in different inversions (such chords would sound only slightly different to the human ear, and may be used in place of each other without affecting the song).\nAlso, one big problem with modern computer generated music is that it sounds aimless, and doesn't have much direction. To remedy this, I added a parameter that gives each measure a slight probability of modulating to a different key, or perhaps even changing from the major (uplifting) to the minor (somber) mood. This naturally happens quite often in music, and when the automated song does this it sounds more realistic and interesting.\nFinally, I think the end result sounds very nice, and can actually be listened to quite comfortably for a while.\nWhat I learned\nI learned a lot about the difficulties of computer generated music, the importance of a dataset, and most importantly how to deal with sparse data. Sometimes you need to effectively combine similar features to get the most out of a small dataset, and this is a very important concept in machine learning in general.\nWhat's next for Glissando\nThe original paper that I read on paintings used a neural network model which can automatically extract and combine interesting features. We weren't able to do that for this Hackathon due to constraints on computing power, but I'd be very interested to see if an approach like that would work in the future.\nAnother important feature of music is the notion of repeated phrases, melodies, and motifs. Right now the model does not learn these repeated structures beyond the n-grams, but it doesn't have a good sense of the broader structure of the piece and when the melodies should be repeated or explored. This is as of yet a completely unsolved problem in computer generated music--even the neural network approach cannot solve it--but I'd be very eager to see if there's a solution somewhere out there.\n",
        "hackathon_id": "hophacksfall2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nTeam member, Ali Ahmed, underwent a torn ankle ligament for which he desired to make more data-centric, and quantifiably progressive. The team at Sanabit used Myo to undertake this project.\nHow\nThe Myo is placed directly on the ankle, and with that, the doctor can prescribe initial workouts to help the ankle start retrieving its strength. By means of using the Gyroscope and accelerometer in the Myo, Sanabit will catalog various datasets oriented towards range of motion, as well as using the device's EMG (electromyography) to intake the varying muscle changes throughout the process of physiotherapy.\nThe Team\nAli: mechanical engineering student at The George Washington University\nOmar: computer science student at University of Maryland.\nJoe: computer science student at The George Washington University\nVarun: info systems Masters student at The George Washington University\n",
        "hackathon_id": "hophacksfall2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nThere is a large sub-population of people that struggle with stress, especially stress that compounds to excessive levels. Many do not have the means of communicating this to those that can help, such as the severely autistic or special needs people.\n    Not being able to address the stress until it manifests as a violent outburst or break down is a problem for many caregivers and guardians. Being able to monitor someone's relative stress level would give these people a tool to pre-emptively help, and minimize the damaging effects of compounding stress.\n    Given the target population, we wanted to make something that was easy and convenient to use, something that can be slipped on to instantly start monitoring the individual. Furthermore, we developed the system to easily add more data sources and metrics, allowing it to contribute to the quantified self.\nWhat it does\nThe device is based on a home-brew galvanic skin response (GSR) sensor. Measuring GSR gives an easy, indirect method of gauging relative stress levels by peeking at the sympathetic nervous system. When stressed, the GSR naturally increases, and vice versa.\nThe sensor reports data to a Raspberry Pi, which is uploaded to a hosted database. An easy to use web-app allows someone to monitor the person from anywhere, and to watch for any irregularities. If abnormal stress levels are observed, the guardian can respond appropriately.\nHow We built it\nThe GSR sensor consists of 2 electrodes integrated into an elastic wrist-band. The wrist-band, when worn, contacts the forearm on the top and bottom, providing a comfortable location to measure GSR. A unique Super-Mario \u201cM\u201d allows the positioning to be fun and easy. The electrodes are connected to a simple circuit to measure the GSR, and a 16-bit ADC reads the value. The digitized information is read in by the Raspberry Pi and uploaded to a hosted Mongo database.\nChallenges I ran into\nAmong the challenges we ran into were reading analog signals with the raspberry pi. Originally, we used an Arduino Uno to read the voltages and send them to the Pi via USB. Then BookHolders came along and provided us with an analog to digital converter with an I2C interface; which was fortunate because reading data via USB was unstable and prone to crashing our program. We were also provided with a OLED I2C screen, which allowed us to consider giving extra information about the data.\nAccomplishments that I'm proud of\nThings that we are particularly proud of are our sensor and its surprising functionality and our ability to display the information on both the small screen on the pi, the android app as well as a live stream and static graph in the browser, allowing the information to be accessed from nearly anywhere.\nWhat I learned\nWhat we learned was that the I2C interface is very easy to use and provides a great deal of efficiency in terms of connections and use of space.\nWhat's next for Stressbuster\nWe hope to continue developing Stressbuster to more useful and more accurate. In addition to the GSR sensor, we want to include a heart rate sensor in the wrist-band, increasing the accuracy of the sensor. Furthermore, we want to include an \u201cemergency contact\u201d feature, so that appropriate parties can be notified of higher stress levels.\n",
        "hackathon_id": "hophacksfall2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtml5css3javascriptnode.jsparsejquerybootstrap\n",
        "hackathon_id": "hophacksfall2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtml5cssjavascriptmysqlphpadobe-illustratorpowerpoint\n",
        "hackathon_id": "hophacksfall2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nInternet of me:\nOnline shopping is now turning to be the preferred method of shopping. At the checkout, users are presented with his different type of credit and debit cards. But credit and debit card companies roll out offers on so many products, even for a particular amount of purchase. Now, you are at the checkout page, how do you know which offer your discover(for ex) credit card has on the product you are buying? \nWhat it does\nWelcome to MyMoney. Its analysis for you is comprehensive. Second feature of our project is to do best credit card forecast for the user to achieve his short and long term post. Assume the scenario- you want to buy an iphone in next 3 months say november 2015 (short term goal). We help you achieve this smoothly by telling you which credit/debit card will help you get this iphone with maximum savings and easeness. We use the foll to forecast the best credit card: 1) Credit card offers rolled out by the companies of which you hold the cards, during the period of november-december for the last 3 years on iphone(since iphone launch in september is a regular event). Next criteria is to use your spending habits, assign a threshold, analyze which credit card will be best with your spending habits so that it will help you get that iphone with ease. Third criteria -Sentiment analysis of credit analyst articles to score the credit cards performance that will help you achieve short and long term goals. Third feature of the project is contribution of an API in Java to aggregate credit card offers from different companies in accordance with your short and long term goals. \nHow I built it\nJava, JSoup, JavaScript, HTML, SQL.\nChallenges I ran into\nIdea creation, feature integration.\nAccomplishments that I'm proud of\nComing up with the idea, attempting to solve the problem.\nWhat I learned\nA lot! technically - JSoup, Javascript(brushed my rusted hand on JavaScript), nontechnically - being organized, being agile. \nWhat's next for MyMoney\nDeveloping a chrome extension, integrating all functionalities. \n",
        "hackathon_id": "hophacksfall2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\namazon-ec2nvidiasteam\n",
        "hackathon_id": "hophacksfall2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nFamilies and friends don't have a secure and convenient way to share sensitive information. For example my mom often asks me to buy things on Amazon for her using her credit card. However there is a risk in leaking credit information because you keep the snapshot of the credit card in your gallery. This gives birth to Wipe Out.\nWhat it does\nWipe out the sensitive part of a photo, encrypt it, and share it with only authorized people. People with access can unlock the wiped-out part using fingerprint and other authentication method. Redistribution of the photo won't work because the access is bundled with device.\nHow I built it\nWe use iOS 9 and Xcode 7 GM that were just released by Apple three days ago. We designed the algorithms and workflow from scratch. It utilizes Apple's latest cloud CloudKit to do the heavy lifting of photo transferring and push notification.\nChallenges I ran into\nThe algorithms are tricky. The UIs are complex. The photo is huge. The memory is limited. The network is volatile. For a beautiful work like this to work, we have to put all the delicate pieces together carefully with skills. \nAccomplishments that I'm proud of\nA streamlined app workflow that can be easily learnt by my mom. Leveraging the power of mobile devices, we have achieved what we've long thought impossible.\nWhat I learned\nHack spirit! Engineer heart!\nWhat's next for Wipe Out\nScaling up. Bug fixes. UI polishing.\n",
        "hackathon_id": "hophacksfall2015",
        "winner": false
    },
    {
        "description": "\nRubik's Cube + Leap Motion\nRubik's Cube Manipulation using Leap Motion\nDemo video: https://youtu.be/oZ0JDx1pOlY\nMove the cube with your hand using real-time streaming gesture recognition.\nTechnology Stuff\nThis project requires mongodb for data collection, python/tornado for the\nweb server, and sklearn, numpy etc for data processing\nI collected a training dataset of gestures using recorder/index.html  I served\nthis page with $python -m SimpleHTTPServer and collected about 150 labeled\nsamples.\nclassify.py runs the dataset through an SVM which correctly predicts 70% of\ngestures.\nserver is configured to serve pages on localhost:8888\nOpen Source Libraries used\nhttps://github.com/diervo/html5rubik\nhttps://github.com/leapmotion/leapjs-playback\nLeap Motion API\nsklearn\nTornado\nmongodb\n",
        "hackathon_id": "hophacksfall2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonmyo\n",
        "hackathon_id": "hophacksfall2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nMy inspiration was my inability to do Physics 2 homework in 3D, limited by paper and pencil. From here I realized, there was so much that could be done with 3D drawing, and using LeapMotion would make the experience intuitive.\nWhat it does\nsk3tcheD allows you to draw in 3D and once done, print your illustration with a 3D printer or save an image of your work.\nHow I built it\nI used Unity (C#) and the Leap Motion Package to realize the dream of 3D drawing with your hands.\nChallenges I ran into\nThe main challenge I ran into was trying to incorporate Oculus Rift with this. However, after hours and hours after failing, I decided it would be more prudent to spend time working on the code. I was also unable to change the color of the cone.\nWhat's next for sk3tcheD\nThe next step would be to incorporate Oculus Rift.\n",
        "hackathon_id": "hophacksfall2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nMy inspiration comes from being in a long-standing relationship and being both the girlfriend ready to pull her hair out when her boyfriend forgets to do something important and from feeling clueless in planning dates and special days for bae.\nWhat it does\nThe app has a very simple user interface that will take you and your significant other's preferences for food and activities, and using the Yelp API find things that will interest you in that area. The Yelp API is also utilized in displaying local areas to get gifts. The app includes a tab for special occasions so you will never forget an anniversary or birthday again. A promises tab allows you to write down any commitment you've made to prevent any fights about broken promises. Finally, a notes tab allows you to jot anything else down about your significant other you feel is important, like their clothing size, the name of their friends and family, whatever you can imagine.\nHow I built it\nThe tab was built using mit-app-installer, which surprisingly gave a variety of features and so did not inhibit the vision of the application in any way. We found using this program advantageous as it allowed us to make the user interface as clean as possible. The graphics for the application were designed using Adobe Photoshop.\nChallenges I ran into\nWe ran into challenges using the drag and drop system of mit-app-installer as some customization and formatting did not come intuitively. We also ran into customizing the Yelp searches to make them appear clean and continuous with the format of our application.\nAccomplishments that I'm proud of\nWe are proud of the clean user interface and ease at which individuals are able to use this application. We are also proud of the idea of the application itself, we feel it fills a useful niche in today's culture and creatively goes about solving common issues.\nWhat I learned\nWe learned to bring a Mac to hackathons from now on because there is no guarantee we will find somebody who specializes in iOS to join our team. We also learned you don't need to be a coding expert to contribute greatly to a project of this nature.\nWhat's next for Lumiere\nWe would like to enable the application with more features and also move it to an iOS market.\n",
        "hackathon_id": "hophacksfall2015",
        "winner": false
    },
    {
        "description": "\nThis web app allows two users to play a variant of the game Go.\nWe used d3.js in order to generate the Voronoi diagrams and used a read-only API for OpenStreetMap called Overpass in order to find the intersections of streets. \nOnce we found the coordinate of intersections, we plotted them onto Google Maps using the Maps JavaScript API.\nThe goal of the game is to capture as much territory as possible - you do this by selecting an intersection from\nthe possibilities, and the cell around it represents the amount of area you gain. The cell isn't completely arbitrary --\nit's a Voronoi diagram, a visualization that partitions a plane into regions closer to a specific point than any other.\nSince the points we picked for this app are street intersections, we're playing Go on the city streets! \nAs of the demonstration, we've uploaded four maps on which to play -- one in Baltimore centered at JHU, one in New York, one in Hong Kong, and one in Rome.\nYou may see the game in action here.\n",
        "hackathon_id": "hophacksfall2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nadafruit\n",
        "hackathon_id": "f2015-unhackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroidios\n",
        "hackathon_id": "f2015-unhackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptjquerycss\n",
        "hackathon_id": "f2015-unhackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\njquerychrome\n",
        "hackathon_id": "f2015-unhackathon",
        "winner": false
    },
    {
        "description": "\nThis is an application meant for productivity. It can be used to monitor social media activity by use of a timer. The user can set how long they want to use an application, for example facebook. When that time is up, the application will send an alert text message by use of Twilio. The goal is to increase productivity and minimize distraction from social media.\nThis application was created within 8 hours at The Unhackathon hosted by Stony Brook University on September 5, 2015.\n",
        "hackathon_id": "f2015-unhackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavajsonpythoncshellarduino\n",
        "hackathon_id": "f2015-unhackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\nswift\n",
        "hackathon_id": "f2015-unhackathon",
        "winner": false
    },
    {
        "description": "\nInspiration\nI like playing online video games, and have recently been amazed at the vastness of the virtual marketplace for games such as Counter Strike: Global Offensive. As an industry that is dominated primarily by young people and those seeking entertainment, I thought that an analytical approach may potentially reveal trends that others haven't discovered yet on the gambling front. \nWhat it does\nTurns numbers into $$$ by abusing the fact that other eSports betters are poor gamblers and don't use analytical approaches when risking their money. I found that favorites and underdogs' win rates are disproportionate to the betting odds, allowing for a near guaranteed profit across a large betting portfolio (asymptotically approaching 24%)\nHow I built it\nPython web crawler pulled data from www.csgolounge.com\nImported to excel and SPSS for statistical processing and graphs. \nChallenges I ran into\nHaven't used excel in a while, so I had to relearn my way around the graphing functions. \nAccomplishments that I'm proud of\nReal, tangible monetary impact as a result of novel analysis in a relatively unexplored field. \nWhat I learned\nAlmost any industry can be disrupted if the proper questions are asked and the correct data is analyzed. Even video game gambling.\nWhat's next for Counter Strike: Gambling Offensive\nProgram a steam account bot that will automatically place bets according to the betting schema (variable, based on input parameters) \n",
        "hackathon_id": "f2015-unhackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\ntextblobpythonnatural-language-processing\n",
        "hackathon_id": "f2015-unhackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\npython\n",
        "hackathon_id": "f2015-unhackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtmlcssjavascriptfirebase\n",
        "hackathon_id": "f2015-unhackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtmlcssjavascriptjquery\n",
        "hackathon_id": "f2015-unhackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtmlchromephotoshop\n",
        "hackathon_id": "f2015-unhackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\nunity\n",
        "hackathon_id": "f2015-unhackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtml5javascriptcss\n",
        "hackathon_id": "f2015-unhackathon",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe word Bubble\nWhat it does\nMultiplayer action-packed game with winner and touch screen action with graphics. You have to pop your own bubbles and dont let your opponent pops theirs, oOoOoOoh. \nHow I built it\nnot via springboard, Java in eclipse\nChallenges I ran into\nmaking the java files go away when you click them\nAccomplishments that I'm proud of\nmaking the game multiplayer \nWhat I learned\nI like building programs from scratch more\nim eligible for all the awards and \nWhat's next for Bubblr\nthat information is highly classified.\n",
        "hackathon_id": "f2015-unhackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtmlcpythoncss3\n",
        "hackathon_id": "f2015-unhackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\njqueryhtmlcss\n",
        "hackathon_id": "f2015-unhackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtmlcssjavascripttwitter\n",
        "hackathon_id": "f2015-unhackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\nchromejavascript\n",
        "hackathon_id": "f2015-unhackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\narduino\n",
        "hackathon_id": "f2015-unhackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\nadafruit-flora\n",
        "hackathon_id": "f2015-unhackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\ngocsshtmljavascriptgraphic-design\n",
        "hackathon_id": "f2015-unhackathon",
        "winner": false
    },
    {
        "description": "\nInspiration\nNot having data when you need it sucks. Data caps shouldn't hold you back from what you need in your day to day life. We decided to make it so even without your data, your phone can guide you around, ket you know if it's gonna rain, and get you home for the night.\nWhat it does\nGet directions, today's and tomorrow's weather, and call an uber home all with a click of button.\nHow I built it\nIn Android Studio, a lot of text parsing, and clever compression. \nChallenges I ran into\nCompression of the data we got back from the APIs so we could send them back as reasonable text messages. \nAndroid xml is frustrating. \nRandom laptop shutdowns\nAccomplishments that I'm proud of\nGetting it done.\nWhat I learned\nAndroid is not fun to code UI's for. \nHow to make an Android app.\nWhat's next for Roam\nThe Play Store?\n",
        "hackathon_id": "hackny-f2015",
        "winner": true
    },
    {
        "description": "\nInformant -- How it works & What it does\n\nInformant is the most powerful way to enhance your YouTube viewing experience.\nSee someone you don't recognize? Press on the face of the celebrity that you don't quite recognize to identify him for her with a short blurb from Wikipedia all right within your browser. \nWe additionally monitor the actual content of the YouTube video to provide a more in-depth look at how participants within the video interact with each other. By providing sentimental analysis and utilizing NLP technologies we summarize who and what actions are being taken place live on the screen and at the end of the video provide a conclusive view on the relationship between participants within a conversation through color representation.\nWe were able to come up with who says what by utilizing sound processing techniques -- distinguishing between frequencies for male and female differentiation and analyzing who is speaking by what they say.\nTech Stack\nChrome Extension (JS, HTML, CSS)\nNode.JS & ExpressJS Server\nWit.AI (NLP)\nProject Oxford (Microsoft Computer Vision)\nIndico.io (Sentiment analysis)\nDownload YT files as MP4.\nConvert MP4 to MP3.\nSlice MP3 files into 10 second chunks.\nSignal Processing\nFFFMPEG \nLAME MP3 Encoder - Libmp3lame\nSoX (Sound Exchange) - Audio splitter\nTechnical Difficulties and Challenges\nThis challenge was full of technical challenges in regards to barriers set by the Chrome Extension to the local file system and audio manipulation to identify speakers. In order to use the Wit.AI API we had to somehow get the AUDIO clip of a YouTube video, then break it down into chunks of less than 10 seconds, then identify who is speaking during each 10 second clip duration.\nWe ended up using a sort of pipeline to process the audio input that went sort of like this:\n\nDownload video as MP4 from YouTube (Download)\nUse FFMPEG to convert from MP4 to MP3 (Convert)\nUse MPSPLT and SoX to split up audio into appropriate sized chunks of < 10 seconds (Slice)\nSend each chunk up into Wit.AI to be processed into a Queue Data Structure (Analyze and Identify Speaker)\nLong-poll from the Chrome extension to the Node server to get new data from the Queue. (Get Data)\nDisplay results\n\n",
        "hackathon_id": "hackny-f2015",
        "winner": true
    },
    {
        "description": "\nWhat it Changes\nIt has been proven through scientific studies that learning a language is most effective when the student sees translated photographs of items rather than strict vocabulary translations. We set out to make photographic language learning available to anyone with a web-enabled device. For absolutely free, Project Horus brings photo translation ability to the smart phone, laptop, tablet, and pc. On the go and see something you'd like to be able to describe in a different language? Simply go to project-horus.com and take a new photo to be on your way to learning a new language.  \nHow it works\nUsing a web app interface, Project Horus allows the user to upload a photo or take a new photo. The user can then select his or her desired region for translation in the photograph by drawing a circle around the item(s) he or she would like translated. The Clarifai API is then called to generate the top three tags regarding the image. These three most likely tags are then sent to the Yandex.translate API\nTech Specs\nProject Horus is a web app written in plain Javascript and HTML 5. \nChallenges we ran into\nImage cropping, choosing a computer vision and translate API, \nWhat's next for Project-Horus\nWe plan to add more translation languages through Google's Translate API and add a new computer vision algorithm to get more accurate vocabulary tags. \n",
        "hackathon_id": "hackny-f2015",
        "winner": true
    },
    {
        "description": "\nLights, Camera, Location! is a webpage that can help users pinpoint where their favourite Hollywood movies were filmed. After inputting any movie title into the search engine, an interactive map is created with markers at each filming location across the globe! With each marker comes an InfoWindow which provides more information on that location. You can zoom in to any country, region, or city of your choice. Curious about what is near you at that moment? Just click \"Filming Locations Near Me\" and you will be able to take a closer look at what is in your area. \n",
        "hackathon_id": "hackny-f2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe live in a world powered by technology and yet we stilll use paper and flat symbols to display 3D ideas. We created Vizu in order to jump across this gap and augment a 3D model where-ever they need one. Teachers needed a way to describe complex ideas but can typically only do so through flat images and text. There are many other applications for Vuzu however improving education was one of our main focuses. \nWhat it does\nVizu uses the camera on laptop or phone in order to recognize a symbol that corresponds with a 3D model. When this symbol recognized, Vizu will augment the 3D model into the scene in order to make it look like it is there in real life.\nHow I built it\nWe used Vuforio and Amazon Web Services in order to recognize images and store the data associated with them. We also used Unity as the basis for the application. On top of this we made a website where users can submit new symbols and models in order to be able to recognize them on the application. \nChallenges I ran into\nBecause we used so many different services from various companies it was hard to interface from one to the other. \nAccomplishments that I'm proud of\nWhat I learned\nWhat's next for Vizu\nMajor updates will come in the near future. We hope to add additional functionality to provide users with the ability to identify multiple symbols on a PDF document. \n",
        "hackathon_id": "hackny-f2015",
        "winner": true
    },
    {
        "description": "\nInspiration\ntired of visiting the facebook/twitter/slack/website for information at hackathons.\nWhat it does\nmakes life easy for both organizers and participants at hackathons.\nit's a central hub where organizers can post information about their upcoming hackathon and participants can access this information without having to create any accounts.\nparticipants can also receive desktop push notifications when an organizer posts a new announcement - for example, when food has arrived.\nHow we built it\nbackend is a Spring RESTful API hosted on AWS EC2.\nfrontend is html/js - using material design (mdl)\nChallenges we ran into\nworking with Spring and building a RESTful API\nworking with mdl\nAccomplishments that we're proud of\nthe RESTful API\nthe website design\nWhat we learned\nbuilding a Spring RESTful API\nmdl\nWhat's next for hackHub\nseeing this as a complete platform and being used by all hackathons around the globe.\nalso, getting acquired by MLH\n",
        "hackathon_id": "hackny-f2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nI love coworking spaces. I don't mean the food and drinks offered or the table tennis or football tables. What I like most about these places is the productive creative working athmosphere and the possibility for people to meet and inspire each other. The problem of coworking spaces is that they are static and people who travel a lot cannot have the same experience at another place. Also, if you only have 2 hours in between work and meetings you don\u2019t want to go all the way to a coworking office\nWhat it does\nCoWork24 is a mobile app that allows you to create coworking spaces whereever you are on the go. Whether you are sitting in a cafe, a library or a park you can let people join you for having a productive working atmosphere. It allows people who do not want to work alone on their individual projects to find a creative environment to work in on demand. With CoWork24 people never have to work alone anymore. The data collected about people's favourite places and what time they usually go there can be used for businesses to target them and offer individualized special offers tailored to their needs. We are planning on using a combination of NYC Open Data, MongoDB and Clarifai to work on our recommender system for the relevance of the special offers.\nHow I built it\nHa came up with the idea. He also worked as the product manager and helped in designing the product vision together with Keven who is our UI Designer. Kevin and Omar created the interfaces for the screens. Omar also helped Vikram and Yuta with the program logic and the coding work. Vikram led the dev team and put everything together in the end.\nChallenges I ran into\nWe hard difficulties getting the Google Maps API run with our use case and also had some other minor complications but we were never stuck without knowing where to go.\nAccomplishments that I'm proud of\nWe got to know each other shorly before the hack started and pulled through together creating this amazing app that actually has real business potential. \nWhat I learned\nI learned how to focus on each person's strengths and skills and how to best work together as a team to accomplish a common goal\nWhat's next for CoWork24\nVikram is going to take this idea and our product as the start for his final project in his Master studies. He is going to improve it, add a backend and finally publish it. Ha is going to help as an advisor for Vikram to bounce ideas off. Possibly we are going to all have a giant party together once he is done and passes his Masters with flying colors. \n",
        "hackathon_id": "hackny-f2015",
        "winner": true
    },
    {
        "description": "\nInspiration : When our original idea was a bust, we turned to the only other option: the \"broken\" Keurig machine.\nWhat it does : The hack allows the user to brew a cup of coffee with just a simple gesture. It also sends a notification to the users computer that coffee is on the way!\nHow I built it : Most of our building was actually destroying. We had to tear apart the keurig and play with it until we knew how it worked. Then it was just a matter of coding some scripts and doing some electrical wiring (which we'd never done before!\nChallenges I ran into : We had never seen the inside of Keurig before this Hack, and had never used any of the hardware either. We'd also never learned anything about circuitry.\nAccomplishments that I'm proud of : This is our first hack! And we're proud that we were able to finish and submit anything. We'll just be happy if it works!\nWhat I learned : We learned how to deconstruct and kind of reconstruct a Keurig machine. We also learned how to use Arduino and Spark. We also learned how to use the Myo gesture recognition band. We'd also never done any electrical engineering!\nWhat's next for The Keurig Machine : Support for all buttons is the next step. It's now just a matter of testing and connecting the remaining push buttons. After that, just to ride of into the sunset.\n",
        "hackathon_id": "hackny-f2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nnyc-open-datajavascripthtml5cssbootstrapajaxgoogle-mapschart.js\n",
        "hackathon_id": "hackny-f2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\npythonopenstreetmapnyc-open-datamongodbflask\n",
        "hackathon_id": "hackny-f2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascripthtmlpythoncss\n",
        "hackathon_id": "hackny-f2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavacjavascriptandroidpebbletwilio\n",
        "hackathon_id": "hackny-f2015",
        "winner": true
    },
    {
        "description": "\nbruhzzfeed\nThis Crazy Project Will Change The Way You Think About Hackathons!\n2 Hackers Who Knew They Could Change The World\n38 Things You Didn't Even Know Could Go Wrong With Flask\n17 Surprising Interpretations Of The Pep8 Syntax Guide \n22 Embarrassing CSS Fixes We Don't Want You To See\n8 Reasons Someone Else Should Figure Out How To Deploy This\n===\nbruhhh.co\n",
        "hackathon_id": "hackny-f2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nPictionary!\nWhat it does\nDraw Anything is a game for a group of friends to play at any time. Choose from multiple different color paint brushes and sizes and spew your creativity on the canvas. Players spend 2 minutes guessing while one person draws an image. The artist is prompted with a random noun to draw out.\nHow I built it\nWe used node.js express and socket.io to set up a multiplayer server with websockets. The backend and frontend were both created in javascript.\nChallenges I ran into\nSince frontend and backend was developed using javascript, we made many mistakes putting client-side stuff on the server-side and vice versa. We are still unable to display a list of players and choose one artist to prevent all other players from sabotaging his or her work.\nAccomplishments that I'm proud of\nThe chatbox and the canvas are synchronized to the server.\nWhat I learned\njavascript, node.js, web sockets..\nWhat's next for Draw Anything\nMake it fully functional and then expanding on it with a computer player.\n",
        "hackathon_id": "hackny-f2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nA combination of pivoting our idea at midnight, available data and hardware, and an AI training model.\nWhat it does\nIt analyzes water at a microscopic level using inexpensive tools compatible with any smartphone to allow city residents to analyze their water for contaminants.\nHow we built it\nWe hooked clarifai into the API that reads the images that trains the model that tells the user to tell the city about the level of the clearness of the water.\nChallenges I ran into\nWe couldn't figure out how to get the node.js-only API working with iOS for a while.\nAccomplishments that I'm proud of\nFiguring out a proper method to train the model to recognize clean water versus dirt water\nWhat I learned\nPivot early and pivot often.\nWhat's next for WaterNY\nThe future of water maintenance for urban areas globally.\n",
        "hackathon_id": "hackny-f2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nandroidprestosmart-watch\n",
        "hackathon_id": "hackny-f2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nswift\n",
        "hackathon_id": "hackny-f2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nmongodbubernyc-open-datar-studioandroid-studiojavagoogle-maps\n",
        "hackathon_id": "hackny-f2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nnode.jshtml5\n",
        "hackathon_id": "hackny-f2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nc#bashlinuxnmaptcpunityoculusblender\n",
        "hackathon_id": "hackny-f2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroidandroid-studiomongodbclarifai\n",
        "hackathon_id": "hackny-f2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nTired of using image recognition APIs to recognize images? Get ready to break out of the mold, with the awkwardly titled Speakifai. \nWhat it does\nSpeakifai uses the Clarifai image recognition API to recognize voices. \nHow I built it\nI built a database of audio recordings of myself, converted them to spectrographs, normalized them, and trained Clarifai to associate them with words. \nChallenges I ran into\nJumped around between several python UI toolkits before finally settling on a web-based approach. Data normalization was difficult. Had trouble with the fitting. \nAccomplishments that I'm proud of\nIt performs admirably on some of my trials, correctly identifying speech under varying conditions with a reasonable accuracy rate. With some work, it could be greatly improved.\nWhat I learned\nMore data would have been very helpful. I would have loved to have had a more graphical presentation. \nWhat's next for Speakifai\nMore data and a better UI. \n",
        "hackathon_id": "hackny-f2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe believe that image-based word associations is a powerful language learning tool. Nobody ever learns a new language using just a plain dictionary. We hope to make the process of learning a new language much easier for non-native speakers (and fun) through this web app.\nWhat it does\nUsing Clarify's powerful image recognition system, the web app retrieves words associated with the image url inputed by the user. It then uses Yandex translation API to translate those words into a language of the user's choice. Current supported languages are: Spanish, Russian, Vietnamese, Dutch and Hebrew.\nHow I built it\nWe use the MEAN stack to build this web app.\nChallenges I ran into\nThe Yandex API calls only accept one word at a time. We needed to stringify our results to avoid expensive http calls for every word associated with an image url\nAccomplishments that I'm proud of\nWe made a complete project utilizing 2 APIs. \nWhat I learned\nAngular.js is a pain.\nWhat's next for imagely\nWe plan to finish the quiz mode for our web app since memory retention is important in language learning. We also want to implement authentication system to ensure personalized user experience as well as possible social network integration aspect.\n",
        "hackathon_id": "hackny-f2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nadafruitarduinobluefruittftarts-and-craftssewingunhackadafruit-florawiresccircuitrybluetooth\n",
        "hackathon_id": "hackny-f2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nToday when researchers want to ask questions about potential cancer causes and risk factors they have to work within self-generated data sets, surveys, and observational studies. To generate these studies the researchers must pursue the respondents themselves, and often can only ask a very limited number of questions.\nWhat it does\nWe are leveraging the power of social media to drive people to share their historical data and demographics. In exchange we'll be giving them bragging rights, risk factor and screening alerts.\nHow I built it\nThe platform was built under Facebook app using Django as the back end infrastructure. \nWhat's next for My Risk Factor\nImplementing a full scale campaign to make the dream of freely available research data a reality.\n",
        "hackathon_id": "hack-cancer-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nFrom Globalisation to Localisation\nBy 2050 we will be 9bn people on the planet, of which 70% of people will live in cities or urban areas. In order to feed all of these people, we need about 100% more food then than we do today. Current ways of food production and transportation are resource intensive and inefficient. We are building the tools for more efficient ways of local food production.\nWhat it does\n\nuser feeds location using what3words into the app.\napplication searches datasets and provides location based environmental data such as solar exposure, temperature, rainfall and air quality.\nit provides a score to tell the user whether the roof in question could be used to grow food\nif so, it tells what are the best crops to grow, and expected crop yields etc...\n\nHow we built it\n\nproject managed in Trello\ntopographical map from OpenLayers\nlive meteorological data sourced from the OpenWeather API\nopenweathermap.org/api\nfunction suggests best plant for area based on optimum conditions data specific to plant taxonomy (to be improved)\ncoordinates synced with what3words api\n\nHow it works\nAs a user you feed into the app where you are, using what3words.\nThe application searches datasets which establish whether the location has the right conditions in terms of solar exposure, temperature, rainfall, and low levels of traffic pollution.\nBased on the results it tells the user whether the roof in question could be used to grow food, what are the best crops, and expected crop yields.\nChallenges we ran into\n\nusing ESRI caused the computer to stall temporarily so had to use OpenLayers due to time restrictions\nediting the Devpost page was restricted to 1 user making editing a bottleneck\n\nAccomplishments that we're proud of\nWe worked well as a team. Communication remained very open and considerate throughout the process.\nWhat we learned\nMany of us were working on our first hackathon. Combining multi-disciplinary approaches brought a natural rhythm to the process. Incorporating external data sources, api's, environmental and GIS data was a fascinating project for the team.\nWhat's next for HomeGrown\nIn the future we will create a matchmaking service between suitable roof owners and interested growers.\nIt would be used at a community level to bring together people who maybe want to learn new skills, have free time to be growers (unemployed, retired),\nWe will integrate a building dataset that automatically identifies suitable roofs, and their owners. This will enable the owners to be informed of the opportunity they are sitting on, and to put them in touch with the growing movement of urban growers who can help them exploit the potential.\n",
        "hackathon_id": "geo-hack-day-london",
        "winner": false
    },
    {
        "description": "\nInspiration\nPeople sometimes have short period of free time. They can actually use the time to make some spare money for contribute themselves to the society. It will be nice if there will be a platform to link opportunities and users easier.\nWhat it does\nSparkiwork is platform that allows users to find short term opportunities easier and also help them to be able to explore their potential.\nHow we built it\nApp/Web platform via CCS, PHP, JQUERY, JASON, HTML5, JAVA SCRIPT.\nWe use pusher for notification and 3 words to identify users' location.\nChallenges we ran into\nWe haven't got strong technical support.\nAccomplishments that we're proud of\nWe like what our service can actually help people to make the most of their time and also allows them to explore more about their capacity and potential.\nWhat's next for sparkiwork\nFinding technical resources (data transformation, developers) to support this project. \n",
        "hackathon_id": "geo-hack-day-london",
        "winner": false
    },
    {
        "description": "\nFlightComposer is an experimental music project, exploiting flight data.\nWhen one of the connected player clicks on the map, a ripple springs from the centre and radiates. When a plane is in the path of the wave, it produces a note, depending on its position.\nA lyric, based on the location of the original click is also generated; to create an abstract song.\nPlayers can adjust key, chords, and instruments played with each click and create their own collaborative tune.\n",
        "hackathon_id": "geo-hack-day-london",
        "winner": false
    },
    {
        "description": "\nBuilt With\njava\n",
        "hackathon_id": "geo-hack-day-london",
        "winner": false
    },
    {
        "description": "\nInspiration\nIt would make for a more interesting flight if you were able to be situationally aware en route. You might like to know when you are passing near a famous landmark, or over a border between countries, changing time zones, etc.. If an airline could make a local wi-fi network available to passengers on a flight, there could be a sense of a shared experience  between them as the flight progressed if users knew where they were and what they were seeing out of a window.\nWhat it does\nBy using an ArcGis map, with an Inmarsat flight data set, and using Pusher for updating position (and possibly chat with other passengers) the experience would be much more enjoyable and engaging.\nHow I built it\nWe took flight path data from Inmarsat (but the airline could make this available as read-only data on the flight) and consumed it via the ArcGIS map and displayed a plane making progress towards its objective using Pusher to keep it up to date along with messages drawing attention to places of interest and facts.\nChallenges I ran into\nNot knowing all of the features of the Esri map tool and how to best use them to display the flight trajectory in a realistic way.\nAccomplishments that I'm proud of\nWe made it work (sort of) anyway.\nWhat I learned\nHow to use the map api more effectively.\nWhat's next for Plane Truth?\nWe think there is a market for this and that it will add value for both the airline and the passengers. The passenger could even use it to alert flight stewards that they want a refreshing beverage or an exciting new fragrance from duty free.\n",
        "hackathon_id": "geo-hack-day-london",
        "winner": false
    },
    {
        "description": "\nSometimes disaster relief doesn't need the national guard, it just needs the community.\nIn a time of confusion, following a natural disastor, such as a tornado, often a relief centre will have resources which are opaque to the co-ordinating team. \nThis suite comprises of a client application which runs on a handheld device, a server which monitors requests for help, and utilises cutting edge solutions from Pusher.com and what3words.com to enable resource to be used efficiently, quickly, and with the minimum of human action.\nWe built a framework in nodejs and the client app in android studio\nThe timescale meant that some elements of hooking up the applications were not completed, we hope that the solution is apparent where these connections are made.\nCreating a intuitive system to co-ordinate relief in a short amount of time.\nWhat I learned\nPackage it into a freely available suite to be deployed by local authorities as a step 1 of disaster management.\n",
        "hackathon_id": "geo-hack-day-london",
        "winner": false
    },
    {
        "description": "\nInspiration\nOur inspiration was the 'old' problem of moving from A to B in the most efficinet way possible. \nWhat it does\nIt uses real time Uber-driver information to calculate the traffic density,  and the time it takes to drive a given distance.\nHow I built it\nChallenges I ran into\nNone\nAccomplishments that I'm proud of\nPerfect teamwork\nWhat I learned\nTo be friendly to my teammates\nWhat's next for Jambuster\nEternal glory\n",
        "hackathon_id": "geo-hack-day-london",
        "winner": false
    },
    {
        "description": "\nInspiration\nMy friend's brother has a great idea for cyclists: a smart-compass that allows you to home in on your destination, exploring the city and turning every journey into a treasure hunt.\nWhat it does\nImagine you're a cyclist. You want a heads-up display that will get you to your destination, without getting in your way, or forcing you down a fixed path. You want to ride free, but you still have somewhere to be. So you enter your destination into Beeline, and get a smart compass that will point the way. You always know how far you have to go, and where you're headed. Beyond that, you're free to explore your city.\nHow I built it\nElm, a rising star in the React-like webapps. It's statically-typed, functional, fast and fun. Coupled with the Esri Geocoding API and the HTML5 location & orientation APIs, we can build a smart compass in less than a day.\nChallenges I ran into\nDegrees are not Radians. Sine is not Cosine. This is probably for the best in the long run, but getting the distance and bearing calculations was probably harder than the coding.\nAccomplishments that I'm proud of\nThis is a fast, real app that could be used today. I'm hugely interested in doing real-world things with Elm, and this feels like a big win Rewriting and refactoring was incredibly easy.\nPlus...my friend's brother - the source of the idea - I hope will be thrilled to see the first signs of his dream coming to life...\nWhat I learned\nInterop between Elm and the device APIs is much easier than I expected. But the APIs are pretty unreliable, giving results that are inconsistent between browsers, and inconsistent with the API. It's nice to have the kind of compile-time checks for this that JavaScript can't provide.\nWhat's next for Beeline\nHopefully, a hardware Kickstarter, turning this software proof of concept into a real magic widget for the cyclists of the world.\n",
        "hackathon_id": "geo-hack-day-london",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptangular.js\n",
        "hackathon_id": "geo-hack-day-london",
        "winner": false
    },
    {
        "description": "\nInspiration\nA mobile app to bring aid packages to those that need it anonymously\n",
        "hackathon_id": "geo-hack-day-london",
        "winner": false
    },
    {
        "description": "\nAnyRun \u662f\u5fae\u4efb\u52d9\u5c0e\u5411\u7684\u5a92\u5408\u5e73\u53f0\uff0cuser\u53ef\u4ee5\u900f\u904e\u6211\u5011\u7684\u5e73\u53f0\u4f86\u53bb\u5c0b\u6c42\u5354\u52a9\uff0c\u4e5f\u53ef\u4ee5\u8aaa\u662f Time Bank \u7684\u6982\u5ff5\uff0c\u900f\u904e\u8cc7\u6e90\u5171\u4eab\u5206\u914d\uff0c\u9054\u5230\u5171\u4eab\u7d93\u6fdf\uff01\n\u61f6\u4eba\u5c08\u5c6c\uff0c\u5feb\u901f\u958b\u8a2d\u4efb\u52d9:\nANYRUN \u662f\u4e00\u500b\u5728\u5730\u4efb\u52d9\u7684\u5a92\u5408\u5e73\u53f0\uff0c\u63d0\u4f9b\u5c0f\u984d\u91d1\u984d\uff0c\u70ba\u4f60\u7684\u751f\u6d3b\u5927\u5c0f\u4e8b\u5c0b\u627e\u5e6b\u624b\uff0c\u900f\u904e\u8ddd\u96e2\u53ca\u95dc\u806f\u7a0b\u5ea6\u7684\u6f14\u7b97\uff0c\u6211\u5011\u5c07\u63a8\u9001\u901a\u77e5\uff0c\u66ff\u60a8\u5feb\u901f\u627e\u5230\u4efb\u52d9\u5925\u4f34\uff01\n\u7834\u89e3\u5728\u5730\u4efb\u52d9\uff0c\u8f15\u9b06\u8cfa\u9322:\n\u5728 ANYRUN \u4e0a\u5c0b\u627e\u81ea\u5df1\u5408\u9069\u7684\u4efb\u52d9\uff0c\u51fa\u767c\uff01\u900f\u904e\u4efb\u52d9\u7684\u7834\u89e3\u8cfa\u53d6\u6536\u76ca\uff0c\u9054\u6210\u5404\u9805\u6210\u5c31\uff0c\u5167\u5efa\u804a\u5929\u6a5f\u5236\uff0c\u7d50\u4ea4\u5728\u5730\u597d\u53cb\n\u63a2\u7d22\u57ce\u5e02\u89d2\u843d\uff0c\u8c50\u5bcc\u4f60\u751f\u6d3b:\n\u85c9\u7531\u7834\u89e3 ANYRUN \u4efb\u52d9\u7d50\u4ea4\u65b0\u670b\u53cb\uff0c\u63d0\u4f9b\u4f60\u4e00\u500b\u6a5f\u6703\u6df1\u5165\u9ad4\u9a57\u4e0d\u4e00\u6a23\u7684\u57ce\u5e02\u751f\u6d3b\uff0c\u62dc\u8a2a\u6c92\u898b\u904e\u7684\u4eba\uff0c\u63a2\u7d22\u6c92\u53bb\u904e\u7684\u5730\u65b9\uff0c\u5b8c\u6210\u6c92\u6709\u505a\u904e\u7684\u4e8b\uff0c\u904e\u4e00\u500b\u524d\u6240\u672a\u6709\u7684\u7cbe\u5f69\u751f\u6d3b\uff01\n\u8209\u4f8b\u4f86\u8aaa\uff1a\n1.\u9ed1\u5ba2\u677e\u98df\u7269\u5403\u81a9\u4e86\uff0c\u6211\u9700\u8981\u4eba\u8dd1\u817f\u8cb7\u96de\u6392\uff0c\u9858\u610f\u63d0\u4f9b\u8dd1\u817f\u8cbb100\u5143\u3002\n2.\u7b49\u7b49\u6d3b\u52d5\u7d50\u675f\u5f8c\uff0c\u5403\u6176\u529f\u5bb4\u8981\u5403\u6dfb\u597d\u904b\uff0c\u9700\u8981\u4eba\u5148\u6392\u968a\uff0c\u6392\u968a\u5f88\u4e45\u9858\u610f\u63d0\u4f9b\u5831\u916c200\u5143\u3002\n",
        "hackathon_id": "2015hackntu",
        "winner": false
    },
    {
        "description": "\nInspiration\n\u9ad8\u9f61\u5316\u793e\u6703\u554f\u984c\u65e5\u8da8\u56b4\u91cd\uff0c\u672a\u4f86\u6703\u6709\u66f4\u591a\u9700\u8981\u88ab\u7167\u9867\u7684\u4eba\u5011\u3002\u6211\u5011\u5e0c\u671b\u80fd\u63d0\u4f9b\u4ed6\u5011\u8207\u5bb6\u4eba\u66f4\u597d\u7684\u7167\u9867\u65b9\u5f0f\u3002\nPopulation problem is more serious day by day, and there will be more people need to be taken care. We hope to offer them and their family a smarter way to be taken and taking care.\nWhat it does\n\u5229\u7528\u4f7f\u7528\u667a\u6167\u624b\u6a5f\u4eba\u53e3\u7684\u5bc6\u5ea6\uff0c\u5c07\u5931\u8e64\u7684\u5bb6\u4eba\u5feb\u901f\u5b9a\u4f4d\uff0c\u63d0\u9ad8\u641c\u5c0b\u7684\u6548\u7387\uff0c\u800c\u4f4e\u8017\u96fb\u91cf\u7684\u8a2d\u5099\u5c07\u53ef\u5ef6\u9577\u641c\u6551\u7684\u6642\u9593\u3002\nUse the high density of the smart phone to locate the missing person fast. And the low power consumption of beacon can extend the rescue time.\nHow I built it\n\u6211\u5011\u7528python\u5efa\u7acb\u4e00\u500b\u8cc7\u6599\u5eab\uff0c\u8490\u96c6\u6bcf\u4e00\u500b beacon ID \u8207\u4f69\u6234\u8005\u8cc7\u6599\u53ca\u5176\u72c0\u614b\uff08\u5931\u8e64\uff0f\u6b63\u5e38\uff09\u3002\n\u958b\u767c\u51fa\u7684Android  APP\u53ef\u4ee5\u8b80\u53d6Beacon\u96fb\u91cf\uff0c\u4e26\u5c07\u4f69\u6234\u8005\u8cc7\u6599\u53ca\u72c0\u614b\u5beb\u5165\u8cc7\u6599\u5eab\u3002\nBeacon\u8a2d\u5099\u6703\u4e0d\u505c\u767c\u51fa\u8a0a\u865f\uff0c\u800c\u7576\u624b\u6a5f\u63a5\u6536\u5230\u7684beacon\u72c0\u614b\u70ba\u5931\u8e64\uff0c\u6703\u5c07\u624b\u6a5fGPS\u4f4d\u7f6e\u3001\u8ddd\u96e2beacon\u8ddd\u96e2\u3001\u6642\u9593\u9001\u56de\u8cc7\u6599\u5eab\u3002\nChallenges I ran into\nAccomplishments that I'm proud of\nWhat I learned\nWhat's next for Woo Bo-Bea (Team18)\n",
        "hackathon_id": "2015hackntu",
        "winner": false
    },
    {
        "description": "\n\u4e00\u76f4\u89ba\u5f97\u8981\u4e0b\u8f09\u5f88\u591aAPP\uff0c\u624d\u80fd\u77e5\u9053\u8def\u6cc1\u3001\u77e5\u9053\u52a0\u6cb9\u7ad9\u5728\u54ea\u3001\u77e5\u9053\u54ea\u88e1\u6709\u505c\u8eca\u5834\u55ce\uff1f\u9996\u6b3e\u7d50\u5408\u52a0\u6cb9\u7ad9\u3001\u505c\u8eca\u5834\u3001\u65bd\u5de5\u3001\u8def\u6cc1\u8cc7\u8a0a\n\n\u53ef\u4ee5\u67e5\u770b\u8eca\u6d41\u91cf\n\u53ef\u4ee5\u7acb\u5373\u77e5\u9053\u8def\u4e0a\u65bd\u5de5\u72c0\u6cc1\n\u7acb\u5373\u77e5\u9053\u8def\u6cc1\n\u67e5\u8a62\u53f0\u5317\u505c\u8eca\u5834\u3001\u6a5f\u8eca\u8eca\u4f4d\n\u53ef\u4ee5\u67e5\u8a62\u9644\u8fd1\u7684\u52a0\u6cb9\u7ad9\n\u67e5\u5230\u4ec0\u9ebc\u99ac\u4e0a\u5730\u5716\u5c0e\u5f15\n\n\n\u53f0\u5317\u7684\u98a8\uff0c\u6df7\u96dc\u8457\u516d\u767e\u591a\u842c\u4eba\u53e3\uff0c\u770b\u4f3c\u5e73\u975c\u7684\u57ce\u5e02\uff0c\u5176\u5be6\u5145\u6eff\u4e86\u672a\u77e5\u7684\u8cc7\u8a0a\uff0c\u73fe\u5728\u4f60\u53ea\u6709\u6253\u958b\u88dd\u7f6e\u7684gps\u529f\u80fd\u5f8c\uff0c\u7acb\u523b\u67e5\u8a62\uff01\n\n\u5982\u679c\u4f60\u559c\u6b61\uff0c\u7559\u8a00\u652f\u6301\u3002\n\u5982\u679c\u89ba\u5f97\u597d\u7528\u8acb\u591a\u7d66 feedback \u5728 google play \u4e0a\u8a55\u8ad6\u7559\u8a00\n\u82e5\u6709\u7576\u6a5f\u6216\u662f bug ,\u8acb\u4f9d\u7167 google play \u7684\u6307\u793a\u4e0a\u50b3 bug \u8cc7\u6599\uff0c\u4ed6\u6703\u901a\u77e5\u6211\u5011\u3002\n\u544a\u77e5\u4e00\u4e0b\uff0c\u6211\u6703\u76e1\u5feb\u627e\u51fa\u539f\u56e0\u4fee\u6b63\u3002\u4f60\u7684\u652f\u6301\uff0c\u662f\u6211\u5011\u958b\u767c app \u7684\u52d5\u529b\u3002\n\n\u4e0b\u8f09\u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=hackntu2015.edu.yzu.drivertaipei\n\n\u958b\u767c\u4eba\u54e1\n\nAndroid Front End Andy Chen\nAndroid Front End Eric Wu\nNode.js BackEnd Erickson Juang\nUI/UX Designer Ren Chen\n\n",
        "hackathon_id": "2015hackntu",
        "winner": false
    },
    {
        "description": "\n\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\n\u5ba3\u50b3\u7528\u8a9e\n\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\u2248\n\u6709\u6c92\u6709\u6bd4\u7dda\u4e0a\u904a\u6232\u300c\u66f4\u6709\u8da3\u537b\u7c21\u55ae\u7684\u4e8b\u300d\uff0c\u53ef\u4ee5\u8b93\u5168\u5bb6\u4eba\u6709\u500b\u597d\u73a9\uff0c\u4e0d\u5b85\uff0c\u537b\u4e5f\u4e0d\u5fc5\u8017\u8cbb\u9ad8\u6602\uff0c\u4e0d\u5fc5\u75b2\u65bc\u5954\u6ce2\u7684\u5047\u671f\uff1f\n\u627e\u56de\u9762\u5c0d\u9762\u7684\u6a02\u8da3\uff0c\u900f\u904e\u684c\u904a \u4eba\u8207\u4eba\u6709\u4e86\u771f\u5be6\u7684\u63a5\u89f8\n\u5168\u4e16\u754c\u90fd\u5728\u760b\u684c\u904a\uff0c\u633d\u6551\u6ed1\u4e16\u4ee3\u7684\u793e\u4ea4\u529b\u8207\u5b78\u7fd2\u52d5\u6a5f\n\u8b93\u684c\u904a\u9b45\u529b\u53d6\u4ee3\u7dda\u4e0a\u6210\u766e\uff0c\u627e\u56de\u4e92\u52d5\u7684\u6a02\u8da3\u3001\u4eba\u969b\u76f8\u805a\u7684\u6eab\u5ea6\n\u300c\u7528\u6211\u5011\u7684\u65b9\u5f0f\u95dc\u5fc3\u6211\u5011\u6240\u5728\u4e4e\u7684\u300d\n========================================================================================\nPNP\u684c\u6e38\u8a2d\u8a08\u7af6\u8cfd\u7db2-\u5e73\u53f0\u6838\u5fc3\u7406\u5ff5\n========================================================================================\n\u3000\u3000\u300c\u4e00\u500b\u4eba\uff0c\u7121\u8ad6\u591a\u9ebc\u5f37\u5927\uff0c\u667a\u6167\u548c\u5bcc\u6709\u9b45\u529b\uff0c\u90fd\u4e0d\u53ef\u80fd\u6298\u670d\u5168\u4e16\u754c\u7684\u4eba\u3002\u4f46\u662f\u7406\u5ff5\u53ef\u4ee5\u3002\n\u8036\u7a4c\u57fa\u7763\u53ea\u6709\u5341\u4e09\u500b\u9580\u5f92\uff0c\u5176\u4e2d\u9084\u6709\u4e00\u500b\u662f\u53db\u5f92\uff0c\u4f46\u662f\u57fa\u7763\u6559\u4f9d\u7136\u50b3\u904d\u5168\u4eba\u985e\u3002\u9760\u7684\u662f\u4ec0\u9ebc\u5462\uff1f\u96e3\u9053\u4e0d\u6b63\u662f\u7406\u5ff5\u55ce\uff1f\u300d\n\u800c\u6211\u7684\u7406\u5ff5\uff0c\u662f\u4e00\u500b\u975e\u5e38\u8001\uff0c\u81ea\u53e4\u4ee5\u4f86\u5c31\u5b58\u5728\u7684\u7406\u5ff5\u300e\u4e0d\u8981\u6c42\u5831\u916c\u7684\u5206\u4eab\u300f\uff0c\n\u5206\u4eab\u5565?\u5206\u4eab\u300e\u4f60\u8a2d\u8a08\u7684\u5fae\u578b\u684c\u6e38\u300f\uff0c\u4f60\u4e0a\u50b3\u8a2d\u8a08\u5716\u6a94\u5230\u7db2\u7ad9\u4e0a\uff0c\u8b93\u5168\u4e16\u754c\u7684\u4eba\u90fd\u6709\u73a9\u5230\u4f60\u8a2d\u8a08\u6771\u897f\u7684\u6a5f\u6703\n\u5217\u5370\u73a9\u684c\u6e38\u9019\u500b\u6982\u5ff5\uff0c\u57fa\u65bc\u5206\u4eab\u7cbe\u795e\uff0c\u57fa\u65bc\u63a8\u5ee3\u7cbe\u795e\uff0c\u57fa\u65bcDIY\u7cbe\u795e\uff0c\u57fa\u65bc\u589e\u9032\u4eba\u969b\u95dc\u4fc2\uff0c\u57fa\u65bc\u6211\u5011\u4e86\u89e3We do not have enough money to buy cheap things\n(\u4e16\u754c\u4e0a\u5f88\u591a\u7aae\u4eba\u6c92\u6709\u8db3\u5920\u7684\u9322\u53bb\u8cb7\u4fbf\u5b9c\u7684\u6771\u897f)\u6211\u5011\u5e0c\u671b\u4f4d\u65bc\u4e16\u754c\u5404\u89d2\u843d\u7684\u4eba\uff0c\u958b\u7db2\u9801\u5217\u5370\uff0c\u526a\u4e0b\uff0c\u5c31\u80fd\u627e\u4eba\u73a9\u3002\u4ee5\u4e0b\u6211\u5c07\u8a73\u8ff0\u70ba\u4ec0\u9ebc\u8981\u9019\u9ebc\u505a\u7684\u539f\u56e0\u3002\n\u3000\u3000\u6c92\u6709\u518d\u884c\u92b7\u754c\u5f85\u904e10\u5e74\u4ee5\u4e0a\u7684\u4eba\uff0c\u9818\u609f\u4e0d\u51fa\u300e\u514d\u8cbb\u300f\u8ddf\u300e\u6bd4\u8cfd\u300f\u662f\u6700\u5927\u7684\u5ba3\u50b3\n\u684c\u904a\u6709\u5e74\u5ea6\u6700\u4f73\u92b7\u552e\u6392\u884c\u699c\uff0c\u4f46\u662f\u6211\u570b\u4e00\u76f4\u6c92\u6709\u51fa\u73fe\u8d85\u904e100\u4eba\u4ee5\u4e0a\u53c3\u52a0\u7684\u684c\u6e38\u8a2d\u8a08\u5927\u8cfd\u3002\u684c\u6e38\u8a2d\u8a08\u5927\u8cfd\u4e00\u76f4\u5b58\u5728\u4e00\u500b\u77db\u76fe\uff0c\n\u96de\u751f\u86cb\u86cb\u751f\u96de\u554f\u984c\uff0c\u5df2\u7d93\u5728\u5e02\u9762\u4e0a\u8ca9\u552e\u7684\uff0c\u5927\u90e8\u5206\u5df2\u7d93\u90fd\u662f\u8db3\u4ee5\u5f97\u540d\u7684\u4f5c\u54c1\uff0c\u800c\u672a\u8ca9\u552e\u7684\u904a\u6232\uff0c\u4e00\u822c\u4eba\uff0c\u7121\u6cd5\u53d6\u5f97\uff0c\u7121\u6cd5\u8a66\u73a9\uff0c\u5927\u5bb6\u4e5f\u5c31\u7121\u6cd5\u8a55\u50f9\u3002\n\u90a3\u684c\u6e38\u8a2d\u8a08\u8cfd\u8981\u600e\u9ebc\u6bd4\uff0c\u6bcf\u4f4d\u53c3\u8cfd\u8005\u90fd\u624b\u88fd\u4e00\u76d2\u5f8c\u5bc4\u7d66\u6211\uff0c\u7531\u6211\u4f86\u8a55\u5206\u7d55\u5b9a\u8ab0\u662f\u7b2c\u4e00\u540d\uff0c\u9019\u65b9\u6cd5\u771f\u662f\u500b\u5c41\uff0c\u56e0\u70ba\u5047\u8a2d\n\u6709\u4e09\u5341\u4eba\u53c3\u8cfd\uff0c\u90a3\u6211\u975e\u82b13\u500b\u6708\u6642\u9593\u4f86\u8a66\u73a9\u8a55\u5206\uff0c\u7136\u5f8c\u91cd\u9ede\u300e\u8a55\u5be9\u5fc5\u9808\u662f\u5916\u570b\u4eba\u800c\u4e14\u5f88\u6709\u540d\u6c23\uff0c\u5426\u5247\u5c31\u7b97\u88ab\u6211\u8a55\u5be9\u70ba\u7b2c\u4e00\u300f\uff0c\n\u4e5f\u4e0d\u6703\u5149\u74b0\u52a0\u8eab\uff0c\u904a\u623210\u842c\u90fd\u8ce3\u4e0d\u5230\u3002\n\u800c\u4e14\u524d4\u540d\u4ee5\u5916\u53c3\u8cfd\u8005\u6240\u8a2d\u8a08\u7684\u904a\u6232\u9084\u662f\u6c38\u4e0d\u898b\u5929\u65e5\uff0c\u70ba\u4e86\u8981\u6539\u5584\u9019\u500b\u5236\u5ea6\uff0c\u6211\u63d0\u51fa\u7528\u5217\u5370\u73a9\u684c\u6e38\u9019\u500b\u8fa6\u6cd5\uff0c\u4e5f\u5c31\u662f\u53c3\u8cfd\u8005\u4e0a\u50b3PDF\u8a2d\u8a08\u5716\u6a94\uff0c\n\u8b93\u5927\u5bb6\u4e0b\u8f09DIY\u88fd\u4f5c\u684c\u6e38\uff0c\u9019\u6a23\u5927\u5bb6\u90fd\u80fd\u73a9\u5230\uff0c\u5927\u5bb6\u90fd\u80fd\u53c3\u4e88\u8a55\u5206\uff0c\u4f60\u6216\u8a31\u6709\u7591\u554f\u8a2d\u8a08\u8005\u628a\u81ea\u5df1\u4f5c\u54c1\u516c\u958b\u8b93\u4eba\u4e0b\u8f09\u5217\u5370\uff0c\u5047\u8a2d\u5982\u679c\u5c07\u4f86\u81ea\u5df1\u771f\u7684\u767c\u884c\u9019\u6b3e\u684c\u904a\u6642\n\u4e0d\u5c31\u6703\u964d\u4f4e\u92b7\u552e\u91cf\uff0c\u6211\u5728\u9019\u88e1\u56de\u7b54\u4f60\u80af\u5b9a\u4e0d\u6703\u964d\u4f4e\u4f60\u5c07\u4f86\u904a\u6232\u7684\u92b7\u552e\u91cf\u7684\uff0c\u4eba\u52062\u7a2e\uff0c\u4e00\u7a2e\u9858\u610f\u82b1\u9322\u8cb7\u684c\u904a\uff0c\u4e00\u7a2e\u4e0d\u9858\u610f\u82b1\u9322\u684c\u904a\uff0c\u4e0d\u6703\u82b1\u9322\u8cb7\u684c\u6e38\u7684\u4eba\u539f\u672c\u5c31\u4e0d\u6703\u82b1\u9322\uff0c\n\u4eca\u5929\u4f60\u8b93\u539f\u672c\u4e0d\u73a9\u684c\u6e38\u7684\u4eba\u4ed6\u5148\u8a66\u73a9\u904e\uff0c\u5c31\u63d0\u9ad8\u4ed6\u5c07\u4f86\u6703\u8cfc\u8cb7\u7684\u53ef\u80fd\uff0c\u800c\u53e6\u5916\u4e00\u7a2e\u672c\u4f86\u5c31\u6703\u82b1\u9322\u8cb7\u684c\u6e38\u7684\u4eba\uff0c\u8cb7\u4e00\u6b3e\u684c\u6e38\u7684\u4f9d\u64da\u5c31\u662f\u9019\u6b3e\u684c\u6e38\u7684\u540d\u6c23\uff0c\n\u540d\u6c23\u8d8a\u5927\u4f60\u80af\u5b9a\u8ce3\u5f97\u8d8a\u597d\uff0c\u800c\u4f60\u4e0a\u50b3PDF\u6a94\u9019\u7a2e\u5206\u4eab\u884c\u70ba\uff0c\u56e0\u589e\u52a0\u7684\u540d\u6c23\u589e\u52a0\u7684\u92b7\u552e\u91cf\uff0c\u80af\u5b9a\u5927\u65bc\u9858\u610fDIY\u624b\u88fd\u684c\u6e38\u7684\u4eba\u6578\u3002\n\u800c\u5927\u5bb6\u66f4\u5728\u4e4e\u8a2d\u8a08\u8005\u5f9e\u300c\u505a\u5b8c\u4e00\u6b3e\u904a\u6232\u300d\u5230\u300c\u5b8c\u6210\u4e00\u6b3e\u904a\u6232\u300d\u4e4b\u9593\uff0c\u9084\u6709\u591a\u5c11\u6c92\u6709\u88ab\u770b\u898b\u7684\u529f\u592b\u85cf\u5728\u88e1\u9762\u3002\n\uff0c\u82b1\u534a\u5e74\uff0c\u82b1\u4e00\u5e74\u7684\u958b\u767c\u671f\uff0c\u90fd\u4e0d\u7b97\u592a\u9577\uff0c\u5982\u4f55\u6e2c\u8a66\uff0c\u5982\u4f55\u8abf\u6574\uff0c\u4fee\u6539\u65b9\u5411\u662f\u5c0d\u662f\u932f\uff0c\u5982\u4f55\u80fd\u5920\u4fdd\u7559\u597d\u73a9\u7684\u689d\u4ef6\uff0c\u5982\u4f55\u80fd\u627e\u5230\u6e2c\u8a66\u8005\u9019\u624d\u662f\u96e3\n\u5217\u5370\u73a9\u684c\u6e38\u5e73\u53f0-\u66f4\u91cd\u8996\u7684\u662f\u8a2d\u8a08\u8005\uff0c\u8ddf\u73a9\u5bb6\u4e4b\u9593\u7684\u610f\u898b\u53cd\u994b\uff0c\n\u5217\u5370\u73a9\u684c\u6e38\u5e73\u53f0-\u5e0c\u671b\u684c\u904a\u5728\u51fa\u7248\u524d\uff0c\u8a2d\u8a08\u8005\u5c31\u80fd\u8207\u73a9\u5bb6\u6709\u6240\u4ea4\u6d41\u3002\n\u5217\u5370\u73a9\u684c\u6e38\u5e73\u53f0-\u4f60\u7684\u684c\u6e38\u5728\u4f60\u51fa\u7248\u5f8c\uff0c\u4f60\u8981\u95dc\u6389\u5206\u4eab\u4e0b\u8f09\u4e5f\u53ef\u4ee5\uff0c\u6216\u662f\u653e\u4e0a\u4f60\u500b\u4eba\u7684\u8ce3\u5834\u9023\u7d50\u90fd\u4e5f\u90fd\u5141\u8a31\u3002\n\u5217\u5370\u73a9\u684c\u6e38\u5e73\u53f0-\u8a2d\u8a08\u8005\u80fd\u5920\u5728\u904a\u6232\u51fa\u7248\u524d\uff0c\u5c31\u80fd\u9810\u77e5\u92b7\u552e\u91cf\uff0c\u4e00\u65e6\u771f\u7684\u5370\u88fd\u5c31\u4e0d\u80fd\u8ce0\u672c\uff0c\u4e0d\u8981\u8b93\u684c\u6e38\u8a2d\u8a08\u8005\u9084\u8981\u64d4\u5fc3\u8ce0\u672c\u9019\u6a94\u4e8b\u3002\n\u6211\u5011\u5e0c\u671b\u5f9e\u9019\u88e1\u958b\u59cb\uff0c\u9762\u5c0d\u5f8c\u9032\u7684\u684c\u904a\u8a2d\u8a08\u5e2b\u6642\u4e0d\u7528\u518d\u544a\u8a34\u4ed6\u5011\uff0c\u8a2d\u8a08\u7b56\u7565\u904a\u6232\u53ea\u80fd\u6295\u7a3f\u570b\u5916\u51fa\u7248\u793e\u3002\u6211\u5011\u5e0c\u671b\u6709\u4e00\u5929\u684c\u904a\u73a9\u5bb6\u5728\u6311\u9078\u7b56\u7565\u904a\u6232\u6642\uff0c\u4e0d\u53ea\u662f\u628a\u76ee\u5149\u653e\u5728\u570b\u5916\u51fa\u7248\u793e\u4e0a\uff0c\n\u570b\u5167\u51fa\u7248\u7684\u7b56\u7565\u904a\u6232\u4e5f\u6703\u51fa\u73fe\u5728\u4ed6\u5011\u7684\u5019\u9078\u6e05\u55ae\u88e1\u3002\u6211\u5011\u5e0c\u671b\u7576\u6211\u5011\u5728\u570b\u969b\u4e0a\u53c3\u5c55\u7684\u6642\u5019\uff0c\u4e0d\u53ea\u662f\u7559\u7d66\u5927\u5bb6\u53f0\u7063\u684c\u904a\u4f5c\u54c1\u7b49\u65bc\u5c0f\u54c1\u904a\u6232\u7684\u5370\u8c61\uff0c\u4e5f\u6709\u5728\u6a5f\u5236\u4e0a\u8db3\u5920\u6210\u719f\u7684\u4f5c\u54c1\u53ef\u4ee5\u8207\u570b\u969b\u7684\u684c\u904a\u8a2d\u8a08\u5c0d\u8a71\u3002\n\u6211\u5e0c\u671b\u53ef\u4ee5\u5927\u8072\u5730\u544a\u8a34\u570b\u5167\u7684\u670b\u53cb\u5011\uff0c\u6211\u5011\u570b\u5167\u6709\u8fa6\u6cd5\u8209\u8fa6\u684c\u6e38\u8a2d\u8a08\u5927\u8cfd\uff0c\u6211\u5011\u4e0d\u7b49\u5f85\u4e0d\u4f9d\u9760\u653f\u5e9c\u53ea\u9700\u8981\u9760\u4eba\u6c11\uff1b\u81ea\u5df1\u4e00\u5df1\u4e4b\u529b\u5c31\u80fd\u63a8\u5ee3\u684c\u6e38\u9019\u9805\u6587\u5316\u3002\n\u5217\u5370\u73a9\u684c\u6e38\u5e73\u53f0-\u4e0d\u6703\u6709\u5546\u696d\u6a21\u5f0f-\u6211\u7684\u76ee\u7684\u5c31\u662f\u63a8\u5ee3\u684c\u6e38\uff0c\u6211\u500b\u4eba\u5728\u53c3\u52a0\u53f0\u5927\u9ed1\u5ba2\u677e\u6642\uff0c\u88ab\u554f\u5546\u696d\u6a21\u5f0f\u975e\u5e38\u53cd\u611f\uff0c\n\u6211\u4e0d\u60f3\u8003\u616e\u5546\u696d\u6a21\u5f0f\uff0c\u53f0\u7063\u6709\u4e00\u53e5\u8a71\uff0c\u5275\u696d\u8005\u6c7a\u5b9a\u5546\u696d\u6a21\u5f0f\u90a3\u523b\u8d77\uff0c\u5c31\u8a72\u8003\u616e\u6cd5\u5f8b\u554f\u984c\uff0c\u5f88\u591a\u5275\u696d\u8005\u537b\u6c92\u6709\u300e\u6cd5\u5f8b\u5e38\u8b58\u300f\u9019\u9805\u57fa\u672c\u751f\u5b58\u914d\u5099\n\u6211\u4e5f\u4e0d\u4f8b\u5916\u7684\uff0c\u6211\u4e26\u4e0d\u5c08\u7cbe\u6cd5\u5f8b\uff0c\u4f46\u6211\u6700\u5c11\u77e5\u9053\u6211\u570b\u300e\u667a\u6167\u8ca1\u7522\u6b0a\u300f\u5927\u591a\u61c9\u7528\u5728\u300e\u58df\u65b7\u300f\uff0c\u300e\u7121\u79c1\u7684\u5206\u4eab\u300f\u8207\u300e\u58df\u65b7\u6b0a\u300f\u9019\u500b2\u662f\u4e92\u76f8\u62b5\u89f8\u7684\u7406\u5ff5\u3002\n\u800c\u4e14\uff0c\u6211\u82e5\u5e0c\u671b\u684c\u6e38\u8a2d\u8a08\u8005\uff0c\u300e\u7121\u79c1\u7684\u5206\u4eab\u300f\uff0c\u90a3\u6211\u4e5f\u8a72\u4ee5\u8eab\u4f5c\u5247\uff0c\u5217\u5370\u73a9\u684c\u6e38\u5e73\u53f0\u540c\u6a23\u4e5f\u56e0\u8a72\u662f\u5206\u4eab\uff0c\u662f\u516c\u76ca\u6027\u8cea\u7684\u3002\n\u65e2\u7136\u9019\u500b\u5e73\u53f0\u4e0d\u6253\u7b97\u8cfa\u9322\uff0c\u90a3\u6211\u5148\u7528\u6211\u81ea\u5df1\u4e00\u500b\u4eba\u4e4b\u529b\u958b\u59cb\u505a\u9019\u500b\u5e73\u53f0\u5427\uff0c\n\u6211\u662f\u865f\u7a31:\u6c92\u6709\u6211\u5beb\u4e0d\u51fa\u7684\u7db2\u7ad9\u7a0b\u5f0f\uff0c\u7d2f\u8a08\u5e79\u4e866\u5e74\u7db2\u7ad9\u524d\u5f8c\u7aef\u7684\u53f0\u7063\u7a0b\u5e8f\u54e1\n\u65e2\u7136\u6211\u4e5f\u4ed8\u4e0d\u51fa\u8acb\u4eba\u7684\u9322\uff0c\u6211\u5c31\u53ea\u7528\u81ea\u5df1\u4f5c\u70ba\u8ced\u6ce8\uff0c\u5f80\u9019\u4e9b\u5d0e\u5d87\u7684\u8def\u7dda\u8d70\uff0c\u5206\u4eab\u6211\u6240\u77e5\u8ddf\u6240\u898b\uff0c\u7136\u5f8c\u8b93\u5927\u5bb6\u53bb\u770b\u770b\u4e0d\u4e00\u6a23\u7684\u8def\u9014\u3001\u7406\u89e3\u4e0d\u4e00\u6a23\u7684\u8996\u91ce\u3002\n\u5728\u90a3\u9059\u9060\u5f69\u8679\u7684\u5f7c\u65b9\uff0c\u6216\u8a31\u6211\u5011\u4e26\u4e0d\u5b64\u7368\uff0c\u6709\u8457\u4ec0\u9ebc\u4eba\u548c\u6709\u8457\u548c\u6211\u4e00\u6a23\u4e0d\u6c42\u56de\u5831\u7684\u60f3\u6cd5\u52aa\u529b\u8457\uff0c\u6211\u59cb\u7d42\u5982\u6b64\u76f2\u76ee\u7684\u6df1\u4fe1\u8457\u3002 \n\n========================================================================================\n\u5b8c\u6210\u7684\u90e8\u5206\n========================================================================================\n\u53f0\u5927\u9ed1\u5ba2\u677e\u6642\u8a66\u4f5c\u7684\u7db2\u7ad9-\u96db\u578b\u5b8c\u6210\u9801\u9762\u67094\u9801\nhttp://p.bkk.tw/previous/ \n\u53f0\u5927\u9ed1\u5ba2\u677e\u5f8c-\u7e7c\u7e8c\u5728\u4f5c\u7684\u9801\u9762-\u9996\u98011\u9801\u9084\u6c92\u505a\u5b8c\nhttp://p.bkk.tw/\n",
        "hackathon_id": "2015hackntu",
        "winner": false
    },
    {
        "description": "\nWe wanted to begin to learn Chinese while we were in Taiwan but had no idea how! It can be overwhelming to start learning vocabulary from scratch, especially if most of the words aren't initially relevant to you. If only there was a way to customize the words you learn to match what you actually see and interact with in the world...\nHere's how Twig works: You take a picture. We identify what's in the picture using a combination of image segmentation and Wolfram Technology's awesome image identification. Then we use Microsoft's excellent translation service to translate the picture into whichever language you're working on learning. You can save the picture, translation, and .wav files with recordings of the translation for later review.\nMade with Objective C + image segmentation + Wolfram Cloud + Microsoft Translate :)\n",
        "hackathon_id": "2015hackntu",
        "winner": false
    },
    {
        "description": "\nInspiration\nFrustrated and getting stuck at exits of train stations. \nWhat it does\nWe enable users around the world use the right exits in their Subway/MRT/MTR/TUBE stations to get their destinations faster thus saving time, money, space and effort collectively and making a smarter city.\nHow I built it\nWe build a layer on top of google maps using places and direction API along with our own webservice providing the exit numbers for the destination. The data collection model is based on wikipedia, where users help key in data. We also use some big data techniques to fill the gap using local government agencies and business.\nChallenges I ran into\nCurrently working only with Google Maps and would like to make it work with Baidu, Bing, Here, Apple etc etc etc\nAccomplishments that I'm proud of\nNo extra hardware required\nNo extra beacons required\nNo more power/battery required\nNo extra memory required\nSaves battery at the destination station\nSaves bandwidth for telecoms at destination station\nReduce Queue[s] at information points at destination station\nCreates more space at destination station\nMore space provides happiness and comfort for residents and tourist's\nWhat I learned\nThe problem is not unique to our city and is common across the world and needs help.\nWhat's next for EXIT\nBuild native mobile apps to provide seamless experience to users if they don't want to use the webapp.\n",
        "hackathon_id": "2015hackntu",
        "winner": false
    },
    {
        "description": "\nEmergency-Map\nThis project is our result in HackNTU, Fall, 2015. \nThe team members include i-liszt, HCYtaxi, asnif24, and charliee0201.\n\u7de3\u7531\n\u5929\u6d25\u5927\u7206\u70b8\u5f8c\u7684\u53cd\u601d\u3002\u56e0\u8aa4\u7528\u6c34\u6ec5,\u610f\u5916\u9020\u6210\u66f4\u591a\u4eba\u7684\u50b7\u4ea1,\u5982\u679c\u80fd\u8b93\u5404\u5730\u5340\u7684\u6551\u707d\u4eba\u54e1\u5373\u6642\u4e86\u89e3\u5f7c\u6b64\u7684\u72c0\u6cc1,\u6216\u8a31\u5c31\u80fd\u8da8\u5409\u907f\u51f6\u3001\u964d\u4f4e\u50b7\u4ea1\u3002\n\u76ee\u7684\n\u5728\u707d\u96e3\u767c\u751f\u6642,\u5229\u7528\u7fa4\u9ad4\u53ca\u7db2\u8def\u7684\u529b\u91cf,\u958b\u653e\u4e00\u500b\u7dda\u4e0a\u5e73\u53f0,\u5171\u540c\u7dad\u8b77\u5730\u5716\u3002\n\u6a19\u793a\u707d\u96e3\u9ede\u3001\u9700\u8981\u652f\u63f4\u3001\u5371\u96aa\u5730\u9ede\u3001\u53d7\u50b7\u4eba\u6578\u3001\u91ab\u9662\u7b49\u7b49,\u8b93\u4f7f\u7528\u8005\u4e86\u89e3\u54ea\u88cf\u767c\u751f\u4e8b\u60c5,\u4e26\u63a1\u53d6\u76f8\u5c0d\u61c9\u7684\u63aa\u65bd\u3002\n\u66f4\u751a\u8005,\u8b93\u5371\u96e3\u6307\u63ee\u5b98\u4e86\u89e3\u6551\u63f4\u5c0f\u7d44\u524d\u5f80\u707d\u5340\u9047\u5230\u7684\u7a81\u767c\u72c0\u6cc1,\u4e26\u53ef\u6307\u63ee\u8abf\u6d3e\u4eba\u529b\u524d\u5f80\u652f\u63f4\u3002\n\u7d50\u8a9e\n\u4e0d\u53ea\u662f\u5371\u96e3\u6551\u6025\u5730\u5716,\u5ef6\u4f38\u61c9\u7528\u53ef\u81f3\u65c5\u904a\u5730\u5716\u3001\u7f8e\u98df\u5730\u5716... \u63d0\u4f9b\u7dda\u4e0a\u5e73\u53f0\u3001\u4e26\u9054\u5230\u5730\u5716\u7684\u6574\u5408,\u671b\u80fd\u9054\u5230\u4f7f\u7528\u8005\u5171\u540c\u7de8\u8f2f,\u5730\u7406\u4f4d \u7f6e\u5373\u6642\u8cc7\u8a0a\u50b3\u905e\u7684\u76ee\u7684\u3002\nThe idea of this project can be traced to the huge explosion event in Tianjin City, 2015.\nWe think that a wiki map can provide amount of functions. In this project, we began from disaster. For citizens, they can know the event in the dangerous region, even avoiding danger; for rescue team, they can quickly know the situation of regions and speed up the schedule of rescue. Besides search and rescue, in the future, this project can be generally extented to other fields, like food or trip. People can rapidly get information from our map if needed, and share events to others. Life of the city will be more smart if concept of wiki map can be implement.\n\u7c21\u6613\u64cd\u4f5c\u8aaa\u660e\n1.\u5de6\u5074\u529f\u80fd\u6309\u9215,\u4f9d\u5e8f\u70ba: \u56de\u5230\u73fe\u5728\u4f4d\u7f6e\u3001\u79fb\u52d5\u5730\u5716\u3001\u55ae\u9ede\u6a19\u8a18\u3001\u5713\u5f62\u6a19\u8a18\u3001\u591a\u908a\u5f62\u6a19\u8a18\u3001\u8def\u7dda\u6a19\u8a18 \n2.\u65b0\u589e\u4e8b\u4ef6\uff1a\n\u9032\u884c\u6a19\u8a18\u5f8c\uff0c\u51fa\u73fe\u586b\u5beb\u8996\u7a97\uff0c\u586b\u5beb\u898f\u5247\u5982\u4e0b\uff1a\na.\u6a19\u984c\uff1a\u8acb\u8f38\u5165\u4efb\u610f\u6a19\u984c\nb.\u8cc7\u6599\uff1a\u8207d\u4e4b\u984f\u8272\u5206\u985e\u505a\u914d\u5408\uff1a\u7d05\u8272(\u8acb\u8f38\u5165\u50b7\u60a3\u4eba\u6578)\u3001\u7d2b\u8272(\u8acb\u8f38\u5165\uff1aexplosion/chemical/NaCN\uff0c\u4e09\u64c7\u4e00)\u3001\u7da0\u8272(\u8acb\u8f38\u5165hospital/stretcher/ambulance\uff0c\u4e09\u64c7\u4e00)\u3001\u85cd\u8272(\u8acb\u8f38\u5165\u6c34\u9700\u6c42\u7bb1\u6578)\nc.\u5167\u5bb9\uff1a\u8acb\u8f38\u5165\u4efb\u610f\u4e8b\u4ef6\u7c21\u8ff0\nd.\u984f\u8272\u5206\u985e\uff1a\u7d05\u8272-\u50b7\u60a3\u3001\u7d2b\u8272-\u5371\u96aa\u3001\u7da0\u8272-\u9700\u652f\u63f4\u3001\u85cd\u8272-\u6c34\u8cc7\u6e90\u9700\u6c42\n\u6309\u4e0b\u53f3\u4e0b\u89d2\u5132\u5b58\u5373\u5b8c\u6210\u65b0\u589e\u4e8b\u4ef6\u3002(Demo\u7248\u7db2\u9801\uff0c\u4e0d\u5305\u542b\u8cc7\u6599\u5eab\uff0c\u7db2\u9801\u91cd\u555f\u5373reset)\n3.\u53f3\u5074\u6709\u7be9\u9078\u5668\uff0c\u53ef\u904e\u6ffe\u9700\u8981\u89c0\u770b\u7684\u9805\u76ee\n",
        "hackathon_id": "2015hackntu",
        "winner": false
    },
    {
        "description": "\n   \u77f3\u6cb9\u80fd\u6e90\u662f\u6211\u5011\u4e00\u500b\u5f88\u91cd\u8981\u7684\u8cc7\u6e90\uff0c\u4f46\u537b\u4e0d\u662f\u53d6\u4e4b\u4e0d\u76e1\uff0c\u7528\u4e4b\u4e0d\u7aed\u7684\uff0c\u8a31\u591a\u79d1\u5b78\u5bb6\u4e0d\u65b7\u7684\u627e\u5c0b\u65b0\u7684\u66ff\u4ee3\u80fd\u6e90\uff0c\u4e26\u767c\u660e\u4e86\u96fb\u52d5\u8eca\u3001\u96fb\u52d5\u6a5f\u8eca\u3001\u96fb\u52d5\u81ea\u884c\u8eca\u2026\u7b49\u7b49\uff0c\u70ba\u4e86\u5c31\u662f\u5e0c\u671b\u8b93\u6211\u5011\u80fd\u4f7f\u7528\u77f3\u6cb9\u4ee5\u5916\u7684\u80fd\u6e90\u4f86\u4ee3\u6b65\uff0c\u4f46\u76ee\u524d\u7684\u786c\u9ad4\u6280\u8853\u9084\u6709\u74f6\u9838\uff0c\u5982:\u96fb\u6c60\u7684\u84c4\u96fb\u80fd\u529b\u4e0d\u5982\u4e00\u822c\u7684\u6c7d\u6a5f\u8eca\uff0c\u6240\u4ee5\u9700\u8981\u66f4\u591a\u80fd\u63d0\u4f9b\u80fd\u6e90\u7684\u5730\u65b9\uff0c\u8b93\u6c11\u773e\u4e0d\u9700\u8981\u64d4\u5fc3\u9a0e\u5230\u90ca\u5916\u6563\u5fc3\u537b\u9700\u8981\u7528\u727d\u7684\u56de\u5bb6\u3002\n\n     City Battery\u7684\u69cb\u60f3\u8207\u76ee\u6a19\u662f\u5e0c\u671b\u63d0\u4f9b\u4e00\u500b\u624b\u6a5fApp\u8b93\u5546\u5bb6\u6216\u662f\u4e00\u822c\u6c11\u9593\u4f4f\u5b85\u900f\u904e\u9019\u500b\u5e73\u53f0\u7533\u8acb\u70ba\u4f9b\u96fb\u7ad9\uff0c\u800c\u8b93\u64c1\u6709\u96fb\u52d5\u6a5f\u8eca\u3001\u96fb\u52d5\u81ea\u884c\u8eca\u6216\u662f\u6709\u96fb\u9700\u6c42\u7684\u6c11\u773e\u4e5f\u53ea\u9700\u8981\u62ff\u8457\u624b\u6a5f\u4e0b\u8f09City Battery\u7684App\u5c31\u53ef\u4ee5\u5c0b\u627e\u5728\u8eab\u908a\u9644\u8fd1\u7684\u4f9b\u96fb\u7ad9\u3002\n\n\u25cf\u5546\u5bb6\u7533\u8acb\u3001\u4e00\u822c\u6c11\u9593\u4f4f\u5b85\u7533\u8acb\n\u25cf\u653f\u5e9c\u55ae\u4f4d\u516c\u958b\u8cc7\u8a0a  \n\u25cf\u5546\u5bb6\u5145\u96fb\u5957\u9910\n\u25cf\u5546\u5bb6\u5145\u96fb\u670d\u52d9\u8a8d\u8b49\n\u25cf\u5145\u96fb\u65c5\u7a0b\u7d00\u9304\n\u25cf\u6574\u5408\u96fb\u52d5\u8eca\u8cc7\u8a0a\n\u5982\u679c\u4f60\u559c\u6b61\uff0c\u53ef\u4ee5\u4e0aCity Battery\u7c89\u7d72\u9801\u6bd4\u500b\u8b9a\u7559\u8a00\u652f\u6301\u3002\n\u5982\u679c\u6709\u4efb\u4f55\u60f3\u6cd5\u6b61\u8fce\u8207\u6211\u5011\u806f\u7d61\u3002\n\u958b\u767c\u4eba\u54e1:\nAndroid  \u9673\u7965\u7dad\niOS  \u674e\u5b97\u76ca \n",
        "hackathon_id": "2015hackntu",
        "winner": false
    },
    {
        "description": "\nInspiration\n\u53ea\u70ba\u4e86\u7b49\u4e00\u676f\u5916\u9001\u9001\u932f\u7684\u7d05\u8336\uff01\u537b\u82b1\u4e86\u5f7c\u6b64\u7684 30\u5206\u9418\uff0c\u503c\u5f97\u55ce\uff1f\nWhat it does\n\u4e0d\u518d\u55ae\u5c31\u4ee5\u4f7f\u7528\u8005\u70ba\u8003\u91cf\uff01\n\u8abf\u6574\u6539\u9032\u904e\u5f80\u7684\u8a02\u8cfc\u5916\u9001\u6a5f\u5236\u3002\nHow I built it\n\u4f7f\u7528 Laravel \u5feb\u901f\u5efa\u7f6e\u5e97\u5bb6\u5f8c\u53f0\uff0c\u8207\u5e97\u5bb6\u8a02\u8cfc\u9801\u9762\u3002\nMobile App \u986f\u793a\u5e97\u5bb6\u5217\u8868\u8207\u6d3b\u52d5\u4ecb\u9762\uff0c\u5feb\u901f\u5206\u4eab\u6d3b\u52d5\u7d66\u81ea\u5df1\u7684\u5925\u4f34\uff08\u540c\u4e8b or \u540c\u5b78\uff09\nChallenges I ran into\n\u63a2\u8a0e\u904e\u5f80\u7dda\u4e0a\u8a02\u4fbf\u7576\u7cfb\u7d71\u7684\u4e0d\u4fbf\u8207\u53ef\u6539\u9032\u7684\u7a7a\u9593\uff0c\n\u5982\u4f55\u8b93\u5927\u773e\u9858\u610f\u4f7f\u7528\uff0c\u5982\u4f55\u6574\u5408\u5718\u968a\u5be6\u529b\nWhat I learned\n\u5718\u968a\u5408\u4f5c\uff0c\u5728\u73fe\u6709\u7684\u8cc7\u6e90\u8207\u6642\u9593\u58d3\u529b\u4e0b\uff0c\u5354\u8abf\u4e0d\u540c\u9818\u57df\u7684\u5925\u4f34\u5c55\u73fe\u5718\u968a\u5408\u4f5c\u80fd\u529b\nWhat's next for 17D\nWe hope!    We want!!     We'll make it come true!!!!\n",
        "hackathon_id": "2015hackntu",
        "winner": false
    },
    {
        "description": "\nInspiration\n\u662f\u5426\u60f3\u904e\uff0c\u6b64\u6642\u6b64\u523b\u4f60\u6240\u4f47\u7acb\u7684\u5730\u9ede\u767c\u751f\u904e\u4ec0\u9ebc\u4e8b\uff1f\n\u4f60\u7684\u670b\u53cb\u66fe\u5728\u6b64\u5730\u57cb\u6709\u4ec0\u9ebc\u79d8\u5bc6\uff1f\n\u4e00\u7a2e\u63a2\u7d22\u5404\u5730\u9ede\u7f8e\u9e97\u6545\u4e8b\u7684\u671f\u5f85\uff0c\n\u4e00\u7a2e\u4fdd\u5b58\u7f8e\u597d\u9ad4\u9a57\u7d66\u4ed6\u4eba\u7684\u60c5\u611f\u3002\n\nWhat it does?\nCapso \u8b93\u4f60\u5c07\u7f8e\u597d\u7684\u7247\u523b\u9304\u88fd\u4e0b\u4f86\uff0c\u505a\u70ba\u4f60\u5c08\u5c6c\u7684\u6642\u7a7a\u81a0\u56ca\uff0c\u4e26\u7559\u4e0b\u79d8\u5bc6\u8b93\u4eba\u4f86\u6b64\u5730\u63a2\u7d22\u3002\n\u4f60\u4e5f\u53ef\u4ee5\u65bc\u5730\u5716\u4e0a\u63a2\u7d22\u5404\u5730\u9304\u4e0b\u7684\u6545\u4e8b\u5f71\u7247\uff0c\u555f\u7a0b\u89e3\u958b\u4ed6\u4eba\u5728\u5404\u5730\u6240\u57cb\u85cf\u7684\u79d8\u5bc6\uff0c\u9ad4\u9a57\u4ed6\u65bc\u6b64\u5730\u7576\u4e0b\u7684\u9ad4\u9a57\u3002\n\nHow we built it?\n\u6211\u5011\u904b\u7528 Mobile App \u9ad4\u73fe\u4f7f\u7528\u8005\u89e3\u958b\u5730\u9ede\u79d8\u5bc6\u7684\u60c5\u5883\uff0c\u904b\u7528 Mobile \u8207 Web App \u8b93\u4f7f\u7528\u8005\u63a2\u7d22\u5404\u5730\u9ede\u7684\u6545\u4e8b\u3002\nMobile App: \u4f7f\u7528 Swift \u8a9e\u8a00\u88fd\u4f5c iOS App\u3002\nWeb App: \u7db2\u7ad9\u524d\u7aef\u4f7f\u7528 HTML/ JavaScript/ CSS\uff0c\u7db2\u7ad9\u5f8c\u7aef\u4f7f\u7528 Node.js \u8207 Google Cloud Platform\u3002\nBackend API: Server \u5f8c\u7aef\u4f7f\u7528 Node.js \u8207 Google Cloud Platform\u3002\n\nWhat's next for Capso?\n\u6301\u7e8c\u70ba\u4f7f\u7528\u8005\u6253\u9020\u66f4\u7f8e\u597d\u7684 Capso\uff0c\u540c\u6642\u5c0b\u6c42\u5916\u754c\u66f4\u8c50\u5bcc\u7684\u8cc7\u6e90\u3002\n\nContact Us\niTunes Download: https://goo.gl/Wef64w\nEmail: hello@capso.cc\nWebsite: http://capso.cc\nFacebook: https://www.facebook.com/CapsoHQ\n\n",
        "hackathon_id": "2015hackntu",
        "winner": false
    },
    {
        "description": "\nhttp://www.instructables.com/id/Hear-Me/\n",
        "hackathon_id": "2015hackntu",
        "winner": false
    },
    {
        "description": "\nNeed to filter my messages based on date, sender and content\nSaw playstore, not many apps were there, and most of them were paid\nSo made a free version for all\n",
        "hackathon_id": "2015hackntu",
        "winner": false
    },
    {
        "description": "\nMovieMatch \u900f\u904e\u6bd4\u5c0d\u6536\u85cf\u96fb\u5f71\uff0c\u627e\u5230\u559c\u597d\u76f8\u540c\u7684\u4eba\uff0c\u914d\u5c0d\u6210\u529f\u5f8c\u53ef\u4ee5\u7372\u5f97\u5f7c\u6b64\u7684 Facebook\u3001Line\u7b49\u806f\u7d61\u8cc7\u8a0a\uff0c\u8b93\u57ce\u5e02\u88e1\u7684\u4eba\u5011\u53ef\u4ee5\u85c9\u7531\u96fb\u5f71\u6709\u66f4\u591a\u7684\u4ea4\u6d41\u4e92\u52d5\u6a5f\u6703\u3002\nAndroid APP\u4e0b\u8f09\uff1alink\n\u5b98\u65b9\u7db2\u7ad9\uff1alink\nPTT\u597d\u96f7\u6bd4\uff1alink\n",
        "hackathon_id": "2015hackntu",
        "winner": false
    },
    {
        "description": "\nInspiration\nBIM software such as Revit and Archicad have been designed to generate a 3D building model, to then produce 2D [paper] drawings.\nOnce printed, the sections displayed in 2 dimensions might not entail all of the detail necessary to understand the building. \nDOC-QR is a tool that aims to visuals those sections, shown in 2D architectural drawings, as trimmed sections of the 3D Revit model, in a web browser.\nThe project was proposed by Jonatan Schumacher here - check out the sketch below for the rough idea.\n\nWhat it does\nThis tool currently consists of two parts: \n\nnode.js web application\nRevit Plugin\n\nweb app:\nThe web application allows users to create an account, and to create 'Projects'. \nRevit plugin:\nThe Revit plugin, which communicates with the web app, prompts the user to log in. Once logged in, one can select one of the user's projects for which to create 3D section views.\nThe tool then goes through all Revit drawings, and creates and publish 3D sections of all drawings in the Revit model, using the Spectacles json model exporter for Revit.\nIn the same process, the Revit app also places QR codes next to all views on the sheets, and uploads the 3D models to the webapp, where they can be retreived at the URLs stored in the QR code.\nTry it with this drawing!:\n\nWhat's next for DOCQR\nNext steps include integrating an alternative viewer to the Spectacles viewer. We plan on using the Autodesk Large Model Viewer (LMV) in order to better support large models, and in order to use the viewer's ability to create 3D sections of a larger model, rather trhan having to export many partial models from Revit, as we currently do. \n",
        "hackathon_id": "aec-technology-hackathon-2015",
        "winner": true
    },
    {
        "description": "\nWhy\nThere are so many useful examples for parametric modeling created by different people over the time and shared on the web through discussions. These examples are usually very hard to find. Also there is no way to know what is inside the file unless you open them which can be a very time-consuming process. Moreover there are usually so many versions of the same example file available with no easy way to know the changes between the files.\nHydra creates an automated workflow to share the example files on the web using Github repositories. In this way everyone can share their example files on the same platform and github will keep track of the versions which can be accessed from the interface.\nWhat it does\nHydra packages the example file and uploads it to users github fork from Hydra! All Hydra example will be accessible from the Hydra page.\nHow does it built\nHydra is a set of plugins (one for Grasshopper and one for Dynamo) with a web interface:\nPlugins for grasshopper and Dynamo create the package. Anybody can share their examples as far as they have a github account and a fork of Hydra. Watch the video for more details on how it works.\nHydra web interface keeps track of example files uploaded under each fork and visualize them in a single page. Example files can be searched from the page. Example files can be viewed in more details, rated and shared by users.\nSince the workflow is built on top of github users can fork example files and create their own versions and share them back.\n\nDon'r share files, share Hydras!\n",
        "hackathon_id": "aec-technology-hackathon-2015",
        "winner": true
    },
    {
        "description": "\nSlackit\nSlackit are plugins developed for Revit and Rhino that enable them to communicate with team members via Slack. This allows the model to alert users if something goes awry and giving a programmable interface for model management and maintenance. \nCurrent functions\nMessages are sent to a specified channel (no groups or DMs yet)\nRandom gifs (via GiphyAPI) are embedded into the Slack attachments by keywords search\nMessages included so far:\n\nSynch to Central started\nSynch to Central completed\nCentral model was opened \nUser closed the file without synching to central\n\nFuture development\nInclude groups and DMs\nAdd screen capture and post utility to Revit ribbon (current one doesn't work)\nAbility to post messages built into the Revit ribbon\nMore messaging options \n\nFile size\nOpen/sync takes too long\nAudit type issues (revit warnings & errors, non-standard practices)\n\n",
        "hackathon_id": "aec-technology-hackathon-2015",
        "winner": true
    },
    {
        "description": "\nSKINVENTOR\nWelcome to the Skinvetor application site\n\nThis application is an interoperability tool developed at the Hackathon to translate geometrical data from Rhino + Grasshopper into Autodesk Inventor. The current version of this application can only read XML files exported from Grasshopper or Dynamo. \nInspiration\nInventor is a platform heavily used in fabrication and engineering workflows for streamlining design to fabrication. Inventor has enabled increased efficiency within our own practice and while there are many advanced tools within the modeling environment such as sheet metal design, frame authoring, parametric assembly and structural analysis tools, there is still a need to translate data more effectively between other design platforms. This posed the challenge of developing an interoperability tool that would bridge information from conceptual designs in RHino into Inventor further analysis and parametric assembly modeling.\n\n\n\n\n\nWorkflows\nIn order for Skinventor to function properly, you will need to generate an XML file that is organized into sets of coordinate numbers by name (ex. Points A .... Points B) with x,y,z data. The application will then launch a new part file from Autodesk Inventor and a window will prompt you to select the XML file. This window will then turn into a refresh button that allows you to regenerate any updates made to the Rhino Model and XML file. \nWhats next\nWe are now looking toward investigating additional uses and applications for interoperability between Inventor, Rhino +Grasshopper and Revit+Dynamo. We are excited to be pushing forward the advanced capabilities of parametric and analytical tools like Inventor toward a more fluid workflow with other modeling platforms.\nTeam\nDaniel Inocente & Matthew Noe\n",
        "hackathon_id": "aec-technology-hackathon-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavac#xmlandroideclipse\n",
        "hackathon_id": "pakathon-global-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nrubygemstwilio\n",
        "hackathon_id": "pakathon-global-2015",
        "winner": false
    },
    {
        "description": "\nWe aim to provide a free call-in service for children in Pakistan to promote literacy and best health practices in the form of age appropriate fables.\n",
        "hackathon_id": "pakathon-global-2015",
        "winner": false
    },
    {
        "description": "\nKarachi gets some amazing sea breeze 365 days a year, 24 hours a day and it is not utilized to its fullest potential when thousands of Karachiites struggle to have electricity in their homes during the hours the government decides to cut their power. Wind energy is the solution for Karachi's growing energy crises. We do not need to see more people die of heat strokes in peak summer anymore.\nNayi Hawa is basically a web-based and mobile platform that connects residential and business owners to an environmental and financially sustainable source of electricity. The engineering of the products they install on their rooftops will be produced by local Pakistani suppliers that use local talent and skills.\nWhat I learned through this is that Pakistan's own potential is enormous. The government has funded so many projects in the research of wind technology and the products, that the capacity for this product EXISTS within Pakistan's borders. Engineers and business managers in the sustainability sector in Pakistan are growing in numbers and so is their expertise. This can change the energy landscape in Karachi and its outskirts, the country's main seaport and economic centre.\nWhat's next for Nayi Hawa? Once supported, we will need to complete web and mobile platforms and financial models to determine feasibility against diesel generators, solar power and existing power costs. We need to get in touch with suppliers and building contractors, as well as building owners about this technology that can make immediate impact for the residents. We then need to focus first on our few projects to create success.\n",
        "hackathon_id": "pakathon-global-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptjava\n",
        "hackathon_id": "pakathon-global-2015",
        "winner": false
    },
    {
        "description": "\nFighting poverty in under-development countries is one of the major goals in the new century. This application provides an interactive choropleth map showing population percent below the poverty line in each district in Pakistan. \nThis application classifies districts in Pakistan based on the poverty line index and generates a choropleth map. Classification is based on the standard deviation of the index. \nI built this application using leaflet web mapping library and javascript and jQuery. \nOne of the major challenges was the lack of open data about all districts in Pakistan. \nRunning many new functions and overcoming new challenges is what I am proud of. I also hope that this application can be useful for authorities who want to make Pakistan a better country. \nDuring the development, I learnt lots of things about Pakistan itself. I also tested my skills and learnt some new stuff in programming. \nIf I can have access to more open data of districts in Pakistan I can develop more useful applications. \n",
        "hackathon_id": "pakathon-global-2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWomen who have entered the workforce still face barriers in transportation accessibility. Many women are harassed on  public buses, and are unable to afford ridesharing arrangements in rickshaws without employers subsidizing their costs. Low-to-medium income women living in urban/peri-urban areas need a safe and reliable service that allows them to commute to and from work.\nWhat it does\nSafe Safar provides an affordable and safe pickup and drop van service for employees. We aim to target specific industries, for example salons and spas, that employ mostly women and pitch the idea to both employers and employees. \nVans will be clean, comfortable, and run on schedule. They will be equipped with GPS tracking services and a working AC. For increased security, each van will have a guard. Clients will be able to give feedback on their experiences via a hotline.\nHow I built it\nThe operating team will buy/lease vans and hire drivers and guards.\nThe management team will create schedules based on pickup/drop locations and timings.\nThere will be offices where individuals must register for the service in person and sign terms of use. \nThey can make changes to their schedule, confirm pickup times, and get up-to-date information on the van's whereabouts via an interactive phone/SMS service. The phone/SMS interface is built with Verboice.com.\nChallenges I ran into\nWhether to pitch the service to employers or employees. \nWhat's next for Safe Safar\nOnce a reliable network of vans has been established, the service can be expanded to include transportation to hospitals, schools, and marketplaces. Inter-city networks can also be established to allow transportation across longer distances.\n",
        "hackathon_id": "pakathon-global-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nweeblygofundme\n",
        "hackathon_id": "pakathon-global-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\narduinoc\n",
        "hackathon_id": "gybo2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythongooglegoogle-web-speech-apigoogle-calendarraspberry-pioauthlove\n",
        "hackathon_id": "gybo2015",
        "winner": false
    },
    {
        "description": "\nOur Inspiration\nThe reality is that older population worldwide is expected to grow to 2 billion by 2050, according to United Nations report. In US alone, there are 76.4 million Baby Boomers (those born between 1946- 1964) that are ageing as we speak. Other than the progressing health needs, this group is facing a serious issue of loneliness. According to a recent study by researchers at the University of California, San Francisco, 18% of seniors in US live alone, while 43% report feeling lonely on a regular basis. Lonely seniors are 45% more likely to die faster. With that in mind we came up with LISA, short for Logical, Intelligent, Special Assistant. It is a personal companion and caregiver for the elderly\nWhat does it do?\nLISA would allow its client to live an independent and healthy life. LISA can track its client by using an opencv program and a webcam on LISA, that can track a certain colour. The opencv program can tell where the object is on the screen, differentiating whether the object is on the left side, right side and centre. By doing this, LISA can tell whether it has to turn to make sure the object is still in its line of sight. It would send a signal to the Arduino that controls the main servo, telling it to turn in the correct direction. Furthermore, a secondary Arduino controls the motors of the chassis. An RF key fob sends signals to the secondary Arduino to move the tracks on the chassis.  This give the robot a wider range of movement, allowing it to not only rotate on the spot, but also move around a room. Another key feature of LISA is its ability to remind you of different events. For example, LISA could remind you when to take your medication. It would use our medication dispenser to dispense the medication. It uses a ZX distance and gesture sensor to detect hand movement toward the pill dispenser. When this movement is detected, LISA will dispense the right amount of medication. Moreover, LISA would do regular checkups of the client's heart rate, and based on that, would suggest recommendations. For instance, if the heart rate is too low, LISA might recommend for you to take a walk around the park. Or if your heart rate is too high, LISA might recommend for you to take a break and rest. \nBecause we wanted LISA to have a real personality instead of being just a screen, LISA would communicate with its clients by talking. When LISA has to tell you something, it would talk to you instead of just displaying a message. On top of that, LISA would occasionally tell jokes to make sure that the client doesn't get bored. \nHow we built it\nThe main chassis for LISA is from a starter robot kit by Makeblock. It has two motors and four wheels, moving two tracks like a tank. We also used a cylinder made out of cardboard to elevate the base of the laptop. An acrylic platform was used to create a larger surface area for the laptop. Plastic trays were mounted around the robot to store most of the electronics (Arduinos, battery packs, sensors, etc.). A lid of a laundry detergent was used as a container for the medication. \nChallenges we ran into\nA large challenge we ran into during our robot build was with the system of the interfacing of the object tracking and movement. The robot would not be tracking an object when it was making the movement of 'searching' for it. So, instead of having the robot sweep back and forth in one motion while looking for an object, it would make smaller intervals in between. It would then stop in between each interval. So, when an object is not in view, the robot would rotate a bit, stop, search, rotate, and repeat. This way, we are increasing the refresh rate of the searching.\nAccomplishments that we're proud of\n\nObject Tracking\nWe're really proud of the object tracking because we were able to get it functioning properly in a very short period of time. Furthermore, the movement of the track was very accurate, so that the camera is always looking in the direction of the object.\nMedication Dispenser\nWe're proud of the medication dispenser because we used a sensor that we've never used before, the ZX distance and gesture sensor. It took a very long time to get the gesture working with the servo to dispense the medication. We found out that the sensor has to be facing up towards light for the sensor to work 100 percent of the time.\nSpeech\nSpeech was great and really fun to do. We were lucky that we were able to find a website with a text to speech feature with a natural sounding voice. The outcome of the application of the speech is awesome because it gives the robot a personality and a voice. It allows the robot \n\nWhat we learned\nWe learned how to track objects, text to speech, speech interfacing with object tracking, RF communication, how H bridges work and how to use the gesture sensor.\nWhat's next for Logical Intelligent Special Assistant [LISA]\nSome next steps for LISA would be to create an app so that the relatives or kids of the client can check up on the robot and get a look at what the client has been up to. Another next step would also be facial recognition instead of colour recognition to identify the client. Finally, we would also want LISA to be compressed into a smaller form factor so that its not obtrusive. It can also use beacon technology to follow you. It can also be able to use speech recognition to communicate with the robot. The client's doctor would also be able to access LISA to access the client's information. Other sensors would be applied in the future, such as blood pressure and oxygen sensor.\n",
        "hackathon_id": "gybo2015",
        "winner": false
    },
    {
        "description": "\nWe wanted to create a Health Care Robot to take care of bigger kids when their parents cannot take leave from Office.\nRoboDoc will monitor temperature, pulse, color and send periodic updates to you over Wireless. You can then review the data and decide if you want RoboDoc to give kids medicine, or offer them a book, or play music.\nKids simply love RoboDOC! \nMade by kids, for kids and their parents / caretakers.\n",
        "hackathon_id": "gybo2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe wanted to combat depression and mental health issues with a friendly robot that guides you in making positive daily decisions. Mental health is an area that is far removed from physical robotic applications; the challenge excited us while providing a way to help create positive experiences.\nWhat it does\nGuide the user into making positive decisions by intelligently applying positive reinforcement. The robot is able to move, detect gestures, and track these inputs to determine its mood then respond with full body animations including facial expressions. \nHow I built it\nSystem is controlled with Raspberry Pi master and Arduino slave. The RPi tracks the inputs, determines the mood state and controls mood display and audio. The Arduino receives gesture input, controls motion and body animations. \nThe mechanical system features 3 servo motors that control the motion of the robot's arm and head movements, as well as 2 drive motors on the base of the robot which allow it to move itself about its environment.\nThe facial expression prototype was efficiently created through the use of three 11 LED channels controlled by BJTs, therefore requiring only 3 IO pins.  \nThe Raspberry Pi wirelessly controls the motions through a state machine, which takes sensor input as well as internal states to decide what to do and what emotional state to display. It uses a debian operating system that runs a python script that includes handlers for music, as well as other sensorial input.\nChallenges I ran into\nDesign: Conceiving a robot that manifests and displays human emotions that would be used by those fighting mental health issues. \nTechnical: The 5 motor, 3 LED array, 1 gesture sensor, 1 speaker robot required thorough planning in accommodating the hardware on the available IO pins. In using both the Arduino and Raspberry Pi, a simple and effective communication protocol needed to be developed. Challenges also included running a wireless embedded operating system.\nAccomplishments that I'm proud of\nBubba-Jo.: benign user befriendment bot, active joy opportunist\nReliable and easy to use LED facial expressions. Simple and functional motor control with a variety of preset gestures for animation. \nCreating a mechanical frame that had to contain and mount all of the hardware, while allowing for full body motion out of arts and crafts.\nImplementing a finite state machine that models simple emotional states, using a developing environment on a wireless micro-computer with little to no prior experience. Successfully implementing the embedded interface for various different sensors, finding or writing libraries for them.\nApplying both prior and learned psychological knowledge to better understand mental health issues and the relationship between minds and machines. \nWhat I learned\nAbout building and designing in an environment where the idea and final product may only be 60% conceived. Moving quickly to reliable platforms to reiterate and grow on. \nHow to assemble a robot out of random arts and crafts materials, duct tape and glue.\nLearned about linux environment and how to develop and troubleshoot software both for its operating system as well as embedded applications that interact with it.\nLearning about and using new types of software and hardware (ex. gesture sensor) and facilitating discussions that involve several different topics at once.\nWhat's next for Bubba-Jo.\nDetermine the most effective facial expressions and fully body animations through usability testing.\nRedesign the hardware and embedded to be robust and compact for the home environment. \nAdd capability to determine the user's emotional level and display it back with a slightly more positive feel. Could be achieved through brightness of LEDs or volume of sound.\nMaking the software portable and modular: Being able to move it from one hardware to another different/unrelated hardware while keeping the emotional variables and states. This would allow it to implement different actions depending on the hardware that it is currently residing on. It could follow the user and keep track of other things like food intake, a history of potentially stressful situations, etc, and use this to provide helpful feedback, either as an assistant or simply as a friendly companion. We would hope that the software has open source components and that it has a useful API that other developers could use to either extend this system or use it as an extension of their own.\n",
        "hackathon_id": "gybo2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nEvery year, far too many people suffer from medical traumas, in particular stroke and heart disease. Even after leaving the hospital, these people still need to rehabilitate for months or even years. Without Indie, the patients would need to frequently visit their doctors for checkups; which, is a great inconvenience. \nDefinition\nIndie is a telepresence robot for rehab and diagnosis. Indie has particular sensors that records the patient's health(BPM, temperature, etc). Indie allows a patient to conduct a check up independently. Indie then sends the data to the patient's doctor. The doctor can then communicate to the patient via Indie. \nHow It Works?\nCommunicate between PC and Phone with VoIP. Communicate between phone and arduino with serial port. \nProblems\nWAAAAAAAAAAAAAY too many to list\nAccomplishments\n-Designing an effective telepresence robot.\n-Successfully using the temperature, heart beat, and gesture sensors.\n-Having fun and building a neat robot at the same time.\nWhat We Learned\n-How to communicate with Arduino and Android using Javascript over WiFi\n-How to use a ton of new hardware\n-S*** Happens (Murphy's Laws applies to everything)\nWhat's next?\n-Make it easier for disabled people to use(gesture control)\n-Allow patient to communicate with people besides doctor.(Friends, family, etc)\n-Refine the control mechanics \n-Speed up the data sending a refining the data reseived (weeding out \n",
        "hackathon_id": "gybo2015",
        "winner": false
    },
    {
        "description": "\nHave you ever gone for a walk to your favourite cafe and suddenly a 1980 Pontiac Trans Am drives by that is decades long overdue for an oil change?  You choke and squint in the cloud of smog that surrounds you in its wake.  When you finally get your food, it just doesn't taste the same :0(\nSmog is a serious health issue that affects over 3 million Canadians, but it is difficult to control with ever-increasing urbanization.  However, there's no need to despair.  Introducing....Sniffles, the air cleaning robot!  Sniffles autonomously roams and when it detects pollution:\n\nits lights turn angry red\nit inhales the noxious air and cleans it using activated carbon\nit then spews forth air that smells not unlike fresh clothes out of the dryer \n\nIn the not so distant future, Sniffles will also measure wind speed and direction, which will enable it to analyze the pollution data and find the sources of pollution.  Smog... you've been warned. \n",
        "hackathon_id": "gybo2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\narduino3dprintingmotordriverpulse-rate-monitorfoambelt\n",
        "hackathon_id": "gybo2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\narduinomyomyduinolaser-cutterservo-motorsgoproacrylicarduino-codeduct-tape\n",
        "hackathon_id": "gybo2015",
        "winner": false
    },
    {
        "description": "\nGame Play Bots\n** by Team Z (group 9)**\nInspiration\nGame bot\nPlaying games is very entertaining, it helps people improve their mental health. That's what came to mind when we prepared our idea for the robot.\nWhat it is supposed to do\nGame bot\nUsing image filtering technology, the Game bot should ultimately play any board game with a human player. It finds each game piece, calculates which piece it should play next and move the piece using its robot arm.\nhttps://youtu.be/WxS8ZPWqFzQ\nPlay bot\nPick up objects and deliver them to their owners.\nhttps://youtu.be/uCF28Nm1K6A\nWhat the robots can do right now\nGame bot\nThe robot plays Five in a Row. The Game bot can use a webcam to take pictures and recognize a go board. It can recognize black and white pieces (under optimal lighting conditions). It can also calculate which position the bot should move next. We can also manually control a robot to move around and collect pieces on the playing field\nPlay bot\nThis bot can currently move around and moving other magnetic pieces around (it can lift light weight objects). This bot uses the ZX gesture sensors to give command to the bot.\nHow we built it and challenges\nGame bot\nWe used an Android TV box with a webcam to take images and calculate what the robot should do. We also built a robot that uses a vacuum to pickup and move game pieces. The communication between the robot and the TV box is completed through Bluetooth. The TV box sends a command for the robot to execute. One of the challenge we faced was the vision processing. Due to the uneven lighting of the board, we must tune the algorithm to the correct values in order to create enough contrast to find the board and the pieces. However, the biggest challenge was the insufficient amount of time for all the details.\nPlay bot\nWe assembled an arm on top of a tank so that the robot can move over some items. An Arduino is used to take input from 2 zx gesture sensors. Then it would control each motor to move according to the input from the gesture sensor. A challenge that we overcame already was the fact that the two gesture sensors' inputs were confused with each other. We solved that problem by giving the two sensors two different identifications.\nIf there was more time\nIf we had more time we would improve our algorithm for the Game bot and make the Play bot go wireless (so we wouldn't have to drag wire around to control it).\nSoftware & Hardware that we used\nHardware\nArduino,\nAndroid TV box,\nWood,\nTank kit,\nbreadboard, wires and etc.,\nbluesmirf (Bluetooth),\ngo board,\nwebcam\nSoftware\nEclipse & Android Studio,\nArduino \n",
        "hackathon_id": "gybo2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nTo encourage social health and wellness through interaction and play.\nWhat it does\nGest-Jump provokes curiosity by autonomously operating a jump rope through gesture based interaction. \nHow we built it\nGest-Jump's development was inspired by play in an attempt to disguise physical activity through social media and fun. Over coming challenges withing the building process helped our team develop an innovative solution.\nChallenges we ran into\nGenerating enough power for our rope to skip was the largest challenge we encountered. \nAccomplishments that we are proud of\nOur team came together and each member expanded their skill set to meet the requirements of the project. The final outcome was a rewarding experience for our team. \nWhat's next for Gest-Jump\nDouble Dutch. \n",
        "hackathon_id": "gybo2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nOur inspiration was seeing elderly people who forget or are incapable of taking their medication. We wanted to make an easy to use accessory for this problem.\nWhat it does\nHere is how it works... The caregiver will be able to input times for pill use for up to three times a day via a web-interface. At the time(s) the caregiver inputs, the rotary system will send out a pill through a chute onto a tray. There are 21 pill slots in one capsule. Three pills a day. We predicted that there might be a desire for long term use, so the MediAssist was designed for that in mind. You can place additional \u201ccapsules\u201d on top of another, easily adding more pills. This is designed for a pharmacist to put in the pill so there is no confusion on how to put it in. There is a motion sensor to be able to tell if the patient has picked up the pill, if not, the caregiver receives a notification (on the phone, computer) concerning this issue. We also have a beeper so if the person is in another room they will be able to hear the beep and will know that a pill is waiting for them. We even added an LCD screen to show the recipient of the pill steps on how to get the pill.\nHow we built it\nWe used an Arduino Uno, an IR distance censor, LCD and other Arduino accessories (Sparkfun), 3D printed parts.\nChallenges I ran into\nHaving some difficulty with the 3D printer. Some coding problems.\nAccomplishments that we are proud of\nThe 3D printing. Coding the accessories for the Arduino Uno (motion sensor, LCD, etc.)\nWhat we learned\nHow to use 3D printers, motion sensors, Arduino. Allocate sufficient time for creating parts as sometime 3D printers do not produce the expected outcome.\nWhat's next for MediAssist\nHope to have a successful future in the market.\n",
        "hackathon_id": "gybo2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nPets need mental and physical stimulation to live a happy and motivated life. Sadly, owners are not always readily available to give their pets all of the attention they need throughout the day. Life inevitably gets in the way. With the Pet Pal, owners can find solace knowing that their pets will be kept occupied whenever they get bored. The hope for the Pet Pal is that it will exercise the pet by reacting to his movements, encouraging the pet to have fun through interaction when humans aren't around!\nWhat it does\nThe pet pal will move around the room avoiding obstacles as it gets too close to a solid object. If something were to hit the pet pal and cause a sudden jerk in its movement, the pet pal`s eyes will light up red to simulate it getting angry.\nHow I built it\nThe building process was very sporadic. We had an idea of what our robot should do but didn't know how to implement the functions and features. We ended up using the Arduino microcontroller to operate the robot since it is simpler and we are more familiar with it. The exterior is made of styrofoam and fur. The electronic parts mostly consist of arduino boards, jumper wires, and various sensors all connected through breadboard.\nChallenges I ran into\n-the xyz accelerometer had a lot of noise making it difficult for accurate position sensing\n-infrared proximity sensor is also not reliable\n-motors are weak and have trouble carrying the weight of the robot, also goes very slow\nAccomplishments that I'm proud of\n-Building our first robot.\n-Developing better programming, mechanical, artistic and electrical skills.\n-It looks cute :-)\nWhat I learned\n\nBetter programming, mechanical, artistic and electrical skills.\n\nWhat's next for Pet Pal\nWe hope to add animal sounds and lasers first and foremost to the Pet Pal. Squeeks, boops and beeps with excite pets and provide a new audio environment to the room. With laser pointers (specifically meant for feisty cats), the Pet Pal will provide an external form of interaction. Shooting lasers across the room for the Pet Pal's eyes and mouth will encourage cats and other pets to move about the room, and not just around the Pet Pal. For dogs, we hope to include squeeky and crinkly parts to use their mouths on. The Pet Pal will become an all in one play toy!\n",
        "hackathon_id": "gybo2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\narduinosensorcardboardwireswheels\n",
        "hackathon_id": "gybo2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nMany people working long hours in an office forget to stay hydrated. This robot was designed around the idea of making it easier to get people drinking water. \nWhat it does\nOften you forget to drink water because you are very engaged in what you are doing so it's easy to become dehydrated without even know it. Our robot reminds you to drink water. Our robot walks around an office reminding people to drink water by stopping for 20 seconds and buzzing outside every office. Our robot carries two bottles of water at a time (but could be adapted to carry more).  The water bottles are sitting on pressure sensors which allows the  robot to sense when someone has takes the water.  The robot will move on to the next person's office either after 20 seconds or after someone has  taken the water bottle off of the robot.\nHow we built it\nWe decided to build a drink tray with cup holders which would hold the water bottles.  We used a laser cutter to cut out the holes into the acrylic (which is the material we used for the robot) and used hot glue to hold all the pieces together.  Next we glued the front wheels on the motors and glued those to the bottom of our robot.  We aded two wheels on an an axle to provide balance to the rear of the robot.  Next we added a motion sensor the the front of the robot which could detect obstacles.  We then added the pressure sensors where the water bottles are to sit as well as a buzzer which would buzz outside of every persons office to notify them that the water has arrived. Next we programmed the robot to to move forward, stop outside of an office, wait for the water to be taken and then move on to the next persons office.  \nChallenges I ran into\nour initial challenge was to understand that we were building a prototype which did not have to do everything we had imagined it would do but rather a sample of what we were to accomplish.  Our second challenge was how to attach the wheels to the motor as we had difficulty finding the correct parts.  Our third challenge was how to attach the pieces of acrylic and what to use as spacers for the different shelves.  Our fourth challenge was to get the battery holder to work as the wires were not wired correctly.  Our final challenge was how to program the robot as we don't have any experience programming.\nAccomplishments that I'm proud of\nWe are really proud that we learned the basics of how to build a robot and that we could make it do something useful.\nWhat I learned\nWe learned so much this weekend.  We learned how to program a robot.  We learned how to 3D print.  We learned how to laser cut and we learned how to build a robot.\nWhat's next for The Waterbot 9000\nSo many opportunities!!\n",
        "hackathon_id": "gybo2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nIt just popped into my brain.\nWhat it does\ndispenses pills without the user choosing them on a daily basis (mon, tues, wed, etc)\nHow I built it\nduct tape, straws, arduino, breadboard, LEDs, paper, plastic boxes, plastic cones, Popsicle sticks\nChallenges I ran into\nthe container, and the dispensing mechanism\nAccomplishments that I'm proud of\nthe gestures and the code, dispensing mechanism\nWhat I learned\nwe need to be more organized\nWhat's next for Pill-O-Rama's Pill Dispensing Unit #1487\nwe don't know yet.\n",
        "hackathon_id": "gybo2015",
        "winner": false
    },
    {
        "description": "\nTeam Members:\n\nJennifer Mendoza \nBen Slater \nJulian Kwan\nJohn Barberiz\n\nThe Idea:\n\n  To create an office chair that will promote a healthy lifestyle in your work environment by promoting movement \n\nPurpose (the Why):\nWhy: Sitting at your desk in the same position for too long can cause strain in your body. It\u2019s also common for people to become distracted and/or stressed while at work \nWhat makes this different:  Although other products are similar that can be used to raise you to a different height or pivot your chair, the difference with the Sitand is that is connected to you through different channels. This connection allows for you to become more mindful of your work environment and self.  \n\nThis connection can be achieved through different tools like a Muse (to track your brain waves \u2013 EEG, Alpha), FitBit (to track your heart rate for instances when you get too stressed), or a desktop app that measures your productivity to the chair) \n\nWhat will the chair do:\nBased on the signals transmitted from your smart device (eg/Muse, Fitbit, even your phone) and a set time of 45 minutes the chair will move to remind you to move out of your chair and to stand up or sit down. However, if the chair recognizes that you are \"in the zone\" the movement functionalities can be turned off to avoid distractions. \n\nX Axis:  Pivot the Seat of the Chair \nPurpose: when a person is standing with the chair the person can use the seat as a leaning mechanism to redistribute the weight/force away from your body to reduce the strain \nY Axis: Raise the chair from a sitting position to a standing position \nPurpose:  Promoting a change of position \n\nTechnology Implemented:\n3D Printer: \nCreated: Rack and Pinion, Cog, Gear and Applicable Housing \nPurpose: raise and lower the chair \nSensors to detect movement along two axes X and Y (X pivot, Y raise) \nRaspberry Pi\n\nHost programming for motor drivers \nCreate wireless connections between the smart device and chair \n\nMuse (mindful movement tool): \n\nTo extract brain waves primarily the Alpha, Beta, Delta waves. \nConnecting the Muse to MuseLabs (a tool to read brainwaves data). MuseLabs was to identify moments when an individual is distracted from work and stressed in those situations the chair will send the appropriate signals \n\nChallenges:\nMechanical\n\nScaling of 3D printed parts made building final design difficult\nWe had many mechanical components which made getting everything working seamlessly together tough\n\nTechnical \n\nBluetooth and Wifi Connections to the RaspberrPi \nMuse: connectivity issues between Muse and Mac\u2019s Bluetooth and issues converting a recordings (.muse) to readable (.csv) file to analyse the data as Terminal wouldn\u2019t directly register Muse files in the terminal \n\nLogistical \n\nTroubleshooting the size of the 3D Printing \nScaling the size of our initial mode \n\n",
        "hackathon_id": "gybo2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\narduino-uno\n",
        "hackathon_id": "gybo2015",
        "winner": false
    },
    {
        "description": "\nWhat it does\nSUNdecided is a web app that allows users to make decisions on maintaining healthy skin. \n\nHow I built it\nWe used HTML, CSS, and Javascript.\n\nChallenges I ran into\nWe were considering using images to recognize skin tone for a while, but due to the complex nature of image processing and servers working together, we decided to simplify the idea to having the user choose one of the six skin tones of the Fitzpatrick scale.\n\nWhat's next for SUNdecided\nWe hope to include a working image analysis of the user's skin tone through a taken picture so it can be more interactive. We also want to include a map that displays the UV index of the user's area of that time so there is more visual for the user.\n",
        "hackathon_id": "spaceappsnextgen",
        "winner": false
    },
    {
        "description": "\nA major problem in America is the declining number of students who are prepared for and pursuing STEM-related careers. Only 44% of kids are prepared for college math and only 36% for science. They need an effective way to be motivated to learn and pursue careers in these fields, and one way to do this is to introduce them to space science at an earlier age.\nI created MyMARS to educate people about Mars and the exploration that happens there. Using Open Data transmitted from the Curiosity Rover on Mars, I constructed visualizations of temperature and atmospheric pressure data that students can use in school, individual research projects, etc.\nBut younger kids are the ones who need to be even more exposed to space science, and they want something more tangible and immersive, so I extracted topographical map data to create a 3D simulation of the Gale Crater on Mars that they can explore extensively.\nWhat's Next: Young people want something that will be informative and exciting at the same time, and there\u2019s really no better way to get them involved with learning about space than using existing data to give them that experience. Providing more data in the 2D weather data visualization and making the 3D map seamless will make MyMARS into a product that can be monetized.\n",
        "hackathon_id": "spaceappsnextgen",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaandroidsocrata-open-datanasagoogle-playgpstwitterphotoshop\n",
        "hackathon_id": "spaceappsnextgen",
        "winner": false
    },
    {
        "description": "\nBuilt With\nprocessing\n",
        "hackathon_id": "spaceappsnextgen",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtmlcssbootstrapjavascriptnode.jsmongodb\n",
        "hackathon_id": "spaceappsnextgen",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaandroidgoogle-maps\n",
        "hackathon_id": "spaceappsnextgen",
        "winner": false
    },
    {
        "description": "\nPebbleSpaceClicker\n",
        "hackathon_id": "spaceappsnextgen",
        "winner": false
    },
    {
        "description": "\nseaClimateChange\nA semi-interactive data visualization of sea level data to illustrate one negative aspect of climate change.\nTo get dev setup: \nnpm install, webpack --watch, and serve it on whatever (needs localhost for AJAX).\nWritten in ES6\nWritten with/using:\n\nc3.js and d3.js \nreact.js\nwebpack + babel\nleaflet.js\ncaffeine\npython pandas\n\n",
        "hackathon_id": "spaceappsnextgen",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptjqueryhtmlcssapi\n",
        "hackathon_id": "spaceappsnextgen",
        "winner": false
    },
    {
        "description": "\nBuilt With\nnode.jshtml5cssjavascriptpythonbootstrapexpress.jsswig\n",
        "hackathon_id": "spaceappsnextgen",
        "winner": false
    },
    {
        "description": "\nBuilt With\nswift\n",
        "hackathon_id": "spaceappsnextgen",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptpython\n",
        "hackathon_id": "spaceappsnextgen",
        "winner": false
    },
    {
        "description": "\nBuilt With\nunityc#javascriptgoogle-cardboardvr\n",
        "hackathon_id": "spaceappsnextgen",
        "winner": false
    },
    {
        "description": "\nBuilt With\narduino\n",
        "hackathon_id": "spaceappsnextgen",
        "winner": false
    },
    {
        "description": "\nInspired by the nature of robotics our team was excited to use robotics and autonomous technology to assist astronauts in their dangerous adventures. As semi experienced Engineers this was an opportunity to broaden our experience in programming and hardware as well as theoretically solve issues that astronauts are presented with. As technology advances we must continue to think of ways to make it better and this is what we learned when doing this project. \n",
        "hackathon_id": "spaceappsnextgen",
        "winner": false
    },
    {
        "description": "\nBuilt With\nprocessing\n",
        "hackathon_id": "spaceappsnextgen",
        "winner": false
    },
    {
        "description": "\nInspiration\nWhen we looked over the data available to us as resources, we were instantly bored to death. There was no way anyone would read everything line by line, so we decided to present it in a fun format; games! That led to the creation of Space Adventures; a fun website full of educational space games! \nWhat it does\nIt helps teach people about space science; it provides fun while also providing important knowledge about space! \nHow I built it\nWe used Javascript, HTML, JQUERY and CSS to create our website and games. We also used an API to create a component of our website (we used Mapbox to create a map with important locations). \nChallenges I ran into\nInternet disruptions, multiple syntax errors and many many lines of text.\nAccomplishments that I'm proud of\nI really like the trading card game because each card was custom made on photoshop (5 cards per round, 25 rounds). I also really like our design (our CSS is really pretty). Overall, I'm proud of everything we did because we put in a lot of effort.\nWhat I learned\nWe learned how to use the Mapbox API today. \nWhat's next for Space Adventures\nWe want to add more games and sharpen up the features of each game. We would also like to add more info to the info page and make the CSS better on the page. There are some parts of the games that we'd like to change; each game has something we could possibly add to make it better! There's a lot in-store for Space Adventures!\nThank you for reading! We hope you try out Space Adventures!\n",
        "hackathon_id": "spaceappsnextgen",
        "winner": false
    },
    {
        "description": "\nBuilt With\nprocessingphotoshopmspaintword\n",
        "hackathon_id": "spaceappsnextgen",
        "winner": false
    },
    {
        "description": "\nEffects of Aerosol on Ozone\nbold\n",
        "hackathon_id": "spaceappsnextgen",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtmlcss\n",
        "hackathon_id": "spaceappsnextgen",
        "winner": false
    },
    {
        "description": "\nAbstract\nGoal: App to help anyone quickly find a great weekend getaway wherever they are.\nScope: Minimum project for a 24h coding hackaton (single person); focus on local tourism; 3rd theme (accommodation finder); use Sabre APIs.\nBigger picture: Figure out more precise and complete itineraries (include train, taxi, rent, drive) with full instant booking.\nInspiration\nNecessity to quickly find a weekend's getaway. Last minute bookings and last minute local travel.\nWhat it does\nFinds destinations for a pleasant weekend trip given only a budget. As simple as it can.\nHow I built it\nThe APP was implemented in HTML/jQuery/PHP but with a responsive touch to feel like a mobile APP.\nThe team is a single developer, emphasis was on the back-end rather then user interface.\nBasic workings:\n\nUser provides budget\nFind airports close to user (20km)\nFind airports close enought to flight to direct (3 hour flight, 1500km)\nLookup the cheapest flight to each airport\nOutbound flights must be within Friday 6PM-10PM or Saturday 8AM-12AM\nInbound flights must be within Sunday 6PM-10PM\nLookup the most expensive hotel within the remaining budget\nReturn results featuring the destinations, and what to do there, ordered by play time\nUses Sabre's InstaFlight and HotelAvail APIs\n\nChallenges I ran into\nMain challenges in this prototype were integrating with Sabre SOAP API and optimizing the geolocation driven search.\nAccomplishments that I'm proud of\nA first complete version of the MVP was accomplished, though more time is need to test and make it basically functional.\n",
        "hackathon_id": "thack-sao-paulo-travel-hack",
        "winner": true
    },
    {
        "description": "\nChallenge: \nAccommodation finder \u2013 Hotel? Hostel? Home-sharing? Build a recommendation engine for personalized accommodations for any traveler's style and budget.\nPersona:\nQuando viajo, eu gosto de ficar em hotel por causa do conforto e da infraestrutura (como piscina e academia). Enquanto eu fazia um mochil\u00e3o pela Europa, me hospedei em albergues por causa do pre\u00e7o. Descobri que eu n\u00e3o me importo em dividir quarto com desconhecidos, na verdade fiz alguns amigos. Na minha pr\u00f3xima viagem eu gostaria de ficar em um hotel com quartos que eu pudesse compartilhar com desconhecidos.\nSolution:\nHotel-sharing, um aplicativo para pessoas encontrarem com quem compartilhar quartos de hotel. \n",
        "hackathon_id": "thack-sao-paulo-travel-hack",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe understand that the online travel market is evolving quickly and new technologies are changing the way travelers shops for their trips. Because of that, is important for the travel agents to follow new trends and help travelers to find the best travel destinations and things to do there.\nThat\u2019s why we created Desbravo, to help travel agents to find the best destinations, tours and housing for their costumers, so they can positioned themselves\nas travel consults and can differentiate their work from the online companies that sell standard packages\nWhat it does\nBased on travel dates and costumers profile (defined by tags) Desbravo will suggest travel destinations with plane tickets (using sabre\u2019s APIs) and the best tours and activities (using Razoom\u2019s API).\nAfter selecting destination and tours, the travel agent will be able to send a proposal for his costumers and wait for approval and payment.\nHow I built it\nUsing Sabre\u2019s API for plane search and prices and Razoom\u2019s API to find the best tours. We developed the solution using ruby on rails.\nChallenges I ran into\nintegration with a new API\nplan a functional product with a short period of time\nexecute a project fast and making sure that the MPV is delivering the expected value\nAccomplishments that I'm proud of\nlaunching the platform. For sure that was the fastest product we ever launched;\nwe believe that our product addresses solutions to our costumers and can be a very successful product. We tried to create something aligned with our business and we thing that we make it.\nWhat I learned\nless is always better\ndeliver fast, deliver good\nWhat's next for desbravo\nlaunching to the market\n",
        "hackathon_id": "thack-sao-paulo-travel-hack",
        "winner": true
    },
    {
        "description": "\nInspiration\nEmotions that guide the travelers\nWhat it does\nConnect travelers with location that they normaly woulden\u00b4t look for using their emotions as the driver\nHow I built it\nUsing PHP, APIs and Semiotics \nChallenges I ran into\nThe biggest was how to do the work with just one developer \nAccomplishments that I'm proud of\nTo be able to develop a working project that have the main value prepositions of these new solution that was born here\nWhat I learned\nHow to take decisions in a veri fast way\nWhat's next for Pick2trip Inspiration\nRebild our solution putting it faster and better looking\n",
        "hackathon_id": "thack-sao-paulo-travel-hack",
        "winner": false
    },
    {
        "description": "\nInspiration\nO aplicativo nasceu por demanda e necessidade de ter tempo ao entregar carros alugados estando em shopping.Isso economizar\u00e1 tempo das pessoas que estiverem visitando o shopping.\n",
        "hackathon_id": "thack-sao-paulo-travel-hack",
        "winner": false
    },
    {
        "description": "\nInspiration\nThis is our entry for the Travel Hack Hackathon - 2015 - Sao Paulo.\nWhat it does\nIt get the artists you like from your Spotify profile, cross the list with the artists schedule and suggests travel destinations where you can watch them live around the world, according to the the lower plane ticket prices. \nHow I built it\nWe are using Python/Django and JQuery\nChallenges I ran into\nAssemble  a great team on the spot\nAccomplishments that I'm proud of\nMaking a complete, working application in 24 hours\nWhat I learned\nSpotify and Sabre APIs (tried to use bandsintown but were not able to get authorization)\nWhat's next for tripmusic\nWe don't know, we are here just to show-off.\n",
        "hackathon_id": "thack-sao-paulo-travel-hack",
        "winner": false
    },
    {
        "description": "\nInspiration\nSabe aquela imagem, paisagem bonita de algum lugar que voce nao conhece? ou viu em alguma rede social de algum amigo e ele nao escreveu onde era? WirBee ir\u00e1 descobrir onde \u00e9 esse local e ir\u00e1 preparar o seu pacote!\nWhat it does\nFa\u00e7a o upload da foto que mostraremos pacotes de viagens para voc\u00ea, com a mesma paisagem, para o mesmo local! ou fa\u00e7a buscas por sentimentos ou temas.\nHow I built it\nIntegra\u00e7\u00e3o com API Sabre para busca de roteiros, passagens a\u00e9reas, valores, e outras integra\u00e7\u00f5es para a concilia\u00e7\u00e3o das imagens (match), como a api GettyImages listagem de imagens na internet e CamFind API para encontrar outras imagens a partir de uma fornecida.\nChallenges I ran into\nConhecer as apis certas para utilizar, design da aplica\u00e7\u00e3o e criar uma nova experiencia para o usuario\nAccomplishments that I'm proud of\nTer aprendido a trabalhar com as APIs Sabre Dev Studio, um rico ambiente de documenta\u00e7\u00e3o, ao mesmo tempo criar uma nova forma de procurar uma nova viagem com base em uma fotografia.\nWhat I learned\nA trabalhar com as apis Sabre e Getty Images\nWhat's next for WirBee\nFinalizar o match com a api CamFind e criar op\u00e7\u00f5es de alugar veiculos, reserva de hoteis e integra\u00e7\u00e3o com a api MasterPass para meio de pagamento.\nTambem a integra\u00e7\u00e3o com as redes sociais (Facebook e Twitter), acessando o album de fotos publico do usuario, e varrer para onde seus amigos viajaram, e sugerir destinos parecidos, estimulando o usuario a trocar novas experiencias com seus amigos, buscando referencias do local.\n",
        "hackathon_id": "thack-sao-paulo-travel-hack",
        "winner": false
    },
    {
        "description": "\nBuilt With\nphpsabrehtmlcss\n",
        "hackathon_id": "thack-sao-paulo-travel-hack",
        "winner": false
    },
    {
        "description": "\nInspiration :\nOur inspiration to build DSI FVRT (pronounced - favorite) has been to bring the adventure and fun of extreme sports indoors, and to make it part of your daily workout or fitness regime. \nWhat it does :\nThe DSI FVRT \u2013 Fitness Virtual Reality Trainer is a fully immersive extreme fitness training system. It leverages recent advancements in VR Headsets, in this case the Oculus Rift, and IoT sensors. It provides the user a safe and convenient alternative for extreme fitness.  FVRT integrates with the Cerner FHiR (pronounced \u201cFire\u201d) Health API to track users\u2019 training progress and provides an easy to use web portal for tracking training progress.\nHow we built it\nBuilding DSI FVRT involved a number of elements to be built and integrated together. The first task was to convert a mountain bike into a stationary machine. We built a bike pedestal to mount the bike. The bike was hooked up with electronic circuitry and software programs were written to capture the bike movements such as pedal rotations, handle movement etc. A virtual reality environment was built that provided the landscape to ride the bike. Cerner  FHiR API were integrated into the system for health monitoring. These reading are available to the user through a web portal.\nChallenges we ran into :\nOne of the major hurdles we ran into was higher processing power. To accomplish lifelike mountain biking experience to the user a 3D virtual landscape is rendered in real time, biking movements like pedal rotations, handle movements etc are all captured and processed in real time. All this involves high amount of graphical and computational processing. The standard out of the box laptops didn't provide the best real time experience we hoped for.  To overcome this challenge we built a light weight landscape to optimize the virtual reality experience for the prototype. For the final product with the right computational power we can further enhance the DSI FVRT experience for the user.   \nAccomplishments that we are proud of :\nFor the 20 hour hackathon we had a long list of things to be completed. Each team member had a piece of the puzzle and bringing these pieces together was the key for the final presentation.  We as a team are very proud of completing all the pieces and leaving the audience dumbfounded with the final demonstration. \nWhat we learned:\nA great idea and fantastic team to execute it can go a long way in achieving a product prototype even when you have only 20 hours.\nWhat's next for DSI FVRT\nDSI FVRT prototype is ready. We would like to complete the Oculus Rift integration, optimize the performance,  design and test it on various landscapes and capture health monitoring. We would like to further enhance the product for other extreme sports like snowboarding, surfing etc.  \n",
        "hackathon_id": "techweek-kansas-city-hackathon",
        "winner": true
    },
    {
        "description": "\nInspiration\nCreate an iPad application that helps bring families closer together while cultivating a child's creativity.\nWhat it does\nThe application allows a user to create their own story book with their own hand drawn images or uploaded images. The application also allows a user to add their own text at the bottom of each page and record a voice over to read the story back to them.\nHow I built it\nThis application was built using Obj-C in the Xcode editor for the client side application. The server side application is an IBM Bluemix hosted application that allows data to be stored in the IBM Mobile Data Cloud.\nChallenges I ran into\nThe challenges that my team ran into were integrating IBM Bluemix and utilizing the Google Authenticated API. \nAccomplishments that I'm proud of\nSome accomplishments that we as a team are proud of are working together to accomplish a common goal and integrating IBM Bluemix into our application.\nWhat I learned\nMy team learned how important it is to stay focused and work as a team. \nWhat's next for My Story Book\nThe next steps for My Story Book are to finish the Google authentication and to add more features to the application.\n",
        "hackathon_id": "techweek-kansas-city-hackathon",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascripthtmlcssreactjsnode.jsubertwitter\n",
        "hackathon_id": "techweek-kansas-city-hackathon",
        "winner": false
    },
    {
        "description": "\nWhat it does\nfacr is an iOS app that analyzes your smile and expressiveness while you practice for a speech and gives you an score of your performance.\nHow I built it\nUsing the emotion recognition SDK from Affectiva and KDCircularProgress Cocoa Pod\nChallenges I ran into\nThe app is built in Swift and the SDK in Objective-C. The main challenge was to make them work together using a header bridge file.\nAccomplishments that I'm proud of\nBuilt an MVP in 24 hours\nWhat I learned\nDesign a product that people would use\nMake Swift and Objective-C work together\nIntegrate a facial recognition SDK into an iOS app\nWhat's next for facr\nRecord the video of your speech to be able to replay it and see your score while replaying.\n",
        "hackathon_id": "techweek-kansas-city-hackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\nc#\n",
        "hackathon_id": "techweek-kansas-city-hackathon",
        "winner": false
    },
    {
        "description": "\nThe inspiration behind DeviceSafe is extremely simple, yet very important. In a day and age where technology knowledge is vital, it is necessary to foster positive device experiences for users of all ages.  DeviceSafe has a dual purpose, it is a great storage app to keep track all of your household devices and it provides device specific walk throughs to keep all your devices user appropriate.  \nDeviceSafe is comprised of 4 main architecture components. First, a SQl Server 2012 database used to house the device and family member data. Second, an Restful Web API/Data layer utilizing the MVC 5 Web API and Code First Entity Framework. Third, a Native Mobile UI available for iOS, Android and Windows Mobile that was built using IBM\u2019s Kinetise Saas tool. Lastly, a MVC 5 Website used to add additional administration options for adding devices to the DeviceSafe library.\nOur primary challenges arose from a lack of experience with the Kinetise saas Mobile UI tool. Learning how to gather and manage data through the tool was definitely challenging at times. However, these challenges led to one of our greatest accomplishments: creating a functioning native mobile application to solve a very real problem in under 24 hours. We also created and hosted a website to provide information about the product and a twitter account which, in only 17 hours, already has 29 followers!\nThe next phase for DeviceSafe includes adding additional functionality such as tracking family member\u2019s locations, adding more devices and restriction instructions, and expanding the safety education components of the application.\n",
        "hackathon_id": "techweek-kansas-city-hackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\njqueryjavascriptmysqljsonnginxphpphp5phpmyadminbootstrapgoogle-mapshtml5csscron\n",
        "hackathon_id": "techweek-kansas-city-hackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavastrutsbootstrapjasperrd3.jsjqueryjavascriptmysql\n",
        "hackathon_id": "opportunity-hack-2015-chennai",
        "winner": false
    },
    {
        "description": "\nBuilt With\nnode.jsandroidrestful-web-services\n",
        "hackathon_id": "opportunity-hack-2015-chennai",
        "winner": false
    },
    {
        "description": "\nMigrants move from districts to district and the child education is interrupted. Each family is given a unique card through which the child details are tracked. We also make sure the government aids are received by them\n",
        "hackathon_id": "opportunity-hack-2015-chennai",
        "winner": false
    },
    {
        "description": "\nBuilt With\nwordpress\n",
        "hackathon_id": "opportunity-hack-2015-chennai",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroidios\n",
        "hackathon_id": "opportunity-hack-2015-chennai",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptmeteor.jsapache\n",
        "hackathon_id": "opportunity-hack-2015-chennai",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonjavadjangoandroid\n",
        "hackathon_id": "opportunity-hack-2015-chennai",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroid-studio\n",
        "hackathon_id": "workwavehackathon",
        "winner": false
    },
    {
        "description": "\nInspiration\nOur first idea for an accessibility-focused app was a touch-based braille reader. Due to the current technical limitations of consumer smartphones, there's no way to provide the three concurrent streams of tactile feedback necessary for braille reading. That consideration introduced us to a problem more sophisticated than reading on its own: As a blind person, how do you navigate a large body of text without getting trapped in an infinite stream of characters, with no tactile feedback, and still maintain your privacy and independence?\nThe answer is that you don't.\nWhat it does\nStraightkey, or ... -.-,  is an SMS client that allows navigation and conversation without the need to see what's on the display. Navigation through lists and between views is handled entirely with the phone's volume buttons, and text is entered as Morse code.\nStraightkey's primary target demographic is the blind, but it also can be beneficial to those with dexterity impairments and serve as a Morse code learning tool for the sighted. \nStraightkey works with 6,814 Android phones.\nHow we built it\nDesign\nStraightkey's parameters are simple: It needs to provide the core functionality of the system SMS app, to eliminate the cognitive load of memorizing and recalling the locations of onscreen elements, and to preserve the user's privacy when texting around other people.\n\nIn the absence of braille, it became obvious that Morse code would be the most widely accepted standard for nonverbal, nonvisual communication that could be efficiently digitized. ITU-R M.1677 is the world standard as defined by the UN and supports common accented characters, punctuation, and symbols in addition to alphanumeric characters.\nNavigation was moved to the volume buttons, the only two tactile surfaces available for use on every smartphone. In translating these behaviors we decided on a strict metaphor that would be compatible with the user's understanding of the volume buttons as meaning up/more and down/less. This control scheme frees up the screen for precision-independent input, which is used for entering, manipulating, and sending text, as well as rereading the currently selected item.\nWith primary navigation moved offscreen, the display was freed up for precision-independent input. \nSince the primary demo doesn't need to see the display, the UI was designed with long battery life in mind. With a black background and whitespace-driven layout, Straightkey taxes the system minimally and will illuminate a minority of the screen on AMOLED displays.\nFor sighted users, Straightkey supports standard taps and swipes for navigation when the display is not needed for text input. All important elements are white with crisp edges for high contrast and glanceability, reducing friction for dexterously impaired users. Use of a monospace font and generous padding makes skimming through items much easier, with the added benefit of complementing Morse code's consistent timing.\n\nWe architected Straightkey informally on paper, mocked it up in Sketch, and organized project assets with Zeplin.\nDevelopment\nMike spent all night in Android Studio and wants to die now.\nChallenges we ran into\n\nParsing Morse code input into a verbal language is apparently a common challenge, with inherent human inconsistency making it difficult to determine if a pause marks a space between parts of a character, between characters, or between words. Our solution was to provide basic speed presets that can accommodate some margin of error for each corresponding level of proficiency.\nOn screens with text input, we render Morse code in addition to English so sighted users can see the Morse representation of what they're typing. Rendering the code in a manner that preserved spacing and readability across multiple lines required a few hours of tweaking.\nOnly one of us is a developer.\n\nAccomplishments that we're proud of\n\nAsk Mike about the oscillator he made to capture taps and releases for Morse code input, it's pretty rad.\n\nWhat we learned\nMorse code\nWhat's next for Straightkey\n\nAn easy, conversational onboarding experience so users can quickly learn navigation and gestures\nAdaptive input rates that allow more variance in typing speed\nInitiate calls by holding the phone up to your ear in a message thread\nCustom keyboard to allow systemwide Morse code input (and screen reading, potentially)\n\n",
        "hackathon_id": "workwavehackathon",
        "winner": false
    },
    {
        "description": "\nInspiration\nDa Blinds\nWhat it does\nHands free still locked device ready to tweet!\nHow I built it\nHopes dreams monster and immense fear of failure!\nChallenges I ran into\nPoor Open source libraries that are supposed to be reliable\nAccomplishments that I'm proud of\nNow everyone will be yelling at their androids to post dem tweets!\nWhat I learned\nI can do anything with sound!\nWhat's next for Blind Post\nTo teach Larry King he doesnt need to call his secretary to tweet for him anymore!\n",
        "hackathon_id": "workwavehackathon",
        "winner": false
    },
    {
        "description": "\nInspiration\nJoe thought of the idea while we were sitting outside the dining hall. We decided it was out of the box and decided to take on the challenge.\nWhat it does\nIt allows people without limbs or have difficulty walking to be able to walk around in a virtual environment.\nHow I built it\nWe used Unity, a 3D game engine.\nChallenges I ran into\nLots of glitches and short amount of time.\nAccomplishments that I'm proud of\nI'm proud of both Joe and I for finishing our first hackathon on time.\nWhat I learned\nTime is a virtue and you must work as a team.\nWhat's next for VirtuWalk\nWe don't know at the moment but we are thinking of continuing the project and possibly taking it to market.\n",
        "hackathon_id": "workwavehackathon",
        "winner": false
    },
    {
        "description": "\nBuilt With\ntesseractpythonbluemix\n",
        "hackathon_id": "hackerupt",
        "winner": false
    },
    {
        "description": "\nBuilt With\ncssjavascriptphphtmlbootstrap\n",
        "hackathon_id": "hackerupt",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroid-studio\n",
        "hackathon_id": "hackerupt",
        "winner": false
    },
    {
        "description": "\nWhat's next for ORCA V 2.0 with alarms and many more exiting features that will help you be in-touch with your work.\n",
        "hackathon_id": "hackerupt",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtml5css3javascriptjqueryjavaj2eemysqlbluemixfacebook\n",
        "hackathon_id": "hackerupt",
        "winner": false
    },
    {
        "description": "\nBuilt With\nc#cloudazure\n",
        "hackathon_id": "hackerupt",
        "winner": false
    },
    {
        "description": "\nBuilt With\nkinectunityc#minions\n",
        "hackathon_id": "hackerupt",
        "winner": false
    },
    {
        "description": "\nBuilt With\ndrupal-cmsmysql\n",
        "hackathon_id": "opportunity-hack-2015-san-jose",
        "winner": true
    },
    {
        "description": "\nBuilt With\nswiftiosparsetwiliosketchinvision\n",
        "hackathon_id": "opportunity-hack-2015-san-jose",
        "winner": true
    },
    {
        "description": "\nInspiration\ntest\nWhat it does\nHow I built it\nChallenges I ran into\nAccomplishments that I'm proud of\nWhat I learned\nWhat's next for ChariTech\n",
        "hackathon_id": "opportunity-hack-2015-san-jose",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavahtml\n",
        "hackathon_id": "opportunity-hack-2015-san-jose",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroidparsejavasketchandroid-studio\n",
        "hackathon_id": "opportunity-hack-2015-san-jose",
        "winner": false
    },
    {
        "description": "\nBuilt With\nnode.jsbootstrapcss3express.jselasticsearch\n",
        "hackathon_id": "opportunity-hack-2015-san-jose",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroid-studio\n",
        "hackathon_id": "opportunity-hack-2015-san-jose",
        "winner": false
    },
    {
        "description": "\nBuilt With\nobjective-cparseuikitiosiphone-sdk\n",
        "hackathon_id": "opportunity-hack-2015-san-jose",
        "winner": false
    },
    {
        "description": "\nBuilt With\nmean\n",
        "hackathon_id": "opportunity-hack-2015-san-jose",
        "winner": false
    },
    {
        "description": "\nInspiration\nLiteracy Lab wants to able gather information on the usage patterns of curated apps on tabs. TabInsight aims at helping Literacy lab do exactly this. \nWhat it does\nTabInsight will collect information of the tab usage and app usage, that will be send to centralized location where the data will be aggregated. The collected data will be sliced and diced and to provide in depth analytics that Literacy Lab can use.\nHow we built it\n\nWe developed an Android app with a minimal UI and a background service that tracks the usage of other apps on the tablet.\nThe data collected by the android app is posted to a python based web server which then pushes the data to logstash service which can be running on same or different host.\nLogstash then pushes the data to elasticsearch where it is indexed, aggregated and made available to Kibana for visualization.\n\nChallenges I ran into\n\nWe had to get the usage statistics of other Google Playstore and third party apps without root access or deploying a system app. We also had to work with minimal permissions and user intervention to make this process as user friendly as possible.\nIntermittent access to wifi and how the andriod app needs to connect to it based on its availablity.\n\nAccomplishments that I'm proud of\n\nDeveloped a code complete and fairly integrated product within a short amount of time. :)\n\nWhat we learned\nAdvanced usage of Andriod System Services and API's\nWhat's next for TabInsight\nBetter user feedback mechanism: Usage of GCM\nIntegration with BI tools\n",
        "hackathon_id": "opportunity-hack-2015-san-jose",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascriptresthtml5databasecssmysqlbootstrap\n",
        "hackathon_id": "opportunity-hack-2015-san-jose",
        "winner": false
    },
    {
        "description": "\nInspiration\nThis is a story...\nWhat it does\nabout a hacker...\nHow I built it\nwho had 3 ideas and no team...\nChallenges I ran into\nThis is a story...\nAccomplishments that I'm proud of\nabout a npo..\nWhat I learned\nWith 3 needs and no team\nWhat's next for 2015 Team Submission Example\n",
        "hackathon_id": "opportunity-hack-2015-san-jose",
        "winner": false
    },
    {
        "description": "\nBuilt With\nionicruby-on-rails\n",
        "hackathon_id": "opportunity-hack-2015-san-jose",
        "winner": false
    },
    {
        "description": "\nBuilt With\nd3.jsnode.jsexpress.js\n",
        "hackathon_id": "opportunity-hack-2015-san-jose",
        "winner": false
    },
    {
        "description": "\nInspiration\nMy Path Mapping is intended to show the difference in access to quality financial services.  Low income youth and youth of color too often live in communities where the quality financial services are harder to get to or not present at all.  \nWhat it does\nA toolset for MyPath, a non-profit organization to map out different types of financial services, predatory vs quality services. This allows our young people to advocate for change and greater access to quality financial services. \nWe are able to pull a lot of useful data from updated census data and map it into the mapbox API.\nWe are able to complete a MVP over the weekend.\nWhat I learned\nTeam work.\nWhat's next for My Path Mapping\nImplement more feature and make it more complete by inputing more data.\n",
        "hackathon_id": "opportunity-hack-2015-san-jose",
        "winner": false
    },
    {
        "description": "\nInspiration\nThe Chandler Christian Community Center currently has a web site with lots of good information on it but it is hard to navigate, has a good amount of out dated information, and it does not look good on mobile devices.\nWhat it does\nWe revamped their web site making a fully responsive web site, cleaned up the information on it, and make it easier to navigate.\nHow We built it\nAngularJS, Bootstrap, MongoDb, CSS 3, Html 5, Javascript, Heroku, NodeJs\nChallenges I ran into\nMis-understanding of requirements that originally drove us down a different route.\nAccomplishments that I'm proud of\nWe are re-grouped and turned out a great web site that they could go into production with today.\nWhat I learned\nMore up front design and requirements gathering.  Need more face time with the non-profit.\nWhat's next for Chandler Food Bank - Helping Those In Need\nTurn over the site to the Chandler Food Bank.\n",
        "hackathon_id": "opportunity-hack-2015-arizona",
        "winner": true
    },
    {
        "description": "\nBuilt With\njerseyrestjava\n",
        "hackathon_id": "opportunity-hack-2015-arizona",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascriptphpmysql\n",
        "hackathon_id": "opportunity-hack-2015-arizona",
        "winner": true
    },
    {
        "description": "\nBuilt With\njava\n",
        "hackathon_id": "opportunity-hack-2015-arizona",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonjavascriptfacebook-graph\n",
        "hackathon_id": "opportunity-hack-2015-arizona",
        "winner": false
    },
    {
        "description": "\nBuilt With\nwordpressjqueryphonegaphtml5restsalesforcepaypalauthenticationionic\n",
        "hackathon_id": "opportunity-hack-2015-arizona",
        "winner": false
    },
    {
        "description": "\nBuilt With\nandroid-studiotwitterxcode\n",
        "hackathon_id": "opportunity-hack-2015-arizona",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavascripthtmlcssmeteor.js\n",
        "hackathon_id": "opportunity-hack-2015-arizona",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtml5javascriptloli-fw\n",
        "hackathon_id": "opportunity-hack-2015-arizona",
        "winner": false
    },
    {
        "description": "\nBuilt With\nnode.jsexpress.jsjavascriptmongodbangular.jsjadebootstrapsassgulp.jsbowernpmbycreptjquerymongolab\n",
        "hackathon_id": "opportunity-hack-2015-arizona",
        "winner": false
    },
    {
        "description": "\nInspiration\nMillions of people suffer from cancer each year. Most of them don't have anybody who can understand their situation. Our aim is to provide a platform for cancer affected families to collaborate and share experience. It also serves as a platform to donate. \nWhat it does\nIt provide a platform for cancer affected families to collaborate and share experience. It also serves as a platform to donate. \nHow I built it\nChallenges I ran into\nAccomplishments that I'm proud of\nWhat I learned\nWhat's next for Kick Back\n",
        "hackathon_id": "opportunity-hack-2015-arizona",
        "winner": false
    },
    {
        "description": "\nBuilt With\npythonjavaandroid\n",
        "hackathon_id": "opportunity-hack-2015-arizona",
        "winner": false
    },
    {
        "description": "\nBuilt With\nmetoer\n",
        "hackathon_id": "opportunity-hack-2015-arizona",
        "winner": false
    },
    {
        "description": "\nInspiration\nI was frustrated that I did not get what I wanted to out of networking events. \nWhat it does\nHow I built it\nChallenges I ran into\nAccomplishments that I'm proud of\nWhat I learned\nWhat's next for RadarTag\n",
        "hackathon_id": "opportunity-hack-2015-arizona",
        "winner": false
    },
    {
        "description": "\nBuilt With\nobjective-ciphone-sdkhere-apiairbus-apidb-apitnt-api\n",
        "hackathon_id": "sbcberlinhack15",
        "winner": true
    },
    {
        "description": "\nThe problem?\nWhat can we do to improve the use of urban public transport?\nWhat it does\nOur solution is an electronic ticketing solutions for public transport networks. The solution allows the users of public transports to seamlessly pay for their ride via our bluetooth sensors.\nThanks to waypay, public administration can set dynamic pricing within their networks and set rewarding tariffs to people using public transport during car traffic peak hours.\nSimple, transparent, seamless.\n",
        "hackathon_id": "sbcberlinhack15",
        "winner": true
    },
    {
        "description": "\nInspiration\nSolve the inneffective way employees travel to common destinations.\nWhat it does\nAnalyses emails with source content and match employees with the same destination to share a ride and provide incentives via rewards .\nHow I built it\nThinking and typing.\nChallenges I ran into\nTransforming company's source data in importable data.\nCreating an attractive user experience.\nAccomplishments that I'm proud of\nManage to import the data provide from the company.\nThe name of the product.\nFinishing on time.\nWhat I learned\nProcesses tht appear to be simple can take more than the expected time to be concluded.\nWhat's next for Shairbus\nPresent to Airbus\n",
        "hackathon_id": "sbcberlinhack15",
        "winner": true
    },
    {
        "description": "\nBuilt With\njavascriptcsshtml5here-apitnt-api\n",
        "hackathon_id": "sbcberlinhack15",
        "winner": true
    },
    {
        "description": "\nGhost Racer was inspired by one of the last xkcd\u2019s (http://xkcd.com/1580/). When you travel from A to B you often have multiple possibilities. This app makes these routes visible and sends ghosts of you along the other routes. In the end you see which routes was the real fastest one because predictions are not always correct. These data is saved and can be used to race against your past selves.\n",
        "hackathon_id": "sbcberlinhack15",
        "winner": true
    },
    {
        "description": "\nBuilt With\nintel-edison\n",
        "hackathon_id": "sbcberlinhack15",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe looked into current shipping processes and the information about the packages that you are able to receive. Nowadays we have opportunities to get information on a shipping, but usually it's basic information such as \u201cparcel in delivery\u201d. In specific situations the sender needs and wants to know more about what's happening with the package on the way.\nFor example when companies deliver important or perishable goods like fresh food or medicine. Then they are interested to know details such as the exact temperature, the light exposure, the exact delivery time and also if the parcel is safe or damaged.\nWhat it does\nPackMon provides information through a variety of censors in real time. It also allows for pro-active communication.\nThe relevant information is communicated via different channels, such as text messages, phone call or via the respective website or app. The customer can get overview of the exact location, alerts if any of the parameters changes (e.g. the temperature gets higher than it should be) or in case the goods get damaged. \nThe value we offer is:real time data on the parcels, which allows for more visibility, control and safety of the shipments. This also makes the approach energy and time saving.\nHow we built it\nWe used Intel's Edison with Groove Startup Kit+ and utilized the APIs provided by TNT, Here and Cisco/Tropo.\nWhat we learned\nIt was great fun and we learned a lot from working with Intel's powerful IoT platform!\n",
        "hackathon_id": "sbcberlinhack15",
        "winner": true
    },
    {
        "description": "\nplz see our pitch \n",
        "hackathon_id": "sbcberlinhack15",
        "winner": false
    },
    {
        "description": "\nInspiration\nFire alarm assembly points\nWhat it does\nVerifies if a building is evacuated by checking who is at the assembly point. Notifies who is missing and contacts them via sms.\nHow we built it\nWhen alarm signal comes, Intel-Edison scans for the user Bluetooth devices available to check if they are at the assembly point. \nChallenges I ran into\nGetting built-in Bluetooth device to work.\nAccomplishments that I'm proud of\nSending sms.\nWhat I learned\nRunning linux shell commands and bash-scripts from C++.\nWhat's next for Smart Evacuation System\nCreating a web-interface for configuration.\nBuilding up a network of several Evacuation points.\nFinding users across a larger area.\nBuild in the redundancy checks to improve the security(e.g. network failure).\n",
        "hackathon_id": "sbcberlinhack15",
        "winner": false
    },
    {
        "description": "\nEmployees in big companies travel a lot and this domain isn't optimized at all. Airbus needs this solution, it's already enough for an inspiration and a few days w/o sleep.   \nWhat it does\nIt collects data from the employees' calendars and booking system, analyze it and notices people about possible possibilities to save money and have a good benefit during next trip or a nice voucher before Christmas.   \nHow I built it\nParsed data, improved data model, implemented an interface for managing data and visualized results.\nChallenges I ran into\nData. It's almost always data. Always you need to do a lot to improve quality initial data.\nAccomplishments that I'm proud of\nJust as always, was very excited before the hackathon.\nWhat I learned\nBusiness needs fast, smart, quality  and business oriented developers and business analytics. They can give a great push to big companies.\nWhat's next for Save money, enjoy traveling\non next step, it needs to test on big real data and calculate savings.\n",
        "hackathon_id": "sbcberlinhack15",
        "winner": false
    },
    {
        "description": "\nInspiration\nWant to know what is the difference in power-consumption between \n\nWater-cooker 1L vs 0.5L\nWashing mashine eco vs 90\u00b0 vs 60\u00b0\nMonitor dark background vs light bg\nDish-washer 30\u00b0 vs 60\u00b0 \nBig cupa coffee vs small cupa coffee\n\nWhat it does\nmeasure and collect power consumption data\nHow I built it\nDigged into/played with Intel Edison and wrote some code ;-)\nChallenges I ran into\nEdimax plug ( sensor ) only 2.4 Ghz - wifi here only ( working ) 5Ghz -> solved via tethering\n Java bindings did not work for me -> wasted a lot of time and then used python to interface Edison \n Problems compiling upm\n...\nAccomplishments that I'm proud of\nKotlin on Edison ( think nobody has done this yet )\nWhat I learned\nEdison is a cool platform \nWhat's next for Meter Edison\nData analysis / Visualisation - more measurements - detect patterns - replace power sensor ( no more CPU redundancy - just use ADC of Edison )\n",
        "hackathon_id": "sbcberlinhack15",
        "winner": false
    },
    {
        "description": "\nNowadays white goods became smarter but of course we should  make them more safety as well. \nAs you know children may think goods as toys. So, it could cause horrible and terrible accident.\nAlso children may put your pets into white goods such as microwave oven. It is also can cause terrible results. \nSo to avoid these results we developed system that can detect vital activities in white goods. \nOur system has several sensors to detect vital activities and it also can integrate to white goods. When system detected vital activity in the machine it does not let machine to run. So this is main idea of our system. \nOf course our system is not end user product. So we should sell the system to big white goods companies. We can sell this system\u2019s patent or licensed product.\n",
        "hackathon_id": "sbcberlinhack15",
        "winner": false
    },
    {
        "description": "\nThey say that beauty lies in the simplest of things. If this is a thing you are looking for then search no more for you have hit the ultimate jackpot!\nModern, simplistic design shows that this game completely focuses on the physics that are the most involving part. The moment you first die is the moment this game casts a magical net on you which will keep you spellbound and interested.\n",
        "hackathon_id": "solidhack201508",
        "winner": false
    },
    {
        "description": "\nNeed to filter my messages based on date, sender and content\nSaw playstore, not many apps were there, and most of them were paid\nSo made a free version for all\n",
        "hackathon_id": "solidhack201508",
        "winner": false
    },
    {
        "description": "\nFeel the power of gravity control in your hands!\nIf you always wanted to control gravity and to move objects without touching them, when you'll play this game your dreams will come true! In the game your main task is to show star the way through the dangerous galaxies and to avoid other deadly objects! Utilize the power of the gravity by tilting your phone and making objects move out of your way!\nExplore various galaxies which include new and unseen objects, environments and much more! Collect tickets to unlock new skins and colorful trails that will make your journey even more exciting and full of fun! Compete with your friends by reaching better highscores then them and become the best galaxy explorer of all!\nDownload \"Galaxy's Journey\" from Windows Phone Store\nDownload \"Galaxy's Journey\" from Google Play\n",
        "hackathon_id": "solidhack201508",
        "winner": false
    },
    {
        "description": "\nBuilt With\naxurekeynotetypeform\n",
        "hackathon_id": "shehacks2015",
        "winner": false
    },
    {
        "description": "\nIt begin with My GrandMother who died with a heart attack\nHealthFirst application is a mobile health and activity monitoring, you will find in only one app The All Your Data Activity Tracker (Fitbit): Number of steps, heart rate, distance, the, Calories burned, The Floor Levels Montes, and all CECI updated in real time as well as you will find aussi from What you say, what you eat, The Who will help to make the UN food thanks to the monitoring application.\nFollowed a training of sports est aussi Offered THUS That sleep Tracking Who is available on request Thanks to the Activity Tracker Who automatically recognizes the fact bedtime.\nHealthFirst The application will allow you to be so safe Through SES geolocation Monitoring Features and heart, and CECI relief or by contacting Relatives and commiserate on their exact position abnormality detection Case rhythm heart, one automatic and instantaneous Way. On the Other Functionality are consider the application as the geolocations pharmacies ACCORDING Drugs and Need of the User and others .\ni want to let people controle they health continually\nTake the Second place of a national competition of technologie developpement called (Jinnovtic)\nI learned that the peoples needs are the center of every developpement and inspiration\nwe wanna call a drone to help people for healing itself and also give a large possibilities for patients\n",
        "hackathon_id": "shehacks2015",
        "winner": false
    },
    {
        "description": "\nGather women app is all about making it easier to get professional women networking and mentoring each other in a convenient way. \nA simple app download, and Linkedin login, and you're ready to find women nearby looking for a mentor, or willing to pay it forward by mentoring the next generation. You can even link up at the peer network. The aim is to get out there and meet for a coffee or a lunch in a way that doesn't cause stress to your busy life.\nGather women will be a free app, with paid subscription for those wanting to remove ads and get additional filtering options. \nFurther monetisation opportunities: suggest places to meet, event suggestions.\n",
        "hackathon_id": "shehacks2015",
        "winner": false
    },
    {
        "description": "\nInspiration\nEveryone wants to contribute to the environment,  but it is hard to think of a way where we can actually make a difference. Furthermore, it is seemingly harder for bigger companies to contribute to forest reservatory projects as a part of their corporate social responsibility. What if there was a way for individuals to bridge that gap, that is carrying out the work that huge businesses want by planting trees and getting subsidized products in return.\nHow it works\nYou can sign up as an individual or an organization. The intuitive UI makes it really easy to start making contributions. Once plant some trees, your efforts show up on the interactive maps which is shared with all your facebook friends. Moreover, you earn points for every tree planted which can be redeemed by buying products for companies that are promoting a cleaner and greener environment.\nChallenges I ran into\nThere were quite a few. Displaying the correct data on the map as soon as people make contributions. Also settings up the reward system took a bit of thinking to layout an effective and engaging method that lures the users to come back and use the app. \nAccomplishments that I'm proud of\nI was proud to combine the satisfaction of social media promotion with e-commerce which users will look to as a win-win situation while also doing something good for the environment.\nWhat I learned\nKeep the things that are harder to implement at the start. Everything else comes in a flow.\nWhat's next for dollarTree\nThe callouts on the map will lead to a detailed view controller revealing the information about that pinned post. This can be used to generate valuable user data to track down users that are most committed in contributing to the environment. Also, another feature would be to show contributions by people all over the world along with your friends to get a more community like feeling.\n",
        "hackathon_id": "onetreeplanted",
        "winner": false
    },
    {
        "description": "\nHow many pictures are uploaded everyday on Facebook, Instragram and other social network websites ?\nHow many likes does those pictures receive ? \nGroot is a mobile application that converts those likes into donations offered by the application sponsers.\n",
        "hackathon_id": "onetreeplanted",
        "winner": false
    },
    {
        "description": "\nInspiration\nIt has become the latest trend to count your steps, track your exercise and to stay healthy! Fitbit, a device for the wrist, does that for you. But, how about tracking the amount of energy you're expending as well as your carbon footprint? We wanted to create an application that lets you monitor how much carbon you're emitting into the world, and allow you to take this knowledge and work towards reducing your carbon footprint by planting a tree! But, you won't be in this endeavour alone. Just like Fitbit, Treebit allows you to connect, compare and challenge all your friends all in an effort to take action and reduce your carbon emission.\nHow it works\nTreebit requires the user to log-in with a Google+ or Facebook account in order to connect the user with their friends. Once on the main page, there are a list of common things that you can click to see how much they contribute to your carbon footprint. The amount of carbon emitted as a result of those actions is shown at the bottom of the screen. Treebit also allows you to see how you are ranked amongst your friends. If you would like to reduce the impact of your carbon footprint and potentially bump yourself up one spot in your ranking, you can buy a tree and prove to your friends that you care about the environment! \nChallenges I ran into\nFinding out ways to calculate how some of the things affected your carbon footprint was difficult in our time frame, as there were tons of factors involved in each of them. Given our time limit, we were able to configure the amount of carbon released depending on the distance travelled by a car.\nAccomplishments that I'm proud of\nConsidering that half of our team had no experience in developing or designing an application, we were able to come up with an idea and bring it to life (almost!). \nWhat I learned\nThrough building Treebit, we learned about the process of making an application using Android Studio, brushed up on our Photoshop skills, and gained a lot of knowledge on how we could reduce our carbon footprint!\nWhat's next for Treebit\nSetting goals and creating daily and weekly challenges with friends are some of the things we hope to include to Treebit, as building a sense of community, while adding some friendly competition is always rewarding! We're also looking forward to adding a progression graph, where users can track their progress and feel motivated or compelled to make a difference! \n",
        "hackathon_id": "onetreeplanted",
        "winner": false
    },
    {
        "description": "\nBuilt With\nphpcsshtmljavascript\n",
        "hackathon_id": "onetreeplanted",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavahtmlandroidgoogle-app-engine\n",
        "hackathon_id": "onetreeplanted",
        "winner": false
    },
    {
        "description": "\nBuilt With\nrubyhtmlcssjavascriptcoffeescriptbootstrapjquery\n",
        "hackathon_id": "onetreeplanted",
        "winner": false
    },
    {
        "description": "\nBuilt With\nswiftiosnode.jsmysqlherokuexpress.jssvg\n",
        "hackathon_id": "techretreat",
        "winner": true
    },
    {
        "description": "\nInspiration\nFor Sean and Neerajen's final project for their AP Physics C course, they had to build a digital seismograph. This project involved many Integrated Circuit chips, PCBs, and resistors. \nLots of resistors.\nThere were so many resistors in so many different values such that the progress on the seismoeter grinded to a halt. They had to consult a table every time to solder a resistor in. And they didn't finish the seismograph.\nBut with an app that could tell them the value of the resistor, they would have been able to finish their project. So to prevent any future encounters with resistors, we as a team decided to make Resistora: the image recognition resistance finder.\nHow it works\nThe app's UI is quite simple. Open resistora, and align resistor with the two lines in the center of the app screen. Our manually overrided camera control algorithm will zoom in and take a picture for image processing and calculation, which will then be displayed at the bottom. \nChallenges I ran into\nWorking with RGB and hue was very difficult. It is difficult for a computer to differentiate between colors such as Red, Orange, Brown, and Gold. As such, we tried multiple methods to identify the location of the colored bands on each resistor - such as Floodfill, normalizations, and transformations. Ultimately, we were able to find a way to identify the colors and its location using a graphing technique, and local maxima.\nAccomplishments that I'm proud of\nWe used our knowledge from AP Physics to find an efficient solution to image processing. Firstly, each column was averaged. Then, the lightness and saturation were calculated from the image. One interesting thing we noted is that at each band on the resistor, the saturation value would spike. This would mean that all we would have to do is find the local maximas and then find the rgb values at those locations. However, this would occasionally produce false positives which were eliminated by using the lightness data. Whevener the lightness dropped, creating a local minima, this would indicate a band. This actually worked!\nWhat I learned\nWhat's next for Resistora\n",
        "hackathon_id": "techretreat",
        "winner": true
    },
    {
        "description": "\nInspiration\nSigma is built around the notion of internet privacy, specifically regarding messaging systems. A typical messaging system requires that messages be saved on a remote server; however, with recent developments regarding the NSA, it is clear why one might not want to leave a digital trail when using the internet. \nHow it works\nSigma uses a peer-to-peer (P2P) system to deliver chat messages, making sure the only location messages are saved is your computer. First, the client connects to a bootstrap server, which facilitates the distribution of client IPs to each other. From that point onward, clients only communicate with each other. The protocol is designed in such a way that even if the bootstrap server is compromised, the worst possible outcome is that user lookup will not work. Never will your messages be sent to someone who you didn't intent on receiving it.\nChallenges we ran into\nLearning JavaFX to implement the GUI was troublesome, but it was nothing compared to getting the initial Peer2Peer connection established and messages delivered.\nAccomplishments that we're proud of\nWe are really proud of the fact that we got the Peer2Peer messaging to work, especially given our time constraints and pivoting that happened during the hackathon itself.\nWhat we learned\nWe learned how to work as a team to engineer a solution, resolve issues through compromise, and use java to create a prototype P2P chat system. We had to learn JavaFX and advanced networking in Java.\nWhat's next for Sigma\nCode refactoring, code optimization and redundancies. The app can have more features added to it, both on the GUI and server side.\n",
        "hackathon_id": "techretreat",
        "winner": true
    },
    {
        "description": "\nInspiration\nAfter numerous news reports of helpless kids stuck in sweltering cars, we decided to put an end to accidental child deaths, as well as add additional services which provide the parent/guardian with an affirmative understanding of their child's environment\nHow it works\nNumerous sensors connected with a central Intel Edison communicate the ambient surrounding of the child to the the parent's iPhone, allowing them to receive an update, whenever the software feels it is an unsafe environment for the toddler.\nChallenges I ran into\nComputer equipment not co-operating, massive code issues, sensors not reading data quick enough\nAccomplishments that I'm proud of\nAble to develop in a completely new language, make new friends, work with people that share the same interests that I do.\nWhat I learned\nSlow and steady wins the race. There is no need to rush, as it will only cause you to stumble and make mistakes in the code.\nWhat's next for KidKeeper\nKickstarter campaign to conceive a startup company.\n",
        "hackathon_id": "techretreat",
        "winner": true
    },
    {
        "description": "\nBuilt With\nmuseprocessingjava\n",
        "hackathon_id": "techretreat",
        "winner": true
    },
    {
        "description": "\nInspiration\nOur inspiration comes from trying to organize a meeting between some friends, many of us whom were spread out across Toronto. We wanted a quick and easy way to find a meeting place which was a viable distance from everyone that we could meet at. From that simple problem stemmed the idea that eventually grew into HalfWay.\nHow it works\nHalfway is a friend-group organization app designed to determine an optimal meeting location based on the locations and preferences of multiple people. Halfway takes in the locations of multiple users who want to meet up. It then takes in the type of venue that they want to meet up at whether that be a restaurant, cafe, movie-theater or another location.  From there it recommends venues in the selected category which minimizes distance traveled for all the participants.\nChallenges we ran into\nA lot of the APIs proved more difficult for our team to use then expected, Google's and Facebook's APIs in particular.\nOn the suggestion of one of the mentor's, we eventually chose to use parse rather than Facebook's API a decision which helped a lot.\nWhat's next for Halfway\nWe want to touch up the app a lot and add some additional features in the future. HalfWay, while in working order, still has ways to go!\n",
        "hackathon_id": "techretreat",
        "winner": false
    },
    {
        "description": "\nCreating the perfect playlist is difficult and time consuming. Furthermore, listening to a song that is perfect for your current mood and activities is rare. Ex. Listening to death metal while trying to fall asleep. Music by Mood helps you by categorizing your music into separate folders based on many of the music's attributes, such as tempo and loudness. The app uploads songs that you own to the echo-nest api and, after filtering the songs by numerous attributes, it returns a folder where the music is located, containing all of the sorted music. \n",
        "hackathon_id": "techretreat",
        "winner": false
    },
    {
        "description": "\nHow it works\nThe App prompts the user to select what types of food they would like to eat, how healthy the user wants to be, and the maximum distance away the user is willing to travel for food.  The app then uses this info and checks our online database and displays all restaurants that are within the specified radius of the user that matches the user's  tastes.\nChallenges I ran into\nGetting the user's current location was one of the more difficult challenges that our group faced due to bad GPS connection.  Another major challenge we faced was setting up the database and webserver.\n",
        "hackathon_id": "techretreat",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaapplet\n",
        "hackathon_id": "techretreat",
        "winner": false
    },
    {
        "description": "\nMyoRPG\nAuthors: Peter Stakoun, Kevin Shen, Stephen Zhao, Marcel O'Neil\nMyoRPG is an integration of the Myo with an elementary, web-based RPG game.\nhttp://myo-rpg.herokuapp.com/\nThe inspiration for MyoRPG came when Peter became frustrated about the lack of ideas going around the table at the start of the hackathon. He proceeded to threaten to slap someone in his frustration. We compromised and agreed to make a game so Peter can slap people virtually. We figured we needed arm movement to map the arm actions to the game, which was a web app. In this game, called MyoRPG, you will be a \"character\" and kill enemies by executing actions with Myo (atleast that's how it's supposed to work in theory).\nOur game is hosted on Heroku and we used the Myo.js library instead of using the native Myo SDK. We coordinated efforts using Github, a version control software that allowed collaboration between multiple developers.\nMyo.js proved challenging as we had to manually sweep search pages of documentation to find help. Eventually by lunch we had mapped all the action including fist, spread, right wave and left wave onto the web app. \nAfter lunch, we began designing the game logic and graphics which in all honestly was so much easier than configuring Myo. The game proved just as amusing to play as watching Peter rage after attempting to sync the Myo.\nWe admit that the game could be optimized further as the Myo is still crude in detecting actions (it will sometimes mistaken a spread as a fist). However, give our time constraint, we've made remarkable progress at developing the game.\nWe are definitely impressed at our results and we believe that this game is perfect to relieve stress and to provide some quick entertainment, especially after hacking for hours upon hours without rest.  \nContribution by group members:\n\nKevin Shen: Created and managed Github repository and Heroku deployment. Coordinated project efforts.\nPeter Stakoun: Developed the backend and various Javascript components that facilitates the deployment of the Node.js server.\nMarcel O'Neil: Primary frontend developer who created web HTML and CSS structure to contribute to the game's appearance and user interface.\nStephen Zhao: UI/UX desginer who is responsible for user interface design and user experience with the Myo.\n\n",
        "hackathon_id": "techretreat",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe thought of this when Jon's mom mentioned we should pay for gas in the car\nHow it works\nThe data is stored in a SQL Server table. Entity Framework is used to manage the data. Breeze pulls data from the controller and provides a client-side interface for Entity Framework. Durandal provides navigation between pages. Knockout provides data-binding between html and javascript. Bootstrap provides styling. Google-directions API provides the statistics and directions for the car-pooling trip.\nChallenges I ran into\nNuget dependencies were breaking the Hot Towel package and specific versions had to be manually installed. Windows 8 updated and provided a 30 minute delay. Sql server took about 45 minutes to install and set up, during which Visual Studio wasn't working.\nAccomplishments that I'm proud of\nGetting everything set up and working together in time.\nWhat I learned\nInstall SQL Server beforehand to prevent large delays.\nWhat's next for WhipFinder\nSupport multiple riders, show all matched carpools for a specific user, authenticate based on email password combo, support over internet\n",
        "hackathon_id": "techretreat",
        "winner": false
    },
    {
        "description": "\nInspiration\nHacking is often not accurately portrayed in media, and especially in video games. The creators of hacking scenes often glaze over what actually happens in favour of speed and glam. But hacking is more than this and we hope that with H.A.T.T. we can better represent hacking in video games.\nWhat is H.A.T.T.?\nH.A.T.T. (Hack All The Things) is designed to be a proof-of-concept for a video game mechanism in which the user can realistically 'hack' into computers and files as part of a mission, be it as part of a virtual criminal organization or on the side of the good guys. \nHow it works\nH.A.T.T. emulates a terminal, in which the user can create and edit 'files' and explore the different directories - just as if they are using an actual command line. Using Java, we embedded Lua so that the user can write and execute scripts in Lua using the user interface, which looks just like a normal command terminal. We also made many standard Linux commands available for the user to use, which we wrote in Java to complement H.A.T.T.'s virtual file system. We restricted the use of Lua libraries and commands so that H.A.T.T. remains isolated from a real computer's files. H.A.T.T. is not created to teach users how to hack; rather it provides a fun and easy way for players to interact with computers in a realistic manner.\nWhat's next for H.A.T.T.\nHacking can be easily incorporated in many video game plots; whether it be something as small as manipulating a security system so that the rest of your team can enter a building unnoticed, or as focused as completing missions for an anonymous hacking organization, computers are an integral part of the player's experience and H.A.T.T. can enhance that. We see H.A.T.T. being implemented into a game, where a user can first learn the basics of our virtual command line and then complete missions as part of a larger goal.\n",
        "hackathon_id": "techretreat",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe were interested in the Myo and its potential in making many parts of everyday life easier. One of the highly important issues of today is the idea behind digital security. Weak passwords make it easier for hackers to compromise. Long passwords are difficult to remember. Our project is the solution as gestures make it easy to remember and maintains security in a local environment. When you're near your computer, you can access your accounts with gestures while maintaining overall security. \nHow it works\nUser inputs a series of gestures and the program connects this character string with the plaintext password. By inputting the gestures, the password would be released from the program and be used to login to a gmail account and send an email. \nChallenges I ran into\nNobody on the team had used python or the Myo before. It was a learning experience for everyone.\nAccomplishments that I'm proud of\nWe actually made something that works in the short amount of time that we were given. \nWhat I learned\nThe Myo SDK does not allow a great deal of flexibility in terms of development. \nWhat's next for Motion Based Secure Entry\nA GUI, increased security, use in all apps, not just gmail. \n",
        "hackathon_id": "techretreat",
        "winner": false
    },
    {
        "description": "\nInspiration\nPeople get burned out when working on things too long, so we want to help that.\nHow it works\nPomert helps you take breaks efficiently, without needing another powerful distraction like a smartphone next to you to do it. With the low powered smartwatch pebble, we are able to give users an easy way to utilize proven productivity methods like the pomodoro method to work more efficiently without burning out.\nChallenges I ran into\n1: The app does not work.\n2: The functionalities that are key to this do not work with javascript, and only with advanced C.\n3: We do not know C.\n\nWe cannot learn enough C to make this work.\n\nAccomplishments that I'm proud of\nAlthough we were limited by both time and software, we pushed every other functionality that we wanted into the mvp.\nWhat I learned\nPebblejs is an awful, terribly documented framework that should be avoided at all costs in the future. (Unless it's for analytics.)\nWhat's next for Pomert\n-Remaking it in C(i.e. Making it work.)\n-Adding user specific work-rest schedules through algorithms.\n",
        "hackathon_id": "techretreat",
        "winner": false
    },
    {
        "description": "\nBuilt With\njavaxmlandroidandroid-studiogoogle-mapsgoogle-playparallax-scrollrecyclerviewcircleimageviewpicassoparse\n",
        "hackathon_id": "techretreat",
        "winner": false
    },
    {
        "description": "\nInspiration:\nAs future Waterloo students, we envisioned an app that connected students in the same course together. This app should make Waterloo life as a student easier with constant communication with your peers. \nHow it works:\nLog in with your WatIAm credentials (not finished). Select, or search for, your course subject and course catalog. Discuss with other peers in the same courses about course content, exams, etc.\nChallenges I ran into:\nRESTful API, MySQL Database integration with Android, Gradle\nAccomplishments that I'm proud of:\nImplementing the UWaterloo API to retrieve all subjects, and all course catalogs for each subject.\nWhat I learned:\nNever trust Gradle, Android is far different from traditional Java programming\nWhat's next for Lectorial:\nImprovements to user experience\n",
        "hackathon_id": "techretreat",
        "winner": false
    },
    {
        "description": "\nInspiration\nEvery year, there are a countless number of seniors who are injured or worse because no one sends them help in the event of a fall. We know of seniors who lived alone, suffered from heart attacks, and could've been saved if they were immediately sent help. We want to make sure that these tragedies don't occur again in the future with the app that we created.\nHow it works\nWe used Android Studio to create this app and combine both the front-end and back-end code. The fall detector uses the phone's built in accelerometer to detect when the acceleration increases and comes to an immediate stop (what happens during a fall). Then, using the Google Maps API and the phone's GPS, we extracted the user's current location and sent a link of their current location to their emergency contacts via SMS. Their contacts will then be aware that the user of the app needs help.\nChallenges I ran into\nWe had many challenges including the current location function. Initially, we wanted to solely use the GPS but it didn't work. We then switched it so that it used the Google Maps API instead. We also had some problems with putting the app together in terms of back-end and front-end.\nAccomplishments that I'm proud of\nWe are proud of being able to incorporate the phone's native Contacts and SMS functions into our app instead of using external APIs. This results in a more efficient app.\nWhat I learned\nWe learned to always save a working copy of the app before we proceed and add additional functions to it.\nWhat's next for Stay Up\nWe wanted to add a notification on the lock screen for the user so that even if the phone's screen is off, the phone would be waked and notified about a fall. To do this, a service would have to be created.\n",
        "hackathon_id": "techretreat",
        "winner": false
    },
    {
        "description": "\nPicture this. You\u2019re jamming out to your favourite song, its hitting all the right notes in all the right places, but as with all things, it comes to an end. The next song then goes on to be totally different, and then kills the mood. We\u2019d like to change that with the muse. Our app is called: Muse-ic.\nMuseic is an app that allows you to store your brainwave data as you listen to songs you enjoy, give them a rating and a tag for how they made you feel, and then use that data to suggest songs that others have had a similar brainwave experience with.\nAll of this is made possible with an API muse provides called libmuse. By using the data sent from the muse, we can measure your musical experience through 5 different brainwaves:\nAlpha Waves, Beta Waves, Gamma Waves, Delta Waves and Theta Waves. Briefly describing each of these waves, alpha waves measure how relaxed/calm you are, delta waves measure how sleepy you are, beta waves measure how much you are actively thinking or problem solving, theta waves measure very deep relaxation/visualization, and gamma waves measure high mental activity and consolidation of information. When you listen to music, these waves will change accordingly with how you experience the music.\nLet\u2019s take you through the flow of the program. In our demo, you\u2019d start off at the main screen with a Record Data button and a Suggest Song button. Before you start getting suggestions, we must store some brain data in the program. You\u2019ll press Record Data, then you\u2019ll pick a song from a song database and then press record. When the song ends or from when you press stop, you\u2019ll be directed to a page where you tell us how the song made you feel, and your rating of the song, and then you can save/delete it. \nWhen you press suggest a song, our app can approach this from different perspectives. Muse\u2019s libraries allow us to get the data for each of those different kinds of waves as a value of its amplitude relatively or absolutely, and we can use the average values of these songs to match you with other songs that have similar averages. Another approach is to match the actual pattern of the song, such as the amount of bumps in the brainwaves during the song and matching those attributes, or we could even find similar curves in other songs. In our app, after you press suggest a song, you can select a tag for the feeling you want from the song (this is also data that is averaged, which is stored in the user storing stage). Then muse will use the mentioned algorithms to suggest songs for you!\n",
        "hackathon_id": "techretreat",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtml5webglthree.jswebvropengl-esusgs\n",
        "hackathon_id": "techretreat",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe could not find a an application which let us find university clubs or events, their locations and requirements. In the play store there was an application that let you find courses that you could drop-in on, this application was named UW Drop-In, this is where we got some of our ideas. Although we started with the idea of making a specific application to tackle this problem in the University of Waterloo we decided to generalize our application and make it so that anyone could add events and anyone could find them. \nHow it works\nOrganizers of events ,like clubs or parties, can add event details to our server which then can be accessed by anyone by finding the event on the map in our application. They can find event information such as room number, coordinates (latitude and longitude), requirements, times, etc.\nChallenges we ran into\n\nImplementing the OpenStreetMap library correctly into our application and having a visible map was a huge challenge\nMaking a server taught us many things along the way and we encountered errors that were hard to find but easy to solve\nGithub breaking our code due to people trying to merge programs and having conflicting code\nDebugging our application was very frustrating at times \nAccomplishments that we're proud of\nGetting a map to work in our application\nMaking a server\nUsing Github to collaborate effectively on the project\n\nWhat I learned\n\nAlong the way we learnt many tricks and some concepts in Java, Javascript and XML\nHow to make a server using Heroku and Javascript\nHow to integrate OpenStreetMaps into an Android application\nHow to integrate our server into our Android application\nHow to use GitHub\n\nWhat's next for Findr\n\nAdding more options in creating an event\nAdding the option to have limited spaces at an event\nAdding the option to add tickets to an event\nAdding the ability to search events (using a search engine)\n\n",
        "hackathon_id": "techretreat",
        "winner": false
    },
    {
        "description": "\nInspiration\nI have always been fascinated by Machine Learning, and I wanted to create a project that would allow me to utilize this area of research. Along with this, I noticed the growth of Salesforce, the world's largest CRM tools and wanted to see if I could make something that would empower businesses to keep track of customers (or potential customers), similar to what Salesforce does. Today, Twitter is becoming a large part of the way businesses interact with customers and I felt the space for a tool that integrates Twitter and CRM has not been adequately filled.\nHow it works\nUsers can start obtaining data for a marketing campaign by entering a hashtag. This hashtag is then sent as a GET request to the Twitter Search API. Before I send the GET request, I filter the possible results by removing retweets and ensuring the most popular (100) results are shown. Once the tweets have been retrieved, the text of the tweets are sent as a POST request to sentiment.vivekn.com/api/text, which returns a sentiment and confidence score. If the confidence score is below 70, I ignore the result returned by the endpoint. Data is then stored locally and presented in an easy to read format. A key feature is the fact that users can add \"Engagements\", that is to say, target specific users and interact with them. The UI was created with UIKit and Masonry (a wrapper for programmatic AutoLayout).\nChallenges I ran into\nOne challenge that I ran into was that data was loading very slowly. Twitter's API returned results quickly, but the same could not be said for the sentiment endpoint. Due to the architecture of my app at the time, the Twitter API would stop getting called as the sentiment API was running. Looking into how to optimize my network calls, I learned about multi-threading. I ran the sentiment API calls on a background thread, enabling the important data to load quickly and ensuring that the user could still interact with the UI.\nUnfortunately, running calls on the background thread, made it hard to know when to update the main thread. To solve this challenge I attempted to use NSNotificationCenter, which ended up solving the issue. I am still working on fully understanding how this solution worked, and I am confident I will be able to do so.\nAnother challenge I ran into was deciding how to store the data of the app, as lots of data was coming in and going out. To approach this challenge, I decided to use a singleton, that could be read and written to from anywhere in the app. This challenge was overcome during the hackathon, but as I move on further with this project, I will look into using Core Data to handle the data.\nAccomplishments that I'm proud of\nI am proud that I was able to create a functional prototype of a powerful tool in under 7 hours. Furthermore, this was my first hackathon, and I am glad to enter the world of hacking!\nWhat I learned\nThrough this project I learned about multi-threading and its use case. It's impact was understood when I was optimizing my application. Along with this, I learned about \"blocks\", a language feature of Objective-C.\nI also learned more about HTTP requests with Objective-C and found a powerful wrapper (UNIRest) that I intend to use in my future iOS projects. \nWhat's next for Pipio\nThe next goal for Pipio is to use a better API to analyze the sentiment behind a tweet. The current API is not very accurate, and I am interested in working with IBMs AlchemyAPI. \nI would also like to add more features to Pipio and store the data in a database for faster query and more structured storage of data (Core Data). Additional features would include: having a conversation with a specific tweeter, increasing the size of the data set and presenting data in charts and diagrams (with the option to save as a PDF).\nI am excited to continue with this project!\n",
        "hackathon_id": "techretreat",
        "winner": false
    },
    {
        "description": "\nmusetation\nMusetation (mews-tay-shun) is a web application that connects with a muse to bring you more efficient meditation through the science of binaural beats.\nBrought to you by @johnafish and @foleyfactor for the Waterloo 2015 tech retreat hackathon.\n",
        "hackathon_id": "techretreat",
        "winner": false
    },
    {
        "description": "\nInspiration\nHad no idea what to do for this Hackathon, ended up browsing the internet. Found someone wishing there was an easy way to share resumes. Here we are!\nHow it (should) work\n*** Disclaimer: First time at a Hackathon, IDE had to be reinstalled, and this is new territory - most of the backend does not function! ***\nA user downloads the app, and then goes to the \"Create Resume!\" tab. The tab is a simple wizard which asks for the user's information - ex. name, contact details, past employments, skills, etc. Finally, the wizard asks the user to select several words which describe themselves.\nThe wizard then generates a resume with the user's input, using the 'several words to describe themselves' as qualitative, flavour words (as well as synonyms, if the wizard did not get enough words).\nThis resume is then saved by the device in XML format. It can be beamed to other devices using NFC (Near Field Communication), and this app, or it can be saved as a .pdf or .docx, using more synonyms of the 'flavour' words that the user entered.\nFinally, the user can purchase (online, and/or from us) NFC tag stickers - these can store the user's resume in quasi-XML format to be read by other devices with the ResumApp app - which can be stuck to something like a user's business card (resume is now built in)!\nChallenges I ran into\n\nFirst time at a Hackathon, had no idea what was going to happen (no idea prepared, either)\nIDE had to be reinstalled, twice, which took about 3 and a half hours\nNo previous experience doing something like this, just vague knowledge about the topic\n\nAccomplishments that I'm proud of\nMostly stuff under the \"What I learned\" category.\nAlso:\n\nTasks I've done before (making a website, setting up a hosting service) went very well, and was pretty easy (see http://www.resumapp.tk )\nLearned a lot, including about the importance of preparation, and also the value of brainstorming\nDid not procrastinate, at all\nIdea is probably marketable\n\nWhat I learned\n\nMore experience working with Cordova + Ionic to make mobile apps\nUsing C++ and C# to create native mobile apps (strongly recommend avoiding C++ for this though)\nHow NFC works\nHow much fun Hackathons are\n\nWhat's next for ResumApp\nSo much stuff!\nIntended to be part of the release today, filtering of other's resumes (so that HR people can easily find the employees they need, with the help of filtering tools).\nReviews - set up a master SQL server, have every account be able to receive public reviews, as well as offer the ability to send Reference letters directly to the company requesting them (so the user never sees them, just the senders and the recruiters).\nQR codes (they store more information, big potential benefits here).\nAnalytics for people making resumes - hot words, what kind of people/resumes are being hired, etc.\nThe entire human resources industry could be changed!\n",
        "hackathon_id": "techretreat",
        "winner": false
    },
    {
        "description": "\nInspiration\nEvery day, people are constantly running into the problem of not knowing to whom they owe money, and who owes them money. Tabb is designed to solve this fundamental problem by creating a platform where all monetary transactions and tabs are transparent.\nHow it works\nTabb allows users to create groups or join groups for specific projects or events. As the group spends money, the receipt information is uploaded. Tabb takes the amount of money spent by each person and provides a real time image of the current financial situation of each member of the group.\nChallenges I ran into\nThe Tabb group has never used firebase before, and ran into some troubles getting ideas coded.\nWhat's next for Tabb\n\nOCR - Using Picture to Text technology to speed up bill splitting process. Simply take a picture of the receipt and Tabb will process the numbers!\nE-Payment options - Allowing tabs to be paid via Interac e-Transfers, Paypal or credit card.\nFilters - Allowing users to filter all debts through people, amount, or activities.\n\n",
        "hackathon_id": "techretreat",
        "winner": false
    },
    {
        "description": "\nPurchaseMate is a barcode scanning app which brings transparency to your shopping cart. By using your smartphone to scan the barcode of a product in a store, this app will give you easy access to the details of the corporation that produces it, including their donations to political and charitable organisations and their UN Human Rights rating. Our aim is to make socially conscious shopping easy and accessible. \n",
        "hackathon_id": "outboxdemoday",
        "winner": true
    },
    {
        "description": "\nInspiration - My Dad really likes electric cars and he was wondering, if we got one how we would find all the charging points. I thought this was an interesting problem, so I decided to make reCharge My eCar.\nHow it works - reCharge My eCar is an app for electric cars, it shows where all the charging points in Ireland are and whether they are in use in real time! No more waiting in queues for hours to charge your car. also, you can get directions and plan journeys through the app.\nChallenges I ran into - The main challenge I had was using Xcode, Xcode helps you test out your app on your phone or tablet. It was my first time using it and to be honest, it was pretty hard to figure out. But now I know how to use it now, with the help of one of my CoderDojo (coding classes) mentors and YouTube!\nAccomplishments that I'm proud of - I am proud that I now have the app running on my phone and that the app works really well! reCharge My eCar has won a few awards - 2 Eircom Junior Spider Awards and a Coolest Project Award, so I am very proud of that! Also I have talked about it at the WebSummit 2014 on the 'Main Stage' on front of 5,000 people and on the 'People's Stage' there too. I have done a few radio interviews, tv interviews and interviews for the newspaper about reCharge My eCar.\nWhat I learned - I learned so many things from reCharge My eCar, I learned more about coding, developing apps, presenting, electric cars, STEM and of course I have learned lots over here at Outbox and that opportunity came from reCharge My eCar!\nWhat's next for reCharge My eCar - I would really like to expand reCharge My eCar to different countries and I really want to publish reCharge My eCar so people can download the app!\n",
        "hackathon_id": "outboxdemoday",
        "winner": true
    },
    {
        "description": "\nInspiration\nFree Feet treats gait freezing, a symptom which affects approximately 72% of people with Parkinson's. Every hour, someone in the UK is diagnosed with Parkinson's disease, showing just how large the scale of the problem I'm trying to treat is. The inspiration behind Free Feet came from when I was discussing treatments for Parkinson's patients, at  the kitchen table, with my brother, who is a movement disorders (Parkinson's) nurse. He said that there weren't many treatments available for gait freezing, so I decided to see what I could do to help. This is where the idea of Free Feet was born. I also have an emotional connection to Parkinson's as I have a neighbour who sufferers from the illness, so I knew the impact that both gait freezing, and Parkinson's can have on quality of life. This really inspired me to pursue and develop my idea, as there is no known cure for Parkinson's, finding new ways of treating it is really important.\nHow it works\nFree Feet treats gait freezing in Parkinson's Disease. It is a laser device attached to the side of a shoe which is designed to help reduce gait freezing for Parkinson's sufferers. Gait freezing is a very common symptom which affects approximately 72% of people with Parkinson's, it is a shuffling movement in the legs and feet. The laser places a red dot on the ground in front of the user. This then changes the users walking from being automatic to non-automatic. This is really important, as in Parkinson's, there is a deficiency in the neurotransmitter (chemical) dopamine. Dopamine is responsible for movement and muscular action, so when there's a deficiency in dopamine, reduced mobility also occurs. However, the midbrain is more severely affected than the frontal lobes. Free Feet works by enabling the user to change their walking from being automatic to non-automatic, when they focus on the dot. This is really important, as it means that the user employs the frontal lobes instead of the midbrain, meaning there is more dopamine available to them, and therefore more ability for movement to occur, thus decreasing the severity of the gait freezing episode. Small scale clinical trials, which we have carried out in collaboration with the Galway Parkinson's Association have shown very positive results, with an approximate decrease in freezing severity of 40%.\nChallenges I ran into\nI have faced many challenges in the development of Free Feet, as being a young woman in STEM, I have always been in the minority of my peer group. I have faced the challenge of overcoming the barrier of youth, as in professional situations, such as networking events, it is hard to ensure that you and your ideas are taken seriously and that your work is appreciated for its full value. An example of this I like to share is a networking event which I attended recently, and because of my age, I was asked if I was looking for one of my parents. I thought that this was certainly a situation in which I was not being taken seriously, and overcame that challenge by explaining my presence and work. \nI have also faced the challenge of balancing my work and school life, whilst working on the development of Free Feet, I have completed the A-Level equivalent exams (Irish Leaving Certificate) and earned my first choice course in University (Biotechnology). I thought that this was quite a challenge, as I had to balance my time and resources very carefully, but it worked out for the better in the end!\nI also faced the challenge of learning the technical skills necessary to build the prototype of the device. Free Feet is a device which I built myself, at my kitchen table. In order to do this I needed to learn electronics, soldering and stitching skills, and they were quite the challenge to master!\nAccomplishments that I'm proud of\nI'm very proud that I have successfully trialled a medical device which I created at my kitchen table, and have found that it could help reduce the severity of gait freezing by such a vast percentage.\nI'm really proud, that against the odds, and people telling me that it would not be possible, I've kept making progress with the commercialisation of my device. I'm very proud that I have recieved the backing of my national medical device association, the IMDA, and that they believed in me and my abilities enough to invest in my personal development.\nI'm also really proud that developing my device now means, that I have, at my fingertips, the potential to help millions of people around the world suffering from Parkinson's disease. I think that it is really fantastic to be able to reach out and help others through technology, and I'm immensely proud of what I have achieved thus far. \nI'm really proud of getting into the outbox incubator, its something that I never thought would have been possible for me to achieve, and I'm just delighted.\nI was really proud to get the opportunity to present Free Feet to our national minister for health, and to learn that he was very impressed with it was fantastic, he said that he hopes to see it in use in the very near future.\nWhat I learned\nI learnt a lot about how a company works and how to properly forecast financial expenditure. I also learnt more about brand image and how to appropriatly convert that to the consumer. This has led to me being much more conscious regards the logo aand web presence of the business.\nWhat's next for Free Feet\nFree Feet now needs funds in order to be able to reach its full potential. This involves raising finance in order to cover the day to day running costs of the business in the immediate future, as well as funds to cover the cost of a clinical trial and product R&D.\n",
        "hackathon_id": "outboxdemoday",
        "winner": true
    },
    {
        "description": "\nInspiration: One of the founders of Asthma Efficient happens to suffer from asthma (Martha) and loses things quite often. Therefore we came up with an easy solution so that asthmatics such as herself won't lose their inhaler and end up in a sticky situation.\nHow it works: There is a microchip attached to the side of the inhaler which will vibrate and alert the user when they are over 100 metres away from their inhaler. This will prevent them from forgetting their inhaler somewhere.\nChallenges I ran into: We had a slight issue with time since we came up with our idea quite late. This resulted in us being quite stressed and flustered when things weren't working, especially when our website was not responding to its domain.\nAccomplishments that I'm proud of: We are proud that we managed to pull off this pitch in quite a short amount of time and managed to fit everything into place.\nWhat I learned: We learned how to create websites, pitch decks and to keep persevering.\nWhat's next for Asthma Efficient: Hopefully in the future we see Asthma Efficient on shelves all over the country that will aid asthmatics to keep their inhaler with them so they will not end up in a fatal situation.\n",
        "hackathon_id": "outboxdemoday",
        "winner": true
    },
    {
        "description": "\nInspiration\nDepression affects millions of people everyday in our world and we want to do something to change that. \nHow it works\nPositivity Pack is a small package designed to brighten someone's day or cheer them up when they're down. You can purchase the packs through our site and send them anywhere in the world.\nChallenges\nI ran into Our website was hacked numerous times, stock never arrived on time, shipping costs became and expensive challenge and building a following on social media. \nAccomplishments that I'm proud of\nWe reached almost a thousand followers on Twitter and a hundred likes on Facebook. We've received messages from all over the world from people requesting the packs. The site won a Junior Spider Web Design award for Best Concept. \nWhat I learned\nI learned about the alarming statistics for suicide and depression rates in the UK. I learned how to run a business and manage finances. I learnt about finding the best place to purchase stock and how to decipher which sites are the best. \nWhat's next for Positivity Pack\nWe hope to receive money for better stock and pre printed packaging. We also hope to develop our website into a hub for happiness where users can relax with fun features and a great experience. \n",
        "hackathon_id": "outboxdemoday",
        "winner": true
    },
    {
        "description": "\nWe all live in the countryside and feel that people, especially children should get outside and learn more about the world they live in.\nPeople upload walking routes with tagged plants/wildlife and then other people (mainly children and their families) go on the walk and see what they can find.  There are virtual medals/badges and local leader boards as incentives for children.\nWe had never done a project like this so everything we did was new but we worked well together to overcome the hurdles.\nSeeing our finished prototype and our finished elevator pitch.\nI personally learned how much I really enjoyed the coding element and general Computer Science which as possibly shaped my career future.\nWe will be pitching for access to an app developer to create our app and hopefully we will receive mentorship so we can get Envirocache out there for everyone to use.\n",
        "hackathon_id": "outboxdemoday",
        "winner": true
    },
    {
        "description": "\nElectri-City\nElectri-City is a gender-neutral toy that aims to break down gender stereotypes, avoiding prejudices by introducing children to STEM from a young age. \nElectri-City currently has 3 main components, which can either represent part of a city's infrastructure or electrical component from a circuit. These are:\nEllie the LED\nEllie looks like a house but will light up when connected to Matty.\nMatty the battery\nMatty looks like a power station, and contains a coin cell that provides energy for the circuit.\nAya the wire\nAya is a road and she can help to connect any other components together.\nElectri-City components are designed to be environmentally sustainable. The pieces are predominantly wooden and Matty can be opened up to replace the battery, avoiding having to replace components often. This reduces waste and saves on cost for the consumer. \nSmall components such as the LED have been set in resin to make them bigger and more difficult for young children to swallow.\nTo ensure that Ellie is always connected the right way in the circuit, all components attach magnetically, so if a child tries to insert Ellie in the wrong way the magnets will repel. Another advantage of using magnets is that a strong connection is made, ensuring the current will flow.\nI hope to expand Electri-City in the future by making more components available or by creating follow up kits for older children, helping them to continue on their journey through STEM.\n",
        "hackathon_id": "outboxdemoday",
        "winner": true
    },
    {
        "description": "\nInspiration\nLack of education in sport nutrition requirements\nHow it works\nCalender like app that reminds you of recommended times to eat on the build up to a match and supplies nutritious recipe\nChallenges I ran into\nDesigning the prototype \nAccomplishments that I'm proud of\nFinding a solution to the problem of lack of education\nWhat I learned\nNutritional values of various foods\nWhat's next for Nutricountdown\nTo go from being an app for just GAA sports to any sport worldwide\n",
        "hackathon_id": "outboxdemoday",
        "winner": false
    },
    {
        "description": "\nInspiration\nAt age 13, I had to decide what subjects I wanted to take on at GCSE level. I therefore had to consider what A-Levels I wanted to take and in order to do that, I had to look at what degree I wanted to study at university- if I wanted to go to university at all. I struggled to choose the subjects I was going to drop-. 'Which of them would lead to a career I'd enjoy in the future? Which degrees were a possibility? Had I limited my options severely?'- these were the questions that I struggled to answer. \nAnd I wasn't the only one. I was surrounded by people in the same situation; intimidated by those who had already fixed their heart on a career path, we felt as though we were deciding our futures without sufficient information.\nChallenges I ran into\nCurrently I own a chrome-book which limits what I can do with the code developing for the website. For the sign up/log in function I originally wanted to use Python (this is the language I studied for GCSE) with Flask. However, I wasn't possible to install python on the chrome-book in the first place so I used the UserApp plugin. \nAlso, HTML5 is new to me and so developing the front end was a slower process than what it could have been. However, I feel as though I've learnt a lot of new skills and I am more confident with using HTML5 now. \nWhat I learned\nI learned that developing code for a project will always be a relatively slow process- only as you want the best for your project. However, patience and an open mind to trying new things (when original plans fail) is important. \nAlso; I learnt that I shouldn't be afraid to get started and actually make something of the idea/s in my mind. \n",
        "hackathon_id": "outboxdemoday",
        "winner": false
    },
    {
        "description": "\nFrom a young age I have been passionate about politics and empowering people to feel they can make a change. I came to the outbox incubator with this love of politics and an interest in STEM but particularly in technology. I took inspiration from the variety of speakers who came in and started brainstorming a few initial ideas I had. The concept of an app that brings together all the information from across the internet on the activities of parliament and presents it in a simple, accessible and interactive format really struck a cord. As an AS-level politics student I discovered that political participation is very low in the UK particularly when compared to participation in other nations with general election turnouts of 66.1% compared with 85.8% in Sweden. An app that makes political participation easier and more informal could raise levels of political participation, particularly among 16-24 year olds of whom 90% have access to a smartphone. By integrating politics into their daily routine through a fun app and notifications on updates I aim to increase their interest and participation levels. \nIt would work through a simple app interface which users could log into using their Facebook and Google accounts, and the only other information required would be their post code to ensure they can see their MP's profile. From there users could vote on whether they agree or disagree with their MP's votes in the House of Commons which would affect their approval rating as well as exploring the other pages of the app. There would be a page on legislation currently in parliament which users can explore by either issue topic or date modified. There is also a page on the political parties in order to show which parties are the most rebellious, their key policies of the moment and links to the profiles of party leadership figures. A news page is also a feature which would stream in conversations with political hashtags from across social media. The more button will always feature a simple glossary so that if people don't understand political jargon they can click on the word to find out more, making the app as accessible as possible. The more button will also have changing features that reflect current political events, for instance featuring profiles of the Labour leadership candidates and candidates for the London mayoral elections.\nWhat's Up Gov? is currently still in it's early stages although I have encountered a few challenges in trying to design the logo and interface. Mostly they were due to a slight lack of skills but i have skilled up very quickly in the past week and a half in order to create a mockup, brand and feature set which accurately reflects my vision for What's Up Gov?\nI'm very proud of being able to get from the initial ideation stage to a pitch-able product that I can now begin development on in the space of a week and a half. I'm also proud of the networking and connections I have built within this process that will enable me to take What's Up Gov? even further.\nI've learnt that the best ideas come when you collaborate and discuss concepts with people, bouncing problems and solutions off of one another to build a better product idea. I've also learnt how much work it takes to produce a viable idea and pitch as well as the skills required to pitch it well.\nNext for What's Up Gov? is the development stage and creating a minimum viable product in order to release it to politics students across the country to test features and provide feedback. From there I would look to market it and expand the user base to other young people in the UK before targeting the wider electorate as a whole. \n",
        "hackathon_id": "outboxdemoday",
        "winner": false
    },
    {
        "description": "\ni love maths but i am surrounded by people who hate it. So I have decided to create an app that supports pupils who struggle with maths throughout the lead-up to their exams.\n",
        "hackathon_id": "outboxdemoday",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtml5css\n",
        "hackathon_id": "outboxdemoday",
        "winner": false
    },
    {
        "description": "\nInspiration\nModlyst was borne of the frustration of not finding a platform for modest fashion in which fashion bloggers, fashionistas and inspiration seekers could come together on a singular platform. Our mission is to make that a thing of the past! \nModlyst is an online lookbook that allows modest fashion lovers to browse the latest styles uploaded by fashion bloggers and modest fashion trendsetters. \n",
        "hackathon_id": "outboxdemoday",
        "winner": false
    },
    {
        "description": "\nFlaxim aims to make allergies safer. The product is a range of adjustable wristbands embossed with the name of an allergy, a switch the allergic person can push in case they've been exposed to the allergen or are experiencing an allergic reaction and are unable to communicate the situation, and a QR code bystanders can scan in an emergency to get information on the allergy and contact details for parents, friends and/or emergency services.  \n",
        "hackathon_id": "outboxdemoday",
        "winner": false
    },
    {
        "description": "\nInspiration\nHello, I'm Lucy! I'm 22, an English and Spanish graduate from Exeter University, and I've worked with startups, social enterprises, and non-profits on digital marketing. I also have high-functioning autism, or Asperger syndrome.\nThe fact that 1/4 of UK graduates with autism are unemployed bothers me. By definition, an autistic person who has gone to university is going to be talented. They'll probably have incredible focus, memory, and specialist skills. If they're unemployed, they're just not being supported in the right way, or recruitment and conventional working environments are standing in the way.\nMy suggested solution? Startups.\nI managed online marketing for a startup in Barcelona during the year abroad of my degree, and built so much confidence during that time, alongside specialist skills and business awareness. I want more young people with autism to experience the same - there's too much talent going to waste otherwise. \nAutism costs the UK taxpayer an estimated \u00a332 billion a year, and 79% of autistic people who receive out of work benefits would rather work. Approximately 50% of these people do not have learning difficulties.\nIt's not about CSR; it makes business sense.\nHow it works\ntalentworks will be a recruitment platform on which people with high-functioning autism can find jobs at startups with a positive attitude towards diversity.\nWhat's next for talentworks\nCreating an initial prototype, outreach to both startups and young people with autism, marketing.\n",
        "hackathon_id": "outboxdemoday",
        "winner": false
    },
    {
        "description": "\nBuilt With\nhtmlcssruby-on-rails\n",
        "hackathon_id": "outboxdemoday",
        "winner": false
    },
    {
        "description": "\nSomewhere is an app that allows lost pets to be reunited with their owners in an efficient and stress free way.\nSomewhere allows pet owners to upload a search request, with prize money attached, for the person who finds your pet.\n",
        "hackathon_id": "outboxdemoday",
        "winner": false
    },
    {
        "description": "\nCreated at Outbox Incubator, WILD is a stem start-up, made by us, Bethany and Molly Westoby. We both get stressed when our phones run out of battery, like 92 percent of Britons. We decided to make a wearable to change this. We also would like to be eco-friendly down to our firm belief that the next generation should have clean and safe air to breathe. In addition to this getting active is important for many young people. Our idea evolved from these issues.\nWild is a band that when worn transfers kinetic energy to electrical energy so you can charge your phone through the power of movement. Wild works by energy harvesting. A kinetic energy harvester is a small box with a weight attached to a spring. When the spring moves, the mechanical energy is converted into electrical energy. If the spring moves with more force, or it bounces back and forth rapidly, more energy is produced.\nBeing in the Outbox house is an exciting experience. We have learned skills in personal branding, digital and design innovation, marketing, pitching, estimation, mindfulness and performance. On Demo Day we will be pitching for \u00a33,500 in order to hire a designer and pay for prototyping. Further on in development we will also need help in outsourcing wearable materials.\nWe are two girls (14 & 12) from Southend on Sea who are aspiring entrepreneurs. \n",
        "hackathon_id": "outboxdemoday",
        "winner": false
    },
    {
        "description": "\nInspiration\nI wanted to create a way to help people meet like minded people or people with similar experiences to them. So that they know that they aren't alone\nHow it works\nUsers enter 'tags' that describe them, other users who have written articles that include that tag, will appear on their newsfeeds or in this case 'youfeeds' here you can comment a click a button to indicate that thats just like you. This is also away to find someones profiles to follow. I also hope to add a chat option \nChallenges I ran into\nNot having a team, some people say that I'm in a great position because I'm currently working on my own. I however don't agree. Working in a team helps bring fresh ideas to the table, as well as the joy of working with a like minded people. So i sometimes , rarely but sometimes having to stop myself from giving up. If I were in a team i'd have other people to work for other than myself, which in turn would make quitting a lot harder. \nAccomplishments that I'm proud of\nDeveloping a concrete idea, that'll benefit everyone. \nWhat I learned\nThat it's okay to work alone, people will always join you along the way, help can come from places you'd least expect it and always ask, the worst that could happen is they say no.\nWhat's next for Jus like me\nJus Like Me will have an app and up and running website and maybe 100+ by this time next year.\n",
        "hackathon_id": "outboxdemoday",
        "winner": false
    },
    {
        "description": "\nWhat is Project Connect...\nProject connect is an idea for a system that connects all main kitchen appliances ( oven, washing machine, dishwasher, microwave, etc...) to an app. The User will often be someone who would want to carry on being independent when their circumstances wont allow it.  This app will allow carers to change settings for the appliances depending on the User's needs. Therefor giving the User their independence and safety back and the User's family the ability to worry slightly less. :-)\nMy Inspiration....\nI drew inspiration from my late Great-Grandma, who believed that being independent should be the focus of everybody's lives. Unfortunately as she aged she become more and more confused and forgetful but she always refused and help or support at home.(residential care was never an option to her) She would often leave the gas on or mistake raw food for cooked so we all were constantly worried about her and her determination about not relying on other people. \nPresentation:\nhttps://www.emaze.com/@ALTWOWFC/presentation-name\n",
        "hackathon_id": "outboxdemoday",
        "winner": false
    },
    {
        "description": "\nNCBA Hackcess to Justice Project Submission\nProject: Occupational Health and Safety Violation Reporting App\nInspiration\nMigrant and seasonal farmworkers in North Carolina are among the most vulnerable members of the North Carolina labor force: They work long hours in extreme weather conditions, are subject to injuries from dangerous farm equipment and pesticide exposure, live in isolated labor camps and often lack English skills or basic knowledge about their employers or the communities where they are temporarily working.  All of these factors make it difficult for workers to assert their rights when faced with unsafe and unlawful working conditions.  We depend on these workers to bring food to our dinner tables, yet they lack meaningful access to advocates and government agencies that enforce basic health and safety laws.  \nWhat it does\nA cell phone application that allows workers (including those that do not speak English) to submit OSHA complaints to the Legal Aid of N.C. would allow workers to report violations accurately and promptly.  To promote use by workers with low literacy skills, the app would allow the worker to submit a complaint in one several ways: they could submit an email, record a voice message and submit it by email, or directly dial the agency\u2019s complaint hotline.  The app would contain a basic primer on health and safety laws for migrant and seasonal farmworkers, and would contain information about the evidence that they can submit to substantiate their complaint.  Because farmworkers travel frequently and often do not know the precise location where they are working, the app would allow the worker to capture the GPS coordinates of the field or labor camp to submit along with the complaint.  It would also encourage the worker to take photos or recordings of the suspected violation to submit with the complaint.  \nThis would be particularly helpful because most low wage workers often cannot access the agency in the evening when they are not working, do not know the name of their employer or the street or field location of their worksite, and are using cell phones in increasing numbers. It should be designed for workers with low literacy using many images.  It should also allow the worker to inform the agency whether they want to submit a confidential complaint where their name would not be shared with the employer.  \nHow I built it\nThe product owner and I met to outline a product analysis, workflow, user stories, UX, and mock up the UI on index cards.\nI then built the prototype using Bootstrap. The \"Report a Safety Violation\" form uses the HTML5 geolocation API.\nLinks\nThe links below are to (1) an interactive prototype (with one happy path for learning about worker safety issues and filing a complaint) and (2) the product analysis.\n",
        "hackathon_id": "hackcesstojusticenc",
        "winner": true
    },
    {
        "description": "\nInspiration\nStarted out with an idea to help people understand the process of expunging their criminal records. Came to the hackathon and found myself wanting to incorporate as much stuff as possible into the one app. I wanted to make a great resource that anyone in the North Carolina area could utilize. This will be an ongoing project to do just that.\nWhat it does\nIt's filled with resources, easy to understand explanations, legal search made easy, understanding of how to find your criminal records, and how to find a lawyer within your area.\nHow I built it\nIt's all native iOS objective c and built using Xcode on a Mac.\nChallenges I ran into\nTime. I have so many great features I want to add and continue to enhance, just didn't have enough time.\nAccomplishments that I'm proud of\nGetting a lot done in the short amount of time that I had. And most of it works.\nWhat I learned\nHow to use researchKit within iOS\nWhat's next for Fast Track - Making legal services more accessible\nContinuing to develop all of the features so it works fully and will be helpful to those who need it.\n",
        "hackathon_id": "hackcesstojusticenc",
        "winner": true
    },
    {
        "description": "\nInspiration\nWasted time costs everyone so its valuable for an individual who is seeking legal assistance to know what resources are available to them as well as which are not.  As it is today individuals seek Legal Aid services only to find out that they do not qualify financially.  This wastes not only their time but also that of the Legal Aid staff.  Since the financial qualification component is fairly straight forward, providing this ability to individuals and community partners will provide the ability to determine eligibility before they contact Legal Aid services will reduce the workload of the Legal Aid staff.\nWhat it does\nThe Legal Aid eligibility test provides simple, easy to use, mobile friendly interface that allows individuals to answer a few questions and based on the responses determines if they meet the financial requirements.  The eligibility test can also be access using voice prompts (under construction). \nHow I built it\nIt's build on a Drupal 8 platform and is a custom module written in PHP.\nChallenges I ran into\nGetting the interactive voice capabilities working turned out to be more challenging than expected.  \nWhat I learned\nI was surprised to learn how difficult it is to qualify for Legal Aid services and how many \"needy\" people cannot qualify. I also learned how to create VOIP interactive scripts for the Twilio VOIP service. \nWhat's next for Legal Aid eligibility test\nComplete the VOIP interface and then create an administration component so as financial requirements change they can be easily modified to reflect those changes.\n",
        "hackathon_id": "hackcesstojusticenc",
        "winner": true
    },
    {
        "description": "\nInspiration\nFinding out if you are eligible for expungement is difficult for the average Joe, and this can seriously impact somoene's ability to secure employment.\nWhat it does\nIts a decision-tree type of questionnaire\nHow I built it\nMVP using ZingTree decision tree platform\nChallenges I ran into\nZingTree doesn't support complex interactions\n",
        "hackathon_id": "hackcesstojusticenc",
        "winner": false
    },
    {
        "description": "\nInspiration\nTrying to train other lawyers to assist with the heavy demand of second chance clients, having clients who don't know their record and having to perform multiple confirmation interviews\nWhat it does\nIt's a website so it will be available on desktops, laptops, and other mobile devices\nIt is an attempt at a 1:1 replica of the new CCIS criminal records system, complete with actions and information displayed so that using it will 100% prepare someone to use the real system when the time comes\nHow I built it\nDid recon by taking pictures of each step of the way when getting my own records, then just built up from the ground based on what I saw \nGoogle and Stack Overflow and JSBin are awesome!\nChallenges I ran into\nThis is the first substantive thing I've ever built!\nAccomplishments that I'm proud of\nThis is the first substantive thing I've ever built!!!!!!!\nWhat I learned\nAll of the jquery and bootstrap components - modals, accordians, collapse, glyphs, boxing, column layouts, etc...\nHow frustrating certain design choices are (both in building and in why AOC made specific choices)\nWhat's next for myNCrecs\nI will continue to work on this until it absolutely is a 1:1 teaching tool for the real thing (minus the criminal records database but using a teaching database with gotchas, confusing records to interpret, activities for those to learn from)\nIf I win, I will put the funds towards web hosting and any other expenses of upkeep but will continue development in an open manner\n",
        "hackathon_id": "hackcesstojusticenc",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe wanted to see people in the same room as us to connect with them. It then developed to also seeing what's going on in nearby rooms via status messages.\nWhat it does\nIt utilizes iBeacon technology in order to connect people in similar proximities. Each Room, designated by an iBeacon, has it's own social network page to post statuses and see who else is in the room. You can then check out the other users in the room and see what they're working on, and go interact and meet them. It's a great way to see what's going on in rooms around you and connect to people you normally wouldn't.\nHow I built it\nUsing Parse as a backend, and iOS front-end. We also integrated the Ray SDK a little bit to interact with the bluetooth iBeacons.\nChallenges I ran into\niBeacons had very terrible documentation and support, so utilizing them was a struggle.\nAccomplishments that I'm proud of\nMaking it to the end.\nWhat I learned\nParse simply makes a public REST API for your secure data. Don't trust it.\nWhat's next for CampFire\nFull iBeacon support and admin accounts to add beacons to a building and monitor users in the space.\n",
        "hackathon_id": "openbuild",
        "winner": true
    },
    {
        "description": "\nBuilt With\nphotoshop\n",
        "hackathon_id": "openbuild",
        "winner": true
    },
    {
        "description": "\nIt was clear that people including myself wanted a 3d printer that was capable of printing bigger. But with big printers there was always the space issue  ## Inspiration\nIt's a 3D printer that is large, mobile and has some additional features ## What it does\nLasers and 3d printing ## How I built it\ncalibration and cost ## Challenges I ran into\ncost auto level ## Accomplishments that I'm proud of\nWhat I learned\nMore Sales## What's next for Mobile Maker\n",
        "hackathon_id": "openbuild",
        "winner": true
    },
    {
        "description": "\nBuilt With\nhtml5css3javascriptlessgoogle-mapsgoogle-spreadsheets\n",
        "hackathon_id": "openbuild",
        "winner": true
    },
    {
        "description": "\nInspiration\nIn an ever-accelerating lifestyle, seldom do we have the luxury of appreciating the simple pleasures in life. Our tech-oriented society is often criticized for its inability to look away from a screen of any sort for more than a few minutes. We hope that sherpa can pivot the use of technology away from a substitution of the physical world but rather as an enhancement. Especially, in a rich space like Lacuna, there are so many things to see and never enough time. Sherpa closes that gap and leads you to discover awesome things you never knew existed.\nWhat it does\nSherpa is a social bridge between Lacuna's physical aspects -- its art, architecture and businesses -- with the virtual world. The app promotes visitors and tenants to interact with Lacuna itself in a contextualized setting. Sherpa displays a feed of nearby art and businesses (e.g. those in immediate proximity with precision down to the hall or wing). Users can then read descriptions of these entities as well as view and post comments and rate them and leave their own personal \"mark\" on Lacuna. We hope that this encourages the tenants and visitors of Lacuna to take ownership of the space but also to promote commercial transparency in allowing consumers to provide constructive feedback and for business owners to post polls of their own businesses to create a truly community-driven environment. \nHow I built it\nThe app was written in Swift using XCode. We used CLLocation to detect the iOS device's location via GPS. We would have liked to use iBeacon, but it would have required a $100 Apple developer account (see below). \nChallenges I ran into\nThe main trouble was that we would have been unable to test our code had we used iBeacon because the Mac iOS simulator does not support BLE integration. We used CLLocation in the iOS SDK to circumvent some hurdles we had with the iBeacon and iBeacon SDK. The proof of concept shows that a substitution for iBeacon would be simple. We mapped geographic regions by longitude and latitude with set radii that essentially emulate an iBeacon. \nAccomplishments that I'm proud of\nEven after wrestling with some huge technical problems for the first few (or several) hours, we persevered and were able to make up for lost time and build something new and exciting. We are always happy to explore and tinker with new technology, but it's another thing to take that and try to make a positive impact.\nWhat I learned\nFor one thing, we learned lot of Swift and iOS development (especially logistic issues with testing software on the iOS simulator), but we also learned a ton about Lacuna and had the pleasure of really exploring the art and space.\nWhat's next for sherpa\nIf a developer license were obtained, iBeacon integration would allow for lower energy consumption for the sherpa and more precise location services. Using the iBeacon we hope to create a navigation system that can allow users to not only discover new locations but also then to navigate to them as well. This feature, of course, could also be used to navigate to places that the user already knew about or needed to visit (such as a pre-planned business visit).\n",
        "hackathon_id": "openbuild",
        "winner": true
    },
    {
        "description": "\nparticiPin aims to accelerate innovation through active collaboration and problem solving.  Participants can easily find the resources, infrastructure and participants of an event, declare their quests (ie. I am on a quest to find a JavaScript programmer; I am on a quest for inspiration.) or expedite the quests of others (I am a designer, visit me if you need a logo made.)\nparticiPin was created by hackathon participants because they believe that innovation and great ideas spark at the intersection of disciplines.\nLet's play human and get together to make new kinds of awesome.\n",
        "hackathon_id": "openbuild",
        "winner": true
    },
    {
        "description": "\nInspiration\nTurn something BLAND into something EXCITING, in the spirit of Lacuna!!!\nWe hope you will become inspired shopping for a mattress using our virtual store.\nWhat it does...\nWe sacrifice sleep so you can get some! We've gamified your virtual mattress shopping experience!\nHow I built it...\nUnity game engine and many cups of coffee. 3D first-person technology.\nChallenges I ran into...\nTaking something BLAND and BORING like mattress shopping and making it exciting was a challenge!\nBUT WE HAVE SUCCEEDED.\nAccomplishments that I'm proud of...\nWe had a phenomenal amount of fun and laughs with new friends while developing this project. We feel we successfully made the mattress shopping experience FUN and ENGAGING.\nWhat I learned...\nTechnical hurdles and challenges can be overcome much easier when having fun.\nWhat's next for MattressHeaven...\nAmazon 2.0 baby!\n",
        "hackathon_id": "openbuild",
        "winner": true
    },
    {
        "description": "\nInspiration\nInspired by movie like Ironman, Wanted to use Myo for my home automation\nWhat it does\nIt can do various operation like open application or control system using Myo armband\nHow I built it\nUse Python wrapper which interacts with windows application\nChallenges I ran into\nNot good documentation avail for python api (comparing to C++)\nNot all api avail in python with current 0.9 version\nAccomplishments that I'm proud of\nWas able to implement listener for the armband. This can be extended as needed to any level\nWhat I learned\nMyo driver, actions, api & custom gestures\nWhat's next for Myo-gestures-control\nExtend to control webservice & better devices like Nest Thermostat etc\n",
        "hackathon_id": "openbuild",
        "winner": false
    },
    {
        "description": "\nInspiration\nWe saw someone playing a cello with a some flashing LEDs and figured we could do better.\nWhat it does\nVisualizes the arm movements of the musician through the use of the Myo armband.\nHow I built it\nThe Myo data is collected through the Myo SDK and collected by a python program, which also drives the Adafruit NeoPixels through the OpenPixel library.\nChallenges we ran into\nWe ran into many issues using the Myo SDK including getting the code to compile, and getting output.\nAccomplishments that I'm proud of\nGetting C++ working, and parsing data from the commandline through a workaround.\nWhat I learned\nCome prepared with all the SDKs you will need.\nWe also learned a lot about C, and driving NeoPixels, and the ridiculous amount of current they draw.\nWhat's next for MyoStrings (String instrument visualizer through Myo)\nThe codebase will continue to evolve as we make it more accurate and create new type of visualizations.\n",
        "hackathon_id": "openbuild",
        "winner": false
    },
    {
        "description": "\nMIDI-to-LED\nMIT License \n",
        "hackathon_id": "openbuild",
        "winner": false
    },
    {
        "description": "\nInspiration\n\n3D touch in iPhone 6S.\nRight click menu in the desktop world\n\nWhat it does\n\nProvides a 3D touch like experience for Android phones without any integration with App Developers.\nHovering over Maps will show you actions like - \"Drive to Home, MyLocation\". If the user chooses \"My Location\", maps is opened showing user's location.\nHovering over LinkedIN, you get actions - \"Your Profile, Updates, Compose\". Choosing \"Your Profile\" opens your profile directly which was otherwise 3-4 taps away.\nWe have shortlisted popular apps like (fb, linkedin, twitter, maps, phone) as of now.\nHovering over a link in twitter, gives a peek into the content in a window which destroys automatically in 5 sec if the user doesn't want to read post the summary. It is super fast for the user to look at multiple links without jumping out of twitter, once the user starts reading a link the auto-destroy isn't effective and control goes back to user.\n\nReaching the Team\n@SerialHackers - Follow us for more nerdy and cool stuff : https://twitter.com/SerialHackers\nIs lt live?\nYes you can download it here - https://play.google.com/store/apps/details?id=io.quicly.android\nHow I built it\n\nWe use Android Overlays to provide a small icon, hovering over HomeScreen and inside any app.\nOnce the user drags the QuickActions icon on top of an app-icon/link, we use Android Accessibility Service to scrape the screen context (Icon Name/Link Text)\nWe reverse engineered popular android apps to discover their deep links.\nClicking on an action we open the app with the deep link.\n\nChallenges I ran into\n\nScreen scraping using Accessibility Service to get the right app name.\n Discover deep links of apps. Tried using SDK's from URX, deeplink.me but we had to fallback to reverse engineering the apps to discover deep links.\n\nAccomplishments that I'm proud of\n\nSuper simple 3D touch like experience for end-users without hardware costs/developer integration.\n\nWhat I learned\n\nDeep concepts of Android\n\nWhat's next for QuickActions\n\nLaunch in play-store, get users, get feedback and iterate.\n\n",
        "hackathon_id": "disruptsf2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nSometimes you're just running a tad late, so the meter depletes and the meter maid comes by to give you a shiny new parking ticket. Great. Now you have to pay an immense fee because you had to take care of other responsibilities. You, trying to help that old lady cross the street, which delayed you just a few minutes. Life isn't fair, but you know what, it can be a bit better with the Meter Beater Club. Now there's one less thing to worry about.\nWhat it does\nWhen you get out of your car, just whip out your phone or open up the app on your watch. Pay the meter and say how long you paid for. If your car is still around the area at the time of expiration, either the Meter Beater community or somebody looking to score some easy cash will feed the meter for another hour for a small fee. So no more pesky parking tickets to fuss about and more time for you to live your life the way you want.\nHow I built it\nIts a three part app - the watch and iOS app work together for the parker and a companion webapp for community club members. We spun up a backend heroku app project with Java/Spring as the backend. Split the work into four parallel parts, one back-end, one apple watch, one iOS app, and one webapp partner portal. Stubbed out data to work with in the beginning, then later filled it in with working end-points and data sources. Pieced it all together at the end to create an incredible experience.\nBy utilizing arcGIS, we provide a map display with routing to find the best path to take for any community club member planning to help out a few needy souls.\nWith weather-underground, we provide an added benefit for members that are helping in poor weather conditions. Think like surge charging, except we take the cut instead of the club members.\nChallenges I ran into (What I learned)\nEC2 instances went down, which meant heroku went down. We readily swapped to using a local server which the four of us shared and worked off of.\nSetting up a server is a pain in the butt. Lots of technical details to work on.\nLearning a new language is always fun, but also difficult.\nThere are a lot of APIs out there in the world, which isn't a bad thing. But having so many APIs that do the same thing but with different terminology is a huge headache. Adds huge friction to development. And having a \"simple\" API to have a 15+ step process to just start using shouldn't really be \"simple\".\nAccomplishments that I'm proud of\nBeat the EC2 downtime by creating a local environment working off of an iPad hotspot\nWhat's next for the Meter Beater Club\nFull integration with payment systems to make a seamless process from start to finish.\n",
        "hackathon_id": "disruptsf2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nDonald Trump as a candidate and the availability of the TrumpThis.Club domain name was just too inspiring! And we \nbought a set of ESP8266 chips from eBay last week, and didn't have a better idea for using them!\nWhat it does\nTurn on a debate. Every time Trump says something stupid, push your button. The last player to push their button loses.\nSure, you could do this with a phone app, but this is 2015! Who has time to coach drunk people downloading an app? You can't get simpler than a button!\nHow we built it\nThe ESP8266 runs Audrino-compatible code, and makes it easy to talk to the Internet over WiFi. We (and by \"we\", I mean Jorge) built little battery-powered units with a ESP8266, a button, and a little code that hits a webserver when the button is pushed.\nThe rest is just a little webserver code and some javascript! That was the rest of the team's contribution.\nTeam\nJorge Gonzalez, David Skrenta, Bryce DesBrisay, Rich Skrenta, Greg Lindahl\n",
        "hackathon_id": "disruptsf2015",
        "winner": true
    },
    {
        "description": "\nWhat it does\nProvides safety, security and freedom to sufferers of Alzheimer\u2019s disease via a simple plug and play wearable.\nHow We built it\nThe physical product is a wearable that utilizes GSM and GPS.  For simulation purposes, we created a simple android application.  This application is backed by a Firebase database which is populated by esri's API and our server side code.  SMS notifications are sent via Twilio to notification subscribers for the elder.  The list of subscribers is managed by a web user interface.  Additional status details for the elder are available via web application and Android device.\nChallenges We ran into\n\nHard to demonstrate GPS geofencing without good GPS reception.\nWorked through multiple third party API bugs.\nFocused on the primary components of the system skipping the creation of a unique wearable.\n\nAccomplishments that we are proud of\n\nLeveraged multiple APIs to compliment each other.\nCreated a cloud solution to assist Alzheimer's patient care.\nCreated a service that will add significant value to many people's lives.\n\nWhat's next for Loving Locator\n\nFully define the wearable.\nValidate via real world use.\nProductize it.\n\n",
        "hackathon_id": "disruptsf2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nesriopen-dataabbview.u.\n",
        "hackathon_id": "disruptsf2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nmongodbexpress.jsangular.jsnode.js\n",
        "hackathon_id": "disruptsf2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nFarmers lose $17 billion every year from preventable crop loss caused by water stress.\nCalifornia farmers use 26 billion gallons of water every day.\nWe spoke with farmers at the local farmer's market - everyone said the number one problem they have is telling if their crops are suffering from water stress and other deficiencies!\nWhat it does\nHarvest is a cheap crop stress detector that cost less than $50 to build.  It's a modified point and shoot camera with the infrared filter removed and a new filter put in.  It can fly on a drone, plane, or in our case, a balloon.\nHarvest also provides a web app that processes these infrared images and shows \"hotspots\" and allows you to compare originals with the analyzed images, and compare your crops over time.\nOur software also pulls in Landsat imagery, weather, and makes smart suggestions.\nThis is disruptive\nThe infrared camera and our analysis algorithm actually works.  We field tested this yesterday at a park in SF (see pictures) and our field test analysis clearly showed signs of underwatering.\nWe're 100x cheaper than the closest commercial alternative, a $7000 drone that requires special training and runs out of power in minutes.\n",
        "hackathon_id": "disruptsf2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe wanted to make a simple way for merchants to create an awesome digital menu that will update in real time based on menu changes on their POS, as well as allow for different configurations to show the right information to the current time of day/ day of week/ or season (ex. lunch menu/dinner menu)d\nWhat it does\nIt utilizes data from the Clover API to fill in an elegant menu template, the merchant can toggle through their menu configurations by clicking. All updates to the menu through Clover or our web interface are updated in real time. The owner could literally make price changes from vacation. Optimizing price is important for businesses, this allows merchants to do that while keeping their customers informed\nHow it works\nThe merchant downloads the app from the Clover app market, and creates a menu configuration of categories and items. These configurations are then available for display on an android TV device and they can toggle through them as their menu changes throughout the day. As they need to make changes to item names, prices or descriptions they can make this changes from the Menu Display web interface or from the Clover station or web dashboard\nWhat we are proud of\n\nFilling three needs of Clover merchants in restaurant setting-- 1.   Create different menu configurations for different times of day (breakfast/lunch/dinner/etc) 2.    Display menu information for customers to read 3. Allow a way to include descriptions with menu items to explain them better. \nUse Clover WebApi to create different features\nfully featured app across Web AND Android TV interfaces \n\n",
        "hackathon_id": "disruptsf2015",
        "winner": true
    },
    {
        "description": "\nMyStreetCred aggregates data from Ford Sync, Weather Underground, and your phone's internal sensors, to generates a score (StreetCred) for the user based on the their driving habits. Do they break hard? Do they accelerate to fast? Do they slow down when it\u2019s raining? We use all of this data to generate driving scores for users so they can work on becoming better drivers. Parent\u2019s will be able to use the app to see how their kids are driving, and the app will also offer tips on how to be a better driver. The user\u2019s StreetCred could be used for co-branding within the auto industry. A higher StreetCred could lead to discounts on rental cars or lower car insurance rates.\n",
        "hackathon_id": "disruptsf2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nParents always want their children to have fun at the park, but they also want peace of mind that they will be safe. Incidents happen when parents are not alert, and we wanted to find a solution for that.\nWhat it does\nParents designate an activity zone that their child is allowed to be in. They connect the child's device and receive an instant pin on the map indicating their child\u2019s location. When the child goes off the map, both the child and parent device are alerted with a loud audible sound as well as a red screen.\nHow I built it\nWe built this app using native Objective-C for iOS. We use the ESRI iOS sdk as well as Magnet. ESRI maintains the polygon for the geofence, and child-parent communication between the devices is handled via a Magnet chat room. The child device sends GPS coordinates to the parent, which the parent device checks against the established geofence (Activity Zone).\nChallenges I ran into\nWe are not iOS developers, so a completely native app was scary. There were some technical challenges in getting geographic coordinates mapped correctly as well as using Magnet's messaging in a creative way to fit our needs. One we got those challenges straightened out, our only problem was lack of familiarity!\nAccomplishments that I'm proud of\nWe\u2019re proud that this native iOS app actually works, looks good, and has a simple user experience. We focused on ease-of-use so that parents can spend less time fiddling with devices and more time being confident that their kids are safe.\nWhat I learned\nWith ESRI, we learned about their awesome API for native objective-C apps and the difference between two types of geographic coordinate systems. With Magnet, we learned about their inter-communication library. We also grew our skills on objective-C and iOS development.\nWhat's next for Happy Parent Club\nNext, we want to create a smaller device for the child to carry in order to lower the cost of entry to this product. There is also the possibility of tracking multiple children simultaneously.\n",
        "hackathon_id": "disruptsf2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe love dance, we want to bring the joy of dancing online.\nWhat it does\nWe host live dance shows, with participants being all over the world. Anyone can join in to socialize at that very moment of the show. You get a good view, perfect music, and can clearly hear (or read) what people around you are saying. And Dancers are trendsetters. Why see still images of models when you could be watching beautiful people, dancing in those brands that you can shop for directly?\nHow I built it\nBuilt for the iPhone in Objective C.\nWhat I learned\nHow to use Sockets.\nWhat's next for Live Dance Floor\nLaunching times of the day for people to participate in dancing from all over the world.\n",
        "hackathon_id": "disruptsf2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nfordqualcommiosandroidmagnettheta\n",
        "hackathon_id": "disruptsf2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nIs the age of broadcasting: Youtube, Twitch... and also Periscope has came adding a little bit of interaction from the user, but still the viewer can not interact with the enviroment. 360 videos solve this problem adding context.\nWhat it does\nUsing a Ricoh Theta S, a pre-release 360 camera, connected to your Android device, you can stream in real time to everyone in the world, being able to interact with each others. You can be the first 360 reporter with an Android.\nHow I built it\nFirst we have connected the Ricoh Theta 360 camera to the Qualcomm DragonBoard, where the software decompress the video stream from the camera and streams it to the Internet in real time using the TokBox OpenTok platform.\nWe process the video on the client side to stitch both fish-eye images coming from the camera, to create a full-sphere immersive video, you can try it during the Disrupt in realreality.club, ask us if you want a demo.\nChallenges I ran into\nThe first challenge was to start fighting with the configuration of the Dragonboard, we were using a non-standard camera so we have to write our custom decompression module for MJPEG over video4linux.\nWifi at the event was not great so the video quality received from the DragonBoard wasn't as good as expected.\nAccomplishments that I'm proud of\n\nBeing probably the firsts of the world doing a 360 video streaming from a 360 camera using Android :-D\nDiscovering a bug in the Ford Android Webcam Library where there is a non initialized memory at this line. Probably this library is currently in use in the onboard computer that have been available during the hackathon.\n\nWhat I learned\nHow to hack new devices on pre-release stage.\nWhat's next for RealReality\nMake the 360-Periscope, a global-scalable product that every video producer with an Android can use to change the way we communicate. Adding a new immersive dimension, where any viewer can ask, interact and connect, by looking or clicking around.\n",
        "hackathon_id": "disruptsf2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nTo save just one life of a child is priceless.\nWhat it does\nWith regards to an increased demand of independence amongst children and high child kidnapping statistics, ensuring that children are safe has become a daily necessity for parents across the globe. This has resulted in an increase of location-tracking devices within the market. As a father and with an interest in entrepreneurship, the company owner, Jason Peixoto, is prepared to guide the company to success and profitability. The Child Guardian plans to enter the growing industry by providing customers with an innovative device which will locate and track children using a notification system which supports notification alters when a child moves out of a pre-determined safety zone. This wearable device can be sown into fabric that monitors the distance a child, dog, or item of value, and can be tracked from a mobile device, pager, or monitor. The device has an advanced system called the HIVE, when a child is reported missing law enforcements can track the missing child only once the Guardian has activate the hive.\nHow I built it\nBLE, End to End solutions from IOT wearable devices, to IOT Gateway, To Enterprise to global network.\nChallenges I ran into\nWorking with new hardware\nAccomplishments that I'm proud of\nWe have a working product.\nWhat I learned\nWhat's next for The Child Guardian\n",
        "hackathon_id": "disruptsf2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWalmart stores can be difficult to navigate through- and most customers lose patience- finding what they need. Walmart associates are extremely busy and are not always around to answer customer questions.  By texting a simple \"hi\" to a phone number and a keyword such as \"bleach\" you can receive the exact physical location of the product in your particular store and check if it is in stock. If you need additional help, you can connect with a store representative. All of this is facilitated easily through SMS. Additionally users will be given the option to download the Walmart mobile app after asking for help. \nWhat it does\nWhen a user texts a designated phone number (different for each store so we know their store location) the user is prompted with the message\n\u201cWelcome to Walmart. Please text the name of the product you are looking for and we will tell you where to find it in this store. Please text \u201chelp\u201d to be connected to a Walmart associate who can assist you.\u201d\nAs the user inputs a keyword (such as \"clorox bleach\") the user get information about whether the product is in stock and where to find the product \n\"Clorox regular bleach, concentrated, 121 fluid ounces can be found in aisle g.28. It's in stock. Thank you for shopping at Walmart. Download the Walmart app to find and buy quality products at unbeatable prices. http://apple.co/1p1XKCt\"\nThe user can then text \"chat\" to be connected with a Walmart associate via sma.\nHow I built it\nWe used the Walmart Labs API's (physical location, search, and recommendations) with Twilio and a Flask-based API (hosted on Azure) to create an SMS-based product search and support line.\nChallenges I ran into\nOne potential challenge if this is rolled out in Walmart stores is figuring out how to deploy multiple chat requests to talk to a customer service associate. This problem can be solved by having one designed Walmart associate being on duty on the SMS line at each store(and with the new \u201cbring your own device program\u201d associates can use their personal cell phones at work) . It can also be solved by connecting chat requests to Walmart service agents at Walmart support centers if there is no customer service associate on duty avaliable. \nAccomplishments that I'm proud of:\nWalmart Simple Text can help Walmart customers with the following \nCan track usage of feature\nCan save time and money on hiring service associates because of automatic response. \nCan provide faster assistance to customers\nSMS is very basic phone functionality and easy for customers to understand and use\nWhat I learned\nWe learned that Walmart Labs has a great API that is kept up to date with a lot of rich and useful information that is easy to implement. \nWhat's next for Walmart Simple Text\nTargeting customers with in-store promotions (coupons) associated with keywords they search for (i.e. typing in the keyword \"dogfood\" will not only show available dogfood at their store but also what the prices are and current discounts) \n",
        "hackathon_id": "disruptsf2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nFrom a family member that suffers from depression\nWhat it does\nAllows you to look at your emotions in real time, and use that data to track medication\nHow I built it\nUsing Intel RealSense to detect emotion, display it over Qualcomm's IoT. and store them through BlueMix and do the analysis over Watson\nChallenges I ran into\nGetting Qualcomm's IoT to work\nAccomplishments that I'm proud of\nTo make what they shown in the movie an reality\nWhat I learned\nIoT\nWhat's next for Inside Out\nSee if Pixar likes it :)\n",
        "hackathon_id": "disruptsf2015",
        "winner": true
    },
    {
        "description": "\nBuilt in less than a day at TechCrunch Disrupt Hackathon 2015\nEnable easy product placement in VR. Now, anyone can turn their photosphere into their own virtual stores, featuring Zalando products. Exclusive to Zalando API, users can rotate the product to place it so it looks right! Spin the world and spin the product in the world!\nSelect the photosphere that you want to turn into a boutique. (Or, import from Ricoh Theta spherical camera)\nSelect Create mode: \n1) Search to select which Zalando API products you want to place in your photosphere boutique. (Shoes!)\n2) Rotate the product in the angle you'd like people to view it at. \nShop & Share mode: Visitors can select products in your photosphere to get more info and buy them! \nZalando Feature: 3D effect from 2D product image only - Using long 30-frame photostrips from Zalando API\n",
        "hackathon_id": "disruptsf2015",
        "winner": true
    },
    {
        "description": "\nUsing the Zalando API, we've developed a product that lets you put your sense of fashion to the test! We compare your choice of clothing, shoes, and accessories for various occasions from business to Oktoberfest, all the while making it easy to discover new products that Zalando has to offer. In the end, we give you a score that you can use to challenge your friends and determine who truly has the best \"fashion sense.\"\n",
        "hackathon_id": "disruptsf2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nmeteor.jsruby-on-railspostgresqlzalando.club\n",
        "hackathon_id": "disruptsf2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nWe often run into wall with our email and inbox, we know its there somewhere (ie all our documents, images and other attachments) - but we don't know how to find it!\nSo, we thought that well we had enough of it, and got on to building something that will help everyone of us (yes, all the humans!) - MetroMail !\nWhat it does\nMetroMail extracts out all the attachments from the email inbox and creates a nice gallery out of it (for images and any multimedia), it sorts all the documents and layouts it with nice preview for easy access, it identifies important documents like bills / invoices and lets you make the payments from within the inbox! It just makes the life easy!\nHow I built it\nWe built it by integrating Office 365 / Outlook and our web front / backend\nChallenges I ran into\nLimiting feature sets due to lack of time\nAccomplishments that I'm proud of\nSolving a real pain point for everyone out there!\nWhat I learned\nPlanning and making things work\nWhat's next for MetroMail\nAdd more feature such as CRM, expense tracking, travel tracking and email prioritization. \nExtend it, make it stable, complete all integrations and make it available for proper use. \n",
        "hackathon_id": "disruptsf2015",
        "winner": true
    },
    {
        "description": "\nBuilt With\nbluemixibm-watsonoutlookphphtml5\n",
        "hackathon_id": "disruptsf2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nE-mail communication is antiquated.  A lot of times we get e-mail that says \"noreply\" and makes you click the website and figure out how to communicate with the sender.  Humans want to reply and with the help of IBM Watson, Office 365 API and GetResponse - you can actually do it. \nWhat it does\nPeople prefer to just respond to the e-mail and say: \"unsubscribe\", \"I have some questions\", \"I'd like a group discount\", \"I am having a problem\" we can classify the action and create entries in the CRM turning auto-response into actionable data!\nHow I built it\nGetRespose to create a website and send out campaigns.\nOffice 365 / Outlook API to get the e-mails: https://msdn.microsoft.com/office/office365/APi/mail-rest-operations#GetMessageCollection\nChallenges I ran into\nOffice 365 connection was not easy, thanks for to the developer advocates on location for your help\nTraining Watson\nAccomplishments that I'm proud of\nTying a bunch of API's together to provide a comprehensive solution.\nWhat I learned\nA simple use case sometimes is very complex when you try to solve it completely.  Natural Language Processing seems easy, but it's not.\nWhat's next for Yes, Reply!\nPackage the solution\nImprove the training for Watson\nConnect to more CRMs (Dynamics etc)\n",
        "hackathon_id": "disruptsf2015",
        "winner": true
    },
    {
        "description": "\nInspiration: We realise that the current calendar apps and task management apps (to-do lists) do not integrate well enough to maximise our productivity. Often, other than toggling between 2 separate apps, we need to take an additional step of finding the files, URLs or emails that we need to perform the individual tasks. So why don\u2019t we organise our tasks/to-do lists according to calendar events? and furthermore, why don\u2019t we allow users to tag the resources they need to perform the tasks directly on the calendar?\nWhat it does: Daylist integrates to-do lists into individual calendars. Within each calendar event on Daylist, users are able to plan the sequence of tasks for that event and access the resources (such as files, URLs or emails) required to perform each of these tasks.\n",
        "hackathon_id": "disruptsf2015",
        "winner": true
    },
    {
        "description": "\nOffice 365 Add-in hack formula\nTask Pane Control + Content Viewer Display  = Video Creation in PowerPoint\nInspiration\nOur sales team and clients are always in need of more expressive media rich assets. We have gotten the video build and storytelling down to a science, but there always seems to be room for optimization on the actual video creation and asset collection side.\nWhat it does\nThis Office Add-in pairs a Task Pane with a Content viewer to allow for a dynamic selection and creation of video assets that can be done directly in PowerPoint. Data is housed with newly created domains of AllNightAtThe.Club and ZombieApocalypsePreparation.Club.\nHow I built it\nTwo separate Add-in builds, one focused on Task Pane, the other on the Content viewer. Each talks to the server to create a seamless experience for the PowerPoint user.\nChallenges I ran into\nGetting the framework set up was a challenge. Negotiating caching issues is also another big challenge.\nAccomplishments that I'm proud of\nDynamic video creation based on user input. All through PowerPoint interface.\nHuge file size reduction\nCreative controlled asset library selection\nAbility for injecting amazing interactives\nWhat I learned\nOffice Add-in has interesting possibilities for interactives.\nWhat's next for PowerPoint Asset Builder\nRefinement and testing with internal team. Possibility of creating an entire feature length video within PowerPoint, weird but possible.\n",
        "hackathon_id": "disruptsf2015",
        "winner": true
    },
    {
        "description": "\nInspiration\nLet's imagine you have an interview in an other city and the venue i not near the train station, how do you know which combinaison of public trasportation to take to get there? and how you can be sure that you need exactly 65Dhs for the whole trip including big taxis ? \nWhat it does\nIt gives you all the possible combinaitions of public trasportation to go from a point A to a point B according to your preferences either the cheapest one or the fastest one.\nHow I built it\nWe used a simple php backend with an angular js frontend built using bootstrap .\nThe main data is stored in a mysql database that is after words explored using Djikstra algorithms written by us.\nChallenges I ran into\nFinishing the main feature in 8hour was challenging.\nAccomplishments that I'm proud of\nWhat I learned\nwork in a stressful envirenment with a team in an open space.\nWhat's next for Getway\nDevelop a beta versin using android, with some additional features like :\n\nA user can add a new transportation\nShare the chosen trip with a friend\n\n",
        "hackathon_id": "wecancode-casablanca-2015",
        "winner": false
    },
    {
        "description": "\nthe goal from this project is to create a sharing free WiFi for the neighborhood under protection of firewall \n",
        "hackathon_id": "wecancode-casablanca-2015",
        "winner": false
    },
    {
        "description": "\nBuilt With\nphphtmlcssjavascriptmysql\n",
        "hackathon_id": "wecancode-casablanca-2015",
        "winner": false
    }
]